#/****************************************************************************
# *
# *  ARICENT -
# *
# *  Copyright (c) Aricent.
# *
# ****************************************************************************
# *
# *  $Id: Makefile,v 1.1.1.1 2010/02/11 04:51:26 cm_intel Exp $
# *
# ****************************************************************************
# *
# *  File Description : Makefile
# *
# ****************************************************************************
# *
# * Revision Details
# * ----------------
# *
# * $Log: Makefile,v $
# * Revision 1.1.1.1  2010/02/11 04:51:26  cm_intel
# * eNB framework for intel
# *
# * Revision 1.3.4.1  2009/08/27 11:23:47  gur19140
# * *** empty log message ***
# *
# * Revision 1.3  2009/04/02 11:06:31  gur20439
# * Modified to get compilation flag from command line.
# *
# * Revision 1.2  2009/03/23 08:37:17  gur19140
# * Integration changes first waves
# *
# * Revision 1.1  2008/12/30 06:24:49  gur20294
# * RLC Layer added. INITIAL DRAFT
# *
# *
# *
# ****************************************************************************/
##############################################################################
#
#		MAIN MAKE FILE						 
#	Make file to be used for building RLC. 
#						
##############################################################################

include ${LTE_ROOT}/make.inc

RLC_ARCHIVE=librlc.a

RLC_INC_DIR= ${RLC_ROOT}/rlccore/include

RLC_SRC_DIR= ${RLC_ROOT}/rlccore/src

RLC_LIB_DIR= ${RLC_ROOT}/rlccore/lib_uesim

RLC_MODULE_LIST = M(ummode) M(ammode) M(common) M(tmmode) M(interfaces) 

COMMON_INER_INCLUDE = -I$(LTE_ROOT)/commonInterface/interfaces/include
RLC_INCLUDE=$(patsubst M(%),-I$(RLC_INC_DIR)/%,$(RLC_MODULE_LIST))

INCLUDE_LTE += -I$(COMMON_ROOT)/include/lte_port $(COMMON_INER_INCLUDE) $(RLC_INCLUDE)

RLC_SRCS_ALL= $(wildcard $(patsubst M(%),$(RLC_SRC_DIR)/%/*.c,$(RLC_MODULE_LIST)))
RLC_SRCS_EMBMS=

ifeq ($(LTE_EMBMS_FLAG),0)
RLC_SRCS_EMBMS += $(RLC_SRC_DIR)/interfaces/lteRlcRrcEmbmsParseUtil.c \
                  $(RLC_SRC_DIR)/interfaces/lteRlcSyncInterface.c \
                  $(RLC_SRC_DIR)/ummode/lteRlcUmTxEmbmsOperation.c \
		  $(RLC_SRC_DIR)/common/lteRlcEmbmsAreaContext.c
endif

ifeq ($(LTE_EMBMS_FLAG),1)
RLC_SRCS_EMBMS += $(RLC_SRC_DIR)/interfaces/lteRlcSyncInterface.c
endif

RLC_SRCS= $(filter-out $(RLC_SRCS_EMBMS),$(RLC_SRCS_ALL))
RLC_OBJS=$(patsubst %.c,%.o,$(RLC_SRCS))
RLC_LIB_OBJS=$(patsubst %.c,$(RLC_LIB_DIR)/%.o,$(notdir $(RLC_SRCS)))


CFLAGS += $(FLAGS) -UUT_TESTING

target: create_directory make_objs

make_objs: $(RLC_LIB_OBJS) 
			$(AR) ur $(RLC_LIB_DIR)/$(RLC_ARCHIVE) $(RLC_LIB_OBJS)  

create_directory : 
	${MKD} $(RLC_LIB_DIR)

$(RLC_LIB_DIR)/%.o : $(RLC_SRC_DIR)/ammode/%.c 
			${COMPILE} -c $< -o $@  
$(RLC_LIB_DIR)/%.o : $(RLC_SRC_DIR)/common/%.c 
			${COMPILE} -c $< -o $@  
$(RLC_LIB_DIR)/%.o : $(RLC_SRC_DIR)/interfaces/%.c 
			${COMPILE} -c $< -o $@  
$(RLC_LIB_DIR)/%.o : $(RLC_SRC_DIR)/tmmode/%.c 
			${COMPILE} -c $< -o $@  
$(RLC_LIB_DIR)/%.o : $(RLC_SRC_DIR)/ummode/%.c 
			${COMPILE} -c $< -o $@  
 
clean:
	${RM} $(RLC_LIB_DIR)/*.o
	${RM} $(RLC_LIB_DIR)/$(RLC_ARCHIVE)
	${RMD} $(RLC_LIB_DIR)

$(warning LTE_ROOT = $(LTE_ROOT))
$(warning RLC_ROOT = $(RLC_ROOT))
$(warning RLC_LIB_DIR = $(RLC_LIB_DIR))
$(warning RLC_ARCHIVE = $(RLC_ARCHIVE))
$(warning COMPILE = $(COMPILE))
$(warning RLC_SRCS_ALL = $(RLC_SRCS_ALL))
$(warning RLC_SRCS = $(RLC_SRCS))
