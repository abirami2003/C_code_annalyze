/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.1.0, Date: 24-Jan-2017.
 */
#ifndef LPPA_ASN_ENC_DEC_3GPP_H
#define LPPA_ASN_ENC_DEC_3GPP_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtpersrc/asn1per.h"

/**
 * Header file for ASN.1 module LPPA-CommonDataTypes
 */
/**************************************************************/
/*                                                            */
/*  ProcedureCode                                             */
/*                                                            */
/**************************************************************/
/*
ProcedureCode ::= INTEGER (0..255)
*/
typedef OSUINT8 lppa_ProcedureCode;

EXTERN int asn1PE_lppa_ProcedureCode (OSCTXT* pctxt, lppa_ProcedureCode value);

EXTERN int asn1PD_lppa_ProcedureCode (OSCTXT* pctxt, lppa_ProcedureCode* pvalue);

EXTERN void asn1Print_lppa_ProcedureCode 
   (const char* name, const lppa_ProcedureCode* pvalue);

EXTERN int asn1PrtToStr_lppa_ProcedureCode (const char* name, 
   lppa_ProcedureCode* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ProcedureCode (OSCTXT *pctxt, 
   const char* name, const lppa_ProcedureCode* pvalue);

EXTERN void asn1Copy_lppa_ProcedureCode (OSCTXT* pctxt, 
   const lppa_ProcedureCode* pSrcValue, lppa_ProcedureCode* pDstValue);

/**************************************************************/
/*                                                            */
/*  Criticality                                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Common Data Types

 **************************************************************

Criticality ::= ENUMERATED { reject(0), ignore(1), notify(2) }
*/
typedef enum {
   lppa_reject = 0,
   lppa_ignore = 1,
   lppa_notify = 2
} lppa_Criticality_Root;

typedef OSUINT32 lppa_Criticality;

EXTERN int asn1PE_lppa_Criticality (OSCTXT* pctxt, lppa_Criticality value);

EXTERN int asn1PD_lppa_Criticality (OSCTXT* pctxt, lppa_Criticality* pvalue);

EXTERN void asn1Print_lppa_Criticality 
   (const char* name, const lppa_Criticality* pvalue);

EXTERN int asn1PrtToStr_lppa_Criticality (const char* name, lppa_Criticality* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_Criticality (OSCTXT *pctxt, 
   const char* name, const lppa_Criticality* pvalue);

EXTERN const OSUTF8CHAR* lppa_Criticality_ToString (OSINT32 value);

EXTERN int lppa_Criticality_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_Criticality* pvalue);

EXTERN int lppa_Criticality_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_Criticality* pvalue);

EXTERN void asn1Copy_lppa_Criticality (OSCTXT* pctxt, 
   const lppa_Criticality* pSrcValue, lppa_Criticality* pDstValue);

/**************************************************************/
/*                                                            */
/*  LPPATransactionID                                         */
/*                                                            */
/**************************************************************/
/*
LPPATransactionID ::= INTEGER (0..32767)
*/
typedef OSUINT16 lppa_LPPATransactionID;

EXTERN int asn1PE_lppa_LPPATransactionID (OSCTXT* pctxt, lppa_LPPATransactionID value);

EXTERN int asn1PD_lppa_LPPATransactionID (OSCTXT* pctxt, lppa_LPPATransactionID* pvalue);

EXTERN void asn1Print_lppa_LPPATransactionID 
   (const char* name, const lppa_LPPATransactionID* pvalue);

EXTERN int asn1PrtToStr_lppa_LPPATransactionID (const char* name, 
   lppa_LPPATransactionID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_LPPATransactionID (OSCTXT *pctxt, 
   const char* name, const lppa_LPPATransactionID* pvalue);

EXTERN void asn1Copy_lppa_LPPATransactionID (OSCTXT* pctxt, 
   const lppa_LPPATransactionID* pSrcValue, lppa_LPPATransactionID* pDstValue);

/**************************************************************/
/*                                                            */
/*  ProtocolIE_ID                                             */
/*                                                            */
/**************************************************************/
/*
ProtocolIE-ID ::= INTEGER (0..maxProtocolIEs)
*/
typedef OSUINT16 lppa_ProtocolIE_ID;

EXTERN int asn1PE_lppa_ProtocolIE_ID (OSCTXT* pctxt, lppa_ProtocolIE_ID value);

EXTERN int asn1PD_lppa_ProtocolIE_ID (OSCTXT* pctxt, lppa_ProtocolIE_ID* pvalue);

EXTERN void asn1Print_lppa_ProtocolIE_ID 
   (const char* name, const lppa_ProtocolIE_ID* pvalue);

EXTERN int asn1PrtToStr_lppa_ProtocolIE_ID (const char* name, 
   lppa_ProtocolIE_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ProtocolIE_ID (OSCTXT *pctxt, 
   const char* name, const lppa_ProtocolIE_ID* pvalue);

EXTERN void asn1Copy_lppa_ProtocolIE_ID (OSCTXT* pctxt, 
   const lppa_ProtocolIE_ID* pSrcValue, lppa_ProtocolIE_ID* pDstValue);

/**************************************************************/
/*                                                            */
/*  TriggeringMessage                                         */
/*                                                            */
/**************************************************************/
/*
TriggeringMessage ::= ENUMERATED { initiating-message(0), successful-outcome(1), unsuccessful-outcome(2) }
*/
typedef enum {
   lppa_initiating_message = 0,
   lppa_successful_outcome = 1,
   lppa_unsuccessful_outcome = 2
} lppa_TriggeringMessage_Root;

typedef OSUINT32 lppa_TriggeringMessage;

EXTERN int asn1PE_lppa_TriggeringMessage (OSCTXT* pctxt, lppa_TriggeringMessage value);

EXTERN int asn1PD_lppa_TriggeringMessage (OSCTXT* pctxt, lppa_TriggeringMessage* pvalue);

EXTERN void asn1Print_lppa_TriggeringMessage 
   (const char* name, const lppa_TriggeringMessage* pvalue);

EXTERN int asn1PrtToStr_lppa_TriggeringMessage (const char* name, 
   lppa_TriggeringMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_TriggeringMessage (OSCTXT *pctxt, 
   const char* name, const lppa_TriggeringMessage* pvalue);

EXTERN const OSUTF8CHAR* lppa_TriggeringMessage_ToString (OSINT32 value);

EXTERN int lppa_TriggeringMessage_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_TriggeringMessage* pvalue);

EXTERN int lppa_TriggeringMessage_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_TriggeringMessage* pvalue);

EXTERN void asn1Copy_lppa_TriggeringMessage (OSCTXT* pctxt, 
   const lppa_TriggeringMessage* pSrcValue, lppa_TriggeringMessage* pDstValue);

/**************************************************************/
/*                                                            */
/*  PrivateIE_ID                                              */
/*                                                            */
/**************************************************************/
/*
PrivateIE-ID ::= CHOICE {
   local [0] INTEGER (0..maxPrivateIEs),
   global [1] OBJECT IDENTIFIER
}
*/
/* Choice tag constants */

#define T_lppa_PrivateIE_ID_local       1
#define T_lppa_PrivateIE_ID_global      2

typedef struct EXTERN lppa_PrivateIE_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      OSUINT16 local;
      /* t = 2 */
      ASN1OBJID *global;
   } u;
} lppa_PrivateIE_ID;

EXTERN int asn1PE_lppa_PrivateIE_ID (OSCTXT* pctxt, lppa_PrivateIE_ID* pvalue);

EXTERN int asn1PD_lppa_PrivateIE_ID (OSCTXT* pctxt, lppa_PrivateIE_ID* pvalue);

EXTERN void asn1Print_lppa_PrivateIE_ID 
   (const char* name, const lppa_PrivateIE_ID* pvalue);

EXTERN int asn1PrtToStr_lppa_PrivateIE_ID (const char* name, 
   lppa_PrivateIE_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PrivateIE_ID (OSCTXT *pctxt, 
   const char* name, const lppa_PrivateIE_ID* pvalue);

EXTERN void asn1Copy_lppa_PrivateIE_ID (OSCTXT* pctxt, 
   const lppa_PrivateIE_ID* pSrcValue, lppa_PrivateIE_ID* pDstValue);

EXTERN int asn1Init_lppa_PrivateIE_ID (lppa_PrivateIE_ID* pvalue);

EXTERN void asn1Free_lppa_PrivateIE_ID (OSCTXT *pctxt, lppa_PrivateIE_ID* pvalue);

EXTERN OSBOOL asn1Equals_lppa_PrivateIE_ID (const lppa_PrivateIE_ID* pvalue1, const lppa_PrivateIE_ID* pvalue2);

/**************************************************************/
/*                                                            */
/*  Presence                                                  */
/*                                                            */
/**************************************************************/
/*
Presence ::= ENUMERATED { optional(0), conditional(1), mandatory(2) }
*/
typedef enum {
   lppa_optional = 0,
   lppa_conditional = 1,
   lppa_mandatory = 2
} lppa_Presence_Root;

typedef OSUINT32 lppa_Presence;

EXTERN int asn1PE_lppa_Presence (OSCTXT* pctxt, lppa_Presence value);

EXTERN int asn1PD_lppa_Presence (OSCTXT* pctxt, lppa_Presence* pvalue);

EXTERN void asn1Print_lppa_Presence (const char* name, const lppa_Presence* pvalue);

EXTERN int asn1PrtToStr_lppa_Presence (const char* name, lppa_Presence* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_Presence (OSCTXT *pctxt, 
   const char* name, const lppa_Presence* pvalue);

EXTERN const OSUTF8CHAR* lppa_Presence_ToString (OSINT32 value);

EXTERN int lppa_Presence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_Presence* pvalue);

EXTERN int lppa_Presence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_Presence* pvalue);

EXTERN void asn1Copy_lppa_Presence (OSCTXT* pctxt, const lppa_Presence* pSrcValue, 
   lppa_Presence* pDstValue);

/* Value definitions */

#define ASN1V_lppa_maxPrivateIEs 65535
#define ASN1V_lppa_maxProtocolExtensions 65535
#define ASN1V_lppa_maxProtocolIEs 65535

/**
 * Header file for ASN.1 module LPPA-Containers
 */

/**
 * Header file for ASN.1 module LPPA-IEs
 */
typedef enum {
   T21lppa__UNDEF_
} lppa_CriticalityDiagnostics_ExtIEs_TVALUE;

typedef enum {
   T22lppa__UNDEF_
} lppa_CriticalityDiagnostics_IE_List_ExtIEs_TVALUE;

typedef enum {
   T23lppa__UNDEF_
} lppa_ECGI_ExtIEs_TVALUE;

typedef enum {
   T25lppa__UNDEF_
} lppa_InterRATMeasurementQuantitiesValue_ExtIEs_TVALUE;

typedef enum {
   T27lppa__UNDEF_
} lppa_MeasurementQuantitiesValue_ExtIEs_TVALUE;

typedef enum {
   T28lppa__UNDEF_
} lppa_OTDOACells_ExtIEs_TVALUE;

typedef enum {
   T29lppa__UNDEF_
} lppa_ResultRSRP_Item_ExtIEs_TVALUE;

typedef enum {
   T30lppa__UNDEF_
} lppa_ResultRSRQ_Item_ExtIEs_TVALUE;

typedef enum {
   T31lppa__UNDEF_
} lppa_ResultGERAN_Item_ExtIEs_TVALUE;

typedef enum {
   T32lppa__UNDEF_
} lppa_ResultUTRAN_Item_ExtIEs_TVALUE;

/**************************************************************/
/*                                                            */
/*  Measurement_ID                                            */
/*                                                            */
/**************************************************************/
/*
 J
 K
 L
 M

Measurement-ID ::= INTEGER (1..15, ...)
*/
typedef OSUINT32 lppa_Measurement_ID;

EXTERN int asn1PE_lppa_Measurement_ID (OSCTXT* pctxt, lppa_Measurement_ID value);

EXTERN int asn1PD_lppa_Measurement_ID (OSCTXT* pctxt, lppa_Measurement_ID* pvalue);

EXTERN void asn1Print_lppa_Measurement_ID 
   (const char* name, const lppa_Measurement_ID* pvalue);

EXTERN int asn1PrtToStr_lppa_Measurement_ID (const char* name, 
   lppa_Measurement_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_Measurement_ID (OSCTXT *pctxt, 
   const char* name, const lppa_Measurement_ID* pvalue);

EXTERN void asn1Copy_lppa_Measurement_ID (OSCTXT* pctxt, 
   const lppa_Measurement_ID* pSrcValue, lppa_Measurement_ID* pDstValue);

/**************************************************************/
/*                                                            */
/*  ReportCharacteristics                                     */
/*                                                            */
/**************************************************************/
/*
 Q
 R

ReportCharacteristics ::= ENUMERATED { onDemand(0), periodic(1), ... }
*/
typedef enum {
   lppa_onDemand = 0,
   lppa_periodic = 1
} lppa_ReportCharacteristics_Root;

typedef OSUINT32 lppa_ReportCharacteristics;

EXTERN int asn1PE_lppa_ReportCharacteristics (OSCTXT* pctxt, lppa_ReportCharacteristics value);

EXTERN int asn1PD_lppa_ReportCharacteristics (OSCTXT* pctxt, lppa_ReportCharacteristics* pvalue);

EXTERN void asn1Print_lppa_ReportCharacteristics 
   (const char* name, const lppa_ReportCharacteristics* pvalue);

EXTERN int asn1PrtToStr_lppa_ReportCharacteristics (const char* name, 
   lppa_ReportCharacteristics* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ReportCharacteristics (OSCTXT *pctxt, 
   const char* name, const lppa_ReportCharacteristics* pvalue);

EXTERN const OSUTF8CHAR* lppa_ReportCharacteristics_ToString (OSINT32 value);

EXTERN int lppa_ReportCharacteristics_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_ReportCharacteristics* pvalue);

EXTERN int lppa_ReportCharacteristics_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_ReportCharacteristics* pvalue);

EXTERN void asn1Copy_lppa_ReportCharacteristics (OSCTXT* pctxt, 
   const lppa_ReportCharacteristics* pSrcValue, lppa_ReportCharacteristics*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  MeasurementPeriodicity                                    */
/*                                                            */
/**************************************************************/
/*
MeasurementPeriodicity ::= ENUMERATED { ms120(0), ms240(1), ms480(2), ms640(3), ms1024(4), ms2048(5), ms5120(6), ms10240(7), min1(8), min6(9), min12(10), min30(11), min60(12), ... }
*/
typedef enum {
   lppa_ms120 = 0,
   lppa_ms240 = 1,
   lppa_ms480 = 2,
   lppa_ms640 = 3,
   lppa_ms1024 = 4,
   lppa_ms2048 = 5,
   lppa_ms5120 = 6,
   lppa_ms10240 = 7,
   lppa_min1 = 8,
   lppa_min6 = 9,
   lppa_min12 = 10,
   lppa_min30 = 11,
   lppa_min60 = 12
} lppa_MeasurementPeriodicity_Root;

typedef OSUINT32 lppa_MeasurementPeriodicity;

EXTERN int asn1PE_lppa_MeasurementPeriodicity (OSCTXT* pctxt, lppa_MeasurementPeriodicity value);

EXTERN int asn1PD_lppa_MeasurementPeriodicity (OSCTXT* pctxt, lppa_MeasurementPeriodicity* pvalue);

EXTERN void asn1Print_lppa_MeasurementPeriodicity 
   (const char* name, const lppa_MeasurementPeriodicity* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasurementPeriodicity (const char* name, 
   lppa_MeasurementPeriodicity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasurementPeriodicity (OSCTXT *pctxt, 
   const char* name, const lppa_MeasurementPeriodicity* pvalue);

EXTERN const OSUTF8CHAR* lppa_MeasurementPeriodicity_ToString (OSINT32 value);

EXTERN int lppa_MeasurementPeriodicity_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_MeasurementPeriodicity* pvalue);

EXTERN int lppa_MeasurementPeriodicity_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_MeasurementPeriodicity* pvalue);

EXTERN void asn1Copy_lppa_MeasurementPeriodicity (OSCTXT* pctxt, 
   const lppa_MeasurementPeriodicity* pSrcValue, lppa_MeasurementPeriodicity*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  MeasurementQuantitiesValue                                */
/*                                                            */
/**************************************************************/
/*
MeasurementQuantitiesValue ::= ENUMERATED { cell-ID(0), angleOfArrival(1), timingAdvanceType1(2), timingAdvanceType2(3), rSRP(4), rSRQ(5), ... }
*/
typedef enum {
   lppa_cell_ID = 0,
   lppa_angleOfArrival = 1,
   lppa_timingAdvanceType1 = 2,
   lppa_timingAdvanceType2 = 3,
   lppa_rSRP = 4,
   lppa_rSRQ = 5
} lppa_MeasurementQuantitiesValue_Root;

typedef OSUINT32 lppa_MeasurementQuantitiesValue;

EXTERN int asn1PE_lppa_MeasurementQuantitiesValue (OSCTXT* pctxt, lppa_MeasurementQuantitiesValue value);

EXTERN int asn1PD_lppa_MeasurementQuantitiesValue (OSCTXT* pctxt, lppa_MeasurementQuantitiesValue* pvalue);

EXTERN void asn1Print_lppa_MeasurementQuantitiesValue 
   (const char* name, const lppa_MeasurementQuantitiesValue* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasurementQuantitiesValue (const char* name, 
   lppa_MeasurementQuantitiesValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasurementQuantitiesValue (OSCTXT *pctxt, 
   const char* name, const lppa_MeasurementQuantitiesValue* pvalue);

EXTERN const OSUTF8CHAR* lppa_MeasurementQuantitiesValue_ToString (OSINT32 value);

EXTERN int lppa_MeasurementQuantitiesValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_MeasurementQuantitiesValue* pvalue);

EXTERN int lppa_MeasurementQuantitiesValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_MeasurementQuantitiesValue* pvalue);

EXTERN void asn1Copy_lppa_MeasurementQuantitiesValue (OSCTXT* pctxt, 
   const lppa_MeasurementQuantitiesValue* pSrcValue, 
   lppa_MeasurementQuantitiesValue* pDstValue);

/**************************************************************/
/*                                                            */
/*  MeasurementQuantities_Item_iE_Extensions_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MeasurementQuantities-Item'
*/
typedef struct EXTERN lppa_MeasurementQuantities_Item_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_MeasurementQuantities_Item_iE_Extensions_element;

EXTERN int asn1PE_lppa_MeasurementQuantities_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_MeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_MeasurementQuantities_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_MeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_MeasurementQuantities_Item_iE_Extensions_element 
   (const char* name, const lppa_MeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasurementQuantities_Item_iE_Extensions_element (
   const char* name, 
   lppa_MeasurementQuantities_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasurementQuantities_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_MeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_MeasurementQuantities_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_MeasurementQuantities_Item_iE_Extensions_element* pSrcValue, 
   lppa_MeasurementQuantities_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_MeasurementQuantities_Item_iE_Extensions_element (
   lppa_MeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_MeasurementQuantities_Item_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_MeasurementQuantities_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasurementQuantities_Item_iE_Extensions                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MeasurementQuantities-Item'
*/
/* List of lppa_MeasurementQuantities_Item_iE_Extensions_element */
typedef OSRTDList lppa_MeasurementQuantities_Item_iE_Extensions;

EXTERN int asn1PE_lppa_MeasurementQuantities_Item_iE_Extensions (OSCTXT* pctxt, lppa_MeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_MeasurementQuantities_Item_iE_Extensions (OSCTXT* pctxt, lppa_MeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_MeasurementQuantities_Item_iE_Extensions 
   (const char* name, const lppa_MeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasurementQuantities_Item_iE_Extensions (
   const char* name, lppa_MeasurementQuantities_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasurementQuantities_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_MeasurementQuantities_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_MeasurementQuantities_Item_iE_Extensions_element* 
   asn1Get_lppa_MeasurementQuantities_Item_iE_Extensions 
   (lppa_ProtocolIE_ID id, 
   lppa_MeasurementQuantities_Item_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_MeasurementQuantities_Item_iE_Extensions (OSCTXT* pctxt, 
   const lppa_MeasurementQuantities_Item_iE_Extensions* pSrcValue, 
   lppa_MeasurementQuantities_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_MeasurementQuantities_Item_iE_Extensions (
   lppa_MeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_MeasurementQuantities_Item_iE_Extensions (OSCTXT *pctxt, 
   lppa_MeasurementQuantities_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasurementQuantities_Item                                */
/*                                                            */
/**************************************************************/
/*
MeasurementQuantities-Item ::= SEQUENCE {
   measurementQuantitiesValue [0] MeasurementQuantitiesValue,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({MeasurementQuantitiesValue-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({MeasurementQuantitiesValue-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({MeasurementQuantitiesValue-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_MeasurementQuantities_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_MeasurementQuantitiesValue measurementQuantitiesValue;
   lppa_MeasurementQuantities_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_MeasurementQuantities_Item;

EXTERN int asn1PE_lppa_MeasurementQuantities_Item (OSCTXT* pctxt, lppa_MeasurementQuantities_Item* pvalue);

EXTERN int asn1PD_lppa_MeasurementQuantities_Item (OSCTXT* pctxt, lppa_MeasurementQuantities_Item* pvalue);

EXTERN void asn1Print_lppa_MeasurementQuantities_Item 
   (const char* name, const lppa_MeasurementQuantities_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasurementQuantities_Item (const char* name, 
   lppa_MeasurementQuantities_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasurementQuantities_Item (OSCTXT *pctxt, 
   const char* name, const lppa_MeasurementQuantities_Item* pvalue);

EXTERN void asn1Copy_lppa_MeasurementQuantities_Item (OSCTXT* pctxt, 
   const lppa_MeasurementQuantities_Item* pSrcValue, 
   lppa_MeasurementQuantities_Item* pDstValue);

EXTERN int asn1Init_lppa_MeasurementQuantities_Item (
   lppa_MeasurementQuantities_Item* pvalue);

EXTERN void asn1Free_lppa_MeasurementQuantities_Item (OSCTXT *pctxt, 
   lppa_MeasurementQuantities_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasurementQuantities_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MeasurementQuantities'
*/
typedef struct EXTERN lppa_MeasurementQuantities_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   lppa_MeasurementQuantities_Item  value;
} lppa_MeasurementQuantities_element;

EXTERN int asn1PE_lppa_MeasurementQuantities_element (OSCTXT* pctxt, lppa_MeasurementQuantities_element* pvalue);

EXTERN int asn1PD_lppa_MeasurementQuantities_element (OSCTXT* pctxt, lppa_MeasurementQuantities_element* pvalue);

EXTERN void asn1Print_lppa_MeasurementQuantities_element 
   (const char* name, const lppa_MeasurementQuantities_element* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasurementQuantities_element (const char* name, 
   lppa_MeasurementQuantities_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasurementQuantities_element (OSCTXT *pctxt, 
   const char* name, const lppa_MeasurementQuantities_element* pvalue);

EXTERN void asn1Copy_lppa_MeasurementQuantities_element (OSCTXT* pctxt, 
   const lppa_MeasurementQuantities_element* pSrcValue, 
   lppa_MeasurementQuantities_element* pDstValue);

EXTERN int asn1Init_lppa_MeasurementQuantities_element (
   lppa_MeasurementQuantities_element* pvalue);

EXTERN void asn1Free_lppa_MeasurementQuantities_element (OSCTXT *pctxt, 
   lppa_MeasurementQuantities_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasurementQuantities                                     */
/*                                                            */
/**************************************************************/
/*
MeasurementQuantities ::= SEQUENCE (SIZE (1..maxNoMeas)) OF SEQUENCE {
   id [0] LPPA-PROTOCOL-IES.&id ({MeasurementQuantities-ItemIEs}),
   criticality [1] LPPA-PROTOCOL-IES.&criticality ({MeasurementQuantities-ItemIEs}{@id}),
   value [2] LPPA-PROTOCOL-IES.&Value ({MeasurementQuantities-ItemIEs}{@id})
}
*/
/* List of lppa_MeasurementQuantities_element */
typedef OSRTDList lppa_MeasurementQuantities;

EXTERN int asn1PE_lppa_MeasurementQuantities (OSCTXT* pctxt, lppa_MeasurementQuantities* pvalue);

EXTERN int asn1PD_lppa_MeasurementQuantities (OSCTXT* pctxt, lppa_MeasurementQuantities* pvalue);

EXTERN void asn1Print_lppa_MeasurementQuantities 
   (const char* name, const lppa_MeasurementQuantities* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasurementQuantities (const char* name, 
   lppa_MeasurementQuantities* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasurementQuantities (OSCTXT *pctxt, 
   const char* name, const lppa_MeasurementQuantities* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_MeasurementQuantities_element* 
   asn1Get_lppa_MeasurementQuantities (lppa_ProtocolIE_ID id, 
   lppa_MeasurementQuantities* plist);

EXTERN void asn1Copy_lppa_MeasurementQuantities (OSCTXT* pctxt, 
   const lppa_MeasurementQuantities* pSrcValue, lppa_MeasurementQuantities*
    pDstValue);

EXTERN int asn1Init_lppa_MeasurementQuantities (lppa_MeasurementQuantities* pvalue);

EXTERN void asn1Free_lppa_MeasurementQuantities (OSCTXT *pctxt, 
   lppa_MeasurementQuantities* pvalue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasurementQuantitiesValue                        */
/*                                                            */
/**************************************************************/
/*
InterRATMeasurementQuantitiesValue ::= ENUMERATED { geran(0), utran(1), ... }
*/
typedef enum {
   lppa_geran = 0,
   lppa_utran = 1
} lppa_InterRATMeasurementQuantitiesValue_Root;

typedef OSUINT32 lppa_InterRATMeasurementQuantitiesValue;

EXTERN int asn1PE_lppa_InterRATMeasurementQuantitiesValue (OSCTXT* pctxt, lppa_InterRATMeasurementQuantitiesValue value);

EXTERN int asn1PD_lppa_InterRATMeasurementQuantitiesValue (OSCTXT* pctxt, lppa_InterRATMeasurementQuantitiesValue* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasurementQuantitiesValue 
   (const char* name, const lppa_InterRATMeasurementQuantitiesValue* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasurementQuantitiesValue (const char* name, 
   lppa_InterRATMeasurementQuantitiesValue* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasurementQuantitiesValue (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasurementQuantitiesValue* pvalue);

EXTERN const OSUTF8CHAR* lppa_InterRATMeasurementQuantitiesValue_ToString (OSINT32 value);

EXTERN int lppa_InterRATMeasurementQuantitiesValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_InterRATMeasurementQuantitiesValue* pvalue);

EXTERN int lppa_InterRATMeasurementQuantitiesValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_InterRATMeasurementQuantitiesValue* pvalue);

EXTERN void asn1Copy_lppa_InterRATMeasurementQuantitiesValue (OSCTXT* pctxt, 
   const lppa_InterRATMeasurementQuantitiesValue* pSrcValue, 
   lppa_InterRATMeasurementQuantitiesValue* pDstValue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasurementQuantities_Item_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InterRATMeasurementQuantities-Item'
*/
typedef struct EXTERN lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element;

EXTERN int asn1PE_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element 
   (const char* name, const lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element (
   const char* name, 
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pSrcValue, 
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element (
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasurementQuantities_Item_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InterRATMeasurementQuantities-Item'
*/
/* List of lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element */
typedef OSRTDList lppa_InterRATMeasurementQuantities_Item_iE_Extensions;

EXTERN int asn1PE_lppa_InterRATMeasurementQuantities_Item_iE_Extensions (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_InterRATMeasurementQuantities_Item_iE_Extensions (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasurementQuantities_Item_iE_Extensions 
   (const char* name, const lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasurementQuantities_Item_iE_Extensions (
   const char* name, 
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasurementQuantities_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_InterRATMeasurementQuantities_Item_iE_Extensions_element* 
   asn1Get_lppa_InterRATMeasurementQuantities_Item_iE_Extensions 
   (lppa_ProtocolIE_ID id, 
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_InterRATMeasurementQuantities_Item_iE_Extensions (OSCTXT* pctxt, 
   const lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pSrcValue, 
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_InterRATMeasurementQuantities_Item_iE_Extensions (
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_InterRATMeasurementQuantities_Item_iE_Extensions (OSCTXT *pctxt, 
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasurementQuantities_Item                        */
/*                                                            */
/**************************************************************/
/*
InterRATMeasurementQuantities-Item ::= SEQUENCE {
   interRATMeasurementQuantitiesValue [0] InterRATMeasurementQuantitiesValue,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({InterRATMeasurementQuantitiesValue-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({InterRATMeasurementQuantitiesValue-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({InterRATMeasurementQuantitiesValue-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_InterRATMeasurementQuantities_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_InterRATMeasurementQuantitiesValue interRATMeasurementQuantitiesValue;
   lppa_InterRATMeasurementQuantities_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_InterRATMeasurementQuantities_Item;

EXTERN int asn1PE_lppa_InterRATMeasurementQuantities_Item (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_Item* pvalue);

EXTERN int asn1PD_lppa_InterRATMeasurementQuantities_Item (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_Item* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasurementQuantities_Item 
   (const char* name, const lppa_InterRATMeasurementQuantities_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasurementQuantities_Item (const char* name, 
   lppa_InterRATMeasurementQuantities_Item* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasurementQuantities_Item (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasurementQuantities_Item* pvalue);

EXTERN void asn1Copy_lppa_InterRATMeasurementQuantities_Item (OSCTXT* pctxt, 
   const lppa_InterRATMeasurementQuantities_Item* pSrcValue, 
   lppa_InterRATMeasurementQuantities_Item* pDstValue);

EXTERN int asn1Init_lppa_InterRATMeasurementQuantities_Item (
   lppa_InterRATMeasurementQuantities_Item* pvalue);

EXTERN void asn1Free_lppa_InterRATMeasurementQuantities_Item (OSCTXT *pctxt, 
   lppa_InterRATMeasurementQuantities_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasurementQuantities_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InterRATMeasurementQuantities'
*/
typedef struct EXTERN lppa_InterRATMeasurementQuantities_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   lppa_InterRATMeasurementQuantities_Item  value;
} lppa_InterRATMeasurementQuantities_element;

EXTERN int asn1PE_lppa_InterRATMeasurementQuantities_element (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_element* pvalue);

EXTERN int asn1PD_lppa_InterRATMeasurementQuantities_element (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities_element* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasurementQuantities_element 
   (const char* name, const lppa_InterRATMeasurementQuantities_element* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasurementQuantities_element (const char* name, 
   lppa_InterRATMeasurementQuantities_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasurementQuantities_element (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasurementQuantities_element* pvalue);

EXTERN void asn1Copy_lppa_InterRATMeasurementQuantities_element (OSCTXT* pctxt, 
   const lppa_InterRATMeasurementQuantities_element* pSrcValue, 
   lppa_InterRATMeasurementQuantities_element* pDstValue);

EXTERN int asn1Init_lppa_InterRATMeasurementQuantities_element (
   lppa_InterRATMeasurementQuantities_element* pvalue);

EXTERN void asn1Free_lppa_InterRATMeasurementQuantities_element (OSCTXT *pctxt, 
   lppa_InterRATMeasurementQuantities_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasurementQuantities                             */
/*                                                            */
/**************************************************************/
/*
 F
 G
 H
 I

InterRATMeasurementQuantities ::= SEQUENCE (SIZE (0..maxNoMeas)) OF SEQUENCE {
   id [0] LPPA-PROTOCOL-IES.&id ({InterRATMeasurementQuantities-ItemIEs}),
   criticality [1] LPPA-PROTOCOL-IES.&criticality ({InterRATMeasurementQuantities-ItemIEs}{@id}),
   value [2] LPPA-PROTOCOL-IES.&Value ({InterRATMeasurementQuantities-ItemIEs}{@id})
}
*/
/* List of lppa_InterRATMeasurementQuantities_element */
typedef OSRTDList lppa_InterRATMeasurementQuantities;

EXTERN int asn1PE_lppa_InterRATMeasurementQuantities (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities* pvalue);

EXTERN int asn1PD_lppa_InterRATMeasurementQuantities (OSCTXT* pctxt, lppa_InterRATMeasurementQuantities* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasurementQuantities 
   (const char* name, const lppa_InterRATMeasurementQuantities* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasurementQuantities (const char* name, 
   lppa_InterRATMeasurementQuantities* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasurementQuantities (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasurementQuantities* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_InterRATMeasurementQuantities_element* 
   asn1Get_lppa_InterRATMeasurementQuantities (lppa_ProtocolIE_ID id, 
   lppa_InterRATMeasurementQuantities* plist);

EXTERN void asn1Copy_lppa_InterRATMeasurementQuantities (OSCTXT* pctxt, 
   const lppa_InterRATMeasurementQuantities* pSrcValue, 
   lppa_InterRATMeasurementQuantities* pDstValue);

EXTERN int asn1Init_lppa_InterRATMeasurementQuantities (
   lppa_InterRATMeasurementQuantities* pvalue);

EXTERN void asn1Free_lppa_InterRATMeasurementQuantities (OSCTXT *pctxt, 
   lppa_InterRATMeasurementQuantities* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOA_Information_Item                                    */
/*                                                            */
/**************************************************************/
/*
OTDOA-Information-Item ::= ENUMERATED { pci(0), cellid(1), tac(2), earfcn(3), prsBandwidth(4), prsConfigIndex(5), cpLength(6), noDlFrames(7), noAntennaPorts(8), sFNInitTime(9), ..., e-UTRANAccessPointPosition(10), prsmutingconfiguration(11) }
*/
typedef enum {
   lppa_pci = 0,
   lppa_cellid = 1,
   lppa_tac = 2,
   lppa_earfcn = 3,
   lppa_prsBandwidth = 4,
   lppa_prsConfigIndex = 5,
   lppa_cpLength = 6,
   lppa_noDlFrames = 7,
   lppa_noAntennaPorts = 8,
   lppa_sFNInitTime = 9
} lppa_OTDOA_Information_Item_Root;

typedef enum {
   lppa_e_UTRANAccessPointPosition = 10,
   lppa_prsmutingconfiguration = 11
} lppa_OTDOA_Information_Item_Ext;

typedef OSUINT32 lppa_OTDOA_Information_Item;

EXTERN int asn1PE_lppa_OTDOA_Information_Item (OSCTXT* pctxt, lppa_OTDOA_Information_Item value);

EXTERN int asn1PD_lppa_OTDOA_Information_Item (OSCTXT* pctxt, lppa_OTDOA_Information_Item* pvalue);

EXTERN void asn1Print_lppa_OTDOA_Information_Item 
   (const char* name, const lppa_OTDOA_Information_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOA_Information_Item (const char* name, 
   lppa_OTDOA_Information_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOA_Information_Item (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOA_Information_Item* pvalue);

EXTERN const OSUTF8CHAR* lppa_OTDOA_Information_Item_ToString (OSINT32 value);

EXTERN int lppa_OTDOA_Information_Item_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_OTDOA_Information_Item* pvalue);

EXTERN int lppa_OTDOA_Information_Item_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_OTDOA_Information_Item* pvalue);

EXTERN void asn1Copy_lppa_OTDOA_Information_Item (OSCTXT* pctxt, 
   const lppa_OTDOA_Information_Item* pSrcValue, lppa_OTDOA_Information_Item*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  RequestedSRSTransmissionCharacteristics                   */
/*                                                            */
/**************************************************************/
/*
RequestedSRSTransmissionCharacteristics ::= SEQUENCE {
   numberOfTransmissions [0] INTEGER (0..500, ...),
   bandwidth [1] INTEGER (1..100, ...),
   ...
}
*/
typedef struct EXTERN lppa_RequestedSRSTransmissionCharacteristics {
   OSUINT32 numberOfTransmissions;
   OSUINT32 bandwidth;
   OSRTDList extElem1;
} lppa_RequestedSRSTransmissionCharacteristics;

EXTERN int asn1PE_lppa_RequestedSRSTransmissionCharacteristics (OSCTXT* pctxt, lppa_RequestedSRSTransmissionCharacteristics* pvalue);

EXTERN int asn1PD_lppa_RequestedSRSTransmissionCharacteristics (OSCTXT* pctxt, lppa_RequestedSRSTransmissionCharacteristics* pvalue);

EXTERN void asn1Print_lppa_RequestedSRSTransmissionCharacteristics 
   (const char* name, const lppa_RequestedSRSTransmissionCharacteristics* pvalue);

EXTERN int asn1PrtToStr_lppa_RequestedSRSTransmissionCharacteristics (
   const char* name, lppa_RequestedSRSTransmissionCharacteristics* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_RequestedSRSTransmissionCharacteristics (OSCTXT *pctxt, 
   const char* name, const lppa_RequestedSRSTransmissionCharacteristics* pvalue);

EXTERN void asn1Copy_lppa_RequestedSRSTransmissionCharacteristics (OSCTXT* pctxt, 
   const lppa_RequestedSRSTransmissionCharacteristics* pSrcValue, 
   lppa_RequestedSRSTransmissionCharacteristics* pDstValue);

EXTERN int asn1Init_lppa_RequestedSRSTransmissionCharacteristics (
   lppa_RequestedSRSTransmissionCharacteristics* pvalue);

EXTERN void asn1Free_lppa_RequestedSRSTransmissionCharacteristics (OSCTXT *pctxt, 
   lppa_RequestedSRSTransmissionCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseRadioNetwork                                         */
/*                                                            */
/**************************************************************/
/*
CauseRadioNetwork ::= ENUMERATED { unspecified(0), requested-item-not-supported(1), requested-item-temporarily-not-available(2), ... }
*/
typedef enum {
   lppa_unspecified_2 = 0,
   lppa_requested_item_not_supported = 1,
   lppa_requested_item_temporarily_not_available = 2
} lppa_CauseRadioNetwork_Root;

typedef OSUINT32 lppa_CauseRadioNetwork;

EXTERN int asn1PE_lppa_CauseRadioNetwork (OSCTXT* pctxt, lppa_CauseRadioNetwork value);

EXTERN int asn1PD_lppa_CauseRadioNetwork (OSCTXT* pctxt, lppa_CauseRadioNetwork* pvalue);

EXTERN void asn1Print_lppa_CauseRadioNetwork 
   (const char* name, const lppa_CauseRadioNetwork* pvalue);

EXTERN int asn1PrtToStr_lppa_CauseRadioNetwork (const char* name, 
   lppa_CauseRadioNetwork* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CauseRadioNetwork (OSCTXT *pctxt, 
   const char* name, const lppa_CauseRadioNetwork* pvalue);

EXTERN const OSUTF8CHAR* lppa_CauseRadioNetwork_ToString (OSINT32 value);

EXTERN int lppa_CauseRadioNetwork_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_CauseRadioNetwork* pvalue);

EXTERN int lppa_CauseRadioNetwork_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_CauseRadioNetwork* pvalue);

EXTERN void asn1Copy_lppa_CauseRadioNetwork (OSCTXT* pctxt, 
   const lppa_CauseRadioNetwork* pSrcValue, lppa_CauseRadioNetwork* pDstValue);

/**************************************************************/
/*                                                            */
/*  CauseProtocol                                             */
/*                                                            */
/**************************************************************/
/*
CauseProtocol ::= ENUMERATED { transfer-syntax-error(0), abstract-syntax-error-reject(1), abstract-syntax-error-ignore-and-notify(2), message-not-compatible-with-receiver-state(3), semantic-error(4), unspecified(5), abstract-syntax-error-falsely-constructed-message(6), ... }
*/
typedef enum {
   lppa_transfer_syntax_error = 0,
   lppa_abstract_syntax_error_reject = 1,
   lppa_abstract_syntax_error_ignore_and_notify = 2,
   lppa_message_not_compatible_with_receiver_state = 3,
   lppa_semantic_error = 4,
   lppa_unspecified_1 = 5,
   lppa_abstract_syntax_error_falsely_constructed_message = 6
} lppa_CauseProtocol_Root;

typedef OSUINT32 lppa_CauseProtocol;

EXTERN int asn1PE_lppa_CauseProtocol (OSCTXT* pctxt, lppa_CauseProtocol value);

EXTERN int asn1PD_lppa_CauseProtocol (OSCTXT* pctxt, lppa_CauseProtocol* pvalue);

EXTERN void asn1Print_lppa_CauseProtocol 
   (const char* name, const lppa_CauseProtocol* pvalue);

EXTERN int asn1PrtToStr_lppa_CauseProtocol (const char* name, 
   lppa_CauseProtocol* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CauseProtocol (OSCTXT *pctxt, 
   const char* name, const lppa_CauseProtocol* pvalue);

EXTERN const OSUTF8CHAR* lppa_CauseProtocol_ToString (OSINT32 value);

EXTERN int lppa_CauseProtocol_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_CauseProtocol* pvalue);

EXTERN int lppa_CauseProtocol_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_CauseProtocol* pvalue);

EXTERN void asn1Copy_lppa_CauseProtocol (OSCTXT* pctxt, 
   const lppa_CauseProtocol* pSrcValue, lppa_CauseProtocol* pDstValue);

/**************************************************************/
/*                                                            */
/*  CauseMisc                                                 */
/*                                                            */
/**************************************************************/
/*
CauseMisc ::= ENUMERATED { unspecified(0), ... }
*/
typedef enum {
   lppa_unspecified = 0
} lppa_CauseMisc_Root;

typedef OSUINT32 lppa_CauseMisc;

EXTERN int asn1PE_lppa_CauseMisc (OSCTXT* pctxt, lppa_CauseMisc value);

EXTERN int asn1PD_lppa_CauseMisc (OSCTXT* pctxt, lppa_CauseMisc* pvalue);

EXTERN void asn1Print_lppa_CauseMisc (const char* name, const lppa_CauseMisc* pvalue);

EXTERN int asn1PrtToStr_lppa_CauseMisc (const char* name, lppa_CauseMisc* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CauseMisc (OSCTXT *pctxt, 
   const char* name, const lppa_CauseMisc* pvalue);

EXTERN const OSUTF8CHAR* lppa_CauseMisc_ToString (OSINT32 value);

EXTERN int lppa_CauseMisc_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_CauseMisc* pvalue);

EXTERN int lppa_CauseMisc_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_CauseMisc* pvalue);

EXTERN void asn1Copy_lppa_CauseMisc (OSCTXT* pctxt, const lppa_CauseMisc* pSrcValue, 
   lppa_CauseMisc* pDstValue);

/**************************************************************/
/*                                                            */
/*  Cause                                                     */
/*                                                            */
/**************************************************************/
/*
 C

Cause ::= CHOICE {
   radioNetwork [0] CauseRadioNetwork,
   protocol [1] CauseProtocol,
   misc [2] CauseMisc,
   ...
}
*/
/* Choice tag constants */

#define T_lppa_Cause_radioNetwork       1
#define T_lppa_Cause_protocol           2
#define T_lppa_Cause_misc               3
#define T_lppa_Cause_extElem1           4

typedef struct EXTERN lppa_Cause {
   OSINT32 t;
   union {
      /* t = 1 */
      lppa_CauseRadioNetwork radioNetwork;
      /* t = 2 */
      lppa_CauseProtocol protocol;
      /* t = 3 */
      lppa_CauseMisc misc;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} lppa_Cause;

EXTERN int asn1PE_lppa_Cause (OSCTXT* pctxt, lppa_Cause* pvalue);

EXTERN int asn1PD_lppa_Cause (OSCTXT* pctxt, lppa_Cause* pvalue);

EXTERN void asn1Print_lppa_Cause (const char* name, const lppa_Cause* pvalue);

EXTERN int asn1PrtToStr_lppa_Cause (const char* name, lppa_Cause* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_Cause (OSCTXT *pctxt, 
   const char* name, const lppa_Cause* pvalue);

EXTERN void asn1Copy_lppa_Cause (OSCTXT* pctxt, const lppa_Cause* pSrcValue, 
   lppa_Cause* pDstValue);

EXTERN int asn1Init_lppa_Cause (lppa_Cause* pvalue);

EXTERN void asn1Free_lppa_Cause (OSCTXT *pctxt, lppa_Cause* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMN_Identity                                             */
/*                                                            */
/**************************************************************/
/*
PLMN-Identity ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN lppa_PLMN_Identity {
   OSUINT32 numocts;
   OSOCTET data[3];
} lppa_PLMN_Identity;

EXTERN int asn1PE_lppa_PLMN_Identity (OSCTXT* pctxt, lppa_PLMN_Identity* pvalue);

EXTERN int asn1PD_lppa_PLMN_Identity (OSCTXT* pctxt, lppa_PLMN_Identity* pvalue);

EXTERN void asn1Print_lppa_PLMN_Identity 
   (const char* name, const lppa_PLMN_Identity* pvalue);

EXTERN int asn1PrtToStr_lppa_PLMN_Identity (const char* name, 
   lppa_PLMN_Identity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PLMN_Identity (OSCTXT *pctxt, 
   const char* name, const lppa_PLMN_Identity* pvalue);

EXTERN void asn1Copy_lppa_PLMN_Identity (OSCTXT* pctxt, 
   const lppa_PLMN_Identity* pSrcValue, lppa_PLMN_Identity* pDstValue);

EXTERN int asn1Init_lppa_PLMN_Identity (lppa_PLMN_Identity* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRANCellIdentifier                                      */
/*                                                            */
/**************************************************************/
/*
EUTRANCellIdentifier ::= BIT STRING  (SIZE (28))
*/
typedef ASN1BitStr32 lppa_EUTRANCellIdentifier;

EXTERN int asn1PE_lppa_EUTRANCellIdentifier (OSCTXT* pctxt, lppa_EUTRANCellIdentifier value);

EXTERN int asn1PD_lppa_EUTRANCellIdentifier (OSCTXT* pctxt, lppa_EUTRANCellIdentifier* pvalue);

EXTERN void asn1Print_lppa_EUTRANCellIdentifier 
   (const char* name, const lppa_EUTRANCellIdentifier* pvalue);

EXTERN int asn1PrtToStr_lppa_EUTRANCellIdentifier (const char* name, 
   lppa_EUTRANCellIdentifier* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_EUTRANCellIdentifier (OSCTXT *pctxt, 
   const char* name, const lppa_EUTRANCellIdentifier* pvalue);

EXTERN void asn1Copy_lppa_EUTRANCellIdentifier (OSCTXT* pctxt, 
   const lppa_EUTRANCellIdentifier* pSrcValue, lppa_EUTRANCellIdentifier*
    pDstValue);

EXTERN int asn1Init_lppa_EUTRANCellIdentifier (lppa_EUTRANCellIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  ECGI_iE_Extensions_element                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ECGI'
*/
typedef struct EXTERN lppa_ECGI_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_ECGI_iE_Extensions_element;

EXTERN int asn1PE_lppa_ECGI_iE_Extensions_element (OSCTXT* pctxt, lppa_ECGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_ECGI_iE_Extensions_element (OSCTXT* pctxt, lppa_ECGI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_ECGI_iE_Extensions_element 
   (const char* name, const lppa_ECGI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_ECGI_iE_Extensions_element (const char* name, 
   lppa_ECGI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ECGI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_ECGI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_ECGI_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_ECGI_iE_Extensions_element* pSrcValue, 
   lppa_ECGI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_ECGI_iE_Extensions_element (
   lppa_ECGI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_ECGI_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_ECGI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ECGI_iE_Extensions                                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ECGI'
*/
/* List of lppa_ECGI_iE_Extensions_element */
typedef OSRTDList lppa_ECGI_iE_Extensions;

EXTERN int asn1PE_lppa_ECGI_iE_Extensions (OSCTXT* pctxt, lppa_ECGI_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_ECGI_iE_Extensions (OSCTXT* pctxt, lppa_ECGI_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_ECGI_iE_Extensions 
   (const char* name, const lppa_ECGI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_ECGI_iE_Extensions (const char* name, 
   lppa_ECGI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ECGI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_ECGI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_ECGI_iE_Extensions_element* asn1Get_lppa_ECGI_iE_Extensions 
   (lppa_ProtocolIE_ID id, lppa_ECGI_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_ECGI_iE_Extensions (OSCTXT* pctxt, 
   const lppa_ECGI_iE_Extensions* pSrcValue, lppa_ECGI_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_lppa_ECGI_iE_Extensions (lppa_ECGI_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_ECGI_iE_Extensions (OSCTXT *pctxt, 
   lppa_ECGI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ECGI                                                      */
/*                                                            */
/**************************************************************/
/*
ECGI ::= SEQUENCE {
   pLMN-Identity [0] PLMN-Identity,
   eUTRANcellIdentifier [1] EUTRANCellIdentifier,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({ECGI-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({ECGI-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({ECGI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_ECGI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_PLMN_Identity pLMN_Identity;
   lppa_EUTRANCellIdentifier eUTRANcellIdentifier;
   lppa_ECGI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_ECGI;

EXTERN int asn1PE_lppa_ECGI (OSCTXT* pctxt, lppa_ECGI* pvalue);

EXTERN int asn1PD_lppa_ECGI (OSCTXT* pctxt, lppa_ECGI* pvalue);

EXTERN void asn1Print_lppa_ECGI (const char* name, const lppa_ECGI* pvalue);

EXTERN int asn1PrtToStr_lppa_ECGI (const char* name, lppa_ECGI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ECGI (OSCTXT *pctxt, 
   const char* name, const lppa_ECGI* pvalue);

EXTERN void asn1Copy_lppa_ECGI (OSCTXT* pctxt, const lppa_ECGI* pSrcValue, lppa_ECGI*
    pDstValue);

EXTERN int asn1Init_lppa_ECGI (lppa_ECGI* pvalue);

EXTERN void asn1Free_lppa_ECGI (OSCTXT *pctxt, lppa_ECGI* pvalue);

/**************************************************************/
/*                                                            */
/*  TAC                                                       */
/*                                                            */
/**************************************************************/
/*
 T

TAC ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN lppa_TAC {
   OSUINT32 numocts;
   OSOCTET data[2];
} lppa_TAC;

EXTERN int asn1PE_lppa_TAC (OSCTXT* pctxt, lppa_TAC* pvalue);

EXTERN int asn1PD_lppa_TAC (OSCTXT* pctxt, lppa_TAC* pvalue);

EXTERN void asn1Print_lppa_TAC (const char* name, const lppa_TAC* pvalue);

EXTERN int asn1PrtToStr_lppa_TAC (const char* name, lppa_TAC* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_TAC (OSCTXT *pctxt, 
   const char* name, const lppa_TAC* pvalue);

EXTERN void asn1Copy_lppa_TAC (OSCTXT* pctxt, const lppa_TAC* pSrcValue, lppa_TAC*
    pDstValue);

EXTERN int asn1Init_lppa_TAC (lppa_TAC* pvalue);

/**************************************************************/
/*                                                            */
/*  E_UTRANAccessPointPosition_latitudeSign                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-UTRANAccessPointPosition'
*/
typedef enum {
   lppa_north = 0,
   lppa_south = 1
} lppa_E_UTRANAccessPointPosition_latitudeSign_Root;

typedef OSUINT32 lppa_E_UTRANAccessPointPosition_latitudeSign;

EXTERN int asn1PE_lppa_E_UTRANAccessPointPosition_latitudeSign (OSCTXT* pctxt, lppa_E_UTRANAccessPointPosition_latitudeSign value);

EXTERN int asn1PD_lppa_E_UTRANAccessPointPosition_latitudeSign (OSCTXT* pctxt, lppa_E_UTRANAccessPointPosition_latitudeSign* pvalue);

EXTERN void asn1Print_lppa_E_UTRANAccessPointPosition_latitudeSign 
   (const char* name, const lppa_E_UTRANAccessPointPosition_latitudeSign* pvalue);

EXTERN int asn1PrtToStr_lppa_E_UTRANAccessPointPosition_latitudeSign (
   const char* name, lppa_E_UTRANAccessPointPosition_latitudeSign* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_UTRANAccessPointPosition_latitudeSign (OSCTXT *pctxt, 
   const char* name, const lppa_E_UTRANAccessPointPosition_latitudeSign* pvalue);

EXTERN const OSUTF8CHAR* lppa_E_UTRANAccessPointPosition_latitudeSign_ToString (OSINT32 value);

EXTERN int lppa_E_UTRANAccessPointPosition_latitudeSign_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_E_UTRANAccessPointPosition_latitudeSign* pvalue);

EXTERN 
   int lppa_E_UTRANAccessPointPosition_latitudeSign_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_E_UTRANAccessPointPosition_latitudeSign* pvalue);

EXTERN void asn1Copy_lppa_E_UTRANAccessPointPosition_latitudeSign (OSCTXT* pctxt, 
   const lppa_E_UTRANAccessPointPosition_latitudeSign* pSrcValue, 
   lppa_E_UTRANAccessPointPosition_latitudeSign* pDstValue);

/**************************************************************/
/*                                                            */
/*  E_UTRANAccessPointPosition_directionOfAltitude            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-UTRANAccessPointPosition'
*/
typedef enum {
   lppa_height = 0,
   lppa_depth = 1
} lppa_E_UTRANAccessPointPosition_directionOfAltitude_Root;

typedef OSUINT32 lppa_E_UTRANAccessPointPosition_directionOfAltitude;

EXTERN int asn1PE_lppa_E_UTRANAccessPointPosition_directionOfAltitude (OSCTXT* pctxt, lppa_E_UTRANAccessPointPosition_directionOfAltitude value);

EXTERN int asn1PD_lppa_E_UTRANAccessPointPosition_directionOfAltitude (OSCTXT* pctxt, lppa_E_UTRANAccessPointPosition_directionOfAltitude* pvalue);

EXTERN void asn1Print_lppa_E_UTRANAccessPointPosition_directionOfAltitude 
   (const char* name, const lppa_E_UTRANAccessPointPosition_directionOfAltitude* pvalue);

EXTERN int asn1PrtToStr_lppa_E_UTRANAccessPointPosition_directionOfAltitude (
   const char* name, 
   lppa_E_UTRANAccessPointPosition_directionOfAltitude* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_UTRANAccessPointPosition_directionOfAltitude (OSCTXT *pctxt, 
   const char* name, const lppa_E_UTRANAccessPointPosition_directionOfAltitude* pvalue);

EXTERN const OSUTF8CHAR* lppa_E_UTRANAccessPointPosition_directionOfAltitude_ToString (OSINT32 value);

EXTERN 
   int lppa_E_UTRANAccessPointPosition_directionOfAltitude_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_E_UTRANAccessPointPosition_directionOfAltitude* pvalue);

EXTERN 
   int lppa_E_UTRANAccessPointPosition_directionOfAltitude_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_E_UTRANAccessPointPosition_directionOfAltitude* pvalue);

EXTERN void asn1Copy_lppa_E_UTRANAccessPointPosition_directionOfAltitude (OSCTXT* pctxt, 
   const lppa_E_UTRANAccessPointPosition_directionOfAltitude* pSrcValue, 
   lppa_E_UTRANAccessPointPosition_directionOfAltitude* pDstValue);

/**************************************************************/
/*                                                            */
/*  E_UTRANAccessPointPosition                                */
/*                                                            */
/**************************************************************/
/*
E-UTRANAccessPointPosition ::= SEQUENCE {
   latitudeSign [0] ENUMERATED { north(0), south(1) },
   latitude [1] INTEGER (0..8388607),
   longitude [2] INTEGER (-8388608..8388607),
   directionOfAltitude [3] ENUMERATED { height(0), depth(1) },
   altitude [4] INTEGER (0..32767),
   uncertaintySemi-major [5] INTEGER (0..127),
   uncertaintySemi-minor [6] INTEGER (0..127),
   orientationOfMajorAxis [7] INTEGER (0..179),
   uncertaintyAltitude [8] INTEGER (0..127),
   confidence [9] INTEGER (0..100),
   ...
}
*/
typedef struct EXTERN lppa_E_UTRANAccessPointPosition {
   lppa_E_UTRANAccessPointPosition_latitudeSign latitudeSign;
   OSUINT32 latitude;
   OSINT32 longitude;
   lppa_E_UTRANAccessPointPosition_directionOfAltitude directionOfAltitude;
   OSUINT16 altitude;
   OSUINT8 uncertaintySemi_major;
   OSUINT8 uncertaintySemi_minor;
   OSUINT8 orientationOfMajorAxis;
   OSUINT8 uncertaintyAltitude;
   OSUINT8 confidence;
   OSRTDList extElem1;
} lppa_E_UTRANAccessPointPosition;

EXTERN int asn1PE_lppa_E_UTRANAccessPointPosition (OSCTXT* pctxt, lppa_E_UTRANAccessPointPosition* pvalue);

EXTERN int asn1PD_lppa_E_UTRANAccessPointPosition (OSCTXT* pctxt, lppa_E_UTRANAccessPointPosition* pvalue);

EXTERN void asn1Print_lppa_E_UTRANAccessPointPosition 
   (const char* name, const lppa_E_UTRANAccessPointPosition* pvalue);

EXTERN int asn1PrtToStr_lppa_E_UTRANAccessPointPosition (const char* name, 
   lppa_E_UTRANAccessPointPosition* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_UTRANAccessPointPosition (OSCTXT *pctxt, 
   const char* name, const lppa_E_UTRANAccessPointPosition* pvalue);

EXTERN void asn1Copy_lppa_E_UTRANAccessPointPosition (OSCTXT* pctxt, 
   const lppa_E_UTRANAccessPointPosition* pSrcValue, 
   lppa_E_UTRANAccessPointPosition* pDstValue);

EXTERN int asn1Init_lppa_E_UTRANAccessPointPosition (
   lppa_E_UTRANAccessPointPosition* pvalue);

EXTERN void asn1Free_lppa_E_UTRANAccessPointPosition (OSCTXT *pctxt, 
   lppa_E_UTRANAccessPointPosition* pvalue);

/**************************************************************/
/*                                                            */
/*  PCI                                                       */
/*                                                            */
/**************************************************************/
/*
 P

PCI ::= INTEGER (0..503, ...)
*/
typedef OSUINT32 lppa_PCI;

EXTERN int asn1PE_lppa_PCI (OSCTXT* pctxt, lppa_PCI value);

EXTERN int asn1PD_lppa_PCI (OSCTXT* pctxt, lppa_PCI* pvalue);

EXTERN void asn1Print_lppa_PCI (const char* name, const lppa_PCI* pvalue);

EXTERN int asn1PrtToStr_lppa_PCI (const char* name, lppa_PCI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PCI (OSCTXT *pctxt, 
   const char* name, const lppa_PCI* pvalue);

EXTERN void asn1Copy_lppa_PCI (OSCTXT* pctxt, const lppa_PCI* pSrcValue, lppa_PCI*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  EARFCN                                                    */
/*                                                            */
/**************************************************************/
/*
EARFCN ::= INTEGER (0..65535, ..., 65536..262143)
*/
typedef OSUINT32 lppa_EARFCN;

EXTERN int asn1PE_lppa_EARFCN (OSCTXT* pctxt, lppa_EARFCN value);

EXTERN int asn1PD_lppa_EARFCN (OSCTXT* pctxt, lppa_EARFCN* pvalue);

EXTERN void asn1Print_lppa_EARFCN (const char* name, const lppa_EARFCN* pvalue);

EXTERN int asn1PrtToStr_lppa_EARFCN (const char* name, lppa_EARFCN* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_EARFCN (OSCTXT *pctxt, 
   const char* name, const lppa_EARFCN* pvalue);

EXTERN void asn1Copy_lppa_EARFCN (OSCTXT* pctxt, const lppa_EARFCN* pSrcValue, 
   lppa_EARFCN* pDstValue);

/**************************************************************/
/*                                                            */
/*  ValueRSRP                                                 */
/*                                                            */
/**************************************************************/
/*
 V

ValueRSRP ::= INTEGER (0..97, ...)
*/
typedef OSUINT32 lppa_ValueRSRP;

EXTERN int asn1PE_lppa_ValueRSRP (OSCTXT* pctxt, lppa_ValueRSRP value);

EXTERN int asn1PD_lppa_ValueRSRP (OSCTXT* pctxt, lppa_ValueRSRP* pvalue);

EXTERN void asn1Print_lppa_ValueRSRP (const char* name, const lppa_ValueRSRP* pvalue);

EXTERN int asn1PrtToStr_lppa_ValueRSRP (const char* name, lppa_ValueRSRP* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ValueRSRP (OSCTXT *pctxt, 
   const char* name, const lppa_ValueRSRP* pvalue);

EXTERN void asn1Copy_lppa_ValueRSRP (OSCTXT* pctxt, const lppa_ValueRSRP* pSrcValue, 
   lppa_ValueRSRP* pDstValue);

/**************************************************************/
/*                                                            */
/*  ResultRSRP_Item_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultRSRP-Item'
*/
typedef struct EXTERN lppa_ResultRSRP_Item_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_ResultRSRP_Item_iE_Extensions_element;

EXTERN int asn1PE_lppa_ResultRSRP_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultRSRP_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_ResultRSRP_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultRSRP_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_ResultRSRP_Item_iE_Extensions_element 
   (const char* name, const lppa_ResultRSRP_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRP_Item_iE_Extensions_element (const char* name, 
   lppa_ResultRSRP_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRP_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRP_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_ResultRSRP_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_ResultRSRP_Item_iE_Extensions_element* pSrcValue, 
   lppa_ResultRSRP_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRP_Item_iE_Extensions_element (
   lppa_ResultRSRP_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_ResultRSRP_Item_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_ResultRSRP_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultRSRP_Item_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultRSRP-Item'
*/
/* List of lppa_ResultRSRP_Item_iE_Extensions_element */
typedef OSRTDList lppa_ResultRSRP_Item_iE_Extensions;

EXTERN int asn1PE_lppa_ResultRSRP_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultRSRP_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_ResultRSRP_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultRSRP_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_ResultRSRP_Item_iE_Extensions 
   (const char* name, const lppa_ResultRSRP_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRP_Item_iE_Extensions (const char* name, 
   lppa_ResultRSRP_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRP_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRP_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_ResultRSRP_Item_iE_Extensions_element* 
   asn1Get_lppa_ResultRSRP_Item_iE_Extensions (lppa_ProtocolIE_ID id, 
   lppa_ResultRSRP_Item_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_ResultRSRP_Item_iE_Extensions (OSCTXT* pctxt, 
   const lppa_ResultRSRP_Item_iE_Extensions* pSrcValue, 
   lppa_ResultRSRP_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRP_Item_iE_Extensions (
   lppa_ResultRSRP_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_ResultRSRP_Item_iE_Extensions (OSCTXT *pctxt, 
   lppa_ResultRSRP_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultRSRP_Item                                           */
/*                                                            */
/**************************************************************/
/*
ResultRSRP-Item ::= SEQUENCE {
   pCI [0] PCI,
   eARFCN [1] EARFCN,
   eCGI [2] ECGI OPTIONAL,
   valueRSRP [3] ValueRSRP,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({ResultRSRP-Item-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({ResultRSRP-Item-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({ResultRSRP-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_ResultRSRP_Item {
   struct {
      unsigned eCGIPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_PCI pCI;
   lppa_EARFCN eARFCN;
   lppa_ECGI eCGI;
   lppa_ValueRSRP valueRSRP;
   lppa_ResultRSRP_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_ResultRSRP_Item;

EXTERN int asn1PE_lppa_ResultRSRP_Item (OSCTXT* pctxt, lppa_ResultRSRP_Item* pvalue);

EXTERN int asn1PD_lppa_ResultRSRP_Item (OSCTXT* pctxt, lppa_ResultRSRP_Item* pvalue);

EXTERN void asn1Print_lppa_ResultRSRP_Item 
   (const char* name, const lppa_ResultRSRP_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRP_Item (const char* name, 
   lppa_ResultRSRP_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRP_Item (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRP_Item* pvalue);

EXTERN void asn1Copy_lppa_ResultRSRP_Item (OSCTXT* pctxt, 
   const lppa_ResultRSRP_Item* pSrcValue, lppa_ResultRSRP_Item* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRP_Item (lppa_ResultRSRP_Item* pvalue);

EXTERN void asn1Free_lppa_ResultRSRP_Item (OSCTXT *pctxt, 
   lppa_ResultRSRP_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultRSRP                                                */
/*                                                            */
/**************************************************************/
/*
ResultRSRP ::= SEQUENCE (SIZE (1..maxCellReport)) OF ResultRSRP-Item
*/
/* List of lppa_ResultRSRP_Item */
typedef OSRTDList lppa_ResultRSRP;

EXTERN int asn1PE_lppa_ResultRSRP (OSCTXT* pctxt, lppa_ResultRSRP* pvalue);

EXTERN int asn1PD_lppa_ResultRSRP (OSCTXT* pctxt, lppa_ResultRSRP* pvalue);

EXTERN void asn1Print_lppa_ResultRSRP 
   (const char* name, const lppa_ResultRSRP* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRP (const char* name, lppa_ResultRSRP* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRP (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRP* pvalue);

EXTERN void asn1Copy_lppa_ResultRSRP (OSCTXT* pctxt, 
   const lppa_ResultRSRP* pSrcValue, lppa_ResultRSRP* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRP (lppa_ResultRSRP* pvalue);

EXTERN void asn1Free_lppa_ResultRSRP (OSCTXT *pctxt, lppa_ResultRSRP* pvalue);

/**************************************************************/
/*                                                            */
/*  ValueRSRQ                                                 */
/*                                                            */
/**************************************************************/
/*
ValueRSRQ ::= INTEGER (0..34, ...)
*/
typedef OSUINT32 lppa_ValueRSRQ;

EXTERN int asn1PE_lppa_ValueRSRQ (OSCTXT* pctxt, lppa_ValueRSRQ value);

EXTERN int asn1PD_lppa_ValueRSRQ (OSCTXT* pctxt, lppa_ValueRSRQ* pvalue);

EXTERN void asn1Print_lppa_ValueRSRQ (const char* name, const lppa_ValueRSRQ* pvalue);

EXTERN int asn1PrtToStr_lppa_ValueRSRQ (const char* name, lppa_ValueRSRQ* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ValueRSRQ (OSCTXT *pctxt, 
   const char* name, const lppa_ValueRSRQ* pvalue);

EXTERN void asn1Copy_lppa_ValueRSRQ (OSCTXT* pctxt, const lppa_ValueRSRQ* pSrcValue, 
   lppa_ValueRSRQ* pDstValue);

/**************************************************************/
/*                                                            */
/*  ResultRSRQ_Item_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultRSRQ-Item'
*/
typedef struct EXTERN lppa_ResultRSRQ_Item_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_ResultRSRQ_Item_iE_Extensions_element;

EXTERN int asn1PE_lppa_ResultRSRQ_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultRSRQ_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_ResultRSRQ_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultRSRQ_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_ResultRSRQ_Item_iE_Extensions_element 
   (const char* name, const lppa_ResultRSRQ_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRQ_Item_iE_Extensions_element (const char* name, 
   lppa_ResultRSRQ_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRQ_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRQ_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_ResultRSRQ_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_ResultRSRQ_Item_iE_Extensions_element* pSrcValue, 
   lppa_ResultRSRQ_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRQ_Item_iE_Extensions_element (
   lppa_ResultRSRQ_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_ResultRSRQ_Item_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_ResultRSRQ_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultRSRQ_Item_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultRSRQ-Item'
*/
/* List of lppa_ResultRSRQ_Item_iE_Extensions_element */
typedef OSRTDList lppa_ResultRSRQ_Item_iE_Extensions;

EXTERN int asn1PE_lppa_ResultRSRQ_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultRSRQ_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_ResultRSRQ_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultRSRQ_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_ResultRSRQ_Item_iE_Extensions 
   (const char* name, const lppa_ResultRSRQ_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRQ_Item_iE_Extensions (const char* name, 
   lppa_ResultRSRQ_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRQ_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRQ_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_ResultRSRQ_Item_iE_Extensions_element* 
   asn1Get_lppa_ResultRSRQ_Item_iE_Extensions (lppa_ProtocolIE_ID id, 
   lppa_ResultRSRQ_Item_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_ResultRSRQ_Item_iE_Extensions (OSCTXT* pctxt, 
   const lppa_ResultRSRQ_Item_iE_Extensions* pSrcValue, 
   lppa_ResultRSRQ_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRQ_Item_iE_Extensions (
   lppa_ResultRSRQ_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_ResultRSRQ_Item_iE_Extensions (OSCTXT *pctxt, 
   lppa_ResultRSRQ_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultRSRQ_Item                                           */
/*                                                            */
/**************************************************************/
/*
ResultRSRQ-Item ::= SEQUENCE {
   pCI [0] PCI,
   eARFCN [1] EARFCN,
   eCGI [2] ECGI OPTIONAL,
   valueRSRQ [3] ValueRSRQ,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({ResultRSRQ-Item-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({ResultRSRQ-Item-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({ResultRSRQ-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_ResultRSRQ_Item {
   struct {
      unsigned eCGIPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_PCI pCI;
   lppa_EARFCN eARFCN;
   lppa_ECGI eCGI;
   lppa_ValueRSRQ valueRSRQ;
   lppa_ResultRSRQ_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_ResultRSRQ_Item;

EXTERN int asn1PE_lppa_ResultRSRQ_Item (OSCTXT* pctxt, lppa_ResultRSRQ_Item* pvalue);

EXTERN int asn1PD_lppa_ResultRSRQ_Item (OSCTXT* pctxt, lppa_ResultRSRQ_Item* pvalue);

EXTERN void asn1Print_lppa_ResultRSRQ_Item 
   (const char* name, const lppa_ResultRSRQ_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRQ_Item (const char* name, 
   lppa_ResultRSRQ_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRQ_Item (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRQ_Item* pvalue);

EXTERN void asn1Copy_lppa_ResultRSRQ_Item (OSCTXT* pctxt, 
   const lppa_ResultRSRQ_Item* pSrcValue, lppa_ResultRSRQ_Item* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRQ_Item (lppa_ResultRSRQ_Item* pvalue);

EXTERN void asn1Free_lppa_ResultRSRQ_Item (OSCTXT *pctxt, 
   lppa_ResultRSRQ_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultRSRQ                                                */
/*                                                            */
/**************************************************************/
/*
ResultRSRQ ::= SEQUENCE (SIZE (1..maxCellReport)) OF ResultRSRQ-Item
*/
/* List of lppa_ResultRSRQ_Item */
typedef OSRTDList lppa_ResultRSRQ;

EXTERN int asn1PE_lppa_ResultRSRQ (OSCTXT* pctxt, lppa_ResultRSRQ* pvalue);

EXTERN int asn1PD_lppa_ResultRSRQ (OSCTXT* pctxt, lppa_ResultRSRQ* pvalue);

EXTERN void asn1Print_lppa_ResultRSRQ 
   (const char* name, const lppa_ResultRSRQ* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultRSRQ (const char* name, lppa_ResultRSRQ* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultRSRQ (OSCTXT *pctxt, 
   const char* name, const lppa_ResultRSRQ* pvalue);

EXTERN void asn1Copy_lppa_ResultRSRQ (OSCTXT* pctxt, 
   const lppa_ResultRSRQ* pSrcValue, lppa_ResultRSRQ* pDstValue);

EXTERN int asn1Init_lppa_ResultRSRQ (lppa_ResultRSRQ* pvalue);

EXTERN void asn1Free_lppa_ResultRSRQ (OSCTXT *pctxt, lppa_ResultRSRQ* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasuredResultsValue                                      */
/*                                                            */
/**************************************************************/
/*
MeasuredResultsValue ::= CHOICE {
   valueAngleOfArrival [0] INTEGER (0..719),
   valueTimingAdvanceType1 [1] INTEGER (0..7690),
   valueTimingAdvanceType2 [2] INTEGER (0..7690),
   resultRSRP [3] ResultRSRP,
   resultRSRQ [4] ResultRSRQ,
   ...
}
*/
/* Choice tag constants */

#define T_lppa_MeasuredResultsValue_valueAngleOfArrival 1
#define T_lppa_MeasuredResultsValue_valueTimingAdvanceType1 2
#define T_lppa_MeasuredResultsValue_valueTimingAdvanceType2 3
#define T_lppa_MeasuredResultsValue_resultRSRP 4
#define T_lppa_MeasuredResultsValue_resultRSRQ 5
#define T_lppa_MeasuredResultsValue_extElem1 6

typedef struct EXTERN lppa_MeasuredResultsValue {
   OSINT32 t;
   union {
      /* t = 1 */
      OSUINT16 valueAngleOfArrival;
      /* t = 2 */
      OSUINT16 valueTimingAdvanceType1;
      /* t = 3 */
      OSUINT16 valueTimingAdvanceType2;
      /* t = 4 */
      lppa_ResultRSRP *resultRSRP;
      /* t = 5 */
      lppa_ResultRSRQ *resultRSRQ;
      /* t = 6 */
      ASN1OpenType *extElem1;
   } u;
} lppa_MeasuredResultsValue;

EXTERN int asn1PE_lppa_MeasuredResultsValue (OSCTXT* pctxt, lppa_MeasuredResultsValue* pvalue);

EXTERN int asn1PD_lppa_MeasuredResultsValue (OSCTXT* pctxt, lppa_MeasuredResultsValue* pvalue);

EXTERN void asn1Print_lppa_MeasuredResultsValue 
   (const char* name, const lppa_MeasuredResultsValue* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasuredResultsValue (const char* name, 
   lppa_MeasuredResultsValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasuredResultsValue (OSCTXT *pctxt, 
   const char* name, const lppa_MeasuredResultsValue* pvalue);

EXTERN void asn1Copy_lppa_MeasuredResultsValue (OSCTXT* pctxt, 
   const lppa_MeasuredResultsValue* pSrcValue, lppa_MeasuredResultsValue*
    pDstValue);

EXTERN int asn1Init_lppa_MeasuredResultsValue (lppa_MeasuredResultsValue* pvalue);

EXTERN void asn1Free_lppa_MeasuredResultsValue (OSCTXT *pctxt, 
   lppa_MeasuredResultsValue* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasuredResults                                           */
/*                                                            */
/**************************************************************/
/*
MeasuredResults ::= SEQUENCE (SIZE (1..maxNoMeas)) OF MeasuredResultsValue
*/
/* List of lppa_MeasuredResultsValue */
typedef OSRTDList lppa_MeasuredResults;

EXTERN int asn1PE_lppa_MeasuredResults (OSCTXT* pctxt, lppa_MeasuredResults* pvalue);

EXTERN int asn1PD_lppa_MeasuredResults (OSCTXT* pctxt, lppa_MeasuredResults* pvalue);

EXTERN void asn1Print_lppa_MeasuredResults 
   (const char* name, const lppa_MeasuredResults* pvalue);

EXTERN int asn1PrtToStr_lppa_MeasuredResults (const char* name, 
   lppa_MeasuredResults* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_MeasuredResults (OSCTXT *pctxt, 
   const char* name, const lppa_MeasuredResults* pvalue);

EXTERN void asn1Copy_lppa_MeasuredResults (OSCTXT* pctxt, 
   const lppa_MeasuredResults* pSrcValue, lppa_MeasuredResults* pDstValue);

EXTERN int asn1Init_lppa_MeasuredResults (lppa_MeasuredResults* pvalue);

EXTERN void asn1Free_lppa_MeasuredResults (OSCTXT *pctxt, 
   lppa_MeasuredResults* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CID_MeasurementResult                                   */
/*                                                            */
/**************************************************************/
/*
 D
 E

E-CID-MeasurementResult ::= SEQUENCE {
   servingCell-ID [0] ECGI,
   servingCellTAC [1] TAC,
   e-UTRANAccessPointPosition [2] E-UTRANAccessPointPosition OPTIONAL,
   measuredResults [3] MeasuredResults OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_E_CID_MeasurementResult {
   struct {
      unsigned e_UTRANAccessPointPositionPresent : 1;
      unsigned measuredResultsPresent : 1;
   } m;
   lppa_ECGI servingCell_ID;
   lppa_TAC servingCellTAC;
   lppa_E_UTRANAccessPointPosition e_UTRANAccessPointPosition;
   lppa_MeasuredResults measuredResults;
   OSRTDList extElem1;
} lppa_E_CID_MeasurementResult;

EXTERN int asn1PE_lppa_E_CID_MeasurementResult (OSCTXT* pctxt, lppa_E_CID_MeasurementResult* pvalue);

EXTERN int asn1PD_lppa_E_CID_MeasurementResult (OSCTXT* pctxt, lppa_E_CID_MeasurementResult* pvalue);

EXTERN void asn1Print_lppa_E_CID_MeasurementResult 
   (const char* name, const lppa_E_CID_MeasurementResult* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CID_MeasurementResult (const char* name, 
   lppa_E_CID_MeasurementResult* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CID_MeasurementResult (OSCTXT *pctxt, 
   const char* name, const lppa_E_CID_MeasurementResult* pvalue);

EXTERN void asn1Copy_lppa_E_CID_MeasurementResult (OSCTXT* pctxt, 
   const lppa_E_CID_MeasurementResult* pSrcValue, lppa_E_CID_MeasurementResult*
    pDstValue);

EXTERN int asn1Init_lppa_E_CID_MeasurementResult (
   lppa_E_CID_MeasurementResult* pvalue);

EXTERN void asn1Free_lppa_E_CID_MeasurementResult (OSCTXT *pctxt, 
   lppa_E_CID_MeasurementResult* pvalue);

/**************************************************************/
/*                                                            */
/*  Cell_Portion_ID                                           */
/*                                                            */
/**************************************************************/
/*
Cell-Portion-ID ::= INTEGER (0..255, ...)
*/
typedef OSUINT32 lppa_Cell_Portion_ID;

EXTERN int asn1PE_lppa_Cell_Portion_ID (OSCTXT* pctxt, lppa_Cell_Portion_ID value);

EXTERN int asn1PD_lppa_Cell_Portion_ID (OSCTXT* pctxt, lppa_Cell_Portion_ID* pvalue);

EXTERN void asn1Print_lppa_Cell_Portion_ID 
   (const char* name, const lppa_Cell_Portion_ID* pvalue);

EXTERN int asn1PrtToStr_lppa_Cell_Portion_ID (const char* name, 
   lppa_Cell_Portion_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_Cell_Portion_ID (OSCTXT *pctxt, 
   const char* name, const lppa_Cell_Portion_ID* pvalue);

EXTERN void asn1Copy_lppa_Cell_Portion_ID (OSCTXT* pctxt, 
   const lppa_Cell_Portion_ID* pSrcValue, lppa_Cell_Portion_ID* pDstValue);

/**************************************************************/
/*                                                            */
/*  TypeOfError                                               */
/*                                                            */
/**************************************************************/
/*
TypeOfError ::= ENUMERATED { not-understood(0), missing(1), ... }
*/
typedef enum {
   lppa_not_understood = 0,
   lppa_missing = 1
} lppa_TypeOfError_Root;

typedef OSUINT32 lppa_TypeOfError;

EXTERN int asn1PE_lppa_TypeOfError (OSCTXT* pctxt, lppa_TypeOfError value);

EXTERN int asn1PD_lppa_TypeOfError (OSCTXT* pctxt, lppa_TypeOfError* pvalue);

EXTERN void asn1Print_lppa_TypeOfError 
   (const char* name, const lppa_TypeOfError* pvalue);

EXTERN int asn1PrtToStr_lppa_TypeOfError (const char* name, lppa_TypeOfError* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_TypeOfError (OSCTXT *pctxt, 
   const char* name, const lppa_TypeOfError* pvalue);

EXTERN const OSUTF8CHAR* lppa_TypeOfError_ToString (OSINT32 value);

EXTERN int lppa_TypeOfError_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_TypeOfError* pvalue);

EXTERN int lppa_TypeOfError_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_TypeOfError* pvalue);

EXTERN void asn1Copy_lppa_TypeOfError (OSCTXT* pctxt, 
   const lppa_TypeOfError* pSrcValue, lppa_TypeOfError* pDstValue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List_element_iE_Extensions_ele  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics-IE-List'
*/
typedef struct EXTERN lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element;

EXTERN int asn1PE_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element 
   (const char* name, const lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (
   const char* name, 
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pSrcValue, 
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element*
    pDstValue);

EXTERN int asn1Init_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List_element_iE_Extensions      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics-IE-List'
*/
/* List of lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element */
typedef OSRTDList lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions;

EXTERN int asn1PE_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions 
   (const char* name, const lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions (
   const char* name, 
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions_element* 
   asn1Get_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions 
   (lppa_ProtocolIE_ID id, 
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions (OSCTXT* pctxt, 
   const lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pSrcValue, 
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions (
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions (OSCTXT *pctxt, 
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics-IE-List'
*/
typedef struct EXTERN lppa_CriticalityDiagnostics_IE_List_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_Criticality iECriticality;
   lppa_ProtocolIE_ID iE_ID;
   lppa_TypeOfError typeOfError;
   lppa_CriticalityDiagnostics_IE_List_element_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_CriticalityDiagnostics_IE_List_element;

EXTERN int asn1PE_lppa_CriticalityDiagnostics_IE_List_element (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN int asn1PD_lppa_CriticalityDiagnostics_IE_List_element (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN void asn1Print_lppa_CriticalityDiagnostics_IE_List_element 
   (const char* name, const lppa_CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN int asn1PrtToStr_lppa_CriticalityDiagnostics_IE_List_element (
   const char* name, lppa_CriticalityDiagnostics_IE_List_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CriticalityDiagnostics_IE_List_element (OSCTXT *pctxt, 
   const char* name, const lppa_CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN void asn1Copy_lppa_CriticalityDiagnostics_IE_List_element (OSCTXT* pctxt, 
   const lppa_CriticalityDiagnostics_IE_List_element* pSrcValue, 
   lppa_CriticalityDiagnostics_IE_List_element* pDstValue);

EXTERN int asn1Init_lppa_CriticalityDiagnostics_IE_List_element (
   lppa_CriticalityDiagnostics_IE_List_element* pvalue);

EXTERN void asn1Free_lppa_CriticalityDiagnostics_IE_List_element (OSCTXT *pctxt, 
   lppa_CriticalityDiagnostics_IE_List_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List                            */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics-IE-List ::= SEQUENCE (SIZE (1..maxNrOfErrors)) OF SEQUENCE {
   iECriticality [0] Criticality,
   iE-ID [1] ProtocolIE-ID,
   typeOfError [2] TypeOfError,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({CriticalityDiagnostics-IE-List-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({CriticalityDiagnostics-IE-List-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({CriticalityDiagnostics-IE-List-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
/* List of lppa_CriticalityDiagnostics_IE_List_element */
typedef OSRTDList lppa_CriticalityDiagnostics_IE_List;

EXTERN int asn1PE_lppa_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PD_lppa_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, lppa_CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Print_lppa_CriticalityDiagnostics_IE_List 
   (const char* name, const lppa_CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PrtToStr_lppa_CriticalityDiagnostics_IE_List (const char* name, 
   lppa_CriticalityDiagnostics_IE_List* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CriticalityDiagnostics_IE_List (OSCTXT *pctxt, 
   const char* name, const lppa_CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Copy_lppa_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, 
   const lppa_CriticalityDiagnostics_IE_List* pSrcValue, 
   lppa_CriticalityDiagnostics_IE_List* pDstValue);

EXTERN int asn1Init_lppa_CriticalityDiagnostics_IE_List (
   lppa_CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Free_lppa_CriticalityDiagnostics_IE_List (OSCTXT *pctxt, 
   lppa_CriticalityDiagnostics_IE_List* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics'
*/
typedef struct EXTERN lppa_CriticalityDiagnostics_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_CriticalityDiagnostics_iE_Extensions_element;

EXTERN int asn1PE_lppa_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, lppa_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, lppa_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_CriticalityDiagnostics_iE_Extensions_element 
   (const char* name, const lppa_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_CriticalityDiagnostics_iE_Extensions_element (
   const char* name, 
   lppa_CriticalityDiagnostics_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CriticalityDiagnostics_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_CriticalityDiagnostics_iE_Extensions_element* pSrcValue, 
   lppa_CriticalityDiagnostics_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_CriticalityDiagnostics_iE_Extensions_element (
   lppa_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_CriticalityDiagnostics_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_CriticalityDiagnostics_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics'
*/
/* List of lppa_CriticalityDiagnostics_iE_Extensions_element */
typedef OSRTDList lppa_CriticalityDiagnostics_iE_Extensions;

EXTERN int asn1PE_lppa_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, lppa_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, lppa_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_CriticalityDiagnostics_iE_Extensions 
   (const char* name, const lppa_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_CriticalityDiagnostics_iE_Extensions (const char* name, 
   lppa_CriticalityDiagnostics_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CriticalityDiagnostics_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_CriticalityDiagnostics_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_CriticalityDiagnostics_iE_Extensions_element* 
   asn1Get_lppa_CriticalityDiagnostics_iE_Extensions (lppa_ProtocolIE_ID id, 
   lppa_CriticalityDiagnostics_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, 
   const lppa_CriticalityDiagnostics_iE_Extensions* pSrcValue, 
   lppa_CriticalityDiagnostics_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_CriticalityDiagnostics_iE_Extensions (
   lppa_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_CriticalityDiagnostics_iE_Extensions (OSCTXT *pctxt, 
   lppa_CriticalityDiagnostics_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics                                    */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics ::= SEQUENCE {
   procedureCode [0] ProcedureCode OPTIONAL,
   triggeringMessage [1] TriggeringMessage OPTIONAL,
   procedureCriticality [2] Criticality OPTIONAL,
   lppatransactionID [3] LPPATransactionID OPTIONAL,
   iEsCriticalityDiagnostics [4] CriticalityDiagnostics-IE-List OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({CriticalityDiagnostics-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({CriticalityDiagnostics-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({CriticalityDiagnostics-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_CriticalityDiagnostics {
   struct {
      unsigned procedureCodePresent : 1;
      unsigned triggeringMessagePresent : 1;
      unsigned procedureCriticalityPresent : 1;
      unsigned lppatransactionIDPresent : 1;
      unsigned iEsCriticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_ProcedureCode procedureCode;
   lppa_TriggeringMessage triggeringMessage;
   lppa_Criticality procedureCriticality;
   lppa_LPPATransactionID lppatransactionID;
   lppa_CriticalityDiagnostics_IE_List iEsCriticalityDiagnostics;
   lppa_CriticalityDiagnostics_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_CriticalityDiagnostics;

EXTERN int asn1PE_lppa_CriticalityDiagnostics (OSCTXT* pctxt, lppa_CriticalityDiagnostics* pvalue);

EXTERN int asn1PD_lppa_CriticalityDiagnostics (OSCTXT* pctxt, lppa_CriticalityDiagnostics* pvalue);

EXTERN void asn1Print_lppa_CriticalityDiagnostics 
   (const char* name, const lppa_CriticalityDiagnostics* pvalue);

EXTERN int asn1PrtToStr_lppa_CriticalityDiagnostics (const char* name, 
   lppa_CriticalityDiagnostics* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CriticalityDiagnostics (OSCTXT *pctxt, 
   const char* name, const lppa_CriticalityDiagnostics* pvalue);

EXTERN void asn1Copy_lppa_CriticalityDiagnostics (OSCTXT* pctxt, 
   const lppa_CriticalityDiagnostics* pSrcValue, lppa_CriticalityDiagnostics*
    pDstValue);

EXTERN int asn1Init_lppa_CriticalityDiagnostics (lppa_CriticalityDiagnostics* pvalue);

EXTERN void asn1Free_lppa_CriticalityDiagnostics (OSCTXT *pctxt, 
   lppa_CriticalityDiagnostics* pvalue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell_ul_bandwidth                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SRSConfigurationForOneCell'
*/
typedef enum {
   lppa_n6 = 0,
   lppa_n15 = 1,
   lppa_n25 = 2,
   lppa_n50 = 3,
   lppa_n75 = 4,
   lppa_n100 = 5
} lppa_SRSConfigurationForOneCell_ul_bandwidth_Root;

typedef OSUINT32 lppa_SRSConfigurationForOneCell_ul_bandwidth;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell_ul_bandwidth (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_ul_bandwidth value);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell_ul_bandwidth (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_ul_bandwidth* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell_ul_bandwidth 
   (const char* name, const lppa_SRSConfigurationForOneCell_ul_bandwidth* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell_ul_bandwidth (
   const char* name, lppa_SRSConfigurationForOneCell_ul_bandwidth* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell_ul_bandwidth (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell_ul_bandwidth* pvalue);

EXTERN const OSUTF8CHAR* lppa_SRSConfigurationForOneCell_ul_bandwidth_ToString (OSINT32 value);

EXTERN int lppa_SRSConfigurationForOneCell_ul_bandwidth_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_SRSConfigurationForOneCell_ul_bandwidth* pvalue);

EXTERN 
   int lppa_SRSConfigurationForOneCell_ul_bandwidth_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_SRSConfigurationForOneCell_ul_bandwidth* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell_ul_bandwidth (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell_ul_bandwidth* pSrcValue, 
   lppa_SRSConfigurationForOneCell_ul_bandwidth* pDstValue);

/**************************************************************/
/*                                                            */
/*  CPLength                                                  */
/*                                                            */
/**************************************************************/
/*
CPLength ::= ENUMERATED { normal(0), extended(1), ... }
*/
typedef enum {
   lppa_normal = 0,
   lppa_extended = 1
} lppa_CPLength_Root;

typedef OSUINT32 lppa_CPLength;

EXTERN int asn1PE_lppa_CPLength (OSCTXT* pctxt, lppa_CPLength value);

EXTERN int asn1PD_lppa_CPLength (OSCTXT* pctxt, lppa_CPLength* pvalue);

EXTERN void asn1Print_lppa_CPLength (const char* name, const lppa_CPLength* pvalue);

EXTERN int asn1PrtToStr_lppa_CPLength (const char* name, lppa_CPLength* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_CPLength (OSCTXT *pctxt, 
   const char* name, const lppa_CPLength* pvalue);

EXTERN const OSUTF8CHAR* lppa_CPLength_ToString (OSINT32 value);

EXTERN int lppa_CPLength_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_CPLength* pvalue);

EXTERN int lppa_CPLength_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_CPLength* pvalue);

EXTERN void asn1Copy_lppa_CPLength (OSCTXT* pctxt, const lppa_CPLength* pSrcValue, 
   lppa_CPLength* pDstValue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell_srs_BandwidthConfig            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SRSConfigurationForOneCell'
*/
typedef enum {
   lppa_bw0 = 0,
   lppa_bw1 = 1,
   lppa_bw2 = 2,
   lppa_bw3 = 3,
   lppa_bw4 = 4,
   lppa_bw5 = 5,
   lppa_bw6_1 = 6,
   lppa_bw7 = 7
} lppa_SRSConfigurationForOneCell_srs_BandwidthConfig_Root;

typedef OSUINT32 lppa_SRSConfigurationForOneCell_srs_BandwidthConfig;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell_srs_BandwidthConfig (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_BandwidthConfig value);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell_srs_BandwidthConfig (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell_srs_BandwidthConfig 
   (const char* name, const lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell_srs_BandwidthConfig (
   const char* name, 
   lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell_srs_BandwidthConfig (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pvalue);

EXTERN const OSUTF8CHAR* lppa_SRSConfigurationForOneCell_srs_BandwidthConfig_ToString (OSINT32 value);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_BandwidthConfig_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pvalue);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_BandwidthConfig_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell_srs_BandwidthConfig (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pSrcValue, 
   lppa_SRSConfigurationForOneCell_srs_BandwidthConfig* pDstValue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell_srs_Bandwidth                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SRSConfigurationForOneCell'
*/
typedef enum {
   lppa_bw0_1 = 0,
   lppa_bw1_1 = 1,
   lppa_bw2_1 = 2,
   lppa_bw3_1 = 3
} lppa_SRSConfigurationForOneCell_srs_Bandwidth_Root;

typedef OSUINT32 lppa_SRSConfigurationForOneCell_srs_Bandwidth;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell_srs_Bandwidth (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_Bandwidth value);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell_srs_Bandwidth (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_Bandwidth* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell_srs_Bandwidth 
   (const char* name, const lppa_SRSConfigurationForOneCell_srs_Bandwidth* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell_srs_Bandwidth (
   const char* name, lppa_SRSConfigurationForOneCell_srs_Bandwidth* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell_srs_Bandwidth (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell_srs_Bandwidth* pvalue);

EXTERN const OSUTF8CHAR* lppa_SRSConfigurationForOneCell_srs_Bandwidth_ToString (OSINT32 value);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_Bandwidth_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_SRSConfigurationForOneCell_srs_Bandwidth* pvalue);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_Bandwidth_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_SRSConfigurationForOneCell_srs_Bandwidth* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell_srs_Bandwidth (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell_srs_Bandwidth* pSrcValue, 
   lppa_SRSConfigurationForOneCell_srs_Bandwidth* pDstValue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell_srs_AntennaPort                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SRSConfigurationForOneCell'
*/
typedef enum {
   lppa_an1 = 0,
   lppa_an2 = 1,
   lppa_an4 = 2
} lppa_SRSConfigurationForOneCell_srs_AntennaPort_Root;

typedef OSUINT32 lppa_SRSConfigurationForOneCell_srs_AntennaPort;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell_srs_AntennaPort (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_AntennaPort value);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell_srs_AntennaPort (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_AntennaPort* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell_srs_AntennaPort 
   (const char* name, const lppa_SRSConfigurationForOneCell_srs_AntennaPort* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell_srs_AntennaPort (
   const char* name, lppa_SRSConfigurationForOneCell_srs_AntennaPort* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell_srs_AntennaPort (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell_srs_AntennaPort* pvalue);

EXTERN const OSUTF8CHAR* lppa_SRSConfigurationForOneCell_srs_AntennaPort_ToString (OSINT32 value);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_AntennaPort_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_SRSConfigurationForOneCell_srs_AntennaPort* pvalue);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_AntennaPort_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_SRSConfigurationForOneCell_srs_AntennaPort* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell_srs_AntennaPort (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell_srs_AntennaPort* pSrcValue, 
   lppa_SRSConfigurationForOneCell_srs_AntennaPort* pDstValue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell_srs_HoppingBandwidth           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SRSConfigurationForOneCell'
*/
typedef enum {
   lppa_hbw0 = 0,
   lppa_hbw1 = 1,
   lppa_hbw2 = 2,
   lppa_hbw3 = 3
} lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth_Root;

typedef OSUINT32 lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth value);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth 
   (const char* name, const lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth (
   const char* name, 
   lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pvalue);

EXTERN const OSUTF8CHAR* lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth_ToString (OSINT32 value);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pvalue);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pSrcValue, 
   lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth* pDstValue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell_srs_cyclicShift                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SRSConfigurationForOneCell'
*/
typedef enum {
   lppa_cs0 = 0,
   lppa_cs1 = 1,
   lppa_cs2 = 2,
   lppa_cs3 = 3,
   lppa_cs4 = 4,
   lppa_cs5 = 5,
   lppa_cs6 = 6,
   lppa_cs7 = 7
} lppa_SRSConfigurationForOneCell_srs_cyclicShift_Root;

typedef OSUINT32 lppa_SRSConfigurationForOneCell_srs_cyclicShift;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell_srs_cyclicShift (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_cyclicShift value);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell_srs_cyclicShift (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_srs_cyclicShift* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell_srs_cyclicShift 
   (const char* name, const lppa_SRSConfigurationForOneCell_srs_cyclicShift* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell_srs_cyclicShift (
   const char* name, lppa_SRSConfigurationForOneCell_srs_cyclicShift* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell_srs_cyclicShift (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell_srs_cyclicShift* pvalue);

EXTERN const OSUTF8CHAR* lppa_SRSConfigurationForOneCell_srs_cyclicShift_ToString (OSINT32 value);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_cyclicShift_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      lppa_SRSConfigurationForOneCell_srs_cyclicShift* pvalue);

EXTERN 
   int lppa_SRSConfigurationForOneCell_srs_cyclicShift_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_SRSConfigurationForOneCell_srs_cyclicShift* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell_srs_cyclicShift (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell_srs_cyclicShift* pSrcValue, 
   lppa_SRSConfigurationForOneCell_srs_cyclicShift* pDstValue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell_maxUpPts                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SRSConfigurationForOneCell'
*/
typedef enum {
   lppa_true_ = 0
} lppa_SRSConfigurationForOneCell_maxUpPts_Root;

typedef OSUINT32 lppa_SRSConfigurationForOneCell_maxUpPts;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell_maxUpPts (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_maxUpPts value);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell_maxUpPts (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell_maxUpPts* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell_maxUpPts 
   (const char* name, const lppa_SRSConfigurationForOneCell_maxUpPts* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell_maxUpPts (const char* name, 
   lppa_SRSConfigurationForOneCell_maxUpPts* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell_maxUpPts (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell_maxUpPts* pvalue);

EXTERN const OSUTF8CHAR* lppa_SRSConfigurationForOneCell_maxUpPts_ToString (OSINT32 value);

EXTERN int lppa_SRSConfigurationForOneCell_maxUpPts_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_SRSConfigurationForOneCell_maxUpPts* pvalue);

EXTERN int lppa_SRSConfigurationForOneCell_maxUpPts_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      lppa_SRSConfigurationForOneCell_maxUpPts* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell_maxUpPts (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell_maxUpPts* pSrcValue, 
   lppa_SRSConfigurationForOneCell_maxUpPts* pDstValue);

/**************************************************************/
/*                                                            */
/*  SFNInitialisationTime                                     */
/*                                                            */
/**************************************************************/
/*
 S

SFNInitialisationTime ::= BIT STRING  (SIZE (64))
*/
typedef struct lppa_SFNInitialisationTime {
   OSUINT32 numbits;
   OSOCTET data[8];
} lppa_SFNInitialisationTime;

EXTERN int asn1PE_lppa_SFNInitialisationTime (OSCTXT* pctxt, lppa_SFNInitialisationTime* pvalue);

EXTERN int asn1PD_lppa_SFNInitialisationTime (OSCTXT* pctxt, lppa_SFNInitialisationTime* pvalue);

EXTERN void asn1Print_lppa_SFNInitialisationTime 
   (const char* name, const lppa_SFNInitialisationTime* pvalue);

EXTERN int asn1PrtToStr_lppa_SFNInitialisationTime (const char* name, 
   lppa_SFNInitialisationTime* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SFNInitialisationTime (OSCTXT *pctxt, 
   const char* name, const lppa_SFNInitialisationTime* pvalue);

EXTERN void asn1Copy_lppa_SFNInitialisationTime (OSCTXT* pctxt, 
   const lppa_SFNInitialisationTime* pSrcValue, lppa_SFNInitialisationTime*
    pDstValue);

EXTERN int asn1Init_lppa_SFNInitialisationTime (lppa_SFNInitialisationTime* pvalue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForOneCell                                */
/*                                                            */
/**************************************************************/
/*
SRSConfigurationForOneCell ::= SEQUENCE {
   pci [0] PCI,
   ul-earfcn [1] EARFCN,
   ul-bandwidth [2] ENUMERATED { n6(0), n15(1), n25(2), n50(3), n75(4), n100(5) },
   ul-cyclicPrefixLength [3] CPLength,
   srs-BandwidthConfig [4] ENUMERATED { bw0(0), bw1(1), bw2(2), bw3(3), bw4(4), bw5(5), bw6(6), bw7(7) },
   srs-Bandwidth [5] ENUMERATED { bw0(0), bw1(1), bw2(2), bw3(3) },
   srs-AntennaPort [6] ENUMERATED { an1(0), an2(1), an4(2), ... },
   srs-HoppingBandwidth [7] ENUMERATED { hbw0(0), hbw1(1), hbw2(2), hbw3(3) },
   srs-cyclicShift [8] ENUMERATED { cs0(0), cs1(1), cs2(2), cs3(3), cs4(4), cs5(5), cs6(6), cs7(7) },
   srs-ConfigIndex [9] INTEGER (0..1023),
   maxUpPts [10] ENUMERATED { true(0) } OPTIONAL,
   transmissionComb [11] INTEGER (0..1),
   freqDomainPosition [12] INTEGER (0..23),
   groupHoppingEnabled [13] BOOLEAN,
   deltaSS [14] INTEGER (0..29) OPTIONAL,
   sfnInitialisationTime [15] SFNInitialisationTime,
   ...
}
*/
typedef struct EXTERN lppa_SRSConfigurationForOneCell {
   struct {
      unsigned maxUpPtsPresent : 1;
      unsigned deltaSSPresent : 1;
   } m;
   lppa_PCI pci;
   lppa_EARFCN ul_earfcn;
   lppa_SRSConfigurationForOneCell_ul_bandwidth ul_bandwidth;
   lppa_CPLength ul_cyclicPrefixLength;
   lppa_SRSConfigurationForOneCell_srs_BandwidthConfig srs_BandwidthConfig;
   lppa_SRSConfigurationForOneCell_srs_Bandwidth srs_Bandwidth;
   lppa_SRSConfigurationForOneCell_srs_AntennaPort srs_AntennaPort;
   lppa_SRSConfigurationForOneCell_srs_HoppingBandwidth srs_HoppingBandwidth;
   lppa_SRSConfigurationForOneCell_srs_cyclicShift srs_cyclicShift;
   OSUINT16 srs_ConfigIndex;
   lppa_SRSConfigurationForOneCell_maxUpPts maxUpPts;
   OSUINT8 transmissionComb;
   OSUINT8 freqDomainPosition;
   OSBOOL groupHoppingEnabled;
   OSUINT8 deltaSS;
   lppa_SFNInitialisationTime sfnInitialisationTime;
   OSRTDList extElem1;
} lppa_SRSConfigurationForOneCell;

EXTERN int asn1PE_lppa_SRSConfigurationForOneCell (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell* pvalue);

EXTERN int asn1PD_lppa_SRSConfigurationForOneCell (OSCTXT* pctxt, lppa_SRSConfigurationForOneCell* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForOneCell 
   (const char* name, const lppa_SRSConfigurationForOneCell* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForOneCell (const char* name, 
   lppa_SRSConfigurationForOneCell* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForOneCell (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForOneCell* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForOneCell (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForOneCell* pSrcValue, 
   lppa_SRSConfigurationForOneCell* pDstValue);

EXTERN int asn1Init_lppa_SRSConfigurationForOneCell (
   lppa_SRSConfigurationForOneCell* pvalue);

EXTERN void asn1Free_lppa_SRSConfigurationForOneCell (OSCTXT *pctxt, 
   lppa_SRSConfigurationForOneCell* pvalue);

/**************************************************************/
/*                                                            */
/*  SRSConfigurationForAllCells                               */
/*                                                            */
/**************************************************************/
/*
SRSConfigurationForAllCells ::= SEQUENCE (SIZE (1..maxServCell)) OF SRSConfigurationForOneCell
*/
/* List of lppa_SRSConfigurationForOneCell */
typedef OSRTDList lppa_SRSConfigurationForAllCells;

EXTERN int asn1PE_lppa_SRSConfigurationForAllCells (OSCTXT* pctxt, lppa_SRSConfigurationForAllCells* pvalue);

EXTERN int asn1PD_lppa_SRSConfigurationForAllCells (OSCTXT* pctxt, lppa_SRSConfigurationForAllCells* pvalue);

EXTERN void asn1Print_lppa_SRSConfigurationForAllCells 
   (const char* name, const lppa_SRSConfigurationForAllCells* pvalue);

EXTERN int asn1PrtToStr_lppa_SRSConfigurationForAllCells (const char* name, 
   lppa_SRSConfigurationForAllCells* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SRSConfigurationForAllCells (OSCTXT *pctxt, 
   const char* name, const lppa_SRSConfigurationForAllCells* pvalue);

EXTERN void asn1Copy_lppa_SRSConfigurationForAllCells (OSCTXT* pctxt, 
   const lppa_SRSConfigurationForAllCells* pSrcValue, 
   lppa_SRSConfigurationForAllCells* pDstValue);

EXTERN int asn1Init_lppa_SRSConfigurationForAllCells (
   lppa_SRSConfigurationForAllCells* pvalue);

EXTERN void asn1Free_lppa_SRSConfigurationForAllCells (OSCTXT *pctxt, 
   lppa_SRSConfigurationForAllCells* pvalue);

/**************************************************************/
/*                                                            */
/*  ULConfiguration                                           */
/*                                                            */
/**************************************************************/
/*
 U

ULConfiguration ::= SEQUENCE {
   pci [0] PCI,
   ul-earfcn [1] EARFCN,
   timingAdvanceType1 [2] INTEGER (0..7690) OPTIONAL,
   timingAdvanceType2 [3] INTEGER (0..7690) OPTIONAL,
   numberOfTransmissions [4] INTEGER (0..500, ...),
   srsConfiguration [5] SRSConfigurationForAllCells,
   ...
}
*/
typedef struct EXTERN lppa_ULConfiguration {
   struct {
      unsigned timingAdvanceType1Present : 1;
      unsigned timingAdvanceType2Present : 1;
   } m;
   lppa_PCI pci;
   lppa_EARFCN ul_earfcn;
   OSUINT16 timingAdvanceType1;
   OSUINT16 timingAdvanceType2;
   OSUINT32 numberOfTransmissions;
   lppa_SRSConfigurationForAllCells srsConfiguration;
   OSRTDList extElem1;
} lppa_ULConfiguration;

EXTERN int asn1PE_lppa_ULConfiguration (OSCTXT* pctxt, lppa_ULConfiguration* pvalue);

EXTERN int asn1PD_lppa_ULConfiguration (OSCTXT* pctxt, lppa_ULConfiguration* pvalue);

EXTERN void asn1Print_lppa_ULConfiguration 
   (const char* name, const lppa_ULConfiguration* pvalue);

EXTERN int asn1PrtToStr_lppa_ULConfiguration (const char* name, 
   lppa_ULConfiguration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ULConfiguration (OSCTXT *pctxt, 
   const char* name, const lppa_ULConfiguration* pvalue);

EXTERN void asn1Copy_lppa_ULConfiguration (OSCTXT* pctxt, 
   const lppa_ULConfiguration* pSrcValue, lppa_ULConfiguration* pDstValue);

EXTERN int asn1Init_lppa_ULConfiguration (lppa_ULConfiguration* pvalue);

EXTERN void asn1Free_lppa_ULConfiguration (OSCTXT *pctxt, 
   lppa_ULConfiguration* pvalue);

/**************************************************************/
/*                                                            */
/*  BCCH                                                      */
/*                                                            */
/**************************************************************/
/*
 A
 B

BCCH ::= INTEGER (0..1023, ...)
*/
typedef OSUINT32 lppa_BCCH;

EXTERN int asn1PE_lppa_BCCH (OSCTXT* pctxt, lppa_BCCH value);

EXTERN int asn1PD_lppa_BCCH (OSCTXT* pctxt, lppa_BCCH* pvalue);

EXTERN void asn1Print_lppa_BCCH (const char* name, const lppa_BCCH* pvalue);

EXTERN int asn1PrtToStr_lppa_BCCH (const char* name, lppa_BCCH* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_BCCH (OSCTXT *pctxt, 
   const char* name, const lppa_BCCH* pvalue);

EXTERN void asn1Copy_lppa_BCCH (OSCTXT* pctxt, const lppa_BCCH* pSrcValue, lppa_BCCH*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  PhysCellIDGERAN                                           */
/*                                                            */
/**************************************************************/
/*
PhysCellIDGERAN ::= INTEGER (0..63, ...)
*/
typedef OSUINT32 lppa_PhysCellIDGERAN;

EXTERN int asn1PE_lppa_PhysCellIDGERAN (OSCTXT* pctxt, lppa_PhysCellIDGERAN value);

EXTERN int asn1PD_lppa_PhysCellIDGERAN (OSCTXT* pctxt, lppa_PhysCellIDGERAN* pvalue);

EXTERN void asn1Print_lppa_PhysCellIDGERAN 
   (const char* name, const lppa_PhysCellIDGERAN* pvalue);

EXTERN int asn1PrtToStr_lppa_PhysCellIDGERAN (const char* name, 
   lppa_PhysCellIDGERAN* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PhysCellIDGERAN (OSCTXT *pctxt, 
   const char* name, const lppa_PhysCellIDGERAN* pvalue);

EXTERN void asn1Copy_lppa_PhysCellIDGERAN (OSCTXT* pctxt, 
   const lppa_PhysCellIDGERAN* pSrcValue, lppa_PhysCellIDGERAN* pDstValue);

/**************************************************************/
/*                                                            */
/*  RSSI                                                      */
/*                                                            */
/**************************************************************/
/*
RSSI ::= INTEGER (0..63, ...)
*/
typedef OSUINT32 lppa_RSSI;

EXTERN int asn1PE_lppa_RSSI (OSCTXT* pctxt, lppa_RSSI value);

EXTERN int asn1PD_lppa_RSSI (OSCTXT* pctxt, lppa_RSSI* pvalue);

EXTERN void asn1Print_lppa_RSSI (const char* name, const lppa_RSSI* pvalue);

EXTERN int asn1PrtToStr_lppa_RSSI (const char* name, lppa_RSSI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_RSSI (OSCTXT *pctxt, 
   const char* name, const lppa_RSSI* pvalue);

EXTERN void asn1Copy_lppa_RSSI (OSCTXT* pctxt, const lppa_RSSI* pSrcValue, lppa_RSSI*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  ResultGERAN_Item_iE_Extensions_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultGERAN-Item'
*/
typedef struct EXTERN lppa_ResultGERAN_Item_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_ResultGERAN_Item_iE_Extensions_element;

EXTERN int asn1PE_lppa_ResultGERAN_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultGERAN_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_ResultGERAN_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultGERAN_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_ResultGERAN_Item_iE_Extensions_element 
   (const char* name, const lppa_ResultGERAN_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultGERAN_Item_iE_Extensions_element (
   const char* name, lppa_ResultGERAN_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultGERAN_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_ResultGERAN_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_ResultGERAN_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_ResultGERAN_Item_iE_Extensions_element* pSrcValue, 
   lppa_ResultGERAN_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_ResultGERAN_Item_iE_Extensions_element (
   lppa_ResultGERAN_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_ResultGERAN_Item_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_ResultGERAN_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultGERAN_Item_iE_Extensions                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultGERAN-Item'
*/
/* List of lppa_ResultGERAN_Item_iE_Extensions_element */
typedef OSRTDList lppa_ResultGERAN_Item_iE_Extensions;

EXTERN int asn1PE_lppa_ResultGERAN_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultGERAN_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_ResultGERAN_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultGERAN_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_ResultGERAN_Item_iE_Extensions 
   (const char* name, const lppa_ResultGERAN_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultGERAN_Item_iE_Extensions (const char* name, 
   lppa_ResultGERAN_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultGERAN_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_ResultGERAN_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_ResultGERAN_Item_iE_Extensions_element* 
   asn1Get_lppa_ResultGERAN_Item_iE_Extensions (lppa_ProtocolIE_ID id, 
   lppa_ResultGERAN_Item_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_ResultGERAN_Item_iE_Extensions (OSCTXT* pctxt, 
   const lppa_ResultGERAN_Item_iE_Extensions* pSrcValue, 
   lppa_ResultGERAN_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_ResultGERAN_Item_iE_Extensions (
   lppa_ResultGERAN_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_ResultGERAN_Item_iE_Extensions (OSCTXT *pctxt, 
   lppa_ResultGERAN_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultGERAN_Item                                          */
/*                                                            */
/**************************************************************/
/*
ResultGERAN-Item ::= SEQUENCE {
   bCCH [0] BCCH,
   physCellIDGERAN [1] PhysCellIDGERAN,
   rSSI [2] RSSI,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({ResultGERAN-Item-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({ResultGERAN-Item-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({ResultGERAN-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_ResultGERAN_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_BCCH bCCH;
   lppa_PhysCellIDGERAN physCellIDGERAN;
   lppa_RSSI rSSI;
   lppa_ResultGERAN_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_ResultGERAN_Item;

EXTERN int asn1PE_lppa_ResultGERAN_Item (OSCTXT* pctxt, lppa_ResultGERAN_Item* pvalue);

EXTERN int asn1PD_lppa_ResultGERAN_Item (OSCTXT* pctxt, lppa_ResultGERAN_Item* pvalue);

EXTERN void asn1Print_lppa_ResultGERAN_Item 
   (const char* name, const lppa_ResultGERAN_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultGERAN_Item (const char* name, 
   lppa_ResultGERAN_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultGERAN_Item (OSCTXT *pctxt, 
   const char* name, const lppa_ResultGERAN_Item* pvalue);

EXTERN void asn1Copy_lppa_ResultGERAN_Item (OSCTXT* pctxt, 
   const lppa_ResultGERAN_Item* pSrcValue, lppa_ResultGERAN_Item* pDstValue);

EXTERN int asn1Init_lppa_ResultGERAN_Item (lppa_ResultGERAN_Item* pvalue);

EXTERN void asn1Free_lppa_ResultGERAN_Item (OSCTXT *pctxt, 
   lppa_ResultGERAN_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultGERAN                                               */
/*                                                            */
/**************************************************************/
/*
ResultGERAN ::= SEQUENCE (SIZE (1..maxGERANMeas)) OF ResultGERAN-Item
*/
/* List of lppa_ResultGERAN_Item */
typedef OSRTDList lppa_ResultGERAN;

EXTERN int asn1PE_lppa_ResultGERAN (OSCTXT* pctxt, lppa_ResultGERAN* pvalue);

EXTERN int asn1PD_lppa_ResultGERAN (OSCTXT* pctxt, lppa_ResultGERAN* pvalue);

EXTERN void asn1Print_lppa_ResultGERAN 
   (const char* name, const lppa_ResultGERAN* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultGERAN (const char* name, lppa_ResultGERAN* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultGERAN (OSCTXT *pctxt, 
   const char* name, const lppa_ResultGERAN* pvalue);

EXTERN void asn1Copy_lppa_ResultGERAN (OSCTXT* pctxt, 
   const lppa_ResultGERAN* pSrcValue, lppa_ResultGERAN* pDstValue);

EXTERN int asn1Init_lppa_ResultGERAN (lppa_ResultGERAN* pvalue);

EXTERN void asn1Free_lppa_ResultGERAN (OSCTXT *pctxt, lppa_ResultGERAN* pvalue);

/**************************************************************/
/*                                                            */
/*  UARFCN                                                    */
/*                                                            */
/**************************************************************/
/*
UARFCN ::= INTEGER (0..16383, ...)
*/
typedef OSUINT32 lppa_UARFCN;

EXTERN int asn1PE_lppa_UARFCN (OSCTXT* pctxt, lppa_UARFCN value);

EXTERN int asn1PD_lppa_UARFCN (OSCTXT* pctxt, lppa_UARFCN* pvalue);

EXTERN void asn1Print_lppa_UARFCN (const char* name, const lppa_UARFCN* pvalue);

EXTERN int asn1PrtToStr_lppa_UARFCN (const char* name, lppa_UARFCN* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UARFCN (OSCTXT *pctxt, 
   const char* name, const lppa_UARFCN* pvalue);

EXTERN void asn1Copy_lppa_UARFCN (OSCTXT* pctxt, const lppa_UARFCN* pSrcValue, 
   lppa_UARFCN* pDstValue);

/**************************************************************/
/*                                                            */
/*  PhysCellIDUTRA_FDD                                        */
/*                                                            */
/**************************************************************/
/*
PhysCellIDUTRA-FDD ::= INTEGER (0..511, ...)
*/
typedef OSUINT32 lppa_PhysCellIDUTRA_FDD;

EXTERN int asn1PE_lppa_PhysCellIDUTRA_FDD (OSCTXT* pctxt, lppa_PhysCellIDUTRA_FDD value);

EXTERN int asn1PD_lppa_PhysCellIDUTRA_FDD (OSCTXT* pctxt, lppa_PhysCellIDUTRA_FDD* pvalue);

EXTERN void asn1Print_lppa_PhysCellIDUTRA_FDD 
   (const char* name, const lppa_PhysCellIDUTRA_FDD* pvalue);

EXTERN int asn1PrtToStr_lppa_PhysCellIDUTRA_FDD (const char* name, 
   lppa_PhysCellIDUTRA_FDD* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PhysCellIDUTRA_FDD (OSCTXT *pctxt, 
   const char* name, const lppa_PhysCellIDUTRA_FDD* pvalue);

EXTERN void asn1Copy_lppa_PhysCellIDUTRA_FDD (OSCTXT* pctxt, 
   const lppa_PhysCellIDUTRA_FDD* pSrcValue, lppa_PhysCellIDUTRA_FDD*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  PhysCellIDUTRA_TDD                                        */
/*                                                            */
/**************************************************************/
/*
PhysCellIDUTRA-TDD ::= INTEGER (0..127, ...)
*/
typedef OSUINT32 lppa_PhysCellIDUTRA_TDD;

EXTERN int asn1PE_lppa_PhysCellIDUTRA_TDD (OSCTXT* pctxt, lppa_PhysCellIDUTRA_TDD value);

EXTERN int asn1PD_lppa_PhysCellIDUTRA_TDD (OSCTXT* pctxt, lppa_PhysCellIDUTRA_TDD* pvalue);

EXTERN void asn1Print_lppa_PhysCellIDUTRA_TDD 
   (const char* name, const lppa_PhysCellIDUTRA_TDD* pvalue);

EXTERN int asn1PrtToStr_lppa_PhysCellIDUTRA_TDD (const char* name, 
   lppa_PhysCellIDUTRA_TDD* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PhysCellIDUTRA_TDD (OSCTXT *pctxt, 
   const char* name, const lppa_PhysCellIDUTRA_TDD* pvalue);

EXTERN void asn1Copy_lppa_PhysCellIDUTRA_TDD (OSCTXT* pctxt, 
   const lppa_PhysCellIDUTRA_TDD* pSrcValue, lppa_PhysCellIDUTRA_TDD*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  ResultUTRAN_Item_physCellIDUTRAN                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultUTRAN-Item'
*/
/* Choice tag constants */

#define T_lppa_ResultUTRAN_Item_physCellIDUTRAN_physCellIDUTRA_FDD 1
#define T_lppa_ResultUTRAN_Item_physCellIDUTRAN_physCellIDUTRA_TDD 2

typedef struct EXTERN lppa_ResultUTRAN_Item_physCellIDUTRAN {
   OSINT32 t;
   union {
      /* t = 1 */
      lppa_PhysCellIDUTRA_FDD physCellIDUTRA_FDD;
      /* t = 2 */
      lppa_PhysCellIDUTRA_TDD physCellIDUTRA_TDD;
   } u;
} lppa_ResultUTRAN_Item_physCellIDUTRAN;

EXTERN int asn1PE_lppa_ResultUTRAN_Item_physCellIDUTRAN (OSCTXT* pctxt, lppa_ResultUTRAN_Item_physCellIDUTRAN* pvalue);

EXTERN int asn1PD_lppa_ResultUTRAN_Item_physCellIDUTRAN (OSCTXT* pctxt, lppa_ResultUTRAN_Item_physCellIDUTRAN* pvalue);

EXTERN void asn1Print_lppa_ResultUTRAN_Item_physCellIDUTRAN 
   (const char* name, const lppa_ResultUTRAN_Item_physCellIDUTRAN* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultUTRAN_Item_physCellIDUTRAN (const char* name, 
   lppa_ResultUTRAN_Item_physCellIDUTRAN* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultUTRAN_Item_physCellIDUTRAN (OSCTXT *pctxt, 
   const char* name, const lppa_ResultUTRAN_Item_physCellIDUTRAN* pvalue);

EXTERN void asn1Copy_lppa_ResultUTRAN_Item_physCellIDUTRAN (OSCTXT* pctxt, 
   const lppa_ResultUTRAN_Item_physCellIDUTRAN* pSrcValue, 
   lppa_ResultUTRAN_Item_physCellIDUTRAN* pDstValue);

EXTERN int asn1Init_lppa_ResultUTRAN_Item_physCellIDUTRAN (
   lppa_ResultUTRAN_Item_physCellIDUTRAN* pvalue);

/**************************************************************/
/*                                                            */
/*  UTRA_RSCP                                                 */
/*                                                            */
/**************************************************************/
/*
UTRA-RSCP ::= INTEGER (-5..91, ...)
*/
typedef OSINT32 lppa_UTRA_RSCP;

EXTERN int asn1PE_lppa_UTRA_RSCP (OSCTXT* pctxt, lppa_UTRA_RSCP value);

EXTERN int asn1PD_lppa_UTRA_RSCP (OSCTXT* pctxt, lppa_UTRA_RSCP* pvalue);

EXTERN void asn1Print_lppa_UTRA_RSCP (const char* name, const lppa_UTRA_RSCP* pvalue);

EXTERN int asn1PrtToStr_lppa_UTRA_RSCP (const char* name, lppa_UTRA_RSCP* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTRA_RSCP (OSCTXT *pctxt, 
   const char* name, const lppa_UTRA_RSCP* pvalue);

EXTERN void asn1Copy_lppa_UTRA_RSCP (OSCTXT* pctxt, const lppa_UTRA_RSCP* pSrcValue, 
   lppa_UTRA_RSCP* pDstValue);

/**************************************************************/
/*                                                            */
/*  UTRA_EcN0                                                 */
/*                                                            */
/**************************************************************/
/*
UTRA-EcN0 ::= INTEGER (0..49, ...)
*/
typedef OSUINT32 lppa_UTRA_EcN0;

EXTERN int asn1PE_lppa_UTRA_EcN0 (OSCTXT* pctxt, lppa_UTRA_EcN0 value);

EXTERN int asn1PD_lppa_UTRA_EcN0 (OSCTXT* pctxt, lppa_UTRA_EcN0* pvalue);

EXTERN void asn1Print_lppa_UTRA_EcN0 (const char* name, const lppa_UTRA_EcN0* pvalue);

EXTERN int asn1PrtToStr_lppa_UTRA_EcN0 (const char* name, lppa_UTRA_EcN0* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTRA_EcN0 (OSCTXT *pctxt, 
   const char* name, const lppa_UTRA_EcN0* pvalue);

EXTERN void asn1Copy_lppa_UTRA_EcN0 (OSCTXT* pctxt, const lppa_UTRA_EcN0* pSrcValue, 
   lppa_UTRA_EcN0* pDstValue);

/**************************************************************/
/*                                                            */
/*  ResultUTRAN_Item_iE_Extensions_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultUTRAN-Item'
*/
typedef struct EXTERN lppa_ResultUTRAN_Item_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_ResultUTRAN_Item_iE_Extensions_element;

EXTERN int asn1PE_lppa_ResultUTRAN_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultUTRAN_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_ResultUTRAN_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_ResultUTRAN_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_ResultUTRAN_Item_iE_Extensions_element 
   (const char* name, const lppa_ResultUTRAN_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultUTRAN_Item_iE_Extensions_element (
   const char* name, lppa_ResultUTRAN_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultUTRAN_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_ResultUTRAN_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_ResultUTRAN_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_ResultUTRAN_Item_iE_Extensions_element* pSrcValue, 
   lppa_ResultUTRAN_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_ResultUTRAN_Item_iE_Extensions_element (
   lppa_ResultUTRAN_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_ResultUTRAN_Item_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_ResultUTRAN_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultUTRAN_Item_iE_Extensions                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResultUTRAN-Item'
*/
/* List of lppa_ResultUTRAN_Item_iE_Extensions_element */
typedef OSRTDList lppa_ResultUTRAN_Item_iE_Extensions;

EXTERN int asn1PE_lppa_ResultUTRAN_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultUTRAN_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_ResultUTRAN_Item_iE_Extensions (OSCTXT* pctxt, lppa_ResultUTRAN_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_ResultUTRAN_Item_iE_Extensions 
   (const char* name, const lppa_ResultUTRAN_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultUTRAN_Item_iE_Extensions (const char* name, 
   lppa_ResultUTRAN_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultUTRAN_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_ResultUTRAN_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_ResultUTRAN_Item_iE_Extensions_element* 
   asn1Get_lppa_ResultUTRAN_Item_iE_Extensions (lppa_ProtocolIE_ID id, 
   lppa_ResultUTRAN_Item_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_ResultUTRAN_Item_iE_Extensions (OSCTXT* pctxt, 
   const lppa_ResultUTRAN_Item_iE_Extensions* pSrcValue, 
   lppa_ResultUTRAN_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_ResultUTRAN_Item_iE_Extensions (
   lppa_ResultUTRAN_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_ResultUTRAN_Item_iE_Extensions (OSCTXT *pctxt, 
   lppa_ResultUTRAN_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultUTRAN_Item                                          */
/*                                                            */
/**************************************************************/
/*
ResultUTRAN-Item ::= SEQUENCE {
   uARFCN [0] UARFCN,
   physCellIDUTRAN [1] CHOICE {
      physCellIDUTRA-FDD [0] PhysCellIDUTRA-FDD,
      physCellIDUTRA-TDD [1] PhysCellIDUTRA-TDD
   },
   uTRA-RSCP [2] UTRA-RSCP OPTIONAL,
   uTRA-EcN0 [3] UTRA-EcN0 OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({ResultUTRAN-Item-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({ResultUTRAN-Item-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({ResultUTRAN-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_ResultUTRAN_Item {
   struct {
      unsigned uTRA_RSCPPresent : 1;
      unsigned uTRA_EcN0Present : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_UARFCN uARFCN;
   lppa_ResultUTRAN_Item_physCellIDUTRAN physCellIDUTRAN;
   lppa_UTRA_RSCP uTRA_RSCP;
   lppa_UTRA_EcN0 uTRA_EcN0;
   lppa_ResultUTRAN_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_ResultUTRAN_Item;

EXTERN int asn1PE_lppa_ResultUTRAN_Item (OSCTXT* pctxt, lppa_ResultUTRAN_Item* pvalue);

EXTERN int asn1PD_lppa_ResultUTRAN_Item (OSCTXT* pctxt, lppa_ResultUTRAN_Item* pvalue);

EXTERN void asn1Print_lppa_ResultUTRAN_Item 
   (const char* name, const lppa_ResultUTRAN_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultUTRAN_Item (const char* name, 
   lppa_ResultUTRAN_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultUTRAN_Item (OSCTXT *pctxt, 
   const char* name, const lppa_ResultUTRAN_Item* pvalue);

EXTERN void asn1Copy_lppa_ResultUTRAN_Item (OSCTXT* pctxt, 
   const lppa_ResultUTRAN_Item* pSrcValue, lppa_ResultUTRAN_Item* pDstValue);

EXTERN int asn1Init_lppa_ResultUTRAN_Item (lppa_ResultUTRAN_Item* pvalue);

EXTERN void asn1Free_lppa_ResultUTRAN_Item (OSCTXT *pctxt, 
   lppa_ResultUTRAN_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultUTRAN                                               */
/*                                                            */
/**************************************************************/
/*
ResultUTRAN ::= SEQUENCE (SIZE (1..maxUTRANMeas)) OF ResultUTRAN-Item
*/
/* List of lppa_ResultUTRAN_Item */
typedef OSRTDList lppa_ResultUTRAN;

EXTERN int asn1PE_lppa_ResultUTRAN (OSCTXT* pctxt, lppa_ResultUTRAN* pvalue);

EXTERN int asn1PD_lppa_ResultUTRAN (OSCTXT* pctxt, lppa_ResultUTRAN* pvalue);

EXTERN void asn1Print_lppa_ResultUTRAN 
   (const char* name, const lppa_ResultUTRAN* pvalue);

EXTERN int asn1PrtToStr_lppa_ResultUTRAN (const char* name, lppa_ResultUTRAN* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ResultUTRAN (OSCTXT *pctxt, 
   const char* name, const lppa_ResultUTRAN* pvalue);

EXTERN void asn1Copy_lppa_ResultUTRAN (OSCTXT* pctxt, 
   const lppa_ResultUTRAN* pSrcValue, lppa_ResultUTRAN* pDstValue);

EXTERN int asn1Init_lppa_ResultUTRAN (lppa_ResultUTRAN* pvalue);

EXTERN void asn1Free_lppa_ResultUTRAN (OSCTXT *pctxt, lppa_ResultUTRAN* pvalue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasuredResultsValue                              */
/*                                                            */
/**************************************************************/
/*
InterRATMeasuredResultsValue ::= CHOICE {
   resultGERAN [0] ResultGERAN,
   resultUTRAN [1] ResultUTRAN,
   ...
}
*/
/* Choice tag constants */

#define T_lppa_InterRATMeasuredResultsValue_resultGERAN 1
#define T_lppa_InterRATMeasuredResultsValue_resultUTRAN 2
#define T_lppa_InterRATMeasuredResultsValue_extElem1 3

typedef struct EXTERN lppa_InterRATMeasuredResultsValue {
   OSINT32 t;
   union {
      /* t = 1 */
      lppa_ResultGERAN *resultGERAN;
      /* t = 2 */
      lppa_ResultUTRAN *resultUTRAN;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} lppa_InterRATMeasuredResultsValue;

EXTERN int asn1PE_lppa_InterRATMeasuredResultsValue (OSCTXT* pctxt, lppa_InterRATMeasuredResultsValue* pvalue);

EXTERN int asn1PD_lppa_InterRATMeasuredResultsValue (OSCTXT* pctxt, lppa_InterRATMeasuredResultsValue* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasuredResultsValue 
   (const char* name, const lppa_InterRATMeasuredResultsValue* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasuredResultsValue (const char* name, 
   lppa_InterRATMeasuredResultsValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasuredResultsValue (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasuredResultsValue* pvalue);

EXTERN void asn1Copy_lppa_InterRATMeasuredResultsValue (OSCTXT* pctxt, 
   const lppa_InterRATMeasuredResultsValue* pSrcValue, 
   lppa_InterRATMeasuredResultsValue* pDstValue);

EXTERN int asn1Init_lppa_InterRATMeasuredResultsValue (
   lppa_InterRATMeasuredResultsValue* pvalue);

EXTERN void asn1Free_lppa_InterRATMeasuredResultsValue (OSCTXT *pctxt, 
   lppa_InterRATMeasuredResultsValue* pvalue);

/**************************************************************/
/*                                                            */
/*  InterRATMeasurementResult                                 */
/*                                                            */
/**************************************************************/
/*
InterRATMeasurementResult ::= SEQUENCE (SIZE (1..maxNoMeas)) OF InterRATMeasuredResultsValue
*/
/* List of lppa_InterRATMeasuredResultsValue */
typedef OSRTDList lppa_InterRATMeasurementResult;

EXTERN int asn1PE_lppa_InterRATMeasurementResult (OSCTXT* pctxt, lppa_InterRATMeasurementResult* pvalue);

EXTERN int asn1PD_lppa_InterRATMeasurementResult (OSCTXT* pctxt, lppa_InterRATMeasurementResult* pvalue);

EXTERN void asn1Print_lppa_InterRATMeasurementResult 
   (const char* name, const lppa_InterRATMeasurementResult* pvalue);

EXTERN int asn1PrtToStr_lppa_InterRATMeasurementResult (const char* name, 
   lppa_InterRATMeasurementResult* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InterRATMeasurementResult (OSCTXT *pctxt, 
   const char* name, const lppa_InterRATMeasurementResult* pvalue);

EXTERN void asn1Copy_lppa_InterRATMeasurementResult (OSCTXT* pctxt, 
   const lppa_InterRATMeasurementResult* pSrcValue, 
   lppa_InterRATMeasurementResult* pDstValue);

EXTERN int asn1Init_lppa_InterRATMeasurementResult (
   lppa_InterRATMeasurementResult* pvalue);

EXTERN void asn1Free_lppa_InterRATMeasurementResult (OSCTXT *pctxt, 
   lppa_InterRATMeasurementResult* pvalue);

/**************************************************************/
/*                                                            */
/*  PRS_Bandwidth                                             */
/*                                                            */
/**************************************************************/
/*
PRS-Bandwidth ::= ENUMERATED { bw6(0), bw15(1), bw25(2), bw50(3), bw75(4), bw100(5), ... }
*/
typedef enum {
   lppa_bw6 = 0,
   lppa_bw15 = 1,
   lppa_bw25 = 2,
   lppa_bw50 = 3,
   lppa_bw75 = 4,
   lppa_bw100 = 5
} lppa_PRS_Bandwidth_Root;

typedef OSUINT32 lppa_PRS_Bandwidth;

EXTERN int asn1PE_lppa_PRS_Bandwidth (OSCTXT* pctxt, lppa_PRS_Bandwidth value);

EXTERN int asn1PD_lppa_PRS_Bandwidth (OSCTXT* pctxt, lppa_PRS_Bandwidth* pvalue);

EXTERN void asn1Print_lppa_PRS_Bandwidth 
   (const char* name, const lppa_PRS_Bandwidth* pvalue);

EXTERN int asn1PrtToStr_lppa_PRS_Bandwidth (const char* name, 
   lppa_PRS_Bandwidth* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PRS_Bandwidth (OSCTXT *pctxt, 
   const char* name, const lppa_PRS_Bandwidth* pvalue);

EXTERN const OSUTF8CHAR* lppa_PRS_Bandwidth_ToString (OSINT32 value);

EXTERN int lppa_PRS_Bandwidth_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_PRS_Bandwidth* pvalue);

EXTERN int lppa_PRS_Bandwidth_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_PRS_Bandwidth* pvalue);

EXTERN void asn1Copy_lppa_PRS_Bandwidth (OSCTXT* pctxt, 
   const lppa_PRS_Bandwidth* pSrcValue, lppa_PRS_Bandwidth* pDstValue);

/**************************************************************/
/*                                                            */
/*  PRS_Configuration_Index                                   */
/*                                                            */
/**************************************************************/
/*
PRS-Configuration-Index ::= INTEGER (0..4095, ...)
*/
typedef OSUINT32 lppa_PRS_Configuration_Index;

EXTERN int asn1PE_lppa_PRS_Configuration_Index (OSCTXT* pctxt, lppa_PRS_Configuration_Index value);

EXTERN int asn1PD_lppa_PRS_Configuration_Index (OSCTXT* pctxt, lppa_PRS_Configuration_Index* pvalue);

EXTERN void asn1Print_lppa_PRS_Configuration_Index 
   (const char* name, const lppa_PRS_Configuration_Index* pvalue);

EXTERN int asn1PrtToStr_lppa_PRS_Configuration_Index (const char* name, 
   lppa_PRS_Configuration_Index* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PRS_Configuration_Index (OSCTXT *pctxt, 
   const char* name, const lppa_PRS_Configuration_Index* pvalue);

EXTERN void asn1Copy_lppa_PRS_Configuration_Index (OSCTXT* pctxt, 
   const lppa_PRS_Configuration_Index* pSrcValue, lppa_PRS_Configuration_Index*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  NumberOfDlFrames                                          */
/*                                                            */
/**************************************************************/
/*
NumberOfDlFrames ::= ENUMERATED { sf1(0), sf2(1), sf4(2), sf6(3), ... }
*/
typedef enum {
   lppa_sf1 = 0,
   lppa_sf2 = 1,
   lppa_sf4 = 2,
   lppa_sf6 = 3
} lppa_NumberOfDlFrames_Root;

typedef OSUINT32 lppa_NumberOfDlFrames;

EXTERN int asn1PE_lppa_NumberOfDlFrames (OSCTXT* pctxt, lppa_NumberOfDlFrames value);

EXTERN int asn1PD_lppa_NumberOfDlFrames (OSCTXT* pctxt, lppa_NumberOfDlFrames* pvalue);

EXTERN void asn1Print_lppa_NumberOfDlFrames 
   (const char* name, const lppa_NumberOfDlFrames* pvalue);

EXTERN int asn1PrtToStr_lppa_NumberOfDlFrames (const char* name, 
   lppa_NumberOfDlFrames* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_NumberOfDlFrames (OSCTXT *pctxt, 
   const char* name, const lppa_NumberOfDlFrames* pvalue);

EXTERN const OSUTF8CHAR* lppa_NumberOfDlFrames_ToString (OSINT32 value);

EXTERN int lppa_NumberOfDlFrames_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_NumberOfDlFrames* pvalue);

EXTERN int lppa_NumberOfDlFrames_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_NumberOfDlFrames* pvalue);

EXTERN void asn1Copy_lppa_NumberOfDlFrames (OSCTXT* pctxt, 
   const lppa_NumberOfDlFrames* pSrcValue, lppa_NumberOfDlFrames* pDstValue);

/**************************************************************/
/*                                                            */
/*  NumberOfAntennaPorts                                      */
/*                                                            */
/**************************************************************/
/*
 N

NumberOfAntennaPorts ::= ENUMERATED { n1-or-n2(0), n4(1), ... }
*/
typedef enum {
   lppa_n1_or_n2 = 0,
   lppa_n4 = 1
} lppa_NumberOfAntennaPorts_Root;

typedef OSUINT32 lppa_NumberOfAntennaPorts;

EXTERN int asn1PE_lppa_NumberOfAntennaPorts (OSCTXT* pctxt, lppa_NumberOfAntennaPorts value);

EXTERN int asn1PD_lppa_NumberOfAntennaPorts (OSCTXT* pctxt, lppa_NumberOfAntennaPorts* pvalue);

EXTERN void asn1Print_lppa_NumberOfAntennaPorts 
   (const char* name, const lppa_NumberOfAntennaPorts* pvalue);

EXTERN int asn1PrtToStr_lppa_NumberOfAntennaPorts (const char* name, 
   lppa_NumberOfAntennaPorts* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_NumberOfAntennaPorts (OSCTXT *pctxt, 
   const char* name, const lppa_NumberOfAntennaPorts* pvalue);

EXTERN const OSUTF8CHAR* lppa_NumberOfAntennaPorts_ToString (OSINT32 value);

EXTERN int lppa_NumberOfAntennaPorts_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, lppa_NumberOfAntennaPorts* pvalue);

EXTERN int lppa_NumberOfAntennaPorts_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, lppa_NumberOfAntennaPorts* pvalue)
      ;

EXTERN void asn1Copy_lppa_NumberOfAntennaPorts (OSCTXT* pctxt, 
   const lppa_NumberOfAntennaPorts* pSrcValue, lppa_NumberOfAntennaPorts*
    pDstValue);

/**************************************************************/
/*                                                            */
/*  PRSMutingConfiguration                                    */
/*                                                            */
/**************************************************************/
/*
PRSMutingConfiguration ::= CHOICE {
   two [0] BIT STRING  (SIZE (2)),
   four [1] BIT STRING  (SIZE (4)),
   eight [2] BIT STRING  (SIZE (8)),
   sixteen [3] BIT STRING  (SIZE (16)),
   ...
}
*/
/* Choice tag constants */

#define T_lppa_PRSMutingConfiguration_two 1
#define T_lppa_PRSMutingConfiguration_four 2
#define T_lppa_PRSMutingConfiguration_eight 3
#define T_lppa_PRSMutingConfiguration_sixteen 4
#define T_lppa_PRSMutingConfiguration_extElem1 5

typedef struct EXTERN lppa_PRSMutingConfiguration {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1BitStr32 *two;
      /* t = 2 */
      ASN1BitStr32 *four;
      /* t = 3 */
      ASN1BitStr32 *eight;
      /* t = 4 */
      ASN1BitStr32 *sixteen;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} lppa_PRSMutingConfiguration;

EXTERN int asn1PE_lppa_PRSMutingConfiguration (OSCTXT* pctxt, lppa_PRSMutingConfiguration* pvalue);

EXTERN int asn1PD_lppa_PRSMutingConfiguration (OSCTXT* pctxt, lppa_PRSMutingConfiguration* pvalue);

EXTERN void asn1Print_lppa_PRSMutingConfiguration 
   (const char* name, const lppa_PRSMutingConfiguration* pvalue);

EXTERN int asn1PrtToStr_lppa_PRSMutingConfiguration (const char* name, 
   lppa_PRSMutingConfiguration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PRSMutingConfiguration (OSCTXT *pctxt, 
   const char* name, const lppa_PRSMutingConfiguration* pvalue);

EXTERN void asn1Copy_lppa_PRSMutingConfiguration (OSCTXT* pctxt, 
   const lppa_PRSMutingConfiguration* pSrcValue, lppa_PRSMutingConfiguration*
    pDstValue);

EXTERN int asn1Init_lppa_PRSMutingConfiguration (lppa_PRSMutingConfiguration* pvalue);

EXTERN void asn1Free_lppa_PRSMutingConfiguration (OSCTXT *pctxt, 
   lppa_PRSMutingConfiguration* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOACell_Information_Item                                */
/*                                                            */
/**************************************************************/
/*
OTDOACell-Information-Item ::= CHOICE {
   pCI [0] PCI,
   cellId [1] ECGI,
   tAC [2] TAC,
   eARFCN [3] EARFCN,
   pRS-Bandwidth [4] PRS-Bandwidth,
   pRS-ConfigurationIndex [5] PRS-Configuration-Index,
   cPLength [6] CPLength,
   numberOfDlFrames [7] NumberOfDlFrames,
   numberOfAntennaPorts [8] NumberOfAntennaPorts,
   sFNInitialisationTime [9] SFNInitialisationTime,
   e-UTRANAccessPointPosition [10] E-UTRANAccessPointPosition,
   ...,
   pRSMutingConfiguration [11] PRSMutingConfiguration
}
*/
/* Choice tag constants */

#define T_lppa_OTDOACell_Information_Item_pCI 1
#define T_lppa_OTDOACell_Information_Item_cellId 2
#define T_lppa_OTDOACell_Information_Item_tAC 3
#define T_lppa_OTDOACell_Information_Item_eARFCN 4
#define T_lppa_OTDOACell_Information_Item_pRS_Bandwidth 5
#define T_lppa_OTDOACell_Information_Item_pRS_ConfigurationIndex 6
#define T_lppa_OTDOACell_Information_Item_cPLength 7
#define T_lppa_OTDOACell_Information_Item_numberOfDlFrames 8
#define T_lppa_OTDOACell_Information_Item_numberOfAntennaPorts 9
#define T_lppa_OTDOACell_Information_Item_sFNInitialisationTime 10
#define T_lppa_OTDOACell_Information_Item_e_UTRANAccessPointPosition 11
#define T_lppa_OTDOACell_Information_Item_pRSMutingConfiguration 12
#define T_lppa_OTDOACell_Information_Item_extElem1 13

typedef struct EXTERN lppa_OTDOACell_Information_Item {
   OSINT32 t;
   union {
      /* t = 1 */
      lppa_PCI pCI;
      /* t = 2 */
      lppa_ECGI *cellId;
      /* t = 3 */
      lppa_TAC *tAC;
      /* t = 4 */
      lppa_EARFCN eARFCN;
      /* t = 5 */
      lppa_PRS_Bandwidth pRS_Bandwidth;
      /* t = 6 */
      lppa_PRS_Configuration_Index pRS_ConfigurationIndex;
      /* t = 7 */
      lppa_CPLength cPLength;
      /* t = 8 */
      lppa_NumberOfDlFrames numberOfDlFrames;
      /* t = 9 */
      lppa_NumberOfAntennaPorts numberOfAntennaPorts;
      /* t = 10 */
      lppa_SFNInitialisationTime *sFNInitialisationTime;
      /* t = 11 */
      lppa_E_UTRANAccessPointPosition *e_UTRANAccessPointPosition;
      /* t = 12 */
      lppa_PRSMutingConfiguration *pRSMutingConfiguration;
      /* t = 13 */
      ASN1OpenType *extElem1;
   } u;
} lppa_OTDOACell_Information_Item;

EXTERN int asn1PE_lppa_OTDOACell_Information_Item (OSCTXT* pctxt, lppa_OTDOACell_Information_Item* pvalue);

EXTERN int asn1PD_lppa_OTDOACell_Information_Item (OSCTXT* pctxt, lppa_OTDOACell_Information_Item* pvalue);

EXTERN void asn1Print_lppa_OTDOACell_Information_Item 
   (const char* name, const lppa_OTDOACell_Information_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOACell_Information_Item (const char* name, 
   lppa_OTDOACell_Information_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOACell_Information_Item (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOACell_Information_Item* pvalue);

EXTERN void asn1Copy_lppa_OTDOACell_Information_Item (OSCTXT* pctxt, 
   const lppa_OTDOACell_Information_Item* pSrcValue, 
   lppa_OTDOACell_Information_Item* pDstValue);

EXTERN int asn1Init_lppa_OTDOACell_Information_Item (
   lppa_OTDOACell_Information_Item* pvalue);

EXTERN void asn1Free_lppa_OTDOACell_Information_Item (OSCTXT *pctxt, 
   lppa_OTDOACell_Information_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOACell_Information                                     */
/*                                                            */
/**************************************************************/
/*
OTDOACell-Information ::= SEQUENCE (SIZE (1..maxnoOTDOAtypes)) OF OTDOACell-Information-Item
*/
/* List of lppa_OTDOACell_Information_Item */
typedef OSRTDList lppa_OTDOACell_Information;

EXTERN int asn1PE_lppa_OTDOACell_Information (OSCTXT* pctxt, lppa_OTDOACell_Information* pvalue);

EXTERN int asn1PD_lppa_OTDOACell_Information (OSCTXT* pctxt, lppa_OTDOACell_Information* pvalue);

EXTERN void asn1Print_lppa_OTDOACell_Information 
   (const char* name, const lppa_OTDOACell_Information* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOACell_Information (const char* name, 
   lppa_OTDOACell_Information* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOACell_Information (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOACell_Information* pvalue);

EXTERN void asn1Copy_lppa_OTDOACell_Information (OSCTXT* pctxt, 
   const lppa_OTDOACell_Information* pSrcValue, lppa_OTDOACell_Information*
    pDstValue);

EXTERN int asn1Init_lppa_OTDOACell_Information (lppa_OTDOACell_Information* pvalue);

EXTERN void asn1Free_lppa_OTDOACell_Information (OSCTXT *pctxt, 
   lppa_OTDOACell_Information* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOACells_element_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOACells'
*/
typedef struct EXTERN lppa_OTDOACells_element_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_OTDOACells_element_iE_Extensions_element;

EXTERN int asn1PE_lppa_OTDOACells_element_iE_Extensions_element (OSCTXT* pctxt, lppa_OTDOACells_element_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_OTDOACells_element_iE_Extensions_element (OSCTXT* pctxt, lppa_OTDOACells_element_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_OTDOACells_element_iE_Extensions_element 
   (const char* name, const lppa_OTDOACells_element_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOACells_element_iE_Extensions_element (
   const char* name, lppa_OTDOACells_element_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOACells_element_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOACells_element_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_OTDOACells_element_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_OTDOACells_element_iE_Extensions_element* pSrcValue, 
   lppa_OTDOACells_element_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_OTDOACells_element_iE_Extensions_element (
   lppa_OTDOACells_element_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_OTDOACells_element_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_OTDOACells_element_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOACells_element_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOACells'
*/
/* List of lppa_OTDOACells_element_iE_Extensions_element */
typedef OSRTDList lppa_OTDOACells_element_iE_Extensions;

EXTERN int asn1PE_lppa_OTDOACells_element_iE_Extensions (OSCTXT* pctxt, lppa_OTDOACells_element_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_OTDOACells_element_iE_Extensions (OSCTXT* pctxt, lppa_OTDOACells_element_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_OTDOACells_element_iE_Extensions 
   (const char* name, const lppa_OTDOACells_element_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOACells_element_iE_Extensions (const char* name, 
   lppa_OTDOACells_element_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOACells_element_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOACells_element_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_OTDOACells_element_iE_Extensions_element* 
   asn1Get_lppa_OTDOACells_element_iE_Extensions (lppa_ProtocolIE_ID id, 
   lppa_OTDOACells_element_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_OTDOACells_element_iE_Extensions (OSCTXT* pctxt, 
   const lppa_OTDOACells_element_iE_Extensions* pSrcValue, 
   lppa_OTDOACells_element_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_OTDOACells_element_iE_Extensions (
   lppa_OTDOACells_element_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_OTDOACells_element_iE_Extensions (OSCTXT *pctxt, 
   lppa_OTDOACells_element_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOACells_element                                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOACells'
*/
typedef struct EXTERN lppa_OTDOACells_element {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_OTDOACell_Information oTDOACellInfo;
   lppa_OTDOACells_element_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_OTDOACells_element;

EXTERN int asn1PE_lppa_OTDOACells_element (OSCTXT* pctxt, lppa_OTDOACells_element* pvalue);

EXTERN int asn1PD_lppa_OTDOACells_element (OSCTXT* pctxt, lppa_OTDOACells_element* pvalue);

EXTERN void asn1Print_lppa_OTDOACells_element 
   (const char* name, const lppa_OTDOACells_element* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOACells_element (const char* name, 
   lppa_OTDOACells_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOACells_element (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOACells_element* pvalue);

EXTERN void asn1Copy_lppa_OTDOACells_element (OSCTXT* pctxt, 
   const lppa_OTDOACells_element* pSrcValue, lppa_OTDOACells_element*
    pDstValue);

EXTERN int asn1Init_lppa_OTDOACells_element (lppa_OTDOACells_element* pvalue);

EXTERN void asn1Free_lppa_OTDOACells_element (OSCTXT *pctxt, 
   lppa_OTDOACells_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOACells                                                */
/*                                                            */
/**************************************************************/
/*
 O

OTDOACells ::= SEQUENCE (SIZE (1..maxCellineNB)) OF SEQUENCE {
   oTDOACellInfo [0] OTDOACell-Information,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({OTDOACells-ExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({OTDOACells-ExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({OTDOACells-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
/* List of lppa_OTDOACells_element */
typedef OSRTDList lppa_OTDOACells;

EXTERN int asn1PE_lppa_OTDOACells (OSCTXT* pctxt, lppa_OTDOACells* pvalue);

EXTERN int asn1PD_lppa_OTDOACells (OSCTXT* pctxt, lppa_OTDOACells* pvalue);

EXTERN void asn1Print_lppa_OTDOACells 
   (const char* name, const lppa_OTDOACells* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOACells (const char* name, lppa_OTDOACells* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOACells (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOACells* pvalue);

EXTERN void asn1Copy_lppa_OTDOACells (OSCTXT* pctxt, 
   const lppa_OTDOACells* pSrcValue, lppa_OTDOACells* pDstValue);

EXTERN int asn1Init_lppa_OTDOACells (lppa_OTDOACells* pvalue);

EXTERN void asn1Free_lppa_OTDOACells (OSCTXT *pctxt, lppa_OTDOACells* pvalue);

/**
 * Header file for ASN.1 module LPPA-PDU-Contents
 */
typedef enum {
   T4lppa__UNDEF_,
   T4lppa___lppa_E_CIDMeasurementInitiationRequest_IEs_1,
   T4lppa___lppa_E_CIDMeasurementInitiationRequest_IEs_2,
   T4lppa___lppa_E_CIDMeasurementInitiationRequest_IEs_3,
   T4lppa___lppa_E_CIDMeasurementInitiationRequest_IEs_4,
   T4lppa___lppa_E_CIDMeasurementInitiationRequest_IEs_5
} lppa_E_CIDMeasurementInitiationRequest_IEs_TVALUE;

typedef enum {
   T5lppa__UNDEF_,
   T5lppa___lppa_E_CIDMeasurementInitiationResponse_IEs_1,
   T5lppa___lppa_E_CIDMeasurementInitiationResponse_IEs_2,
   T5lppa___lppa_E_CIDMeasurementInitiationResponse_IEs_3,
   T5lppa___lppa_E_CIDMeasurementInitiationResponse_IEs_4,
   T5lppa___lppa_E_CIDMeasurementInitiationResponse_IEs_5,
   T5lppa___lppa_E_CIDMeasurementInitiationResponse_IEs_6
} lppa_E_CIDMeasurementInitiationResponse_IEs_TVALUE;

typedef enum {
   T6lppa__UNDEF_,
   T6lppa___lppa_E_CIDMeasurementInitiationFailure_IEs_1,
   T6lppa___lppa_E_CIDMeasurementInitiationFailure_IEs_2,
   T6lppa___lppa_E_CIDMeasurementInitiationFailure_IEs_3
} lppa_E_CIDMeasurementInitiationFailure_IEs_TVALUE;

typedef enum {
   T7lppa__UNDEF_,
   T7lppa___lppa_E_CIDMeasurementFailureIndication_IEs_1,
   T7lppa___lppa_E_CIDMeasurementFailureIndication_IEs_2,
   T7lppa___lppa_E_CIDMeasurementFailureIndication_IEs_3
} lppa_E_CIDMeasurementFailureIndication_IEs_TVALUE;

typedef enum {
   T8lppa__UNDEF_,
   T8lppa___lppa_E_CIDMeasurementReport_IEs_1,
   T8lppa___lppa_E_CIDMeasurementReport_IEs_2,
   T8lppa___lppa_E_CIDMeasurementReport_IEs_3,
   T8lppa___lppa_E_CIDMeasurementReport_IEs_4
} lppa_E_CIDMeasurementReport_IEs_TVALUE;

typedef enum {
   T9lppa__UNDEF_,
   T9lppa___lppa_E_CIDMeasurementTerminationCommand_IEs_1,
   T9lppa___lppa_E_CIDMeasurementTerminationCommand_IEs_2
} lppa_E_CIDMeasurementTerminationCommand_IEs_TVALUE;

typedef enum {
   T10lppa__UNDEF_,
   T10lppa___lppa_OTDOAInformationRequest_IEs_1
} lppa_OTDOAInformationRequest_IEs_TVALUE;

typedef enum {
   T11lppa__UNDEF_,
   T11lppa___lppa_OTDOA_Information_TypeIEs_1
} lppa_OTDOA_Information_TypeIEs_TVALUE;

typedef enum {
   T12lppa__UNDEF_
} lppa_OTDOA_Information_Type_ItemExtIEs_TVALUE;

typedef enum {
   T13lppa__UNDEF_,
   T13lppa___lppa_OTDOAInformationResponse_IEs_1,
   T13lppa___lppa_OTDOAInformationResponse_IEs_2
} lppa_OTDOAInformationResponse_IEs_TVALUE;

typedef enum {
   T14lppa__UNDEF_,
   T14lppa___lppa_OTDOAInformationFailure_IEs_1,
   T14lppa___lppa_OTDOAInformationFailure_IEs_2
} lppa_OTDOAInformationFailure_IEs_TVALUE;

typedef enum {
   T15lppa__UNDEF_,
   T15lppa___lppa_UTDOAInformationRequest_IEs_1
} lppa_UTDOAInformationRequest_IEs_TVALUE;

typedef enum {
   T16lppa__UNDEF_,
   T16lppa___lppa_UTDOAInformationResponse_IEs_1,
   T16lppa___lppa_UTDOAInformationResponse_IEs_2
} lppa_UTDOAInformationResponse_IEs_TVALUE;

typedef enum {
   T17lppa__UNDEF_,
   T17lppa___lppa_UTDOAInformationFailure_IEs_1,
   T17lppa___lppa_UTDOAInformationFailure_IEs_2
} lppa_UTDOAInformationFailure_IEs_TVALUE;

typedef enum {
   T18lppa__UNDEF_,
   T18lppa___lppa_UTDOAInformationUpdate_IEs_1
} lppa_UTDOAInformationUpdate_IEs_TVALUE;

typedef enum {
   T19lppa__UNDEF_,
   T19lppa___lppa_ErrorIndication_IEs_1,
   T19lppa___lppa_ErrorIndication_IEs_2
} lppa_ErrorIndication_IEs_TVALUE;

typedef enum {
   T20lppa__UNDEF_
} lppa_PrivateMessage_IEs_TVALUE;

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationRequest_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementInitiationRequest'
*/
typedef struct EXTERN lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_E_CIDMeasurementInitiationRequest_IEs_TVALUE t;

      /**
       * E-CIDMeasurementInitiationRequest-IEs information objects
       */
      union {
         /**
          * id: id-E-SMLC-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementInitiationRequest_IEs_1;
         /**
          * id: id-ReportCharacteristics
          * criticality: reject
          * presence: mandatory
          */
         lppa_ReportCharacteristics _lppa_E_CIDMeasurementInitiationRequest_IEs_2;
         /**
          * id: id-MeasurementPeriodicity
          * criticality: reject
          * presence: conditional
          */
         lppa_MeasurementPeriodicity _lppa_E_CIDMeasurementInitiationRequest_IEs_3;
         /**
          * id: id-MeasurementQuantities
          * criticality: reject
          * presence: mandatory
          */
         lppa_MeasurementQuantities *_lppa_E_CIDMeasurementInitiationRequest_IEs_4;
         /**
          * id: id-InterRATMeasurementQuantities
          * criticality: ignore
          * presence: optional
          */
         lppa_InterRATMeasurementQuantities *_lppa_E_CIDMeasurementInitiationRequest_IEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element 
   (const char* name, const lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element (
   const char* name, 
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element_lppa_E_CIDMeasurementInitiationRequest_IEs_1
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element_lppa_E_CIDMeasurementInitiationRequest_IEs_2
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pElem
   , lppa_ReportCharacteristics value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element_lppa_E_CIDMeasurementInitiationRequest_IEs_3
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pElem
   , lppa_MeasurementPeriodicity value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element_lppa_E_CIDMeasurementInitiationRequest_IEs_4
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pElem
   , lppa_MeasurementQuantities *pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element_lppa_E_CIDMeasurementInitiationRequest_IEs_5
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pElem
   , lppa_InterRATMeasurementQuantities *pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pSrcValue, 
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element (
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationRequest_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementInitiationRequest'
*/
/* List of lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element */
typedef OSRTDList lppa_E_CIDMeasurementInitiationRequest_protocolIEs;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationRequest_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationRequest_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationRequest_protocolIEs 
   (const char* name, const lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationRequest_protocolIEs (
   const char* name, 
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pvalue);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_1
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs* plist
   , lppa_Measurement_ID value);

/* Append IE with value type lppa_ReportCharacteristics to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_2
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs* plist
   , lppa_ReportCharacteristics value);

/* Append IE with value type lppa_MeasurementPeriodicity to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_3
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs* plist
   , lppa_MeasurementPeriodicity value);

/* Append IE with value type lppa_MeasurementQuantities to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_4
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs* plist
   , lppa_MeasurementQuantities *pvalue);

/* Append IE with value type lppa_InterRATMeasurementQuantities to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationRequest_protocolIEs_5
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest_protocolIEs* plist
   , lppa_InterRATMeasurementQuantities *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_E_CIDMeasurementInitiationRequest_protocolIEs_element* 
   asn1Get_lppa_E_CIDMeasurementInitiationRequest_protocolIEs 
   (lppa_ProtocolIE_ID id, 
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs* plist);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationRequest_protocolIEs (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pSrcValue, 
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationRequest_protocolIEs (
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationRequest_protocolIEs (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationRequest                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-CID MEASUREMENT INITIATION REQUEST

 **************************************************************

E-CIDMeasurementInitiationRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({E-CIDMeasurementInitiationRequest-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({E-CIDMeasurementInitiationRequest-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({E-CIDMeasurementInitiationRequest-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_E_CIDMeasurementInitiationRequest {
   lppa_E_CIDMeasurementInitiationRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_E_CIDMeasurementInitiationRequest;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationRequest (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationRequest (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationRequest* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationRequest 
   (const char* name, const lppa_E_CIDMeasurementInitiationRequest* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationRequest (const char* name, 
   lppa_E_CIDMeasurementInitiationRequest* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationRequest (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationRequest* pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationRequest (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationRequest* pSrcValue, 
   lppa_E_CIDMeasurementInitiationRequest* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationRequest (
   lppa_E_CIDMeasurementInitiationRequest* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationRequest (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOA_Information_Type_Item_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOA-Information-Type-Item'
*/
typedef struct EXTERN lppa_OTDOA_Information_Type_Item_iE_Extensions_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType extensionValue;
} lppa_OTDOA_Information_Type_Item_iE_Extensions_element;

EXTERN int asn1PE_lppa_OTDOA_Information_Type_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_lppa_OTDOA_Information_Type_Item_iE_Extensions_element (OSCTXT* pctxt, lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_lppa_OTDOA_Information_Type_Item_iE_Extensions_element 
   (const char* name, const lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOA_Information_Type_Item_iE_Extensions_element (
   const char* name, 
   lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOA_Information_Type_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_lppa_OTDOA_Information_Type_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pSrcValue, 
   lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_lppa_OTDOA_Information_Type_Item_iE_Extensions_element (
   lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_lppa_OTDOA_Information_Type_Item_iE_Extensions_element (OSCTXT *pctxt, 
   lppa_OTDOA_Information_Type_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOA_Information_Type_Item_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOA-Information-Type-Item'
*/
/* List of lppa_OTDOA_Information_Type_Item_iE_Extensions_element */
typedef OSRTDList lppa_OTDOA_Information_Type_Item_iE_Extensions;

EXTERN int asn1PE_lppa_OTDOA_Information_Type_Item_iE_Extensions (OSCTXT* pctxt, lppa_OTDOA_Information_Type_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_lppa_OTDOA_Information_Type_Item_iE_Extensions (OSCTXT* pctxt, lppa_OTDOA_Information_Type_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_lppa_OTDOA_Information_Type_Item_iE_Extensions 
   (const char* name, const lppa_OTDOA_Information_Type_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOA_Information_Type_Item_iE_Extensions (
   const char* name, lppa_OTDOA_Information_Type_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOA_Information_Type_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOA_Information_Type_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_OTDOA_Information_Type_Item_iE_Extensions_element* 
   asn1Get_lppa_OTDOA_Information_Type_Item_iE_Extensions 
   (lppa_ProtocolIE_ID id, 
   lppa_OTDOA_Information_Type_Item_iE_Extensions* plist);

EXTERN void asn1Copy_lppa_OTDOA_Information_Type_Item_iE_Extensions (OSCTXT* pctxt, 
   const lppa_OTDOA_Information_Type_Item_iE_Extensions* pSrcValue, 
   lppa_OTDOA_Information_Type_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_lppa_OTDOA_Information_Type_Item_iE_Extensions (
   lppa_OTDOA_Information_Type_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_lppa_OTDOA_Information_Type_Item_iE_Extensions (OSCTXT *pctxt, 
   lppa_OTDOA_Information_Type_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOA_Information_Type_Item                               */
/*                                                            */
/**************************************************************/
/*
OTDOA-Information-Type-Item ::= SEQUENCE {
   oTDOA-Information-Type-Item [0] OTDOA-Information-Item,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-EXTENSION.&id ({OTDOA-Information-Type-ItemExtIEs}),
      criticality [1] LPPA-PROTOCOL-EXTENSION.&criticality ({OTDOA-Information-Type-ItemExtIEs}{@id}),
      extensionValue [2] LPPA-PROTOCOL-EXTENSION.&Extension ({OTDOA-Information-Type-ItemExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN lppa_OTDOA_Information_Type_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   lppa_OTDOA_Information_Item oTDOA_Information_Type_Item;
   lppa_OTDOA_Information_Type_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} lppa_OTDOA_Information_Type_Item;

EXTERN int asn1PE_lppa_OTDOA_Information_Type_Item (OSCTXT* pctxt, lppa_OTDOA_Information_Type_Item* pvalue);

EXTERN int asn1PD_lppa_OTDOA_Information_Type_Item (OSCTXT* pctxt, lppa_OTDOA_Information_Type_Item* pvalue);

EXTERN void asn1Print_lppa_OTDOA_Information_Type_Item 
   (const char* name, const lppa_OTDOA_Information_Type_Item* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOA_Information_Type_Item (const char* name, 
   lppa_OTDOA_Information_Type_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOA_Information_Type_Item (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOA_Information_Type_Item* pvalue);

EXTERN void asn1Copy_lppa_OTDOA_Information_Type_Item (OSCTXT* pctxt, 
   const lppa_OTDOA_Information_Type_Item* pSrcValue, 
   lppa_OTDOA_Information_Type_Item* pDstValue);

EXTERN int asn1Init_lppa_OTDOA_Information_Type_Item (
   lppa_OTDOA_Information_Type_Item* pvalue);

EXTERN void asn1Free_lppa_OTDOA_Information_Type_Item (OSCTXT *pctxt, 
   lppa_OTDOA_Information_Type_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOA_Information_Type_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOA-Information-Type'
*/
typedef struct EXTERN lppa_OTDOA_Information_Type_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_OTDOA_Information_TypeIEs_TVALUE t;

      /**
       * OTDOA-Information-TypeIEs information objects
       */
      union {
         /**
          * id: id-OTDOA-Information-Type-Item
          * criticality: reject
          * presence: mandatory
          */
         lppa_OTDOA_Information_Type_Item *_lppa_OTDOA_Information_TypeIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_OTDOA_Information_Type_element;

EXTERN int asn1PE_lppa_OTDOA_Information_Type_element (OSCTXT* pctxt, lppa_OTDOA_Information_Type_element* pvalue);

EXTERN int asn1PD_lppa_OTDOA_Information_Type_element (OSCTXT* pctxt, lppa_OTDOA_Information_Type_element* pvalue);

EXTERN void asn1Print_lppa_OTDOA_Information_Type_element 
   (const char* name, const lppa_OTDOA_Information_Type_element* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOA_Information_Type_element (const char* name, 
   lppa_OTDOA_Information_Type_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOA_Information_Type_element (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOA_Information_Type_element* pvalue);

EXTERN void asn1Copy_lppa_OTDOA_Information_Type_element (OSCTXT* pctxt, 
   const lppa_OTDOA_Information_Type_element* pSrcValue, 
   lppa_OTDOA_Information_Type_element* pDstValue);

EXTERN int asn1Init_lppa_OTDOA_Information_Type_element (
   lppa_OTDOA_Information_Type_element* pvalue);

EXTERN void asn1Free_lppa_OTDOA_Information_Type_element (OSCTXT *pctxt, 
   lppa_OTDOA_Information_Type_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOA_Information_Type                                    */
/*                                                            */
/**************************************************************/
/*
OTDOA-Information-Type ::= SEQUENCE (SIZE (1..maxnoOTDOAtypes)) OF SEQUENCE {
   id [0] LPPA-PROTOCOL-IES.&id ({OTDOA-Information-TypeIEs}),
   criticality [1] LPPA-PROTOCOL-IES.&criticality ({OTDOA-Information-TypeIEs}{@id}),
   value [2] LPPA-PROTOCOL-IES.&Value ({OTDOA-Information-TypeIEs}{@id})
}
*/
/* List of lppa_OTDOA_Information_Type_element */
typedef OSRTDList lppa_OTDOA_Information_Type;

EXTERN int asn1PE_lppa_OTDOA_Information_Type (OSCTXT* pctxt, lppa_OTDOA_Information_Type* pvalue);

EXTERN int asn1PD_lppa_OTDOA_Information_Type (OSCTXT* pctxt, lppa_OTDOA_Information_Type* pvalue);

EXTERN void asn1Print_lppa_OTDOA_Information_Type 
   (const char* name, const lppa_OTDOA_Information_Type* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOA_Information_Type (const char* name, 
   lppa_OTDOA_Information_Type* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOA_Information_Type (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOA_Information_Type* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_OTDOA_Information_Type_element* 
   asn1Get_lppa_OTDOA_Information_Type (lppa_ProtocolIE_ID id, 
   lppa_OTDOA_Information_Type* plist);

EXTERN void asn1Copy_lppa_OTDOA_Information_Type (OSCTXT* pctxt, 
   const lppa_OTDOA_Information_Type* pSrcValue, lppa_OTDOA_Information_Type*
    pDstValue);

EXTERN int asn1Init_lppa_OTDOA_Information_Type (lppa_OTDOA_Information_Type* pvalue);

EXTERN void asn1Free_lppa_OTDOA_Information_Type (OSCTXT *pctxt, 
   lppa_OTDOA_Information_Type* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationRequest_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOAInformationRequest'
*/
typedef struct EXTERN lppa_OTDOAInformationRequest_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_OTDOAInformationRequest_IEs_TVALUE t;

      /**
       * OTDOAInformationRequest-IEs information objects
       */
      union {
         /**
          * id: id-OTDOA-Information-Type-Group
          * criticality: reject
          * presence: mandatory
          */
         lppa_OTDOA_Information_Type *_lppa_OTDOAInformationRequest_IEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_OTDOAInformationRequest_protocolIEs_element;

EXTERN int asn1PE_lppa_OTDOAInformationRequest_protocolIEs_element (OSCTXT* pctxt, lppa_OTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationRequest_protocolIEs_element (OSCTXT* pctxt, lppa_OTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationRequest_protocolIEs_element 
   (const char* name, const lppa_OTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationRequest_protocolIEs_element (
   const char* name, lppa_OTDOAInformationRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Copy_lppa_OTDOAInformationRequest_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_OTDOAInformationRequest_protocolIEs_element* pSrcValue, 
   lppa_OTDOAInformationRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationRequest_protocolIEs_element (
   lppa_OTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationRequest_protocolIEs_element (OSCTXT *pctxt, 
   lppa_OTDOAInformationRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationRequest_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOAInformationRequest'
*/
/* List of lppa_OTDOAInformationRequest_protocolIEs_element */
typedef OSRTDList lppa_OTDOAInformationRequest_protocolIEs;

EXTERN int asn1PE_lppa_OTDOAInformationRequest_protocolIEs (OSCTXT* pctxt, lppa_OTDOAInformationRequest_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationRequest_protocolIEs (OSCTXT* pctxt, lppa_OTDOAInformationRequest_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationRequest_protocolIEs 
   (const char* name, const lppa_OTDOAInformationRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationRequest_protocolIEs (const char* name, 
   lppa_OTDOAInformationRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationRequest_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_OTDOAInformationRequest_protocolIEs_element* 
   asn1Get_lppa_OTDOAInformationRequest_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_OTDOAInformationRequest_protocolIEs* plist);

EXTERN void asn1Copy_lppa_OTDOAInformationRequest_protocolIEs (OSCTXT* pctxt, 
   const lppa_OTDOAInformationRequest_protocolIEs* pSrcValue, 
   lppa_OTDOAInformationRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationRequest_protocolIEs (
   lppa_OTDOAInformationRequest_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationRequest_protocolIEs (OSCTXT *pctxt, 
   lppa_OTDOAInformationRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationRequest                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 OTDOA INFORMATION REQUEST

 **************************************************************

OTDOAInformationRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({OTDOAInformationRequest-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({OTDOAInformationRequest-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({OTDOAInformationRequest-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_OTDOAInformationRequest {
   lppa_OTDOAInformationRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_OTDOAInformationRequest;

EXTERN int asn1PE_lppa_OTDOAInformationRequest (OSCTXT* pctxt, lppa_OTDOAInformationRequest* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationRequest (OSCTXT* pctxt, lppa_OTDOAInformationRequest* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationRequest 
   (const char* name, const lppa_OTDOAInformationRequest* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationRequest (const char* name, 
   lppa_OTDOAInformationRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationRequest (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationRequest* pvalue);

EXTERN void asn1Copy_lppa_OTDOAInformationRequest (OSCTXT* pctxt, 
   const lppa_OTDOAInformationRequest* pSrcValue, lppa_OTDOAInformationRequest*
    pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationRequest (
   lppa_OTDOAInformationRequest* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationRequest (OSCTXT *pctxt, 
   lppa_OTDOAInformationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationRequest_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationRequest'
*/
typedef struct EXTERN lppa_UTDOAInformationRequest_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_UTDOAInformationRequest_IEs_TVALUE t;

      /**
       * UTDOAInformationRequest-IEs information objects
       */
      union {
         /**
          * id: id-RequestedSRSTransmissionCharacteristics
          * criticality: ignore
          * presence: optional
          */
         lppa_RequestedSRSTransmissionCharacteristics *_lppa_UTDOAInformationRequest_IEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_UTDOAInformationRequest_protocolIEs_element;

EXTERN int asn1PE_lppa_UTDOAInformationRequest_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationRequest_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationRequest_protocolIEs_element 
   (const char* name, const lppa_UTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationRequest_protocolIEs_element (
   const char* name, lppa_UTDOAInformationRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationRequest_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_UTDOAInformationRequest_protocolIEs_element* pSrcValue, 
   lppa_UTDOAInformationRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationRequest_protocolIEs_element (
   lppa_UTDOAInformationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationRequest_protocolIEs_element (OSCTXT *pctxt, 
   lppa_UTDOAInformationRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationRequest_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationRequest'
*/
/* List of lppa_UTDOAInformationRequest_protocolIEs_element */
typedef OSRTDList lppa_UTDOAInformationRequest_protocolIEs;

EXTERN int asn1PE_lppa_UTDOAInformationRequest_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationRequest_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationRequest_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationRequest_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationRequest_protocolIEs 
   (const char* name, const lppa_UTDOAInformationRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationRequest_protocolIEs (const char* name, 
   lppa_UTDOAInformationRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationRequest_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_UTDOAInformationRequest_protocolIEs_element* 
   asn1Get_lppa_UTDOAInformationRequest_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_UTDOAInformationRequest_protocolIEs* plist);

EXTERN void asn1Copy_lppa_UTDOAInformationRequest_protocolIEs (OSCTXT* pctxt, 
   const lppa_UTDOAInformationRequest_protocolIEs* pSrcValue, 
   lppa_UTDOAInformationRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationRequest_protocolIEs (
   lppa_UTDOAInformationRequest_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationRequest_protocolIEs (OSCTXT *pctxt, 
   lppa_UTDOAInformationRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationRequest                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UTDOA INFORMATION REQUEST

 **************************************************************

UTDOAInformationRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({UTDOAInformationRequest-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({UTDOAInformationRequest-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({UTDOAInformationRequest-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_UTDOAInformationRequest {
   lppa_UTDOAInformationRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_UTDOAInformationRequest;

EXTERN int asn1PE_lppa_UTDOAInformationRequest (OSCTXT* pctxt, lppa_UTDOAInformationRequest* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationRequest (OSCTXT* pctxt, lppa_UTDOAInformationRequest* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationRequest 
   (const char* name, const lppa_UTDOAInformationRequest* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationRequest (const char* name, 
   lppa_UTDOAInformationRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationRequest (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationRequest* pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationRequest (OSCTXT* pctxt, 
   const lppa_UTDOAInformationRequest* pSrcValue, lppa_UTDOAInformationRequest*
    pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationRequest (
   lppa_UTDOAInformationRequest* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationRequest (OSCTXT *pctxt, 
   lppa_UTDOAInformationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementFailureIndication_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementFailureIndication'
*/
typedef struct EXTERN lppa_E_CIDMeasurementFailureIndication_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_E_CIDMeasurementFailureIndication_IEs_TVALUE t;

      /**
       * E-CIDMeasurementFailureIndication-IEs information objects
       */
      union {
         /**
          * id: id-E-SMLC-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementFailureIndication_IEs_1;
         /**
          * id: id-eNB-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementFailureIndication_IEs_2;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         lppa_Cause *_lppa_E_CIDMeasurementFailureIndication_IEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_E_CIDMeasurementFailureIndication_protocolIEs_element;

EXTERN int asn1PE_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element 
   (const char* name, const lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element (
   const char* name, 
   lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element_lppa_E_CIDMeasurementFailureIndication_IEs_1
   (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element_lppa_E_CIDMeasurementFailureIndication_IEs_2
   (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element_lppa_E_CIDMeasurementFailureIndication_IEs_3
   (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pElem
   , lppa_Cause *pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pSrcValue, 
   lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element (
   lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementFailureIndication_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementFailureIndication'
*/
/* List of lppa_E_CIDMeasurementFailureIndication_protocolIEs_element */
typedef OSRTDList lppa_E_CIDMeasurementFailureIndication_protocolIEs;

EXTERN int asn1PE_lppa_E_CIDMeasurementFailureIndication_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementFailureIndication_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementFailureIndication_protocolIEs 
   (const char* name, const lppa_E_CIDMeasurementFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementFailureIndication_protocolIEs (
   const char* name, 
   lppa_E_CIDMeasurementFailureIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementFailureIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementFailureIndication_protocolIEs* pvalue);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementFailureIndication_protocolIEs_1
      (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs* plist
   , lppa_Measurement_ID value);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementFailureIndication_protocolIEs_2
      (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs* plist
   , lppa_Measurement_ID value);

/* Append IE with value type lppa_Cause to list */
struct lppa_Cause ;
EXTERN int asn1Append_lppa_E_CIDMeasurementFailureIndication_protocolIEs_3
      (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication_protocolIEs* plist
   , struct lppa_Cause *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_E_CIDMeasurementFailureIndication_protocolIEs_element* 
   asn1Get_lppa_E_CIDMeasurementFailureIndication_protocolIEs 
   (lppa_ProtocolIE_ID id, 
   lppa_E_CIDMeasurementFailureIndication_protocolIEs* plist);

EXTERN void asn1Copy_lppa_E_CIDMeasurementFailureIndication_protocolIEs (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementFailureIndication_protocolIEs* pSrcValue, 
   lppa_E_CIDMeasurementFailureIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementFailureIndication_protocolIEs (
   lppa_E_CIDMeasurementFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementFailureIndication_protocolIEs (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementFailureIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementFailureIndication                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-CID MEASUREMENT FAILURE INDICATION

 **************************************************************

E-CIDMeasurementFailureIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({E-CIDMeasurementFailureIndication-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({E-CIDMeasurementFailureIndication-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({E-CIDMeasurementFailureIndication-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_E_CIDMeasurementFailureIndication {
   lppa_E_CIDMeasurementFailureIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_E_CIDMeasurementFailureIndication;

EXTERN int asn1PE_lppa_E_CIDMeasurementFailureIndication (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementFailureIndication (OSCTXT* pctxt, lppa_E_CIDMeasurementFailureIndication* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementFailureIndication 
   (const char* name, const lppa_E_CIDMeasurementFailureIndication* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementFailureIndication (const char* name, 
   lppa_E_CIDMeasurementFailureIndication* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementFailureIndication (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementFailureIndication* pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementFailureIndication (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementFailureIndication* pSrcValue, 
   lppa_E_CIDMeasurementFailureIndication* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementFailureIndication (
   lppa_E_CIDMeasurementFailureIndication* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementFailureIndication (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementFailureIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementReport_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementReport'
*/
typedef struct EXTERN lppa_E_CIDMeasurementReport_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_E_CIDMeasurementReport_IEs_TVALUE t;

      /**
       * E-CIDMeasurementReport-IEs information objects
       */
      union {
         /**
          * id: id-E-SMLC-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementReport_IEs_1;
         /**
          * id: id-eNB-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementReport_IEs_2;
         /**
          * id: id-E-CID-MeasurementResult
          * criticality: ignore
          * presence: mandatory
          */
         lppa_E_CID_MeasurementResult *_lppa_E_CIDMeasurementReport_IEs_3;
         /**
          * id: id-Cell-Portion-ID
          * criticality: ignore
          * presence: optional
          */
         lppa_Cell_Portion_ID _lppa_E_CIDMeasurementReport_IEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_E_CIDMeasurementReport_protocolIEs_element;

EXTERN int asn1PE_lppa_E_CIDMeasurementReport_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementReport_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementReport_protocolIEs_element 
   (const char* name, const lppa_E_CIDMeasurementReport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementReport_protocolIEs_element (
   const char* name, lppa_E_CIDMeasurementReport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementReport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementReport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementReport_protocolIEs_element_lppa_E_CIDMeasurementReport_IEs_1
   (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs_element* pElem, 
   lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementReport_protocolIEs_element_lppa_E_CIDMeasurementReport_IEs_2
   (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs_element* pElem, 
   lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementReport_protocolIEs_element_lppa_E_CIDMeasurementReport_IEs_3
   (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs_element* pElem, 
   lppa_E_CID_MeasurementResult *pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementReport_protocolIEs_element_lppa_E_CIDMeasurementReport_IEs_4
   (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs_element* pElem, 
   lppa_Cell_Portion_ID value);

EXTERN void asn1Copy_lppa_E_CIDMeasurementReport_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementReport_protocolIEs_element* pSrcValue, 
   lppa_E_CIDMeasurementReport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementReport_protocolIEs_element (
   lppa_E_CIDMeasurementReport_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementReport_protocolIEs_element (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementReport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementReport_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementReport'
*/
/* List of lppa_E_CIDMeasurementReport_protocolIEs_element */
typedef OSRTDList lppa_E_CIDMeasurementReport_protocolIEs;

EXTERN int asn1PE_lppa_E_CIDMeasurementReport_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementReport_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementReport_protocolIEs 
   (const char* name, const lppa_E_CIDMeasurementReport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementReport_protocolIEs (const char* name, 
   lppa_E_CIDMeasurementReport_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementReport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementReport_protocolIEs* pvalue);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementReport_protocolIEs_1
      (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs* plist, 
   lppa_Measurement_ID value);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementReport_protocolIEs_2
      (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs* plist, 
   lppa_Measurement_ID value);

/* Append IE with value type lppa_E_CID_MeasurementResult to list */
struct lppa_E_CID_MeasurementResult ;
EXTERN int asn1Append_lppa_E_CIDMeasurementReport_protocolIEs_3
      (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs* plist, struct 
   lppa_E_CID_MeasurementResult *pvalue);

/* Append IE with value type lppa_Cell_Portion_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementReport_protocolIEs_4
      (OSCTXT* pctxt, lppa_E_CIDMeasurementReport_protocolIEs* plist, 
   lppa_Cell_Portion_ID value);

/* Get IE using id key value */
EXTERN struct lppa_E_CIDMeasurementReport_protocolIEs_element* 
   asn1Get_lppa_E_CIDMeasurementReport_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_E_CIDMeasurementReport_protocolIEs* plist);

EXTERN void asn1Copy_lppa_E_CIDMeasurementReport_protocolIEs (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementReport_protocolIEs* pSrcValue, 
   lppa_E_CIDMeasurementReport_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementReport_protocolIEs (
   lppa_E_CIDMeasurementReport_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementReport_protocolIEs (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementReport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementReport                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-CID MEASUREMENT REPORT

 **************************************************************

E-CIDMeasurementReport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({E-CIDMeasurementReport-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({E-CIDMeasurementReport-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({E-CIDMeasurementReport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_E_CIDMeasurementReport {
   lppa_E_CIDMeasurementReport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_E_CIDMeasurementReport;

EXTERN int asn1PE_lppa_E_CIDMeasurementReport (OSCTXT* pctxt, lppa_E_CIDMeasurementReport* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementReport (OSCTXT* pctxt, lppa_E_CIDMeasurementReport* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementReport 
   (const char* name, const lppa_E_CIDMeasurementReport* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementReport (const char* name, 
   lppa_E_CIDMeasurementReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementReport (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementReport* pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementReport (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementReport* pSrcValue, lppa_E_CIDMeasurementReport*
    pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementReport (lppa_E_CIDMeasurementReport* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementReport (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementReport* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementTerminationCommand_protocolIEs_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementTerminationCommand'
*/
typedef struct EXTERN lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_E_CIDMeasurementTerminationCommand_IEs_TVALUE t;

      /**
       * E-CIDMeasurementTerminationCommand-IEs information objects
       */
      union {
         /**
          * id: id-E-SMLC-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementTerminationCommand_IEs_1;
         /**
          * id: id-eNB-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementTerminationCommand_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element;

EXTERN int asn1PE_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element 
   (const char* name, const lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element (
   const char* name, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element_lppa_E_CIDMeasurementTerminationCommand_IEs_1
   (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element_lppa_E_CIDMeasurementTerminationCommand_IEs_2
   (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1Copy_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pSrcValue, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element (
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementTerminationCommand_protocolIEs            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementTerminationCommand'
*/
/* List of lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element */
typedef OSRTDList lppa_E_CIDMeasurementTerminationCommand_protocolIEs;

EXTERN int asn1PE_lppa_E_CIDMeasurementTerminationCommand_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementTerminationCommand_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementTerminationCommand_protocolIEs 
   (const char* name, const lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementTerminationCommand_protocolIEs (
   const char* name, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementTerminationCommand_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pvalue);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_1
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs* plist, 
   lppa_Measurement_ID value);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementTerminationCommand_protocolIEs_2
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs* plist, 
   lppa_Measurement_ID value);

/* Get IE using id key value */
EXTERN struct lppa_E_CIDMeasurementTerminationCommand_protocolIEs_element* 
   asn1Get_lppa_E_CIDMeasurementTerminationCommand_protocolIEs 
   (lppa_ProtocolIE_ID id, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs* plist);

EXTERN void asn1Copy_lppa_E_CIDMeasurementTerminationCommand_protocolIEs (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pSrcValue, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementTerminationCommand_protocolIEs (
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementTerminationCommand_protocolIEs (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementTerminationCommand                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-CID MEASUREMENT TERMINATION 

 **************************************************************

E-CIDMeasurementTerminationCommand ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({E-CIDMeasurementTerminationCommand-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({E-CIDMeasurementTerminationCommand-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({E-CIDMeasurementTerminationCommand-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_E_CIDMeasurementTerminationCommand {
   lppa_E_CIDMeasurementTerminationCommand_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_E_CIDMeasurementTerminationCommand;

EXTERN int asn1PE_lppa_E_CIDMeasurementTerminationCommand (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementTerminationCommand (OSCTXT* pctxt, lppa_E_CIDMeasurementTerminationCommand* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementTerminationCommand 
   (const char* name, const lppa_E_CIDMeasurementTerminationCommand* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementTerminationCommand (const char* name, 
   lppa_E_CIDMeasurementTerminationCommand* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementTerminationCommand (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementTerminationCommand* pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementTerminationCommand (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementTerminationCommand* pSrcValue, 
   lppa_E_CIDMeasurementTerminationCommand* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementTerminationCommand (
   lppa_E_CIDMeasurementTerminationCommand* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementTerminationCommand (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementTerminationCommand* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ErrorIndication'
*/
typedef struct EXTERN lppa_ErrorIndication_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_ErrorIndication_IEs_TVALUE t;

      /**
       * ErrorIndication-IEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: optional
          */
         lppa_Cause *_lppa_ErrorIndication_IEs_1;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         lppa_CriticalityDiagnostics *_lppa_ErrorIndication_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_ErrorIndication_protocolIEs_element;

EXTERN int asn1PE_lppa_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, lppa_ErrorIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, lppa_ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_ErrorIndication_protocolIEs_element 
   (const char* name, const lppa_ErrorIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_ErrorIndication_protocolIEs_element (const char* name, 
   lppa_ErrorIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ErrorIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_ErrorIndication_protocolIEs_element_lppa_ErrorIndication_IEs_1
   (OSCTXT* pctxt, lppa_ErrorIndication_protocolIEs_element* pElem, lppa_Cause 
   *pvalue);

EXTERN void asn1SetTC_lppa_ErrorIndication_protocolIEs_element_lppa_ErrorIndication_IEs_2
   (OSCTXT* pctxt, lppa_ErrorIndication_protocolIEs_element* pElem, 
   lppa_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_lppa_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_ErrorIndication_protocolIEs_element* pSrcValue, 
   lppa_ErrorIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_ErrorIndication_protocolIEs_element (
   lppa_ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_ErrorIndication_protocolIEs_element (OSCTXT *pctxt, 
   lppa_ErrorIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ErrorIndication'
*/
/* List of lppa_ErrorIndication_protocolIEs_element */
typedef OSRTDList lppa_ErrorIndication_protocolIEs;

EXTERN int asn1PE_lppa_ErrorIndication_protocolIEs (OSCTXT* pctxt, lppa_ErrorIndication_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_ErrorIndication_protocolIEs (OSCTXT* pctxt, lppa_ErrorIndication_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_ErrorIndication_protocolIEs 
   (const char* name, const lppa_ErrorIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_ErrorIndication_protocolIEs (const char* name, 
   lppa_ErrorIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ErrorIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_ErrorIndication_protocolIEs* pvalue);

/* Append IE with value type lppa_Cause to list */
struct lppa_Cause ;
EXTERN int asn1Append_lppa_ErrorIndication_protocolIEs_1   (OSCTXT* pctxt, 
   lppa_ErrorIndication_protocolIEs* plist, struct lppa_Cause *pvalue);

/* Append IE with value type lppa_CriticalityDiagnostics to list */
struct lppa_CriticalityDiagnostics ;
EXTERN int asn1Append_lppa_ErrorIndication_protocolIEs_2   (OSCTXT* pctxt, 
   lppa_ErrorIndication_protocolIEs* plist, struct lppa_CriticalityDiagnostics 
   *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_ErrorIndication_protocolIEs_element* 
   asn1Get_lppa_ErrorIndication_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_ErrorIndication_protocolIEs* plist);

EXTERN void asn1Copy_lppa_ErrorIndication_protocolIEs (OSCTXT* pctxt, 
   const lppa_ErrorIndication_protocolIEs* pSrcValue, 
   lppa_ErrorIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_ErrorIndication_protocolIEs (
   lppa_ErrorIndication_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_ErrorIndication_protocolIEs (OSCTXT *pctxt, 
   lppa_ErrorIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 ERROR INDICATION

 **************************************************************

ErrorIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({ErrorIndication-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({ErrorIndication-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({ErrorIndication-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_ErrorIndication {
   lppa_ErrorIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_ErrorIndication;

EXTERN int asn1PE_lppa_ErrorIndication (OSCTXT* pctxt, lppa_ErrorIndication* pvalue);

EXTERN int asn1PD_lppa_ErrorIndication (OSCTXT* pctxt, lppa_ErrorIndication* pvalue);

EXTERN void asn1Print_lppa_ErrorIndication 
   (const char* name, const lppa_ErrorIndication* pvalue);

EXTERN int asn1PrtToStr_lppa_ErrorIndication (const char* name, 
   lppa_ErrorIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_ErrorIndication (OSCTXT *pctxt, 
   const char* name, const lppa_ErrorIndication* pvalue);

EXTERN void asn1Copy_lppa_ErrorIndication (OSCTXT* pctxt, 
   const lppa_ErrorIndication* pSrcValue, lppa_ErrorIndication* pDstValue);

EXTERN int asn1Init_lppa_ErrorIndication (lppa_ErrorIndication* pvalue);

EXTERN void asn1Free_lppa_ErrorIndication (OSCTXT *pctxt, 
   lppa_ErrorIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage_privateIEs_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PrivateMessage'
*/
typedef struct EXTERN lppa_PrivateMessage_privateIEs_element {
   lppa_PrivateIE_ID id;
   lppa_Criticality criticality;
   ASN1OpenType value;
} lppa_PrivateMessage_privateIEs_element;

EXTERN int asn1PE_lppa_PrivateMessage_privateIEs_element (OSCTXT* pctxt, lppa_PrivateMessage_privateIEs_element* pvalue);

EXTERN int asn1PD_lppa_PrivateMessage_privateIEs_element (OSCTXT* pctxt, lppa_PrivateMessage_privateIEs_element* pvalue);

EXTERN void asn1Print_lppa_PrivateMessage_privateIEs_element 
   (const char* name, const lppa_PrivateMessage_privateIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_PrivateMessage_privateIEs_element (const char* name, 
   lppa_PrivateMessage_privateIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PrivateMessage_privateIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_PrivateMessage_privateIEs_element* pvalue);

EXTERN void asn1Copy_lppa_PrivateMessage_privateIEs_element (OSCTXT* pctxt, 
   const lppa_PrivateMessage_privateIEs_element* pSrcValue, 
   lppa_PrivateMessage_privateIEs_element* pDstValue);

EXTERN int asn1Init_lppa_PrivateMessage_privateIEs_element (
   lppa_PrivateMessage_privateIEs_element* pvalue);

EXTERN void asn1Free_lppa_PrivateMessage_privateIEs_element (OSCTXT *pctxt, 
   lppa_PrivateMessage_privateIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage_privateIEs                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PrivateMessage'
*/
/* List of lppa_PrivateMessage_privateIEs_element */
typedef OSRTDList lppa_PrivateMessage_privateIEs;

EXTERN int asn1PE_lppa_PrivateMessage_privateIEs (OSCTXT* pctxt, lppa_PrivateMessage_privateIEs* pvalue);

EXTERN int asn1PD_lppa_PrivateMessage_privateIEs (OSCTXT* pctxt, lppa_PrivateMessage_privateIEs* pvalue);

EXTERN void asn1Print_lppa_PrivateMessage_privateIEs 
   (const char* name, const lppa_PrivateMessage_privateIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_PrivateMessage_privateIEs (const char* name, 
   lppa_PrivateMessage_privateIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PrivateMessage_privateIEs (OSCTXT *pctxt, 
   const char* name, const lppa_PrivateMessage_privateIEs* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_PrivateMessage_privateIEs_element* 
   asn1Get_lppa_PrivateMessage_privateIEs (lppa_PrivateIE_ID* id, 
   lppa_PrivateMessage_privateIEs* plist);

EXTERN void asn1Copy_lppa_PrivateMessage_privateIEs (OSCTXT* pctxt, 
   const lppa_PrivateMessage_privateIEs* pSrcValue, 
   lppa_PrivateMessage_privateIEs* pDstValue);

EXTERN int asn1Init_lppa_PrivateMessage_privateIEs (
   lppa_PrivateMessage_privateIEs* pvalue);

EXTERN void asn1Free_lppa_PrivateMessage_privateIEs (OSCTXT *pctxt, 
   lppa_PrivateMessage_privateIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 PRIVATE MESSAGE

 **************************************************************

PrivateMessage ::= SEQUENCE {
   privateIEs [0] SEQUENCE (SIZE (1..maxPrivateIEs)) OF SEQUENCE {
      id [0] LPPA-PRIVATE-IES.&id ({PrivateMessage-IEs}),
      criticality [1] LPPA-PRIVATE-IES.&criticality ({PrivateMessage-IEs}{@id}),
      value [2] LPPA-PRIVATE-IES.&Value ({PrivateMessage-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_PrivateMessage {
   lppa_PrivateMessage_privateIEs privateIEs;
   OSRTDList extElem1;
} lppa_PrivateMessage;

EXTERN int asn1PE_lppa_PrivateMessage (OSCTXT* pctxt, lppa_PrivateMessage* pvalue);

EXTERN int asn1PD_lppa_PrivateMessage (OSCTXT* pctxt, lppa_PrivateMessage* pvalue);

EXTERN void asn1Print_lppa_PrivateMessage 
   (const char* name, const lppa_PrivateMessage* pvalue);

EXTERN int asn1PrtToStr_lppa_PrivateMessage (const char* name, 
   lppa_PrivateMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_PrivateMessage (OSCTXT *pctxt, 
   const char* name, const lppa_PrivateMessage* pvalue);

EXTERN void asn1Copy_lppa_PrivateMessage (OSCTXT* pctxt, 
   const lppa_PrivateMessage* pSrcValue, lppa_PrivateMessage* pDstValue);

EXTERN int asn1Init_lppa_PrivateMessage (lppa_PrivateMessage* pvalue);

EXTERN void asn1Free_lppa_PrivateMessage (OSCTXT *pctxt, lppa_PrivateMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationUpdate_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationUpdate'
*/
typedef struct EXTERN lppa_UTDOAInformationUpdate_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_UTDOAInformationUpdate_IEs_TVALUE t;

      /**
       * UTDOAInformationUpdate-IEs information objects
       */
      union {
         /**
          * id: id-ULConfiguration
          * criticality: ignore
          * presence: optional
          */
         lppa_ULConfiguration *_lppa_UTDOAInformationUpdate_IEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_UTDOAInformationUpdate_protocolIEs_element;

EXTERN int asn1PE_lppa_UTDOAInformationUpdate_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationUpdate_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationUpdate_protocolIEs_element 
   (const char* name, const lppa_UTDOAInformationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationUpdate_protocolIEs_element (
   const char* name, lppa_UTDOAInformationUpdate_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationUpdate_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_UTDOAInformationUpdate_protocolIEs_element* pSrcValue, 
   lppa_UTDOAInformationUpdate_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationUpdate_protocolIEs_element (
   lppa_UTDOAInformationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   lppa_UTDOAInformationUpdate_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationUpdate_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationUpdate'
*/
/* List of lppa_UTDOAInformationUpdate_protocolIEs_element */
typedef OSRTDList lppa_UTDOAInformationUpdate_protocolIEs;

EXTERN int asn1PE_lppa_UTDOAInformationUpdate_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationUpdate_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationUpdate_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationUpdate_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationUpdate_protocolIEs 
   (const char* name, const lppa_UTDOAInformationUpdate_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationUpdate_protocolIEs (const char* name, 
   lppa_UTDOAInformationUpdate_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationUpdate_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationUpdate_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct lppa_UTDOAInformationUpdate_protocolIEs_element* 
   asn1Get_lppa_UTDOAInformationUpdate_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_UTDOAInformationUpdate_protocolIEs* plist);

EXTERN void asn1Copy_lppa_UTDOAInformationUpdate_protocolIEs (OSCTXT* pctxt, 
   const lppa_UTDOAInformationUpdate_protocolIEs* pSrcValue, 
   lppa_UTDOAInformationUpdate_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationUpdate_protocolIEs (
   lppa_UTDOAInformationUpdate_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationUpdate_protocolIEs (OSCTXT *pctxt, 
   lppa_UTDOAInformationUpdate_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationUpdate                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UTDOA INFORMATION UPDATE

 **************************************************************

UTDOAInformationUpdate ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({UTDOAInformationUpdate-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({UTDOAInformationUpdate-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({UTDOAInformationUpdate-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_UTDOAInformationUpdate {
   lppa_UTDOAInformationUpdate_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_UTDOAInformationUpdate;

EXTERN int asn1PE_lppa_UTDOAInformationUpdate (OSCTXT* pctxt, lppa_UTDOAInformationUpdate* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationUpdate (OSCTXT* pctxt, lppa_UTDOAInformationUpdate* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationUpdate 
   (const char* name, const lppa_UTDOAInformationUpdate* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationUpdate (const char* name, 
   lppa_UTDOAInformationUpdate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationUpdate (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationUpdate* pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationUpdate (OSCTXT* pctxt, 
   const lppa_UTDOAInformationUpdate* pSrcValue, lppa_UTDOAInformationUpdate*
    pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationUpdate (lppa_UTDOAInformationUpdate* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationUpdate (OSCTXT *pctxt, 
   lppa_UTDOAInformationUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationResponse_protocolIEs_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementInitiationResponse'
*/
typedef struct EXTERN lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_E_CIDMeasurementInitiationResponse_IEs_TVALUE t;

      /**
       * E-CIDMeasurementInitiationResponse-IEs information objects
       */
      union {
         /**
          * id: id-E-SMLC-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementInitiationResponse_IEs_1;
         /**
          * id: id-eNB-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementInitiationResponse_IEs_2;
         /**
          * id: id-E-CID-MeasurementResult
          * criticality: ignore
          * presence: optional
          */
         lppa_E_CID_MeasurementResult *_lppa_E_CIDMeasurementInitiationResponse_IEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         lppa_CriticalityDiagnostics *_lppa_E_CIDMeasurementInitiationResponse_IEs_4;
         /**
          * id: id-Cell-Portion-ID
          * criticality: ignore
          * presence: optional
          */
         lppa_Cell_Portion_ID _lppa_E_CIDMeasurementInitiationResponse_IEs_5;
         /**
          * id: id-InterRATMeasurementResult
          * criticality: ignore
          * presence: optional
          */
         lppa_InterRATMeasurementResult *_lppa_E_CIDMeasurementInitiationResponse_IEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element 
   (const char* name, const lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element (
   const char* name, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element_lppa_E_CIDMeasurementInitiationResponse_IEs_1
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element_lppa_E_CIDMeasurementInitiationResponse_IEs_2
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element_lppa_E_CIDMeasurementInitiationResponse_IEs_3
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pElem
   , lppa_E_CID_MeasurementResult *pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element_lppa_E_CIDMeasurementInitiationResponse_IEs_4
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pElem
   , lppa_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element_lppa_E_CIDMeasurementInitiationResponse_IEs_5
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pElem
   , lppa_Cell_Portion_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element_lppa_E_CIDMeasurementInitiationResponse_IEs_6
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pElem
   , lppa_InterRATMeasurementResult *pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pSrcValue, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element (
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationResponse_protocolIEs            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementInitiationResponse'
*/
/* List of lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element */
typedef OSRTDList lppa_E_CIDMeasurementInitiationResponse_protocolIEs;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationResponse_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationResponse_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationResponse_protocolIEs 
   (const char* name, const lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationResponse_protocolIEs (
   const char* name, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pvalue);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_1
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* plist, 
   lppa_Measurement_ID value);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_2
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* plist, 
   lppa_Measurement_ID value);

/* Append IE with value type lppa_E_CID_MeasurementResult to list */
struct lppa_E_CID_MeasurementResult ;
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_3
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* plist, struct 
   lppa_E_CID_MeasurementResult *pvalue);

/* Append IE with value type lppa_CriticalityDiagnostics to list */
struct lppa_CriticalityDiagnostics ;
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_4
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* plist, struct 
   lppa_CriticalityDiagnostics *pvalue);

/* Append IE with value type lppa_Cell_Portion_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_5
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* plist, 
   lppa_Cell_Portion_ID value);

/* Append IE with value type lppa_InterRATMeasurementResult to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationResponse_protocolIEs_6
      (OSCTXT* pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* plist, 
   lppa_InterRATMeasurementResult *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_E_CIDMeasurementInitiationResponse_protocolIEs_element* 
   asn1Get_lppa_E_CIDMeasurementInitiationResponse_protocolIEs 
   (lppa_ProtocolIE_ID id, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* plist);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationResponse_protocolIEs (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pSrcValue, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationResponse_protocolIEs (
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationResponse_protocolIEs (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationResponse                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-CID MEASUREMENT INITIATION RESPONSE

 **************************************************************

E-CIDMeasurementInitiationResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({E-CIDMeasurementInitiationResponse-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({E-CIDMeasurementInitiationResponse-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({E-CIDMeasurementInitiationResponse-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_E_CIDMeasurementInitiationResponse {
   lppa_E_CIDMeasurementInitiationResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_E_CIDMeasurementInitiationResponse;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationResponse (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationResponse (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationResponse* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationResponse 
   (const char* name, const lppa_E_CIDMeasurementInitiationResponse* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationResponse (const char* name, 
   lppa_E_CIDMeasurementInitiationResponse* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationResponse (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationResponse* pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationResponse (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationResponse* pSrcValue, 
   lppa_E_CIDMeasurementInitiationResponse* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationResponse (
   lppa_E_CIDMeasurementInitiationResponse* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationResponse (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationResponse_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOAInformationResponse'
*/
typedef struct EXTERN lppa_OTDOAInformationResponse_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_OTDOAInformationResponse_IEs_TVALUE t;

      /**
       * OTDOAInformationResponse-IEs information objects
       */
      union {
         /**
          * id: id-OTDOACells
          * criticality: ignore
          * presence: mandatory
          */
         lppa_OTDOACells *_lppa_OTDOAInformationResponse_IEs_1;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         lppa_CriticalityDiagnostics *_lppa_OTDOAInformationResponse_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_OTDOAInformationResponse_protocolIEs_element;

EXTERN int asn1PE_lppa_OTDOAInformationResponse_protocolIEs_element (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationResponse_protocolIEs_element (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationResponse_protocolIEs_element 
   (const char* name, const lppa_OTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationResponse_protocolIEs_element (
   const char* name, 
   lppa_OTDOAInformationResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_OTDOAInformationResponse_protocolIEs_element_lppa_OTDOAInformationResponse_IEs_1
   (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs_element* pElem, 
   lppa_OTDOACells *pvalue);

EXTERN void asn1SetTC_lppa_OTDOAInformationResponse_protocolIEs_element_lppa_OTDOAInformationResponse_IEs_2
   (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs_element* pElem, 
   lppa_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_lppa_OTDOAInformationResponse_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_OTDOAInformationResponse_protocolIEs_element* pSrcValue, 
   lppa_OTDOAInformationResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationResponse_protocolIEs_element (
   lppa_OTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationResponse_protocolIEs_element (OSCTXT *pctxt, 
   lppa_OTDOAInformationResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationResponse_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOAInformationResponse'
*/
/* List of lppa_OTDOAInformationResponse_protocolIEs_element */
typedef OSRTDList lppa_OTDOAInformationResponse_protocolIEs;

EXTERN int asn1PE_lppa_OTDOAInformationResponse_protocolIEs (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationResponse_protocolIEs (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationResponse_protocolIEs 
   (const char* name, const lppa_OTDOAInformationResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationResponse_protocolIEs (const char* name, 
   lppa_OTDOAInformationResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationResponse_protocolIEs* pvalue);

/* Append IE with value type lppa_OTDOACells to list */
EXTERN int asn1Append_lppa_OTDOAInformationResponse_protocolIEs_1
      (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs* plist, 
   lppa_OTDOACells *pvalue);

/* Append IE with value type lppa_CriticalityDiagnostics to list */
struct lppa_CriticalityDiagnostics ;
EXTERN int asn1Append_lppa_OTDOAInformationResponse_protocolIEs_2
      (OSCTXT* pctxt, lppa_OTDOAInformationResponse_protocolIEs* plist, struct 
   lppa_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_OTDOAInformationResponse_protocolIEs_element* 
   asn1Get_lppa_OTDOAInformationResponse_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_OTDOAInformationResponse_protocolIEs* plist);

EXTERN void asn1Copy_lppa_OTDOAInformationResponse_protocolIEs (OSCTXT* pctxt, 
   const lppa_OTDOAInformationResponse_protocolIEs* pSrcValue, 
   lppa_OTDOAInformationResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationResponse_protocolIEs (
   lppa_OTDOAInformationResponse_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationResponse_protocolIEs (OSCTXT *pctxt, 
   lppa_OTDOAInformationResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationResponse                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 OTDOA INFORMATION RESPONSE

 **************************************************************

OTDOAInformationResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({OTDOAInformationResponse-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({OTDOAInformationResponse-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({OTDOAInformationResponse-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_OTDOAInformationResponse {
   lppa_OTDOAInformationResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_OTDOAInformationResponse;

EXTERN int asn1PE_lppa_OTDOAInformationResponse (OSCTXT* pctxt, lppa_OTDOAInformationResponse* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationResponse (OSCTXT* pctxt, lppa_OTDOAInformationResponse* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationResponse 
   (const char* name, const lppa_OTDOAInformationResponse* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationResponse (const char* name, 
   lppa_OTDOAInformationResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationResponse (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationResponse* pvalue);

EXTERN void asn1Copy_lppa_OTDOAInformationResponse (OSCTXT* pctxt, 
   const lppa_OTDOAInformationResponse* pSrcValue, 
   lppa_OTDOAInformationResponse* pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationResponse (
   lppa_OTDOAInformationResponse* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationResponse (OSCTXT *pctxt, 
   lppa_OTDOAInformationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationResponse_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationResponse'
*/
typedef struct EXTERN lppa_UTDOAInformationResponse_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_UTDOAInformationResponse_IEs_TVALUE t;

      /**
       * UTDOAInformationResponse-IEs information objects
       */
      union {
         /**
          * id: id-ULConfiguration
          * criticality: reject
          * presence: mandatory
          */
         lppa_ULConfiguration *_lppa_UTDOAInformationResponse_IEs_1;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         lppa_CriticalityDiagnostics *_lppa_UTDOAInformationResponse_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_UTDOAInformationResponse_protocolIEs_element;

EXTERN int asn1PE_lppa_UTDOAInformationResponse_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationResponse_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationResponse_protocolIEs_element 
   (const char* name, const lppa_UTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationResponse_protocolIEs_element (
   const char* name, 
   lppa_UTDOAInformationResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_UTDOAInformationResponse_protocolIEs_element_lppa_UTDOAInformationResponse_IEs_1
   (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs_element* pElem, 
   lppa_ULConfiguration *pvalue);

EXTERN void asn1SetTC_lppa_UTDOAInformationResponse_protocolIEs_element_lppa_UTDOAInformationResponse_IEs_2
   (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs_element* pElem, 
   lppa_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationResponse_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_UTDOAInformationResponse_protocolIEs_element* pSrcValue, 
   lppa_UTDOAInformationResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationResponse_protocolIEs_element (
   lppa_UTDOAInformationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationResponse_protocolIEs_element (OSCTXT *pctxt, 
   lppa_UTDOAInformationResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationResponse_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationResponse'
*/
/* List of lppa_UTDOAInformationResponse_protocolIEs_element */
typedef OSRTDList lppa_UTDOAInformationResponse_protocolIEs;

EXTERN int asn1PE_lppa_UTDOAInformationResponse_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationResponse_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationResponse_protocolIEs 
   (const char* name, const lppa_UTDOAInformationResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationResponse_protocolIEs (const char* name, 
   lppa_UTDOAInformationResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationResponse_protocolIEs* pvalue);

/* Append IE with value type lppa_ULConfiguration to list */
struct lppa_ULConfiguration ;
EXTERN int asn1Append_lppa_UTDOAInformationResponse_protocolIEs_1
      (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs* plist, struct 
   lppa_ULConfiguration *pvalue);

/* Append IE with value type lppa_CriticalityDiagnostics to list */
struct lppa_CriticalityDiagnostics ;
EXTERN int asn1Append_lppa_UTDOAInformationResponse_protocolIEs_2
      (OSCTXT* pctxt, lppa_UTDOAInformationResponse_protocolIEs* plist, struct 
   lppa_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_UTDOAInformationResponse_protocolIEs_element* 
   asn1Get_lppa_UTDOAInformationResponse_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_UTDOAInformationResponse_protocolIEs* plist);

EXTERN void asn1Copy_lppa_UTDOAInformationResponse_protocolIEs (OSCTXT* pctxt, 
   const lppa_UTDOAInformationResponse_protocolIEs* pSrcValue, 
   lppa_UTDOAInformationResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationResponse_protocolIEs (
   lppa_UTDOAInformationResponse_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationResponse_protocolIEs (OSCTXT *pctxt, 
   lppa_UTDOAInformationResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationResponse                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UTDOA INFORMATION RESPONSE

 **************************************************************

UTDOAInformationResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({UTDOAInformationResponse-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({UTDOAInformationResponse-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({UTDOAInformationResponse-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_UTDOAInformationResponse {
   lppa_UTDOAInformationResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_UTDOAInformationResponse;

EXTERN int asn1PE_lppa_UTDOAInformationResponse (OSCTXT* pctxt, lppa_UTDOAInformationResponse* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationResponse (OSCTXT* pctxt, lppa_UTDOAInformationResponse* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationResponse 
   (const char* name, const lppa_UTDOAInformationResponse* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationResponse (const char* name, 
   lppa_UTDOAInformationResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationResponse (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationResponse* pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationResponse (OSCTXT* pctxt, 
   const lppa_UTDOAInformationResponse* pSrcValue, 
   lppa_UTDOAInformationResponse* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationResponse (
   lppa_UTDOAInformationResponse* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationResponse (OSCTXT *pctxt, 
   lppa_UTDOAInformationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationFailure_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementInitiationFailure'
*/
typedef struct EXTERN lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_E_CIDMeasurementInitiationFailure_IEs_TVALUE t;

      /**
       * E-CIDMeasurementInitiationFailure-IEs information objects
       */
      union {
         /**
          * id: id-E-SMLC-UE-Measurement-ID
          * criticality: reject
          * presence: mandatory
          */
         lppa_Measurement_ID _lppa_E_CIDMeasurementInitiationFailure_IEs_1;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         lppa_Cause *_lppa_E_CIDMeasurementInitiationFailure_IEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         lppa_CriticalityDiagnostics *_lppa_E_CIDMeasurementInitiationFailure_IEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element 
   (const char* name, const lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element (
   const char* name, 
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element_lppa_E_CIDMeasurementInitiationFailure_IEs_1
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pElem
   , lppa_Measurement_ID value);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element_lppa_E_CIDMeasurementInitiationFailure_IEs_2
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pElem
   , lppa_Cause *pvalue);

EXTERN void asn1SetTC_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element_lppa_E_CIDMeasurementInitiationFailure_IEs_3
   (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pElem
   , lppa_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pSrcValue, 
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element (
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationFailure_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-CIDMeasurementInitiationFailure'
*/
/* List of lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element */
typedef OSRTDList lppa_E_CIDMeasurementInitiationFailure_protocolIEs;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationFailure_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationFailure_protocolIEs (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationFailure_protocolIEs 
   (const char* name, const lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationFailure_protocolIEs (
   const char* name, 
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pvalue);

/* Append IE with value type lppa_Measurement_ID to list */
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_1
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs* plist
   , lppa_Measurement_ID value);

/* Append IE with value type lppa_Cause to list */
struct lppa_Cause ;
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_2
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs* plist
   , struct lppa_Cause *pvalue);

/* Append IE with value type lppa_CriticalityDiagnostics to list */
struct lppa_CriticalityDiagnostics ;
EXTERN int asn1Append_lppa_E_CIDMeasurementInitiationFailure_protocolIEs_3
      (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure_protocolIEs* plist
   , struct lppa_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_E_CIDMeasurementInitiationFailure_protocolIEs_element* 
   asn1Get_lppa_E_CIDMeasurementInitiationFailure_protocolIEs 
   (lppa_ProtocolIE_ID id, 
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs* plist);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationFailure_protocolIEs (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pSrcValue, 
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationFailure_protocolIEs (
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationFailure_protocolIEs (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_CIDMeasurementInitiationFailure                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-CID MEASUREMENT INITIATION FAILURE

 **************************************************************

E-CIDMeasurementInitiationFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({E-CIDMeasurementInitiationFailure-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({E-CIDMeasurementInitiationFailure-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({E-CIDMeasurementInitiationFailure-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_E_CIDMeasurementInitiationFailure {
   lppa_E_CIDMeasurementInitiationFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_E_CIDMeasurementInitiationFailure;

EXTERN int asn1PE_lppa_E_CIDMeasurementInitiationFailure (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure* pvalue);

EXTERN int asn1PD_lppa_E_CIDMeasurementInitiationFailure (OSCTXT* pctxt, lppa_E_CIDMeasurementInitiationFailure* pvalue);

EXTERN void asn1Print_lppa_E_CIDMeasurementInitiationFailure 
   (const char* name, const lppa_E_CIDMeasurementInitiationFailure* pvalue);

EXTERN int asn1PrtToStr_lppa_E_CIDMeasurementInitiationFailure (const char* name, 
   lppa_E_CIDMeasurementInitiationFailure* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_E_CIDMeasurementInitiationFailure (OSCTXT *pctxt, 
   const char* name, const lppa_E_CIDMeasurementInitiationFailure* pvalue);

EXTERN void asn1Copy_lppa_E_CIDMeasurementInitiationFailure (OSCTXT* pctxt, 
   const lppa_E_CIDMeasurementInitiationFailure* pSrcValue, 
   lppa_E_CIDMeasurementInitiationFailure* pDstValue);

EXTERN int asn1Init_lppa_E_CIDMeasurementInitiationFailure (
   lppa_E_CIDMeasurementInitiationFailure* pvalue);

EXTERN void asn1Free_lppa_E_CIDMeasurementInitiationFailure (OSCTXT *pctxt, 
   lppa_E_CIDMeasurementInitiationFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationFailure_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOAInformationFailure'
*/
typedef struct EXTERN lppa_OTDOAInformationFailure_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_OTDOAInformationFailure_IEs_TVALUE t;

      /**
       * OTDOAInformationFailure-IEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         lppa_Cause *_lppa_OTDOAInformationFailure_IEs_1;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         lppa_CriticalityDiagnostics *_lppa_OTDOAInformationFailure_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_OTDOAInformationFailure_protocolIEs_element;

EXTERN int asn1PE_lppa_OTDOAInformationFailure_protocolIEs_element (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationFailure_protocolIEs_element (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationFailure_protocolIEs_element 
   (const char* name, const lppa_OTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationFailure_protocolIEs_element (
   const char* name, lppa_OTDOAInformationFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_OTDOAInformationFailure_protocolIEs_element_lppa_OTDOAInformationFailure_IEs_1
   (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs_element* pElem, 
   lppa_Cause *pvalue);

EXTERN void asn1SetTC_lppa_OTDOAInformationFailure_protocolIEs_element_lppa_OTDOAInformationFailure_IEs_2
   (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs_element* pElem, 
   lppa_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_lppa_OTDOAInformationFailure_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_OTDOAInformationFailure_protocolIEs_element* pSrcValue, 
   lppa_OTDOAInformationFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationFailure_protocolIEs_element (
   lppa_OTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationFailure_protocolIEs_element (OSCTXT *pctxt, 
   lppa_OTDOAInformationFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationFailure_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OTDOAInformationFailure'
*/
/* List of lppa_OTDOAInformationFailure_protocolIEs_element */
typedef OSRTDList lppa_OTDOAInformationFailure_protocolIEs;

EXTERN int asn1PE_lppa_OTDOAInformationFailure_protocolIEs (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationFailure_protocolIEs (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationFailure_protocolIEs 
   (const char* name, const lppa_OTDOAInformationFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationFailure_protocolIEs (const char* name, 
   lppa_OTDOAInformationFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationFailure_protocolIEs* pvalue);

/* Append IE with value type lppa_Cause to list */
struct lppa_Cause ;
EXTERN int asn1Append_lppa_OTDOAInformationFailure_protocolIEs_1
      (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs* plist, struct 
   lppa_Cause *pvalue);

/* Append IE with value type lppa_CriticalityDiagnostics to list */
struct lppa_CriticalityDiagnostics ;
EXTERN int asn1Append_lppa_OTDOAInformationFailure_protocolIEs_2
      (OSCTXT* pctxt, lppa_OTDOAInformationFailure_protocolIEs* plist, struct 
   lppa_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_OTDOAInformationFailure_protocolIEs_element* 
   asn1Get_lppa_OTDOAInformationFailure_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_OTDOAInformationFailure_protocolIEs* plist);

EXTERN void asn1Copy_lppa_OTDOAInformationFailure_protocolIEs (OSCTXT* pctxt, 
   const lppa_OTDOAInformationFailure_protocolIEs* pSrcValue, 
   lppa_OTDOAInformationFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationFailure_protocolIEs (
   lppa_OTDOAInformationFailure_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationFailure_protocolIEs (OSCTXT *pctxt, 
   lppa_OTDOAInformationFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  OTDOAInformationFailure                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 OTDOA INFORMATION FAILURE

 **************************************************************

OTDOAInformationFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({OTDOAInformationFailure-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({OTDOAInformationFailure-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({OTDOAInformationFailure-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_OTDOAInformationFailure {
   lppa_OTDOAInformationFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_OTDOAInformationFailure;

EXTERN int asn1PE_lppa_OTDOAInformationFailure (OSCTXT* pctxt, lppa_OTDOAInformationFailure* pvalue);

EXTERN int asn1PD_lppa_OTDOAInformationFailure (OSCTXT* pctxt, lppa_OTDOAInformationFailure* pvalue);

EXTERN void asn1Print_lppa_OTDOAInformationFailure 
   (const char* name, const lppa_OTDOAInformationFailure* pvalue);

EXTERN int asn1PrtToStr_lppa_OTDOAInformationFailure (const char* name, 
   lppa_OTDOAInformationFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_OTDOAInformationFailure (OSCTXT *pctxt, 
   const char* name, const lppa_OTDOAInformationFailure* pvalue);

EXTERN void asn1Copy_lppa_OTDOAInformationFailure (OSCTXT* pctxt, 
   const lppa_OTDOAInformationFailure* pSrcValue, lppa_OTDOAInformationFailure*
    pDstValue);

EXTERN int asn1Init_lppa_OTDOAInformationFailure (
   lppa_OTDOAInformationFailure* pvalue);

EXTERN void asn1Free_lppa_OTDOAInformationFailure (OSCTXT *pctxt, 
   lppa_OTDOAInformationFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationFailure_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationFailure'
*/
typedef struct EXTERN lppa_UTDOAInformationFailure_protocolIEs_element {
   lppa_ProtocolIE_ID id;
   lppa_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      lppa_UTDOAInformationFailure_IEs_TVALUE t;

      /**
       * UTDOAInformationFailure-IEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         lppa_Cause *_lppa_UTDOAInformationFailure_IEs_1;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         lppa_CriticalityDiagnostics *_lppa_UTDOAInformationFailure_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_UTDOAInformationFailure_protocolIEs_element;

EXTERN int asn1PE_lppa_UTDOAInformationFailure_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationFailure_protocolIEs_element (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationFailure_protocolIEs_element 
   (const char* name, const lppa_UTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationFailure_protocolIEs_element (
   const char* name, lppa_UTDOAInformationFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_lppa_UTDOAInformationFailure_protocolIEs_element_lppa_UTDOAInformationFailure_IEs_1
   (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs_element* pElem, 
   lppa_Cause *pvalue);

EXTERN void asn1SetTC_lppa_UTDOAInformationFailure_protocolIEs_element_lppa_UTDOAInformationFailure_IEs_2
   (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs_element* pElem, 
   lppa_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationFailure_protocolIEs_element (OSCTXT* pctxt, 
   const lppa_UTDOAInformationFailure_protocolIEs_element* pSrcValue, 
   lppa_UTDOAInformationFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationFailure_protocolIEs_element (
   lppa_UTDOAInformationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationFailure_protocolIEs_element (OSCTXT *pctxt, 
   lppa_UTDOAInformationFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationFailure_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UTDOAInformationFailure'
*/
/* List of lppa_UTDOAInformationFailure_protocolIEs_element */
typedef OSRTDList lppa_UTDOAInformationFailure_protocolIEs;

EXTERN int asn1PE_lppa_UTDOAInformationFailure_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationFailure_protocolIEs (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationFailure_protocolIEs 
   (const char* name, const lppa_UTDOAInformationFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationFailure_protocolIEs (const char* name, 
   lppa_UTDOAInformationFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationFailure_protocolIEs* pvalue);

/* Append IE with value type lppa_Cause to list */
struct lppa_Cause ;
EXTERN int asn1Append_lppa_UTDOAInformationFailure_protocolIEs_1
      (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs* plist, struct 
   lppa_Cause *pvalue);

/* Append IE with value type lppa_CriticalityDiagnostics to list */
struct lppa_CriticalityDiagnostics ;
EXTERN int asn1Append_lppa_UTDOAInformationFailure_protocolIEs_2
      (OSCTXT* pctxt, lppa_UTDOAInformationFailure_protocolIEs* plist, struct 
   lppa_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct lppa_UTDOAInformationFailure_protocolIEs_element* 
   asn1Get_lppa_UTDOAInformationFailure_protocolIEs (lppa_ProtocolIE_ID id, 
   lppa_UTDOAInformationFailure_protocolIEs* plist);

EXTERN void asn1Copy_lppa_UTDOAInformationFailure_protocolIEs (OSCTXT* pctxt, 
   const lppa_UTDOAInformationFailure_protocolIEs* pSrcValue, 
   lppa_UTDOAInformationFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationFailure_protocolIEs (
   lppa_UTDOAInformationFailure_protocolIEs* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationFailure_protocolIEs (OSCTXT *pctxt, 
   lppa_UTDOAInformationFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UTDOAInformationFailure                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UTDOA INFORMATION FAILURE

 **************************************************************

UTDOAInformationFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] LPPA-PROTOCOL-IES.&id ({UTDOAInformationFailure-IEs}),
      criticality [1] LPPA-PROTOCOL-IES.&criticality ({UTDOAInformationFailure-IEs}{@id}),
      value [2] LPPA-PROTOCOL-IES.&Value ({UTDOAInformationFailure-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN lppa_UTDOAInformationFailure {
   lppa_UTDOAInformationFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} lppa_UTDOAInformationFailure;

EXTERN int asn1PE_lppa_UTDOAInformationFailure (OSCTXT* pctxt, lppa_UTDOAInformationFailure* pvalue);

EXTERN int asn1PD_lppa_UTDOAInformationFailure (OSCTXT* pctxt, lppa_UTDOAInformationFailure* pvalue);

EXTERN void asn1Print_lppa_UTDOAInformationFailure 
   (const char* name, const lppa_UTDOAInformationFailure* pvalue);

EXTERN int asn1PrtToStr_lppa_UTDOAInformationFailure (const char* name, 
   lppa_UTDOAInformationFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UTDOAInformationFailure (OSCTXT *pctxt, 
   const char* name, const lppa_UTDOAInformationFailure* pvalue);

EXTERN void asn1Copy_lppa_UTDOAInformationFailure (OSCTXT* pctxt, 
   const lppa_UTDOAInformationFailure* pSrcValue, lppa_UTDOAInformationFailure*
    pDstValue);

EXTERN int asn1Init_lppa_UTDOAInformationFailure (
   lppa_UTDOAInformationFailure* pvalue);

EXTERN void asn1Free_lppa_UTDOAInformationFailure (OSCTXT *pctxt, 
   lppa_UTDOAInformationFailure* pvalue);

/**
 * Header file for ASN.1 module LPPA-PDU-Descriptions
 */
typedef enum {
   T1lppa__UNDEF_,
   T1lppa__e_CIDMeasurementInitiation,
   T1lppa__oTDOAInformationExchange,
   T1lppa__uTDOAInformationExchange,
   T1lppa__e_CIDMeasurementFailureIndication,
   T1lppa__e_CIDMeasurementReport,
   T1lppa__e_CIDMeasurementTermination,
   T1lppa__errorIndication,
   T1lppa__privateMessage,
   T1lppa__uTDOAInformationUpdate
} lppa_LPPA_ELEMENTARY_PROCEDURES_TVALUE;

typedef enum {
   T2lppa__UNDEF_,
   T2lppa__e_CIDMeasurementInitiation,
   T2lppa__oTDOAInformationExchange,
   T2lppa__uTDOAInformationExchange
} lppa_LPPA_ELEMENTARY_PROCEDURES_CLASS_1_TVALUE;

typedef enum {
   T3lppa__UNDEF_,
   T3lppa__e_CIDMeasurementFailureIndication,
   T3lppa__e_CIDMeasurementReport,
   T3lppa__e_CIDMeasurementTermination,
   T3lppa__errorIndication,
   T3lppa__privateMessage,
   T3lppa__uTDOAInformationUpdate
} lppa_LPPA_ELEMENTARY_PROCEDURES_CLASS_2_TVALUE;

/**************************************************************/
/*                                                            */
/*  InitiatingMessage                                         */
/*                                                            */
/**************************************************************/
/*
InitiatingMessage ::= SEQUENCE {
   procedureCode [0] LPPA-ELEMENTARY-PROCEDURE.&procedureCode ({LPPA-ELEMENTARY-PROCEDURES}),
   criticality [1] LPPA-ELEMENTARY-PROCEDURE.&criticality ({LPPA-ELEMENTARY-PROCEDURES}{@procedureCode}),
   lppatransactionID [2] LPPATransactionID,
   value [3] LPPA-ELEMENTARY-PROCEDURE.&InitiatingMessage ({LPPA-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN lppa_InitiatingMessage {
   lppa_ProcedureCode procedureCode;
   lppa_Criticality criticality;
   lppa_LPPATransactionID lppatransactionID;
   struct {
      /**
       * information object selector
       */
      lppa_LPPA_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * LPPA-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-e-CIDMeasurementInitiation
          * criticality: lppa_reject
          */
         lppa_E_CIDMeasurementInitiationRequest *e_CIDMeasurementInitiation;
         /**
          * procedureCode: id-oTDOAInformationExchange
          * criticality: lppa_reject
          */
         lppa_OTDOAInformationRequest *oTDOAInformationExchange;
         /**
          * procedureCode: id-uTDOAInformationExchange
          * criticality: lppa_reject
          */
         lppa_UTDOAInformationRequest *uTDOAInformationExchange;
         /**
          * procedureCode: id-e-CIDMeasurementFailureIndication
          * criticality: lppa_ignore
          */
         lppa_E_CIDMeasurementFailureIndication *e_CIDMeasurementFailureIndication;
         /**
          * procedureCode: id-e-CIDMeasurementReport
          * criticality: lppa_ignore
          */
         lppa_E_CIDMeasurementReport *e_CIDMeasurementReport;
         /**
          * procedureCode: id-e-CIDMeasurementTermination
          * criticality: lppa_reject
          */
         lppa_E_CIDMeasurementTerminationCommand *e_CIDMeasurementTermination;
         /**
          * procedureCode: id-errorIndication
          * criticality: lppa_ignore
          */
         lppa_ErrorIndication *errorIndication;
         /**
          * procedureCode: id-privateMessage
          * criticality: lppa_ignore
          */
         lppa_PrivateMessage *privateMessage;
         /**
          * procedureCode: id-uTDOAInformationUpdate
          * criticality: lppa_ignore
          */
         lppa_UTDOAInformationUpdate *uTDOAInformationUpdate;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_InitiatingMessage;

EXTERN int asn1PE_lppa_InitiatingMessage (OSCTXT* pctxt, lppa_InitiatingMessage* pvalue);

EXTERN int asn1PD_lppa_InitiatingMessage (OSCTXT* pctxt, lppa_InitiatingMessage* pvalue);

EXTERN void asn1Print_lppa_InitiatingMessage 
   (const char* name, const lppa_InitiatingMessage* pvalue);

EXTERN int asn1PrtToStr_lppa_InitiatingMessage (const char* name, 
   lppa_InitiatingMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_InitiatingMessage (OSCTXT *pctxt, 
   const char* name, const lppa_InitiatingMessage* pvalue);

EXTERN void asn1SetTC_lppa_InitiatingMessage_e_CIDMeasurementInitiation
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, 
   lppa_E_CIDMeasurementInitiationRequest *pvalue);

EXTERN void asn1SetTC_lppa_InitiatingMessage_oTDOAInformationExchange
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, lppa_OTDOAInformationRequest 
   *pvalue);

EXTERN void asn1SetTC_lppa_InitiatingMessage_uTDOAInformationExchange
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, lppa_UTDOAInformationRequest 
   *pvalue);

EXTERN void asn1SetTC_lppa_InitiatingMessage_e_CIDMeasurementFailureIndication
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, 
   lppa_E_CIDMeasurementFailureIndication *pvalue);

EXTERN void asn1SetTC_lppa_InitiatingMessage_e_CIDMeasurementReport
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, lppa_E_CIDMeasurementReport 
   *pvalue);

EXTERN void asn1SetTC_lppa_InitiatingMessage_e_CIDMeasurementTermination
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, 
   lppa_E_CIDMeasurementTerminationCommand *pvalue);

EXTERN void asn1SetTC_lppa_InitiatingMessage_errorIndication
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, lppa_ErrorIndication *pvalue)
   ;

EXTERN void asn1SetTC_lppa_InitiatingMessage_privateMessage
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, lppa_PrivateMessage *pvalue)
   ;

EXTERN void asn1SetTC_lppa_InitiatingMessage_uTDOAInformationUpdate
   (OSCTXT* pctxt, lppa_InitiatingMessage* pElem, lppa_UTDOAInformationUpdate 
   *pvalue);

EXTERN void asn1Copy_lppa_InitiatingMessage (OSCTXT* pctxt, 
   const lppa_InitiatingMessage* pSrcValue, lppa_InitiatingMessage* pDstValue);

EXTERN int asn1Init_lppa_InitiatingMessage (lppa_InitiatingMessage* pvalue);

EXTERN void asn1Free_lppa_InitiatingMessage (OSCTXT *pctxt, 
   lppa_InitiatingMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  SuccessfulOutcome                                         */
/*                                                            */
/**************************************************************/
/*
SuccessfulOutcome ::= SEQUENCE {
   procedureCode [0] LPPA-ELEMENTARY-PROCEDURE.&procedureCode ({LPPA-ELEMENTARY-PROCEDURES}),
   criticality [1] LPPA-ELEMENTARY-PROCEDURE.&criticality ({LPPA-ELEMENTARY-PROCEDURES}{@procedureCode}),
   lppatransactionID [2] LPPATransactionID,
   value [3] LPPA-ELEMENTARY-PROCEDURE.&SuccessfulOutcome ({LPPA-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN lppa_SuccessfulOutcome {
   lppa_ProcedureCode procedureCode;
   lppa_Criticality criticality;
   lppa_LPPATransactionID lppatransactionID;
   struct {
      /**
       * information object selector
       */
      lppa_LPPA_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * LPPA-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-e-CIDMeasurementInitiation
          * criticality: lppa_reject
          */
         lppa_E_CIDMeasurementInitiationResponse *e_CIDMeasurementInitiation;
         /**
          * procedureCode: id-oTDOAInformationExchange
          * criticality: lppa_reject
          */
         lppa_OTDOAInformationResponse *oTDOAInformationExchange;
         /**
          * procedureCode: id-uTDOAInformationExchange
          * criticality: lppa_reject
          */
         lppa_UTDOAInformationResponse *uTDOAInformationExchange;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_SuccessfulOutcome;

EXTERN int asn1PE_lppa_SuccessfulOutcome (OSCTXT* pctxt, lppa_SuccessfulOutcome* pvalue);

EXTERN int asn1PD_lppa_SuccessfulOutcome (OSCTXT* pctxt, lppa_SuccessfulOutcome* pvalue);

EXTERN void asn1Print_lppa_SuccessfulOutcome 
   (const char* name, const lppa_SuccessfulOutcome* pvalue);

EXTERN int asn1PrtToStr_lppa_SuccessfulOutcome (const char* name, 
   lppa_SuccessfulOutcome* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_SuccessfulOutcome (OSCTXT *pctxt, 
   const char* name, const lppa_SuccessfulOutcome* pvalue);

EXTERN void asn1SetTC_lppa_SuccessfulOutcome_e_CIDMeasurementInitiation
   (OSCTXT* pctxt, lppa_SuccessfulOutcome* pElem, 
   lppa_E_CIDMeasurementInitiationResponse *pvalue);

EXTERN void asn1SetTC_lppa_SuccessfulOutcome_oTDOAInformationExchange
   (OSCTXT* pctxt, lppa_SuccessfulOutcome* pElem, 
   lppa_OTDOAInformationResponse *pvalue);

EXTERN void asn1SetTC_lppa_SuccessfulOutcome_uTDOAInformationExchange
   (OSCTXT* pctxt, lppa_SuccessfulOutcome* pElem, 
   lppa_UTDOAInformationResponse *pvalue);

EXTERN void asn1Copy_lppa_SuccessfulOutcome (OSCTXT* pctxt, 
   const lppa_SuccessfulOutcome* pSrcValue, lppa_SuccessfulOutcome* pDstValue);

EXTERN int asn1Init_lppa_SuccessfulOutcome (lppa_SuccessfulOutcome* pvalue);

EXTERN void asn1Free_lppa_SuccessfulOutcome (OSCTXT *pctxt, 
   lppa_SuccessfulOutcome* pvalue);

/**************************************************************/
/*                                                            */
/*  UnsuccessfulOutcome                                       */
/*                                                            */
/**************************************************************/
/*
UnsuccessfulOutcome ::= SEQUENCE {
   procedureCode [0] LPPA-ELEMENTARY-PROCEDURE.&procedureCode ({LPPA-ELEMENTARY-PROCEDURES}),
   criticality [1] LPPA-ELEMENTARY-PROCEDURE.&criticality ({LPPA-ELEMENTARY-PROCEDURES}{@procedureCode}),
   lppatransactionID [2] LPPATransactionID,
   value [3] LPPA-ELEMENTARY-PROCEDURE.&UnsuccessfulOutcome ({LPPA-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN lppa_UnsuccessfulOutcome {
   lppa_ProcedureCode procedureCode;
   lppa_Criticality criticality;
   lppa_LPPATransactionID lppatransactionID;
   struct {
      /**
       * information object selector
       */
      lppa_LPPA_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * LPPA-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-e-CIDMeasurementInitiation
          * criticality: lppa_reject
          */
         lppa_E_CIDMeasurementInitiationFailure *e_CIDMeasurementInitiation;
         /**
          * procedureCode: id-oTDOAInformationExchange
          * criticality: lppa_reject
          */
         lppa_OTDOAInformationFailure *oTDOAInformationExchange;
         /**
          * procedureCode: id-uTDOAInformationExchange
          * criticality: lppa_reject
          */
         lppa_UTDOAInformationFailure *uTDOAInformationExchange;

         ASN1OpenType* extElem1;
      } u;
   } value;
} lppa_UnsuccessfulOutcome;

EXTERN int asn1PE_lppa_UnsuccessfulOutcome (OSCTXT* pctxt, lppa_UnsuccessfulOutcome* pvalue);

EXTERN int asn1PD_lppa_UnsuccessfulOutcome (OSCTXT* pctxt, lppa_UnsuccessfulOutcome* pvalue);

EXTERN void asn1Print_lppa_UnsuccessfulOutcome 
   (const char* name, const lppa_UnsuccessfulOutcome* pvalue);

EXTERN int asn1PrtToStr_lppa_UnsuccessfulOutcome (const char* name, 
   lppa_UnsuccessfulOutcome* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_UnsuccessfulOutcome (OSCTXT *pctxt, 
   const char* name, const lppa_UnsuccessfulOutcome* pvalue);

EXTERN void asn1SetTC_lppa_UnsuccessfulOutcome_e_CIDMeasurementInitiation
   (OSCTXT* pctxt, lppa_UnsuccessfulOutcome* pElem, 
   lppa_E_CIDMeasurementInitiationFailure *pvalue);

EXTERN void asn1SetTC_lppa_UnsuccessfulOutcome_oTDOAInformationExchange
   (OSCTXT* pctxt, lppa_UnsuccessfulOutcome* pElem, 
   lppa_OTDOAInformationFailure *pvalue);

EXTERN void asn1SetTC_lppa_UnsuccessfulOutcome_uTDOAInformationExchange
   (OSCTXT* pctxt, lppa_UnsuccessfulOutcome* pElem, 
   lppa_UTDOAInformationFailure *pvalue);

EXTERN void asn1Copy_lppa_UnsuccessfulOutcome (OSCTXT* pctxt, 
   const lppa_UnsuccessfulOutcome* pSrcValue, lppa_UnsuccessfulOutcome*
    pDstValue);

EXTERN int asn1Init_lppa_UnsuccessfulOutcome (lppa_UnsuccessfulOutcome* pvalue);

EXTERN void asn1Free_lppa_UnsuccessfulOutcome (OSCTXT *pctxt, 
   lppa_UnsuccessfulOutcome* pvalue);

/**************************************************************/
/*                                                            */
/*  LPPA_PDU                                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Interface PDU Definition

 **************************************************************

LPPA-PDU ::= CHOICE {
   initiatingMessage [0] InitiatingMessage,
   successfulOutcome [1] SuccessfulOutcome,
   unsuccessfulOutcome [2] UnsuccessfulOutcome,
   ...
}
*/
/* Choice tag constants */

#define T_lppa_LPPA_PDU_initiatingMessage 1
#define T_lppa_LPPA_PDU_successfulOutcome 2
#define T_lppa_LPPA_PDU_unsuccessfulOutcome 3
#define T_lppa_LPPA_PDU_extElem1        4

typedef struct EXTERN lppa_LPPA_PDU {
   OSINT32 t;
   union {
      /* t = 1 */
      lppa_InitiatingMessage *initiatingMessage;
      /* t = 2 */
      lppa_SuccessfulOutcome *successfulOutcome;
      /* t = 3 */
      lppa_UnsuccessfulOutcome *unsuccessfulOutcome;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} lppa_LPPA_PDU;

EXTERN int asn1PE_lppa_LPPA_PDU (OSCTXT* pctxt, lppa_LPPA_PDU* pvalue);

EXTERN int asn1PD_lppa_LPPA_PDU (OSCTXT* pctxt, lppa_LPPA_PDU* pvalue);

EXTERN void asn1Print_lppa_LPPA_PDU (const char* name, const lppa_LPPA_PDU* pvalue);

EXTERN int asn1PrtToStr_lppa_LPPA_PDU (const char* name, lppa_LPPA_PDU* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_lppa_LPPA_PDU (OSCTXT *pctxt, 
   const char* name, const lppa_LPPA_PDU* pvalue);

EXTERN void asn1Copy_lppa_LPPA_PDU (OSCTXT* pctxt, const lppa_LPPA_PDU* pSrcValue, 
   lppa_LPPA_PDU* pDstValue);

EXTERN int asn1Init_lppa_LPPA_PDU (lppa_LPPA_PDU* pvalue);

EXTERN void asn1Free_lppa_LPPA_PDU (OSCTXT *pctxt, lppa_LPPA_PDU* pvalue);

/**
 * Header file for ASN.1 module LPPA-Constants
 */
/* Value definitions */

#define ASN1V_lppa_id_errorIndication 0
#define ASN1V_lppa_id_privateMessage 1
#define ASN1V_lppa_id_e_CIDMeasurementInitiation 2
#define ASN1V_lppa_id_e_CIDMeasurementFailureIndication 3
#define ASN1V_lppa_id_e_CIDMeasurementReport 4
#define ASN1V_lppa_id_e_CIDMeasurementTermination 5
#define ASN1V_lppa_id_oTDOAInformationExchange 6
#define ASN1V_lppa_id_uTDOAInformationExchange 7
#define ASN1V_lppa_id_uTDOAInformationUpdate 8
#define ASN1V_lppa_maxNrOfErrors 256
#define ASN1V_lppa_maxCellineNB 256
#define ASN1V_lppa_maxNoMeas 63
#define ASN1V_lppa_maxCellReport 9
#define ASN1V_lppa_maxnoOTDOAtypes 63
#define ASN1V_lppa_maxServCell 5
#define ASN1V_lppa_maxGERANMeas 8
#define ASN1V_lppa_maxUTRANMeas 8
#define ASN1V_lppa_id_Cause 0
#define ASN1V_lppa_id_CriticalityDiagnostics 1
#define ASN1V_lppa_id_E_SMLC_UE_Measurement_ID 2
#define ASN1V_lppa_id_ReportCharacteristics 3
#define ASN1V_lppa_id_MeasurementPeriodicity 4
#define ASN1V_lppa_id_MeasurementQuantities 5
#define ASN1V_lppa_id_eNB_UE_Measurement_ID 6
#define ASN1V_lppa_id_E_CID_MeasurementResult 7
#define ASN1V_lppa_id_OTDOACells 8
#define ASN1V_lppa_id_OTDOA_Information_Type_Group 9
#define ASN1V_lppa_id_OTDOA_Information_Type_Item 10
#define ASN1V_lppa_id_MeasurementQuantities_Item 11
#define ASN1V_lppa_id_RequestedSRSTransmissionCharacteristics 12
#define ASN1V_lppa_id_ULConfiguration 13
#define ASN1V_lppa_id_Cell_Portion_ID 14
#define ASN1V_lppa_id_InterRATMeasurementQuantities 15
#define ASN1V_lppa_id_InterRATMeasurementQuantities_Item 16
#define ASN1V_lppa_id_InterRATMeasurementResult 17

#ifdef __cplusplus
}
#endif

#endif
