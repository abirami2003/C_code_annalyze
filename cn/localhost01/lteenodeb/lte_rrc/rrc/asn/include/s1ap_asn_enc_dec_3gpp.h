/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.3.4, Date: 29-Oct-2019.
 */
#ifndef S1AP_ASN_ENC_DEC_3GPP_H
#define S1AP_ASN_ENC_DEC_3GPP_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtpersrc/asn1per.h"

/**
 * Header file for ASN.1 module S1AP-CommonDataTypes
 */
/**************************************************************/
/*                                                            */
/*  ProcedureCode                                             */
/*                                                            */
/**************************************************************/
/*
ProcedureCode ::= INTEGER (0..255)
*/
typedef OSUINT8 s1ap_ProcedureCode;

EXTERN int asn1PE_s1ap_ProcedureCode (OSCTXT* pctxt, s1ap_ProcedureCode value);

EXTERN int asn1PD_s1ap_ProcedureCode (OSCTXT* pctxt, s1ap_ProcedureCode* pvalue);

EXTERN void asn1Print_s1ap_ProcedureCode 
   (const char* name, const s1ap_ProcedureCode* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProcedureCode (const char* name, 
   s1ap_ProcedureCode* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProcedureCode (OSCTXT *pctxt, 
   const char* name, const s1ap_ProcedureCode* pvalue);

/**************************************************************/
/*                                                            */
/*  Criticality                                               */
/*                                                            */
/**************************************************************/
/*
Criticality ::= ENUMERATED { reject(0), ignore(1), notify(2) }
*/
typedef enum {
   s1ap_reject = 0,
   s1ap_ignore = 1,
   s1ap_notify = 2
} s1ap_Criticality_Root;

typedef OSUINT32 s1ap_Criticality;

EXTERN int asn1PE_s1ap_Criticality (OSCTXT* pctxt, s1ap_Criticality value);

EXTERN int asn1PD_s1ap_Criticality (OSCTXT* pctxt, s1ap_Criticality* pvalue);

EXTERN void asn1Print_s1ap_Criticality 
   (const char* name, const s1ap_Criticality* pvalue);

EXTERN int asn1PrtToStr_s1ap_Criticality (const char* name, s1ap_Criticality* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Criticality (OSCTXT *pctxt, 
   const char* name, const s1ap_Criticality* pvalue);

EXTERN extern const OSEnumItem s1ap_Criticality_ENUMTAB[];
#define s1ap_Criticality_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_Criticality_ToString (OSINT32 value);

EXTERN int s1ap_Criticality_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Criticality* pvalue);

EXTERN int s1ap_Criticality_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Criticality* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtocolIE_ID                                             */
/*                                                            */
/**************************************************************/
/*
ProtocolIE-ID ::= INTEGER (0..65535)
*/
typedef OSUINT16 s1ap_ProtocolIE_ID;

EXTERN int asn1PE_s1ap_ProtocolIE_ID (OSCTXT* pctxt, s1ap_ProtocolIE_ID value);

EXTERN int asn1PD_s1ap_ProtocolIE_ID (OSCTXT* pctxt, s1ap_ProtocolIE_ID* pvalue);

EXTERN void asn1Print_s1ap_ProtocolIE_ID 
   (const char* name, const s1ap_ProtocolIE_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProtocolIE_ID (const char* name, 
   s1ap_ProtocolIE_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProtocolIE_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_ProtocolIE_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtocolExtensionID                                       */
/*                                                            */
/**************************************************************/
/*
ProtocolExtensionID ::= INTEGER (0..65535)
*/
typedef OSUINT16 s1ap_ProtocolExtensionID;

EXTERN int asn1PE_s1ap_ProtocolExtensionID (OSCTXT* pctxt, s1ap_ProtocolExtensionID value);

EXTERN int asn1PD_s1ap_ProtocolExtensionID (OSCTXT* pctxt, s1ap_ProtocolExtensionID* pvalue);

EXTERN void asn1Print_s1ap_ProtocolExtensionID 
   (const char* name, const s1ap_ProtocolExtensionID* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProtocolExtensionID (const char* name, 
   s1ap_ProtocolExtensionID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProtocolExtensionID (OSCTXT *pctxt, 
   const char* name, const s1ap_ProtocolExtensionID* pvalue);

/**************************************************************/
/*                                                            */
/*  TriggeringMessage                                         */
/*                                                            */
/**************************************************************/
/*
TriggeringMessage ::= ENUMERATED { initiating-message(0), successful-outcome(1), unsuccessfull-outcome(2) }
*/
typedef enum {
   s1ap_initiating_message = 0,
   s1ap_successful_outcome = 1,
   s1ap_unsuccessfull_outcome = 2
} s1ap_TriggeringMessage_Root;

typedef OSUINT32 s1ap_TriggeringMessage;

EXTERN int asn1PE_s1ap_TriggeringMessage (OSCTXT* pctxt, s1ap_TriggeringMessage value);

EXTERN int asn1PD_s1ap_TriggeringMessage (OSCTXT* pctxt, s1ap_TriggeringMessage* pvalue);

EXTERN void asn1Print_s1ap_TriggeringMessage 
   (const char* name, const s1ap_TriggeringMessage* pvalue);

EXTERN int asn1PrtToStr_s1ap_TriggeringMessage (const char* name, 
   s1ap_TriggeringMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TriggeringMessage (OSCTXT *pctxt, 
   const char* name, const s1ap_TriggeringMessage* pvalue);

EXTERN extern const OSEnumItem s1ap_TriggeringMessage_ENUMTAB[];
#define s1ap_TriggeringMessage_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_TriggeringMessage_ToString (OSINT32 value);

EXTERN int s1ap_TriggeringMessage_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_TriggeringMessage* pvalue);

EXTERN int s1ap_TriggeringMessage_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_TriggeringMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateIE_ID                                              */
/*                                                            */
/**************************************************************/
/*
PrivateIE-ID ::= CHOICE {
   local [0] INTEGER (0..65535),
   global [1] OBJECT IDENTIFIER
}
*/
/* Choice tag constants */

#define T_s1ap_PrivateIE_ID_local       1
#define T_s1ap_PrivateIE_ID_global      2

typedef struct EXTERN s1ap_PrivateIE_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      OSUINT16 local;
      /* t = 2 */
      ASN1OBJID *global;
   } u;
} s1ap_PrivateIE_ID;

EXTERN int asn1PE_s1ap_PrivateIE_ID (OSCTXT* pctxt, s1ap_PrivateIE_ID* pvalue);

EXTERN int asn1PD_s1ap_PrivateIE_ID (OSCTXT* pctxt, s1ap_PrivateIE_ID* pvalue);

EXTERN void asn1Print_s1ap_PrivateIE_ID 
   (const char* name, const s1ap_PrivateIE_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_PrivateIE_ID (const char* name, 
   s1ap_PrivateIE_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PrivateIE_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_PrivateIE_ID* pvalue);

EXTERN void asn1Copy_s1ap_PrivateIE_ID (OSCTXT* pctxt, 
   const s1ap_PrivateIE_ID* pSrcValue, s1ap_PrivateIE_ID* pDstValue);

EXTERN int asn1Init_s1ap_PrivateIE_ID (s1ap_PrivateIE_ID* pvalue);

EXTERN void asn1Free_s1ap_PrivateIE_ID (OSCTXT *pctxt, s1ap_PrivateIE_ID* pvalue);

EXTERN OSBOOL asn1Equals_s1ap_PrivateIE_ID (const s1ap_PrivateIE_ID* pvalue1, const s1ap_PrivateIE_ID* pvalue2);

/**************************************************************/
/*                                                            */
/*  Presence                                                  */
/*                                                            */
/**************************************************************/
/*
Presence ::= ENUMERATED { optional(0), conditional(1), mandatory(2) }
*/
typedef enum {
   s1ap_optional = 0,
   s1ap_conditional = 1,
   s1ap_mandatory = 2
} s1ap_Presence_Root;

typedef OSUINT32 s1ap_Presence;

EXTERN int asn1PE_s1ap_Presence (OSCTXT* pctxt, s1ap_Presence value);

EXTERN int asn1PD_s1ap_Presence (OSCTXT* pctxt, s1ap_Presence* pvalue);

EXTERN void asn1Print_s1ap_Presence (const char* name, const s1ap_Presence* pvalue);

EXTERN int asn1PrtToStr_s1ap_Presence (const char* name, s1ap_Presence* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Presence (OSCTXT *pctxt, 
   const char* name, const s1ap_Presence* pvalue);

EXTERN extern const OSEnumItem s1ap_Presence_ENUMTAB[];
#define s1ap_Presence_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_Presence_ToString (OSINT32 value);

EXTERN int s1ap_Presence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Presence* pvalue);

EXTERN int s1ap_Presence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Presence* pvalue);

/**
 * Header file for ASN.1 module S1AP-Containers
 */

/**
 * Header file for ASN.1 module S1AP-IEs
 */
typedef enum {
   T138_UNDEF_
} Additional_GUTI_ExtIEs_TVALUE;

typedef enum {
   T139_UNDEF_
} AllocationAndRetentionPriority_ExtIEs_TVALUE;

typedef enum {
   T140_UNDEF_
} InformationForCECapableUEs_ExtIEs_TVALUE;

typedef enum {
   T141_UNDEF_
} AssistanceDataForPaging_ExtIEs_TVALUE;

typedef enum {
   T142_UNDEF_
} AssistanceDataForRecommendedCells_ExtIEs_TVALUE;

typedef enum {
   T143_UNDEF_,
   T143__Bearers_SubjectToStatusTransfer_ItemIEs_1
} Bearers_SubjectToStatusTransfer_ItemIEs_TVALUE;

typedef enum {
   T144_UNDEF_,
   T144__Bearers_SubjectToStatusTransfer_ItemExtIEs_1,
   T144__Bearers_SubjectToStatusTransfer_ItemExtIEs_2,
   T144__Bearers_SubjectToStatusTransfer_ItemExtIEs_3,
   T144__Bearers_SubjectToStatusTransfer_ItemExtIEs_4,
   T144__Bearers_SubjectToStatusTransfer_ItemExtIEs_5,
   T144__Bearers_SubjectToStatusTransfer_ItemExtIEs_6
} Bearers_SubjectToStatusTransfer_ItemExtIEs_TVALUE;

typedef enum {
   T145_UNDEF_
} BluetoothMeasurementConfiguration_ExtIEs_TVALUE;

typedef enum {
   T146_UNDEF_
} CancelledCellinEAI_Item_ExtIEs_TVALUE;

typedef enum {
   T147_UNDEF_
} CancelledCellinTAI_Item_ExtIEs_TVALUE;

typedef enum {
   T148_UNDEF_
} CellIdentifierAndCELevelForCECapableUEs_ExtIEs_TVALUE;

typedef enum {
   T149_UNDEF_
} CellID_Broadcast_Item_ExtIEs_TVALUE;

typedef enum {
   T150_UNDEF_
} CellID_Cancelled_Item_ExtIEs_TVALUE;

typedef enum {
   T151_UNDEF_
} CellBasedMDT_ExtIEs_TVALUE;

typedef enum {
   T152_UNDEF_
} CellBasedQMC_ExtIEs_TVALUE;

typedef enum {
   T153_UNDEF_
} Cdma2000OneXSRVCCInfo_ExtIEs_TVALUE;

typedef enum {
   T154_UNDEF_
} CellType_ExtIEs_TVALUE;

typedef enum {
   T155_UNDEF_
} CGI_ExtIEs_TVALUE;

typedef enum {
   T156_UNDEF_
} CNTypeRestrictions_Item_ExtIEs_TVALUE;

typedef enum {
   T157_UNDEF_
} ConnectedengNBItem_ExtIEs_TVALUE;

typedef enum {
   T158_UNDEF_
} CSG_IdList_Item_ExtIEs_TVALUE;

typedef enum {
   T159_UNDEF_
} COUNTvalue_ExtIEs_TVALUE;

typedef enum {
   T160_UNDEF_
} COUNTValueExtended_ExtIEs_TVALUE;

typedef enum {
   T161_UNDEF_
} COUNTvaluePDCP_SNlength18_ExtIEs_TVALUE;

typedef enum {
   T162_UNDEF_
} CriticalityDiagnostics_ExtIEs_TVALUE;

typedef enum {
   T163_UNDEF_
} CriticalityDiagnostics_IE_Item_ExtIEs_TVALUE;

typedef enum {
   T164_UNDEF_
} ServedDCNsItem_ExtIEs_TVALUE;

typedef enum {
   T165_UNDEF_
} DL_CP_SecurityInformation_ExtIEs_TVALUE;

typedef enum {
   T166_UNDEF_
} EmergencyAreaID_Broadcast_Item_ExtIEs_TVALUE;

typedef enum {
   T167_UNDEF_
} EmergencyAreaID_Cancelled_Item_ExtIEs_TVALUE;

typedef enum {
   T168_UNDEF_
} CompletedCellinEAI_Item_ExtIEs_TVALUE;

typedef enum {
   T169_UNDEF_
} GERAN_Cell_ID_ExtIEs_TVALUE;

typedef enum {
   T170_UNDEF_
} GlobalENB_ID_ExtIEs_TVALUE;

typedef enum {
   T171_UNDEF_
} Global_en_gNB_ID_ExtIEs_TVALUE;

typedef enum {
   T172_UNDEF_
} ENB_StatusTransfer_TransparentContainer_ExtIEs_TVALUE;

typedef enum {
   T173_UNDEF_
} EN_DCSONConfigurationTransfer_ExtIEs_TVALUE;

typedef enum {
   T174_UNDEF_
} EN_DCTransferTypeRequest_ExtIEs_TVALUE;

typedef enum {
   T175_UNDEF_
} EN_DCTransferTypeReply_ExtIEs_TVALUE;

typedef enum {
   T176_UNDEF_
} EN_DCSONeNBIdentification_ExtIEs_TVALUE;

typedef enum {
   T177_UNDEF_
} EN_DCSONengNBIdentification_ExtIEs_TVALUE;

typedef enum {
   T178_UNDEF_,
   T178__E_RABInformationListIEs_1
} E_RABInformationListIEs_TVALUE;

typedef enum {
   T179_UNDEF_
} E_RABInformationListItem_ExtIEs_TVALUE;

typedef enum {
   T180_UNDEF_,
   T180__E_RABItemIEs_1
} E_RABItemIEs_TVALUE;

typedef enum {
   T181_UNDEF_
} E_RABItem_ExtIEs_TVALUE;

typedef enum {
   T182_UNDEF_,
   T182__E_RABUsageReportItemIEs_1
} E_RABUsageReportItemIEs_TVALUE;

typedef enum {
   T183_UNDEF_
} E_RABUsageReportItem_ExtIEs_TVALUE;

typedef enum {
   T184_UNDEF_,
   T184__E_RABQoSParameters_ExtIEs_1,
   T184__E_RABQoSParameters_ExtIEs_2
} E_RABQoSParameters_ExtIEs_TVALUE;

typedef enum {
   T185_UNDEF_
} EUTRAN_CGI_ExtIEs_TVALUE;

typedef enum {
   T186_UNDEF_
} ExpectedUEBehaviour_ExtIEs_TVALUE;

typedef enum {
   T187_UNDEF_
} ExpectedUEActivityBehaviour_ExtIEs_TVALUE;

typedef enum {
   T188_UNDEF_
} FiveGSTAI_ExtIEs_TVALUE;

typedef enum {
   T189_UNDEF_
} ForbiddenTAs_Item_ExtIEs_TVALUE;

typedef enum {
   T190_UNDEF_
} ForbiddenLAs_Item_ExtIEs_TVALUE;

typedef enum {
   T191_UNDEF_,
   T191__GBR_QosInformation_ExtIEs_1,
   T191__GBR_QosInformation_ExtIEs_2,
   T191__GBR_QosInformation_ExtIEs_3,
   T191__GBR_QosInformation_ExtIEs_4
} GBR_QosInformation_ExtIEs_TVALUE;

typedef enum {
   T192_UNDEF_
} GUMMEI_ExtIEs_TVALUE;

typedef enum {
   T193_UNDEF_,
   T193__HandoverRestrictionList_ExtIEs_1,
   T193__HandoverRestrictionList_ExtIEs_2,
   T193__HandoverRestrictionList_ExtIEs_3,
   T193__HandoverRestrictionList_ExtIEs_4,
   T193__HandoverRestrictionList_ExtIEs_5
} HandoverRestrictionList_ExtIEs_TVALUE;

typedef enum {
   T194_UNDEF_,
   T194__ImmediateMDT_ExtIEs_1,
   T194__ImmediateMDT_ExtIEs_2,
   T194__ImmediateMDT_ExtIEs_3,
   T194__ImmediateMDT_ExtIEs_4,
   T194__ImmediateMDT_ExtIEs_5,
   T194__ImmediateMDT_ExtIEs_6,
   T194__ImmediateMDT_ExtIEs_7,
   T194__ImmediateMDT_ExtIEs_8
} ImmediateMDT_ExtIEs_TVALUE;

typedef enum {
   T195_UNDEF_
} InformationOnRecommendedCellsAndENBsForPaging_ExtIEs_TVALUE;

typedef enum {
   T196_UNDEF_
} LAI_ExtIEs_TVALUE;

typedef enum {
   T197_UNDEF_,
   T197__LastVisitedEUTRANCellInformation_ExtIEs_1,
   T197__LastVisitedEUTRANCellInformation_ExtIEs_2
} LastVisitedEUTRANCellInformation_ExtIEs_TVALUE;

typedef enum {
   T198_UNDEF_
} ListeningSubframePattern_ExtIEs_TVALUE;

typedef enum {
   T199_UNDEF_,
   T199__LoggedMDT_ExtIEs_1,
   T199__LoggedMDT_ExtIEs_2
} LoggedMDT_ExtIEs_TVALUE;

typedef enum {
   T200_UNDEF_
} LoggedMBSFNMDT_ExtIEs_TVALUE;

typedef enum {
   T201_UNDEF_
} M3Configuration_ExtIEs_TVALUE;

typedef enum {
   T202_UNDEF_
} M4Configuration_ExtIEs_TVALUE;

typedef enum {
   T203_UNDEF_
} M5Configuration_ExtIEs_TVALUE;

typedef enum {
   T204_UNDEF_
} M6Configuration_ExtIEs_TVALUE;

typedef enum {
   T205_UNDEF_
} M7Configuration_ExtIEs_TVALUE;

typedef enum {
   T206_UNDEF_,
   T206__MDT_Configuration_ExtIEs_1
} MDT_Configuration_ExtIEs_TVALUE;

typedef enum {
   T207_UNDEF_
} MBSFN_ResultToLogInfo_ExtIEs_TVALUE;

typedef enum {
   T209_UNDEF_
} MutingPatternInformation_ExtIEs_TVALUE;

typedef enum {
   T210_UNDEF_
} NB_IoT_Paging_eDRXInformation_ExtIEs_TVALUE;

typedef enum {
   T211_UNDEF_
} NR_CGI_ExtIEs_TVALUE;

typedef enum {
   T212_UNDEF_
} NRUESecurityCapabilities_ExtIEs_TVALUE;

typedef enum {
   T213_UNDEF_
} PagingAttemptInformation_ExtIEs_TVALUE;

typedef enum {
   T214_UNDEF_
} Paging_eDRXInformation_ExtIEs_TVALUE;

typedef enum {
   T215_UNDEF_
} M1PeriodicReporting_ExtIEs_TVALUE;

typedef enum {
   T216_UNDEF_
} PLMNAreaBasedQMC_ExtIEs_TVALUE;

typedef enum {
   T217_UNDEF_,
   T217__ProSeAuthorized_ExtIEs_1
} ProSeAuthorized_ExtIEs_TVALUE;

typedef enum {
   T218_UNDEF_
} PSCellInformation_ExtIEs_TVALUE;

typedef enum {
   T219_UNDEF_
} RecommendedCellsForPaging_ExtIEs_TVALUE;

typedef enum {
   T220_UNDEF_,
   T220__RecommendedCellItemIEs_1
} RecommendedCellItemIEs_TVALUE;

typedef enum {
   T221_UNDEF_
} RecommendedCellsForPagingItem_ExtIEs_TVALUE;

typedef enum {
   T222_UNDEF_
} RecommendedENBsForPaging_ExtIEs_TVALUE;

typedef enum {
   T223_UNDEF_,
   T223__RecommendedENBItemIEs_1
} RecommendedENBItemIEs_TVALUE;

typedef enum {
   T224_UNDEF_
} RecommendedENBItem_ExtIEs_TVALUE;

typedef enum {
   T225_UNDEF_
} RequestType_ExtIEs_TVALUE;

typedef enum {
   T226_UNDEF_
} RIMTransfer_ExtIEs_TVALUE;

typedef enum {
   T227_UNDEF_
} RLFReportInformation_ExtIEs_TVALUE;

typedef enum {
   T228_UNDEF_
} SecurityContext_ExtIEs_TVALUE;

typedef enum {
   T229_UNDEF_,
   T229__SecondaryRATDataUsageReportItemIEs_1
} SecondaryRATDataUsageReportItemIEs_TVALUE;

typedef enum {
   T230_UNDEF_
} SecondaryRATDataUsageReportItem_ExtIEs_TVALUE;

typedef enum {
   T232_UNDEF_,
   T232__SONInformationReply_ExtIEs_1,
   T232__SONInformationReply_ExtIEs_2
} SONInformationReply_ExtIEs_TVALUE;

typedef enum {
   T233_UNDEF_,
   T233__SONConfigurationTransfer_ExtIEs_1,
   T233__SONConfigurationTransfer_ExtIEs_2
} SONConfigurationTransfer_ExtIEs_TVALUE;

typedef enum {
   T234_UNDEF_
} SynchronisationInformation_ExtIEs_TVALUE;

typedef enum {
   T235_UNDEF_
} SourceeNB_ID_ExtIEs_TVALUE;

typedef enum {
   T236_UNDEF_,
   T236__SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_1,
   T236__SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_2
} SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_TVALUE;

typedef enum {
   T237_UNDEF_
} ServedGUMMEIsItem_ExtIEs_TVALUE;

typedef enum {
   T238_UNDEF_
} Subscription_Based_UE_DifferentiationInfo_ExtIEs_TVALUE;

typedef enum {
   T239_UNDEF_
} ScheduledCommunicationTime_ExtIEs_TVALUE;

typedef enum {
   T240_UNDEF_,
   T240__SupportedTAs_Item_ExtIEs_1
} SupportedTAs_Item_ExtIEs_TVALUE;

typedef enum {
   T241_UNDEF_,
   T241__TimeSynchronisationInfo_ExtIEs_1
} TimeSynchronisationInfo_ExtIEs_TVALUE;

typedef enum {
   T242_UNDEF_
} S_TMSI_ExtIEs_TVALUE;

typedef enum {
   T243_UNDEF_
} TAIBasedMDT_ExtIEs_TVALUE;

typedef enum {
   T244_UNDEF_
} TAI_ExtIEs_TVALUE;

typedef enum {
   T245_UNDEF_
} TAI_Broadcast_Item_ExtIEs_TVALUE;

typedef enum {
   T246_UNDEF_
} TAI_Cancelled_Item_ExtIEs_TVALUE;

typedef enum {
   T247_UNDEF_
} TABasedMDT_ExtIEs_TVALUE;

typedef enum {
   T248_UNDEF_
} TABasedQMC_ExtIEs_TVALUE;

typedef enum {
   T249_UNDEF_
} TAIBasedQMC_ExtIEs_TVALUE;

typedef enum {
   T250_UNDEF_
} CompletedCellinTAI_Item_ExtIEs_TVALUE;

typedef enum {
   T251_UNDEF_
} TargeteNB_ID_ExtIEs_TVALUE;

typedef enum {
   T252_UNDEF_
} TargetRNC_ID_ExtIEs_TVALUE;

typedef enum {
   T253_UNDEF_
} TargetNgRanNode_ID_ExtIEs_TVALUE;

typedef enum {
   T254_UNDEF_
} GNB_ExtIEs_TVALUE;

typedef enum {
   T255_UNDEF_
} Global_GNB_ID_ExtIEs_TVALUE;

typedef enum {
   T256_UNDEF_
} NG_eNB_ExtIEs_TVALUE;

typedef enum {
   T257_UNDEF_
} TargeteNB_ToSourceeNB_TransparentContainer_ExtIEs_TVALUE;

typedef enum {
   T258_UNDEF_
} M1ThresholdEventA2_ExtIEs_TVALUE;

typedef enum {
   T259_UNDEF_,
   T259__TraceActivation_ExtIEs_1,
   T259__TraceActivation_ExtIEs_2
} TraceActivation_ExtIEs_TVALUE;

typedef enum {
   T260_UNDEF_
} Tunnel_Information_ExtIEs_TVALUE;

typedef enum {
   T261_UNDEF_,
   T261__UEAggregate_MaximumBitrates_ExtIEs_1,
   T261__UEAggregate_MaximumBitrates_ExtIEs_2
} UEAggregate_MaximumBitrates_ExtIEs_TVALUE;

typedef enum {
   T262_UNDEF_,
   T262__UEAppLayerMeasConfig_ExtIEs_1
} UEAppLayerMeasConfig_ExtIEs_TVALUE;

typedef enum {
   T263_UNDEF_
} UE_S1AP_ID_pair_ExtIEs_TVALUE;

typedef enum {
   T264_UNDEF_
} UE_associatedLogicalS1_ConnectionItemExtIEs_TVALUE;

typedef enum {
   T265_UNDEF_
} UESecurityCapabilities_ExtIEs_TVALUE;

typedef enum {
   T266_UNDEF_
} UE_Sidelink_Aggregate_MaximumBitrates_ExtIEs_TVALUE;

typedef enum {
   T267_UNDEF_
} UL_CP_SecurityInformation_ExtIEs_TVALUE;

typedef enum {
   T268_UNDEF_
} UserLocationInformation_ExtIEs_TVALUE;

typedef enum {
   T269_UNDEF_
} V2XServicesAuthorized_ExtIEs_TVALUE;

typedef enum {
   T270_UNDEF_
} WLANMeasurementConfiguration_ExtIEs_TVALUE;

typedef enum {
   T271_UNDEF_,
   T271__X2TNLConfigurationInfo_ExtIEs_1,
   T271__X2TNLConfigurationInfo_ExtIEs_2
} X2TNLConfigurationInfo_ExtIEs_TVALUE;

typedef enum {
   T272_UNDEF_
} ENBX2ExtTLA_ExtIEs_TVALUE;

/**************************************************************/
/*                                                            */
/*  MME_UE_S1AP_ID                                            */
/*                                                            */
/**************************************************************/
/*
MME-UE-S1AP-ID ::= INTEGER (0..4294967295)
*/
typedef OSUINT32 s1ap_MME_UE_S1AP_ID;

EXTERN int asn1PE_s1ap_MME_UE_S1AP_ID (OSCTXT* pctxt, s1ap_MME_UE_S1AP_ID value);

EXTERN int asn1PD_s1ap_MME_UE_S1AP_ID (OSCTXT* pctxt, s1ap_MME_UE_S1AP_ID* pvalue);

EXTERN void asn1Print_s1ap_MME_UE_S1AP_ID 
   (const char* name, const s1ap_MME_UE_S1AP_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_MME_UE_S1AP_ID (const char* name, 
   s1ap_MME_UE_S1AP_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MME_UE_S1AP_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_MME_UE_S1AP_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  ENB_UE_S1AP_ID                                            */
/*                                                            */
/**************************************************************/
/*
ENB-UE-S1AP-ID ::= INTEGER (0..16777215)
*/
typedef OSUINT32 s1ap_ENB_UE_S1AP_ID;

EXTERN int asn1PE_s1ap_ENB_UE_S1AP_ID (OSCTXT* pctxt, s1ap_ENB_UE_S1AP_ID value);

EXTERN int asn1PD_s1ap_ENB_UE_S1AP_ID (OSCTXT* pctxt, s1ap_ENB_UE_S1AP_ID* pvalue);

EXTERN void asn1Print_s1ap_ENB_UE_S1AP_ID 
   (const char* name, const s1ap_ENB_UE_S1AP_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENB_UE_S1AP_ID (const char* name, 
   s1ap_ENB_UE_S1AP_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENB_UE_S1AP_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_ENB_UE_S1AP_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverType                                              */
/*                                                            */
/**************************************************************/
/*
HandoverType ::= ENUMERATED { intralte(0), ltetoutran(1), ltetogeran(2), utrantolte(3), gerantolte(4), ..., eps-to-5gs(5), fivegs-to-eps(6) }
*/
typedef enum {
   s1ap_intralte = 0,
   s1ap_ltetoutran = 1,
   s1ap_ltetogeran = 2,
   s1ap_utrantolte = 3,
   s1ap_gerantolte = 4
} s1ap_HandoverType_Root;

typedef enum {
   s1ap_eps_to_5gs = 5,
   s1ap_fivegs_to_eps = 6
} s1ap_HandoverType_Ext;

typedef OSUINT32 s1ap_HandoverType;

EXTERN int asn1PE_s1ap_HandoverType (OSCTXT* pctxt, s1ap_HandoverType value);

EXTERN int asn1PD_s1ap_HandoverType (OSCTXT* pctxt, s1ap_HandoverType* pvalue);

EXTERN void asn1Print_s1ap_HandoverType 
   (const char* name, const s1ap_HandoverType* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverType (const char* name, 
   s1ap_HandoverType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverType (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverType* pvalue);

EXTERN extern const OSEnumItem s1ap_HandoverType_ENUMTAB[];
#define s1ap_HandoverType_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* s1ap_HandoverType_ToString (OSINT32 value);

EXTERN int s1ap_HandoverType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_HandoverType* pvalue);

EXTERN int s1ap_HandoverType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_HandoverType* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseRadioNetwork                                         */
/*                                                            */
/**************************************************************/
/*
CauseRadioNetwork ::= ENUMERATED { unspecified(0), tx2relocoverall-expiry(1), successful-handover(2), release-due-to-eutran-generated-reason(3), handover-cancelled(4), partial-handover(5), ho-failure-in-target-EPC-eNB-or-target-system(6), ho-target-not-allowed(7), tS1relocoverall-expiry(8), tS1relocprep-expiry(9), cell-not-available(10), unknown-targetID(11), no-radio-resources-available-in-target-cell(12), unknown-mme-ue-s1ap-id(13), unknown-enb-ue-s1ap-id(14), unknown-pair-ue-s1ap-id(15), handover-desirable-for-radio-reason(16), time-critical-handover(17), resource-optimisation-handover(18), reduce-load-in-serving-cell(19), user-inactivity(20), radio-connection-with-ue-lost(21), load-balancing-tau-required(22), cs-fallback-triggered(23), ue-not-available-for-ps-service(24), radio-resources-not-available(25), failure-in-radio-interface-procedure(26), invalid-qos-combination(27), interrat-redirection(28), interaction-with-other-procedure(29), unknown-E-RAB-ID(30), multiple-E-RAB-ID-instances(31), encryption-and-or-integrity-protection-algorithms-not-supported(32), s1-intra-system-handover-triggered(33), s1-inter-system-handover-triggered(34), x2-handover-triggered(35), ..., redirection-towards-1xRTT(36), not-supported-QCI-value(37), invalid-CSG-Id(38), release-due-to-pre-emption(39) }
*/
typedef enum {
   s1ap_unspecified_2 = 0,
   s1ap_tx2relocoverall_expiry = 1,
   s1ap_successful_handover = 2,
   s1ap_release_due_to_eutran_generated_reason = 3,
   s1ap_handover_cancelled = 4,
   s1ap_partial_handover = 5,
   s1ap_ho_failure_in_target_EPC_eNB_or_target_system = 6,
   s1ap_ho_target_not_allowed = 7,
   s1ap_tS1relocoverall_expiry = 8,
   s1ap_tS1relocprep_expiry = 9,
   s1ap_cell_not_available = 10,
   s1ap_unknown_targetID = 11,
   s1ap_no_radio_resources_available_in_target_cell = 12,
   s1ap_unknown_mme_ue_s1ap_id = 13,
   s1ap_unknown_enb_ue_s1ap_id = 14,
   s1ap_unknown_pair_ue_s1ap_id = 15,
   s1ap_handover_desirable_for_radio_reason = 16,
   s1ap_time_critical_handover = 17,
   s1ap_resource_optimisation_handover = 18,
   s1ap_reduce_load_in_serving_cell = 19,
   s1ap_user_inactivity = 20,
   s1ap_radio_connection_with_ue_lost = 21,
   s1ap_load_balancing_tau_required = 22,
   s1ap_cs_fallback_triggered = 23,
   s1ap_ue_not_available_for_ps_service = 24,
   s1ap_radio_resources_not_available = 25,
   s1ap_failure_in_radio_interface_procedure = 26,
   s1ap_invalid_qos_combination = 27,
   s1ap_interrat_redirection = 28,
   s1ap_interaction_with_other_procedure = 29,
   s1ap_unknown_E_RAB_ID = 30,
   s1ap_multiple_E_RAB_ID_instances = 31,
   s1ap_encryption_and_or_integrity_protection_algorithms_not_supported = 32,
   s1ap_s1_intra_system_handover_triggered = 33,
   s1ap_s1_inter_system_handover_triggered = 34,
   s1ap_x2_handover_triggered = 35
} s1ap_CauseRadioNetwork_Root;

typedef enum {
   s1ap_redirection_towards_1xRTT = 36,
   s1ap_not_supported_QCI_value = 37,
   s1ap_invalid_CSG_Id = 38,
   s1ap_release_due_to_pre_emption = 39
} s1ap_CauseRadioNetwork_Ext;

typedef OSUINT32 s1ap_CauseRadioNetwork;

EXTERN int asn1PE_s1ap_CauseRadioNetwork (OSCTXT* pctxt, s1ap_CauseRadioNetwork value);

EXTERN int asn1PD_s1ap_CauseRadioNetwork (OSCTXT* pctxt, s1ap_CauseRadioNetwork* pvalue);

EXTERN void asn1Print_s1ap_CauseRadioNetwork 
   (const char* name, const s1ap_CauseRadioNetwork* pvalue);

EXTERN int asn1PrtToStr_s1ap_CauseRadioNetwork (const char* name, 
   s1ap_CauseRadioNetwork* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CauseRadioNetwork (OSCTXT *pctxt, 
   const char* name, const s1ap_CauseRadioNetwork* pvalue);

EXTERN extern const OSEnumItem s1ap_CauseRadioNetwork_ENUMTAB[];
#define s1ap_CauseRadioNetwork_ENUMTABSIZE 40

EXTERN const OSUTF8CHAR* s1ap_CauseRadioNetwork_ToString (OSINT32 value);

EXTERN int s1ap_CauseRadioNetwork_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CauseRadioNetwork* pvalue);

EXTERN int s1ap_CauseRadioNetwork_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CauseRadioNetwork* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseTransport                                            */
/*                                                            */
/**************************************************************/
/*
CauseTransport ::= ENUMERATED { transport-resource-unavailable(0), unspecified(1), ... }
*/
typedef enum {
   s1ap_transport_resource_unavailable = 0,
   s1ap_unspecified_3 = 1
} s1ap_CauseTransport_Root;

typedef OSUINT32 s1ap_CauseTransport;

EXTERN int asn1PE_s1ap_CauseTransport (OSCTXT* pctxt, s1ap_CauseTransport value);

EXTERN int asn1PD_s1ap_CauseTransport (OSCTXT* pctxt, s1ap_CauseTransport* pvalue);

EXTERN void asn1Print_s1ap_CauseTransport 
   (const char* name, const s1ap_CauseTransport* pvalue);

EXTERN int asn1PrtToStr_s1ap_CauseTransport (const char* name, 
   s1ap_CauseTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CauseTransport (OSCTXT *pctxt, 
   const char* name, const s1ap_CauseTransport* pvalue);

EXTERN extern const OSEnumItem s1ap_CauseTransport_ENUMTAB[];
#define s1ap_CauseTransport_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_CauseTransport_ToString (OSINT32 value);

EXTERN int s1ap_CauseTransport_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CauseTransport* pvalue);

EXTERN int s1ap_CauseTransport_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CauseTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseNas                                                  */
/*                                                            */
/**************************************************************/
/*
CauseNas ::= ENUMERATED { normal-release(0), authentication-failure(1), detach(2), unspecified(3), ..., csg-subscription-expiry(4) }
*/
typedef enum {
   s1ap_normal_release = 0,
   s1ap_authentication_failure = 1,
   s1ap_detach = 2,
   s1ap_unspecified_4 = 3
} s1ap_CauseNas_Root;

typedef enum {
   s1ap_csg_subscription_expiry = 4
} s1ap_CauseNas_Ext;

typedef OSUINT32 s1ap_CauseNas;

EXTERN int asn1PE_s1ap_CauseNas (OSCTXT* pctxt, s1ap_CauseNas value);

EXTERN int asn1PD_s1ap_CauseNas (OSCTXT* pctxt, s1ap_CauseNas* pvalue);

EXTERN void asn1Print_s1ap_CauseNas (const char* name, const s1ap_CauseNas* pvalue);

EXTERN int asn1PrtToStr_s1ap_CauseNas (const char* name, s1ap_CauseNas* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CauseNas (OSCTXT *pctxt, 
   const char* name, const s1ap_CauseNas* pvalue);

EXTERN extern const OSEnumItem s1ap_CauseNas_ENUMTAB[];
#define s1ap_CauseNas_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* s1ap_CauseNas_ToString (OSINT32 value);

EXTERN int s1ap_CauseNas_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CauseNas* pvalue);

EXTERN int s1ap_CauseNas_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CauseNas* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseProtocol                                             */
/*                                                            */
/**************************************************************/
/*
CauseProtocol ::= ENUMERATED { transfer-syntax-error(0), abstract-syntax-error-reject(1), abstract-syntax-error-ignore-and-notify(2), message-not-compatible-with-receiver-state(3), semantic-error(4), abstract-syntax-error-falsely-constructed-message(5), unspecified(6), ... }
*/
typedef enum {
   s1ap_transfer_syntax_error = 0,
   s1ap_abstract_syntax_error_reject = 1,
   s1ap_abstract_syntax_error_ignore_and_notify = 2,
   s1ap_message_not_compatible_with_receiver_state = 3,
   s1ap_semantic_error = 4,
   s1ap_abstract_syntax_error_falsely_constructed_message = 5,
   s1ap_unspecified_1 = 6
} s1ap_CauseProtocol_Root;

typedef OSUINT32 s1ap_CauseProtocol;

EXTERN int asn1PE_s1ap_CauseProtocol (OSCTXT* pctxt, s1ap_CauseProtocol value);

EXTERN int asn1PD_s1ap_CauseProtocol (OSCTXT* pctxt, s1ap_CauseProtocol* pvalue);

EXTERN void asn1Print_s1ap_CauseProtocol 
   (const char* name, const s1ap_CauseProtocol* pvalue);

EXTERN int asn1PrtToStr_s1ap_CauseProtocol (const char* name, 
   s1ap_CauseProtocol* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CauseProtocol (OSCTXT *pctxt, 
   const char* name, const s1ap_CauseProtocol* pvalue);

EXTERN extern const OSEnumItem s1ap_CauseProtocol_ENUMTAB[];
#define s1ap_CauseProtocol_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* s1ap_CauseProtocol_ToString (OSINT32 value);

EXTERN int s1ap_CauseProtocol_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CauseProtocol* pvalue);

EXTERN int s1ap_CauseProtocol_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CauseProtocol* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseMisc                                                 */
/*                                                            */
/**************************************************************/
/*
CauseMisc ::= ENUMERATED { control-processing-overload(0), not-enough-user-plane-processing-resources(1), hardware-failure(2), om-intervention(3), unspecified(4), unknown-PLMN(5), ... }
*/
typedef enum {
   s1ap_control_processing_overload = 0,
   s1ap_not_enough_user_plane_processing_resources = 1,
   s1ap_hardware_failure = 2,
   s1ap_om_intervention = 3,
   s1ap_unspecified = 4,
   s1ap_unknown_PLMN = 5
} s1ap_CauseMisc_Root;

typedef OSUINT32 s1ap_CauseMisc;

EXTERN int asn1PE_s1ap_CauseMisc (OSCTXT* pctxt, s1ap_CauseMisc value);

EXTERN int asn1PD_s1ap_CauseMisc (OSCTXT* pctxt, s1ap_CauseMisc* pvalue);

EXTERN void asn1Print_s1ap_CauseMisc (const char* name, const s1ap_CauseMisc* pvalue);

EXTERN int asn1PrtToStr_s1ap_CauseMisc (const char* name, s1ap_CauseMisc* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CauseMisc (OSCTXT *pctxt, 
   const char* name, const s1ap_CauseMisc* pvalue);

EXTERN extern const OSEnumItem s1ap_CauseMisc_ENUMTAB[];
#define s1ap_CauseMisc_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* s1ap_CauseMisc_ToString (OSINT32 value);

EXTERN int s1ap_CauseMisc_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CauseMisc* pvalue);

EXTERN int s1ap_CauseMisc_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CauseMisc* pvalue);

/**************************************************************/
/*                                                            */
/*  Cause                                                     */
/*                                                            */
/**************************************************************/
/*
Cause ::= CHOICE {
   radioNetwork [0] CauseRadioNetwork,
   transport [1] CauseTransport,
   nas [2] CauseNas,
   protocol [3] CauseProtocol,
   misc [4] CauseMisc,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_Cause_radioNetwork       1
#define T_s1ap_Cause_transport          2
#define T_s1ap_Cause_nas                3
#define T_s1ap_Cause_protocol           4
#define T_s1ap_Cause_misc               5
#define T_s1ap_Cause_extElem1           6

typedef struct EXTERN s1ap_Cause {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_CauseRadioNetwork radioNetwork;
      /* t = 2 */
      s1ap_CauseTransport transport;
      /* t = 3 */
      s1ap_CauseNas nas;
      /* t = 4 */
      s1ap_CauseProtocol protocol;
      /* t = 5 */
      s1ap_CauseMisc misc;
      /* t = 6 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_Cause;

EXTERN int asn1PE_s1ap_Cause (OSCTXT* pctxt, s1ap_Cause* pvalue);

EXTERN int asn1PD_s1ap_Cause (OSCTXT* pctxt, s1ap_Cause* pvalue);

EXTERN void asn1Print_s1ap_Cause (const char* name, const s1ap_Cause* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cause (const char* name, s1ap_Cause* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cause (OSCTXT *pctxt, 
   const char* name, const s1ap_Cause* pvalue);

EXTERN void asn1Copy_s1ap_Cause (OSCTXT* pctxt, const s1ap_Cause* pSrcValue, 
   s1ap_Cause* pDstValue);

EXTERN int asn1Init_s1ap_Cause (s1ap_Cause* pvalue);

EXTERN void asn1Free_s1ap_Cause (OSCTXT *pctxt, s1ap_Cause* pvalue);

/**************************************************************/
/*                                                            */
/*  TBCD_STRING                                               */
/*                                                            */
/**************************************************************/
/*
TBCD-STRING ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN s1ap_TBCD_STRING {
   OSUINT32 numocts;
   OSOCTET data[3];
} s1ap_TBCD_STRING;

EXTERN int asn1PE_s1ap_TBCD_STRING (OSCTXT* pctxt, s1ap_TBCD_STRING* pvalue);

EXTERN int asn1PD_s1ap_TBCD_STRING (OSCTXT* pctxt, s1ap_TBCD_STRING* pvalue);

EXTERN void asn1Print_s1ap_TBCD_STRING 
   (const char* name, const s1ap_TBCD_STRING* pvalue);

EXTERN int asn1PrtToStr_s1ap_TBCD_STRING (const char* name, s1ap_TBCD_STRING* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TBCD_STRING (OSCTXT *pctxt, 
   const char* name, const s1ap_TBCD_STRING* pvalue);

EXTERN void asn1Copy_s1ap_TBCD_STRING (OSCTXT* pctxt, 
   const s1ap_TBCD_STRING* pSrcValue, s1ap_TBCD_STRING* pDstValue);

EXTERN int asn1Init_s1ap_TBCD_STRING (s1ap_TBCD_STRING* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNidentity                                              */
/*                                                            */
/**************************************************************/
/*
PLMNidentity ::= TBCD-STRING
*/
typedef s1ap_TBCD_STRING s1ap_PLMNidentity;

EXTERN int asn1PE_s1ap_PLMNidentity (OSCTXT* pctxt, s1ap_PLMNidentity* pvalue);

EXTERN int asn1PD_s1ap_PLMNidentity (OSCTXT* pctxt, s1ap_PLMNidentity* pvalue);

EXTERN void asn1Print_s1ap_PLMNidentity 
   (const char* name, const s1ap_PLMNidentity* pvalue);

EXTERN int asn1PrtToStr_s1ap_PLMNidentity (const char* name, 
   s1ap_PLMNidentity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PLMNidentity (OSCTXT *pctxt, 
   const char* name, const s1ap_PLMNidentity* pvalue);

EXTERN void asn1Copy_s1ap_PLMNidentity (OSCTXT* pctxt, 
   const s1ap_PLMNidentity* pSrcValue, s1ap_PLMNidentity* pDstValue);

EXTERN int asn1Init_s1ap_PLMNidentity (s1ap_PLMNidentity* pvalue);

/**************************************************************/
/*                                                            */
/*  ENB_ID                                                    */
/*                                                            */
/**************************************************************/
/*
ENB-ID ::= CHOICE {
   macroENB-ID [0] BIT STRING  (SIZE (20)),
   homeENB-ID [1] BIT STRING  (SIZE (28)),
   ...,
   short-macroENB-ID [2] BIT STRING  (SIZE (18)),
   long-macroENB-ID [3] BIT STRING  (SIZE (21))
}
*/
/* Choice tag constants */

#define T_s1ap_ENB_ID_macroENB_ID       1
#define T_s1ap_ENB_ID_homeENB_ID        2
#define T_s1ap_ENB_ID_short_macroENB_ID 3
#define T_s1ap_ENB_ID_long_macroENB_ID  4
#define T_s1ap_ENB_ID_extElem1          5

typedef struct EXTERN s1ap_ENB_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1BitStr32 *macroENB_ID;
      /* t = 2 */
      ASN1BitStr32 *homeENB_ID;
      /* t = 3 */
      ASN1BitStr32 *short_macroENB_ID;
      /* t = 4 */
      ASN1BitStr32 *long_macroENB_ID;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_ENB_ID;

EXTERN int asn1PE_s1ap_ENB_ID (OSCTXT* pctxt, s1ap_ENB_ID* pvalue);

EXTERN int asn1PD_s1ap_ENB_ID (OSCTXT* pctxt, s1ap_ENB_ID* pvalue);

EXTERN void asn1Print_s1ap_ENB_ID (const char* name, const s1ap_ENB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENB_ID (const char* name, s1ap_ENB_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_ENB_ID* pvalue);

EXTERN void asn1Copy_s1ap_ENB_ID (OSCTXT* pctxt, const s1ap_ENB_ID* pSrcValue, 
   s1ap_ENB_ID* pDstValue);

EXTERN int asn1Init_s1ap_ENB_ID (s1ap_ENB_ID* pvalue);

EXTERN void asn1Free_s1ap_ENB_ID (OSCTXT *pctxt, s1ap_ENB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_ENB_ID_iE_Extensions_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Global-ENB-ID'
*/
typedef struct EXTERN s1ap_Global_ENB_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_Global_ENB_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Global_ENB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_Global_ENB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Global_ENB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_Global_ENB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Global_ENB_ID_iE_Extensions_element 
   (const char* name, const s1ap_Global_ENB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_ENB_ID_iE_Extensions_element (const char* name, 
   s1ap_Global_ENB_ID_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_ENB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_ENB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_Global_ENB_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Global_ENB_ID_iE_Extensions_element* pSrcValue, 
   s1ap_Global_ENB_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_Global_ENB_ID_iE_Extensions_element (
   s1ap_Global_ENB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Global_ENB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Global_ENB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_ENB_ID_iE_Extensions                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Global-ENB-ID'
*/
/* List of s1ap_Global_ENB_ID_iE_Extensions_element */
typedef OSRTDList s1ap_Global_ENB_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_Global_ENB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_Global_ENB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Global_ENB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_Global_ENB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Global_ENB_ID_iE_Extensions 
   (const char* name, const s1ap_Global_ENB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_ENB_ID_iE_Extensions (const char* name, 
   s1ap_Global_ENB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_ENB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_ENB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Global_ENB_ID_iE_Extensions_element* 
   asn1Get_s1ap_Global_ENB_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_Global_ENB_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Global_ENB_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Global_ENB_ID_iE_Extensions* pSrcValue, 
   s1ap_Global_ENB_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Global_ENB_ID_iE_Extensions (
   s1ap_Global_ENB_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Global_ENB_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Global_ENB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_ENB_ID                                             */
/*                                                            */
/**************************************************************/
/*
Global-ENB-ID ::= SEQUENCE {
   pLMNidentity [0] PLMNidentity,
   eNB-ID [1] EXPLICIT ENB-ID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({GlobalENB-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({GlobalENB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({GlobalENB-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Global_ENB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_ENB_ID eNB_ID;
   s1ap_Global_ENB_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Global_ENB_ID;

EXTERN int asn1PE_s1ap_Global_ENB_ID (OSCTXT* pctxt, s1ap_Global_ENB_ID* pvalue);

EXTERN int asn1PD_s1ap_Global_ENB_ID (OSCTXT* pctxt, s1ap_Global_ENB_ID* pvalue);

EXTERN void asn1Print_s1ap_Global_ENB_ID 
   (const char* name, const s1ap_Global_ENB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_ENB_ID (const char* name, 
   s1ap_Global_ENB_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_ENB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_ENB_ID* pvalue);

EXTERN void asn1Copy_s1ap_Global_ENB_ID (OSCTXT* pctxt, 
   const s1ap_Global_ENB_ID* pSrcValue, s1ap_Global_ENB_ID* pDstValue);

EXTERN int asn1Init_s1ap_Global_ENB_ID (s1ap_Global_ENB_ID* pvalue);

EXTERN void asn1Free_s1ap_Global_ENB_ID (OSCTXT *pctxt, s1ap_Global_ENB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  TAC                                                       */
/*                                                            */
/**************************************************************/
/*
 T
TAC ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN s1ap_TAC {
   OSUINT32 numocts;
   OSOCTET data[2];
} s1ap_TAC;

EXTERN int asn1PE_s1ap_TAC (OSCTXT* pctxt, s1ap_TAC* pvalue);

EXTERN int asn1PD_s1ap_TAC (OSCTXT* pctxt, s1ap_TAC* pvalue);

EXTERN void asn1Print_s1ap_TAC (const char* name, const s1ap_TAC* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAC (const char* name, s1ap_TAC* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAC (OSCTXT *pctxt, 
   const char* name, const s1ap_TAC* pvalue);

EXTERN void asn1Copy_s1ap_TAC (OSCTXT* pctxt, const s1ap_TAC* pSrcValue, s1ap_TAC*
    pDstValue);

EXTERN int asn1Init_s1ap_TAC (s1ap_TAC* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI'
*/
typedef struct EXTERN s1ap_TAI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TAI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TAI_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TAI_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TAI_iE_Extensions_element 
   (const char* name, const s1ap_TAI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_iE_Extensions_element (const char* name, 
   s1ap_TAI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TAI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TAI_iE_Extensions_element* pSrcValue, 
   s1ap_TAI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TAI_iE_Extensions_element (
   s1ap_TAI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TAI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TAI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI'
*/
/* List of s1ap_TAI_iE_Extensions_element */
typedef OSRTDList s1ap_TAI_iE_Extensions;

EXTERN int asn1PE_s1ap_TAI_iE_Extensions (OSCTXT* pctxt, s1ap_TAI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TAI_iE_Extensions (OSCTXT* pctxt, s1ap_TAI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TAI_iE_Extensions 
   (const char* name, const s1ap_TAI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_iE_Extensions (const char* name, 
   s1ap_TAI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TAI_iE_Extensions_element* asn1Get_s1ap_TAI_iE_Extensions 
   (s1ap_ProtocolExtensionID id, s1ap_TAI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TAI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TAI_iE_Extensions* pSrcValue, s1ap_TAI_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TAI_iE_Extensions (s1ap_TAI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TAI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TAI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI                                                       */
/*                                                            */
/**************************************************************/
/*
TAI ::= SEQUENCE {
   pLMNidentity [0] PLMNidentity,
   tAC [1] TAC,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TAI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TAI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TAI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_TAC tAC;
   s1ap_TAI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TAI;

EXTERN int asn1PE_s1ap_TAI (OSCTXT* pctxt, s1ap_TAI* pvalue);

EXTERN int asn1PD_s1ap_TAI (OSCTXT* pctxt, s1ap_TAI* pvalue);

EXTERN void asn1Print_s1ap_TAI (const char* name, const s1ap_TAI* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI (const char* name, s1ap_TAI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI* pvalue);

EXTERN void asn1Copy_s1ap_TAI (OSCTXT* pctxt, const s1ap_TAI* pSrcValue, s1ap_TAI*
    pDstValue);

EXTERN int asn1Init_s1ap_TAI (s1ap_TAI* pvalue);

EXTERN void asn1Free_s1ap_TAI (OSCTXT *pctxt, s1ap_TAI* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ID_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargeteNB-ID'
*/
typedef struct EXTERN s1ap_TargeteNB_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TargeteNB_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TargeteNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TargeteNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TargeteNB_ID_iE_Extensions_element 
   (const char* name, const s1ap_TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargeteNB_ID_iE_Extensions_element (const char* name, 
   s1ap_TargeteNB_ID_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargeteNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TargeteNB_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TargeteNB_ID_iE_Extensions_element* pSrcValue, 
   s1ap_TargeteNB_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TargeteNB_ID_iE_Extensions_element (
   s1ap_TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TargeteNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TargeteNB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ID_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargeteNB-ID'
*/
/* List of s1ap_TargeteNB_ID_iE_Extensions_element */
typedef OSRTDList s1ap_TargeteNB_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_TargeteNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_TargeteNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TargeteNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_TargeteNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TargeteNB_ID_iE_Extensions 
   (const char* name, const s1ap_TargeteNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargeteNB_ID_iE_Extensions (const char* name, 
   s1ap_TargeteNB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargeteNB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TargeteNB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TargeteNB_ID_iE_Extensions_element* 
   asn1Get_s1ap_TargeteNB_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TargeteNB_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TargeteNB_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TargeteNB_ID_iE_Extensions* pSrcValue, 
   s1ap_TargeteNB_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TargeteNB_ID_iE_Extensions (
   s1ap_TargeteNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TargeteNB_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TargeteNB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ID                                              */
/*                                                            */
/**************************************************************/
/*
TargeteNB-ID ::= SEQUENCE {
   global-ENB-ID [0] Global-ENB-ID,
   selected-TAI [1] TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TargeteNB-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TargeteNB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TargeteNB-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TargeteNB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Global_ENB_ID global_ENB_ID;
   s1ap_TAI selected_TAI;
   s1ap_TargeteNB_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TargeteNB_ID;

EXTERN int asn1PE_s1ap_TargeteNB_ID (OSCTXT* pctxt, s1ap_TargeteNB_ID* pvalue);

EXTERN int asn1PD_s1ap_TargeteNB_ID (OSCTXT* pctxt, s1ap_TargeteNB_ID* pvalue);

EXTERN void asn1Print_s1ap_TargeteNB_ID 
   (const char* name, const s1ap_TargeteNB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargeteNB_ID (const char* name, 
   s1ap_TargeteNB_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargeteNB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_TargeteNB_ID* pvalue);

EXTERN void asn1Copy_s1ap_TargeteNB_ID (OSCTXT* pctxt, 
   const s1ap_TargeteNB_ID* pSrcValue, s1ap_TargeteNB_ID* pDstValue);

EXTERN int asn1Init_s1ap_TargeteNB_ID (s1ap_TargeteNB_ID* pvalue);

EXTERN void asn1Free_s1ap_TargeteNB_ID (OSCTXT *pctxt, s1ap_TargeteNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  LAC                                                       */
/*                                                            */
/**************************************************************/
/*
 L
LAC ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN s1ap_LAC {
   OSUINT32 numocts;
   OSOCTET data[2];
} s1ap_LAC;

EXTERN int asn1PE_s1ap_LAC (OSCTXT* pctxt, s1ap_LAC* pvalue);

EXTERN int asn1PD_s1ap_LAC (OSCTXT* pctxt, s1ap_LAC* pvalue);

EXTERN void asn1Print_s1ap_LAC (const char* name, const s1ap_LAC* pvalue);

EXTERN int asn1PrtToStr_s1ap_LAC (const char* name, s1ap_LAC* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LAC (OSCTXT *pctxt, 
   const char* name, const s1ap_LAC* pvalue);

EXTERN void asn1Copy_s1ap_LAC (OSCTXT* pctxt, const s1ap_LAC* pSrcValue, s1ap_LAC*
    pDstValue);

EXTERN int asn1Init_s1ap_LAC (s1ap_LAC* pvalue);

/**************************************************************/
/*                                                            */
/*  LAI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LAI'
*/
typedef struct EXTERN s1ap_LAI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_LAI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_LAI_iE_Extensions_element (OSCTXT* pctxt, s1ap_LAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_LAI_iE_Extensions_element (OSCTXT* pctxt, s1ap_LAI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_LAI_iE_Extensions_element 
   (const char* name, const s1ap_LAI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_LAI_iE_Extensions_element (const char* name, 
   s1ap_LAI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LAI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_LAI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_LAI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_LAI_iE_Extensions_element* pSrcValue, 
   s1ap_LAI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_LAI_iE_Extensions_element (
   s1ap_LAI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_LAI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_LAI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LAI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LAI'
*/
/* List of s1ap_LAI_iE_Extensions_element */
typedef OSRTDList s1ap_LAI_iE_Extensions;

EXTERN int asn1PE_s1ap_LAI_iE_Extensions (OSCTXT* pctxt, s1ap_LAI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_LAI_iE_Extensions (OSCTXT* pctxt, s1ap_LAI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_LAI_iE_Extensions 
   (const char* name, const s1ap_LAI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_LAI_iE_Extensions (const char* name, 
   s1ap_LAI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LAI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_LAI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_LAI_iE_Extensions_element* asn1Get_s1ap_LAI_iE_Extensions 
   (s1ap_ProtocolExtensionID id, s1ap_LAI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_LAI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_LAI_iE_Extensions* pSrcValue, s1ap_LAI_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_LAI_iE_Extensions (s1ap_LAI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_LAI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_LAI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LAI                                                       */
/*                                                            */
/**************************************************************/
/*
LAI ::= SEQUENCE {
   pLMNidentity [0] PLMNidentity,
   lAC [1] LAC,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({LAI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({LAI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({LAI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_LAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_LAC lAC;
   s1ap_LAI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_LAI;

EXTERN int asn1PE_s1ap_LAI (OSCTXT* pctxt, s1ap_LAI* pvalue);

EXTERN int asn1PD_s1ap_LAI (OSCTXT* pctxt, s1ap_LAI* pvalue);

EXTERN void asn1Print_s1ap_LAI (const char* name, const s1ap_LAI* pvalue);

EXTERN int asn1PrtToStr_s1ap_LAI (const char* name, s1ap_LAI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LAI (OSCTXT *pctxt, 
   const char* name, const s1ap_LAI* pvalue);

EXTERN void asn1Copy_s1ap_LAI (OSCTXT* pctxt, const s1ap_LAI* pSrcValue, s1ap_LAI*
    pDstValue);

EXTERN int asn1Init_s1ap_LAI (s1ap_LAI* pvalue);

EXTERN void asn1Free_s1ap_LAI (OSCTXT *pctxt, s1ap_LAI* pvalue);

/**************************************************************/
/*                                                            */
/*  RAC                                                       */
/*                                                            */
/**************************************************************/
/*
RAC ::= OCTET STRING (SIZE (1))
*/
typedef struct EXTERN s1ap_RAC {
   OSUINT32 numocts;
   OSOCTET data[1];
} s1ap_RAC;

EXTERN int asn1PE_s1ap_RAC (OSCTXT* pctxt, s1ap_RAC* pvalue);

EXTERN int asn1PD_s1ap_RAC (OSCTXT* pctxt, s1ap_RAC* pvalue);

EXTERN void asn1Print_s1ap_RAC (const char* name, const s1ap_RAC* pvalue);

EXTERN int asn1PrtToStr_s1ap_RAC (const char* name, s1ap_RAC* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RAC (OSCTXT *pctxt, 
   const char* name, const s1ap_RAC* pvalue);

EXTERN void asn1Copy_s1ap_RAC (OSCTXT* pctxt, const s1ap_RAC* pSrcValue, s1ap_RAC*
    pDstValue);

EXTERN int asn1Init_s1ap_RAC (s1ap_RAC* pvalue);

/**************************************************************/
/*                                                            */
/*  RNC_ID                                                    */
/*                                                            */
/**************************************************************/
/*
RNC-ID ::= INTEGER (0..4095)
*/
typedef OSUINT16 s1ap_RNC_ID;

EXTERN int asn1PE_s1ap_RNC_ID (OSCTXT* pctxt, s1ap_RNC_ID value);

EXTERN int asn1PD_s1ap_RNC_ID (OSCTXT* pctxt, s1ap_RNC_ID* pvalue);

EXTERN void asn1Print_s1ap_RNC_ID (const char* name, const s1ap_RNC_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_RNC_ID (const char* name, s1ap_RNC_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RNC_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_RNC_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtendedRNC_ID                                            */
/*                                                            */
/**************************************************************/
/*
ExtendedRNC-ID ::= INTEGER (4096..65535)
*/
typedef OSUINT16 s1ap_ExtendedRNC_ID;

EXTERN int asn1PE_s1ap_ExtendedRNC_ID (OSCTXT* pctxt, s1ap_ExtendedRNC_ID value);

EXTERN int asn1PD_s1ap_ExtendedRNC_ID (OSCTXT* pctxt, s1ap_ExtendedRNC_ID* pvalue);

EXTERN void asn1Print_s1ap_ExtendedRNC_ID 
   (const char* name, const s1ap_ExtendedRNC_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExtendedRNC_ID (const char* name, 
   s1ap_ExtendedRNC_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExtendedRNC_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_ExtendedRNC_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ID_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetRNC-ID'
*/
typedef struct EXTERN s1ap_TargetRNC_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TargetRNC_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TargetRNC_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TargetRNC_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TargetRNC_ID_iE_Extensions_element 
   (const char* name, const s1ap_TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetRNC_ID_iE_Extensions_element (const char* name, 
   s1ap_TargetRNC_ID_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetRNC_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TargetRNC_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TargetRNC_ID_iE_Extensions_element* pSrcValue, 
   s1ap_TargetRNC_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TargetRNC_ID_iE_Extensions_element (
   s1ap_TargetRNC_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TargetRNC_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TargetRNC_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ID_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetRNC-ID'
*/
/* List of s1ap_TargetRNC_ID_iE_Extensions_element */
typedef OSRTDList s1ap_TargetRNC_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_TargetRNC_ID_iE_Extensions (OSCTXT* pctxt, s1ap_TargetRNC_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TargetRNC_ID_iE_Extensions (OSCTXT* pctxt, s1ap_TargetRNC_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TargetRNC_ID_iE_Extensions 
   (const char* name, const s1ap_TargetRNC_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetRNC_ID_iE_Extensions (const char* name, 
   s1ap_TargetRNC_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetRNC_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetRNC_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TargetRNC_ID_iE_Extensions_element* 
   asn1Get_s1ap_TargetRNC_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TargetRNC_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TargetRNC_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TargetRNC_ID_iE_Extensions* pSrcValue, 
   s1ap_TargetRNC_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TargetRNC_ID_iE_Extensions (
   s1ap_TargetRNC_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TargetRNC_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TargetRNC_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ID                                              */
/*                                                            */
/**************************************************************/
/*
TargetRNC-ID ::= SEQUENCE {
   lAI [0] LAI,
   rAC [1] RAC OPTIONAL,
   rNC-ID [2] RNC-ID,
   extendedRNC-ID [3] ExtendedRNC-ID OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TargetRNC-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TargetRNC-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TargetRNC-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TargetRNC_ID {
   struct {
      unsigned rACPresent : 1;
      unsigned extendedRNC_IDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_LAI lAI;
   s1ap_RAC rAC;
   s1ap_RNC_ID rNC_ID;
   s1ap_ExtendedRNC_ID extendedRNC_ID;
   s1ap_TargetRNC_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TargetRNC_ID;

EXTERN int asn1PE_s1ap_TargetRNC_ID (OSCTXT* pctxt, s1ap_TargetRNC_ID* pvalue);

EXTERN int asn1PD_s1ap_TargetRNC_ID (OSCTXT* pctxt, s1ap_TargetRNC_ID* pvalue);

EXTERN void asn1Print_s1ap_TargetRNC_ID 
   (const char* name, const s1ap_TargetRNC_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetRNC_ID (const char* name, 
   s1ap_TargetRNC_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetRNC_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetRNC_ID* pvalue);

EXTERN void asn1Copy_s1ap_TargetRNC_ID (OSCTXT* pctxt, 
   const s1ap_TargetRNC_ID* pSrcValue, s1ap_TargetRNC_ID* pDstValue);

EXTERN int asn1Init_s1ap_TargetRNC_ID (s1ap_TargetRNC_ID* pvalue);

EXTERN void asn1Free_s1ap_TargetRNC_ID (OSCTXT *pctxt, s1ap_TargetRNC_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  CI                                                        */
/*                                                            */
/**************************************************************/
/*
CI ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN s1ap_CI {
   OSUINT32 numocts;
   OSOCTET data[2];
} s1ap_CI;

EXTERN int asn1PE_s1ap_CI (OSCTXT* pctxt, s1ap_CI* pvalue);

EXTERN int asn1PD_s1ap_CI (OSCTXT* pctxt, s1ap_CI* pvalue);

EXTERN void asn1Print_s1ap_CI (const char* name, const s1ap_CI* pvalue);

EXTERN int asn1PrtToStr_s1ap_CI (const char* name, s1ap_CI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CI (OSCTXT *pctxt, 
   const char* name, const s1ap_CI* pvalue);

EXTERN void asn1Copy_s1ap_CI (OSCTXT* pctxt, const s1ap_CI* pSrcValue, s1ap_CI*
    pDstValue);

EXTERN int asn1Init_s1ap_CI (s1ap_CI* pvalue);

/**************************************************************/
/*                                                            */
/*  CGI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CGI'
*/
typedef struct EXTERN s1ap_CGI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CGI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CGI_iE_Extensions_element (OSCTXT* pctxt, s1ap_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CGI_iE_Extensions_element (OSCTXT* pctxt, s1ap_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CGI_iE_Extensions_element 
   (const char* name, const s1ap_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CGI_iE_Extensions_element (const char* name, 
   s1ap_CGI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CGI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CGI_iE_Extensions_element* pSrcValue, 
   s1ap_CGI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CGI_iE_Extensions_element (
   s1ap_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CGI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CGI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CGI'
*/
/* List of s1ap_CGI_iE_Extensions_element */
typedef OSRTDList s1ap_CGI_iE_Extensions;

EXTERN int asn1PE_s1ap_CGI_iE_Extensions (OSCTXT* pctxt, s1ap_CGI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CGI_iE_Extensions (OSCTXT* pctxt, s1ap_CGI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CGI_iE_Extensions 
   (const char* name, const s1ap_CGI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CGI_iE_Extensions (const char* name, 
   s1ap_CGI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CGI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CGI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CGI_iE_Extensions_element* asn1Get_s1ap_CGI_iE_Extensions 
   (s1ap_ProtocolExtensionID id, s1ap_CGI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CGI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CGI_iE_Extensions* pSrcValue, s1ap_CGI_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CGI_iE_Extensions (s1ap_CGI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CGI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CGI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CGI                                                       */
/*                                                            */
/**************************************************************/
/*
CGI ::= SEQUENCE {
   pLMNidentity [0] PLMNidentity,
   lAC [1] LAC,
   cI [2] CI,
   rAC [3] RAC OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CGI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CGI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CGI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CGI {
   struct {
      unsigned rACPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_LAC lAC;
   s1ap_CI cI;
   s1ap_RAC rAC;
   s1ap_CGI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CGI;

EXTERN int asn1PE_s1ap_CGI (OSCTXT* pctxt, s1ap_CGI* pvalue);

EXTERN int asn1PD_s1ap_CGI (OSCTXT* pctxt, s1ap_CGI* pvalue);

EXTERN void asn1Print_s1ap_CGI (const char* name, const s1ap_CGI* pvalue);

EXTERN int asn1PrtToStr_s1ap_CGI (const char* name, s1ap_CGI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CGI (OSCTXT *pctxt, 
   const char* name, const s1ap_CGI* pvalue);

EXTERN void asn1Copy_s1ap_CGI (OSCTXT* pctxt, const s1ap_CGI* pSrcValue, s1ap_CGI*
    pDstValue);

EXTERN int asn1Init_s1ap_CGI (s1ap_CGI* pvalue);

EXTERN void asn1Free_s1ap_CGI (OSCTXT *pctxt, s1ap_CGI* pvalue);

/**************************************************************/
/*                                                            */
/*  GNB_ID                                                    */
/*                                                            */
/**************************************************************/
/*
GNB-ID ::= BIT STRING  (SIZE (22..32))
*/
typedef ASN1BitStr32 s1ap_GNB_ID;

EXTERN int asn1PE_s1ap_GNB_ID (OSCTXT* pctxt, s1ap_GNB_ID value);

EXTERN int asn1PD_s1ap_GNB_ID (OSCTXT* pctxt, s1ap_GNB_ID* pvalue);

EXTERN void asn1Print_s1ap_GNB_ID (const char* name, const s1ap_GNB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_GNB_ID (const char* name, s1ap_GNB_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GNB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_GNB_ID* pvalue);

EXTERN void asn1Copy_s1ap_GNB_ID (OSCTXT* pctxt, const s1ap_GNB_ID* pSrcValue, 
   s1ap_GNB_ID* pDstValue);

EXTERN int asn1Init_s1ap_GNB_ID (s1ap_GNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  GNB_Identity                                              */
/*                                                            */
/**************************************************************/
/*
GNB-Identity ::= CHOICE {
   gNB-ID [0] GNB-ID,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_GNB_Identity_gNB_ID      1
#define T_s1ap_GNB_Identity_extElem1    2

typedef struct EXTERN s1ap_GNB_Identity {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_GNB_ID *gNB_ID;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_GNB_Identity;

EXTERN int asn1PE_s1ap_GNB_Identity (OSCTXT* pctxt, s1ap_GNB_Identity* pvalue);

EXTERN int asn1PD_s1ap_GNB_Identity (OSCTXT* pctxt, s1ap_GNB_Identity* pvalue);

EXTERN void asn1Print_s1ap_GNB_Identity 
   (const char* name, const s1ap_GNB_Identity* pvalue);

EXTERN int asn1PrtToStr_s1ap_GNB_Identity (const char* name, 
   s1ap_GNB_Identity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GNB_Identity (OSCTXT *pctxt, 
   const char* name, const s1ap_GNB_Identity* pvalue);

EXTERN void asn1Copy_s1ap_GNB_Identity (OSCTXT* pctxt, 
   const s1ap_GNB_Identity* pSrcValue, s1ap_GNB_Identity* pDstValue);

EXTERN int asn1Init_s1ap_GNB_Identity (s1ap_GNB_Identity* pvalue);

EXTERN void asn1Free_s1ap_GNB_Identity (OSCTXT *pctxt, s1ap_GNB_Identity* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_GNB_ID_iE_Extensions_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Global-GNB-ID'
*/
typedef struct EXTERN s1ap_Global_GNB_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_Global_GNB_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Global_GNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_Global_GNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Global_GNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_Global_GNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Global_GNB_ID_iE_Extensions_element 
   (const char* name, const s1ap_Global_GNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_GNB_ID_iE_Extensions_element (const char* name, 
   s1ap_Global_GNB_ID_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_GNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_GNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_Global_GNB_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Global_GNB_ID_iE_Extensions_element* pSrcValue, 
   s1ap_Global_GNB_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_Global_GNB_ID_iE_Extensions_element (
   s1ap_Global_GNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Global_GNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Global_GNB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_GNB_ID_iE_Extensions                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Global-GNB-ID'
*/
/* List of s1ap_Global_GNB_ID_iE_Extensions_element */
typedef OSRTDList s1ap_Global_GNB_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_Global_GNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_Global_GNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Global_GNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_Global_GNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Global_GNB_ID_iE_Extensions 
   (const char* name, const s1ap_Global_GNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_GNB_ID_iE_Extensions (const char* name, 
   s1ap_Global_GNB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_GNB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_GNB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Global_GNB_ID_iE_Extensions_element* 
   asn1Get_s1ap_Global_GNB_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_Global_GNB_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Global_GNB_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Global_GNB_ID_iE_Extensions* pSrcValue, 
   s1ap_Global_GNB_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Global_GNB_ID_iE_Extensions (
   s1ap_Global_GNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Global_GNB_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Global_GNB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_GNB_ID                                             */
/*                                                            */
/**************************************************************/
/*
Global-GNB-ID ::= SEQUENCE {
   pLMN-Identity [0] PLMNidentity,
   gNB-ID [1] EXPLICIT GNB-Identity,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Global-GNB-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Global-GNB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Global-GNB-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Global_GNB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMN_Identity;
   s1ap_GNB_Identity gNB_ID;
   s1ap_Global_GNB_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Global_GNB_ID;

EXTERN int asn1PE_s1ap_Global_GNB_ID (OSCTXT* pctxt, s1ap_Global_GNB_ID* pvalue);

EXTERN int asn1PD_s1ap_Global_GNB_ID (OSCTXT* pctxt, s1ap_Global_GNB_ID* pvalue);

EXTERN void asn1Print_s1ap_Global_GNB_ID 
   (const char* name, const s1ap_Global_GNB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_GNB_ID (const char* name, 
   s1ap_Global_GNB_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_GNB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_GNB_ID* pvalue);

EXTERN void asn1Copy_s1ap_Global_GNB_ID (OSCTXT* pctxt, 
   const s1ap_Global_GNB_ID* pSrcValue, s1ap_Global_GNB_ID* pDstValue);

EXTERN int asn1Init_s1ap_Global_GNB_ID (s1ap_Global_GNB_ID* pvalue);

EXTERN void asn1Free_s1ap_Global_GNB_ID (OSCTXT *pctxt, s1ap_Global_GNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  GNB_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GNB'
*/
typedef struct EXTERN s1ap_GNB_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_GNB_iE_Extensions_element;

EXTERN int asn1PE_s1ap_GNB_iE_Extensions_element (OSCTXT* pctxt, s1ap_GNB_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_GNB_iE_Extensions_element (OSCTXT* pctxt, s1ap_GNB_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_GNB_iE_Extensions_element 
   (const char* name, const s1ap_GNB_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_GNB_iE_Extensions_element (const char* name, 
   s1ap_GNB_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GNB_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_GNB_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_GNB_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_GNB_iE_Extensions_element* pSrcValue, 
   s1ap_GNB_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_GNB_iE_Extensions_element (
   s1ap_GNB_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_GNB_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_GNB_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GNB_iE_Extensions                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GNB'
*/
/* List of s1ap_GNB_iE_Extensions_element */
typedef OSRTDList s1ap_GNB_iE_Extensions;

EXTERN int asn1PE_s1ap_GNB_iE_Extensions (OSCTXT* pctxt, s1ap_GNB_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_GNB_iE_Extensions (OSCTXT* pctxt, s1ap_GNB_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_GNB_iE_Extensions 
   (const char* name, const s1ap_GNB_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_GNB_iE_Extensions (const char* name, 
   s1ap_GNB_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GNB_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_GNB_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_GNB_iE_Extensions_element* asn1Get_s1ap_GNB_iE_Extensions 
   (s1ap_ProtocolExtensionID id, s1ap_GNB_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_GNB_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_GNB_iE_Extensions* pSrcValue, s1ap_GNB_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_GNB_iE_Extensions (s1ap_GNB_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_GNB_iE_Extensions (OSCTXT *pctxt, 
   s1ap_GNB_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GNB                                                       */
/*                                                            */
/**************************************************************/
/*
GNB ::= SEQUENCE {
   global-gNB-ID [0] Global-GNB-ID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({GNB-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({GNB-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({GNB-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_GNB {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Global_GNB_ID global_gNB_ID;
   s1ap_GNB_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_GNB;

EXTERN int asn1PE_s1ap_GNB (OSCTXT* pctxt, s1ap_GNB* pvalue);

EXTERN int asn1PD_s1ap_GNB (OSCTXT* pctxt, s1ap_GNB* pvalue);

EXTERN void asn1Print_s1ap_GNB (const char* name, const s1ap_GNB* pvalue);

EXTERN int asn1PrtToStr_s1ap_GNB (const char* name, s1ap_GNB* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GNB (OSCTXT *pctxt, 
   const char* name, const s1ap_GNB* pvalue);

EXTERN void asn1Copy_s1ap_GNB (OSCTXT* pctxt, const s1ap_GNB* pSrcValue, s1ap_GNB*
    pDstValue);

EXTERN int asn1Init_s1ap_GNB (s1ap_GNB* pvalue);

EXTERN void asn1Free_s1ap_GNB (OSCTXT *pctxt, s1ap_GNB* pvalue);

/**************************************************************/
/*                                                            */
/*  NG_eNB_iE_Extensions_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NG-eNB'
*/
typedef struct EXTERN s1ap_NG_eNB_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_NG_eNB_iE_Extensions_element;

EXTERN int asn1PE_s1ap_NG_eNB_iE_Extensions_element (OSCTXT* pctxt, s1ap_NG_eNB_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_NG_eNB_iE_Extensions_element (OSCTXT* pctxt, s1ap_NG_eNB_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_NG_eNB_iE_Extensions_element 
   (const char* name, const s1ap_NG_eNB_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_NG_eNB_iE_Extensions_element (const char* name, 
   s1ap_NG_eNB_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NG_eNB_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_NG_eNB_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_NG_eNB_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_NG_eNB_iE_Extensions_element* pSrcValue, 
   s1ap_NG_eNB_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_NG_eNB_iE_Extensions_element (
   s1ap_NG_eNB_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_NG_eNB_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_NG_eNB_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NG_eNB_iE_Extensions                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NG-eNB'
*/
/* List of s1ap_NG_eNB_iE_Extensions_element */
typedef OSRTDList s1ap_NG_eNB_iE_Extensions;

EXTERN int asn1PE_s1ap_NG_eNB_iE_Extensions (OSCTXT* pctxt, s1ap_NG_eNB_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_NG_eNB_iE_Extensions (OSCTXT* pctxt, s1ap_NG_eNB_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_NG_eNB_iE_Extensions 
   (const char* name, const s1ap_NG_eNB_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_NG_eNB_iE_Extensions (const char* name, 
   s1ap_NG_eNB_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NG_eNB_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_NG_eNB_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_NG_eNB_iE_Extensions_element* 
   asn1Get_s1ap_NG_eNB_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_NG_eNB_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_NG_eNB_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_NG_eNB_iE_Extensions* pSrcValue, s1ap_NG_eNB_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_NG_eNB_iE_Extensions (s1ap_NG_eNB_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_NG_eNB_iE_Extensions (OSCTXT *pctxt, 
   s1ap_NG_eNB_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NG_eNB                                                    */
/*                                                            */
/**************************************************************/
/*
NG-eNB ::= SEQUENCE {
   global-ng-eNB-ID [0] Global-ENB-ID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({NG-eNB-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({NG-eNB-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({NG-eNB-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_NG_eNB {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Global_ENB_ID global_ng_eNB_ID;
   s1ap_NG_eNB_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_NG_eNB;

EXTERN int asn1PE_s1ap_NG_eNB (OSCTXT* pctxt, s1ap_NG_eNB* pvalue);

EXTERN int asn1PD_s1ap_NG_eNB (OSCTXT* pctxt, s1ap_NG_eNB* pvalue);

EXTERN void asn1Print_s1ap_NG_eNB (const char* name, const s1ap_NG_eNB* pvalue);

EXTERN int asn1PrtToStr_s1ap_NG_eNB (const char* name, s1ap_NG_eNB* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NG_eNB (OSCTXT *pctxt, 
   const char* name, const s1ap_NG_eNB* pvalue);

EXTERN void asn1Copy_s1ap_NG_eNB (OSCTXT* pctxt, const s1ap_NG_eNB* pSrcValue, 
   s1ap_NG_eNB* pDstValue);

EXTERN int asn1Init_s1ap_NG_eNB (s1ap_NG_eNB* pvalue);

EXTERN void asn1Free_s1ap_NG_eNB (OSCTXT *pctxt, s1ap_NG_eNB* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_RAN_NODE_ID                                        */
/*                                                            */
/**************************************************************/
/*
Global-RAN-NODE-ID ::= CHOICE {
   gNB [0] GNB,
   ng-eNB [1] NG-eNB,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_Global_RAN_NODE_ID_gNB   1
#define T_s1ap_Global_RAN_NODE_ID_ng_eNB 2
#define T_s1ap_Global_RAN_NODE_ID_extElem1 3

typedef struct EXTERN s1ap_Global_RAN_NODE_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_GNB *gNB;
      /* t = 2 */
      s1ap_NG_eNB *ng_eNB;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_Global_RAN_NODE_ID;

EXTERN int asn1PE_s1ap_Global_RAN_NODE_ID (OSCTXT* pctxt, s1ap_Global_RAN_NODE_ID* pvalue);

EXTERN int asn1PD_s1ap_Global_RAN_NODE_ID (OSCTXT* pctxt, s1ap_Global_RAN_NODE_ID* pvalue);

EXTERN void asn1Print_s1ap_Global_RAN_NODE_ID 
   (const char* name, const s1ap_Global_RAN_NODE_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_RAN_NODE_ID (const char* name, 
   s1ap_Global_RAN_NODE_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_RAN_NODE_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_RAN_NODE_ID* pvalue);

EXTERN void asn1Copy_s1ap_Global_RAN_NODE_ID (OSCTXT* pctxt, 
   const s1ap_Global_RAN_NODE_ID* pSrcValue, s1ap_Global_RAN_NODE_ID*
    pDstValue);

EXTERN int asn1Init_s1ap_Global_RAN_NODE_ID (s1ap_Global_RAN_NODE_ID* pvalue);

EXTERN void asn1Free_s1ap_Global_RAN_NODE_ID (OSCTXT *pctxt, 
   s1ap_Global_RAN_NODE_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveGSTAC                                                 */
/*                                                            */
/**************************************************************/
/*
 F
FiveGSTAC ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN s1ap_FiveGSTAC {
   OSUINT32 numocts;
   OSOCTET data[3];
} s1ap_FiveGSTAC;

EXTERN int asn1PE_s1ap_FiveGSTAC (OSCTXT* pctxt, s1ap_FiveGSTAC* pvalue);

EXTERN int asn1PD_s1ap_FiveGSTAC (OSCTXT* pctxt, s1ap_FiveGSTAC* pvalue);

EXTERN void asn1Print_s1ap_FiveGSTAC (const char* name, const s1ap_FiveGSTAC* pvalue);

EXTERN int asn1PrtToStr_s1ap_FiveGSTAC (const char* name, s1ap_FiveGSTAC* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_FiveGSTAC (OSCTXT *pctxt, 
   const char* name, const s1ap_FiveGSTAC* pvalue);

EXTERN void asn1Copy_s1ap_FiveGSTAC (OSCTXT* pctxt, const s1ap_FiveGSTAC* pSrcValue, 
   s1ap_FiveGSTAC* pDstValue);

EXTERN int asn1Init_s1ap_FiveGSTAC (s1ap_FiveGSTAC* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveGSTAI_iE_Extensions_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'FiveGSTAI'
*/
typedef struct EXTERN s1ap_FiveGSTAI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_FiveGSTAI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_FiveGSTAI_iE_Extensions_element (OSCTXT* pctxt, s1ap_FiveGSTAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_FiveGSTAI_iE_Extensions_element (OSCTXT* pctxt, s1ap_FiveGSTAI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_FiveGSTAI_iE_Extensions_element 
   (const char* name, const s1ap_FiveGSTAI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_FiveGSTAI_iE_Extensions_element (const char* name, 
   s1ap_FiveGSTAI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_FiveGSTAI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_FiveGSTAI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_FiveGSTAI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_FiveGSTAI_iE_Extensions_element* pSrcValue, 
   s1ap_FiveGSTAI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_FiveGSTAI_iE_Extensions_element (
   s1ap_FiveGSTAI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_FiveGSTAI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_FiveGSTAI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveGSTAI_iE_Extensions                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'FiveGSTAI'
*/
/* List of s1ap_FiveGSTAI_iE_Extensions_element */
typedef OSRTDList s1ap_FiveGSTAI_iE_Extensions;

EXTERN int asn1PE_s1ap_FiveGSTAI_iE_Extensions (OSCTXT* pctxt, s1ap_FiveGSTAI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_FiveGSTAI_iE_Extensions (OSCTXT* pctxt, s1ap_FiveGSTAI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_FiveGSTAI_iE_Extensions 
   (const char* name, const s1ap_FiveGSTAI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_FiveGSTAI_iE_Extensions (const char* name, 
   s1ap_FiveGSTAI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_FiveGSTAI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_FiveGSTAI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_FiveGSTAI_iE_Extensions_element* 
   asn1Get_s1ap_FiveGSTAI_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_FiveGSTAI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_FiveGSTAI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_FiveGSTAI_iE_Extensions* pSrcValue, s1ap_FiveGSTAI_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_FiveGSTAI_iE_Extensions (
   s1ap_FiveGSTAI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_FiveGSTAI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_FiveGSTAI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveGSTAI                                                 */
/*                                                            */
/**************************************************************/
/*
FiveGSTAI ::= SEQUENCE {
   pLMNidentity [0] PLMNidentity,
   fiveGSTAC [1] FiveGSTAC,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({FiveGSTAI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({FiveGSTAI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({FiveGSTAI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_FiveGSTAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_FiveGSTAC fiveGSTAC;
   s1ap_FiveGSTAI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_FiveGSTAI;

EXTERN int asn1PE_s1ap_FiveGSTAI (OSCTXT* pctxt, s1ap_FiveGSTAI* pvalue);

EXTERN int asn1PD_s1ap_FiveGSTAI (OSCTXT* pctxt, s1ap_FiveGSTAI* pvalue);

EXTERN void asn1Print_s1ap_FiveGSTAI (const char* name, const s1ap_FiveGSTAI* pvalue);

EXTERN int asn1PrtToStr_s1ap_FiveGSTAI (const char* name, s1ap_FiveGSTAI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_FiveGSTAI (OSCTXT *pctxt, 
   const char* name, const s1ap_FiveGSTAI* pvalue);

EXTERN void asn1Copy_s1ap_FiveGSTAI (OSCTXT* pctxt, const s1ap_FiveGSTAI* pSrcValue, 
   s1ap_FiveGSTAI* pDstValue);

EXTERN int asn1Init_s1ap_FiveGSTAI (s1ap_FiveGSTAI* pvalue);

EXTERN void asn1Free_s1ap_FiveGSTAI (OSCTXT *pctxt, s1ap_FiveGSTAI* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetNgRanNode_ID_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetNgRanNode-ID'
*/
typedef struct EXTERN s1ap_TargetNgRanNode_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TargetNgRanNode_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TargetNgRanNode_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargetNgRanNode_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TargetNgRanNode_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargetNgRanNode_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TargetNgRanNode_ID_iE_Extensions_element 
   (const char* name, const s1ap_TargetNgRanNode_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetNgRanNode_ID_iE_Extensions_element (
   const char* name, s1ap_TargetNgRanNode_ID_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetNgRanNode_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetNgRanNode_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TargetNgRanNode_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TargetNgRanNode_ID_iE_Extensions_element* pSrcValue, 
   s1ap_TargetNgRanNode_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TargetNgRanNode_ID_iE_Extensions_element (
   s1ap_TargetNgRanNode_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TargetNgRanNode_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TargetNgRanNode_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetNgRanNode_ID_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetNgRanNode-ID'
*/
/* List of s1ap_TargetNgRanNode_ID_iE_Extensions_element */
typedef OSRTDList s1ap_TargetNgRanNode_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_TargetNgRanNode_ID_iE_Extensions (OSCTXT* pctxt, s1ap_TargetNgRanNode_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TargetNgRanNode_ID_iE_Extensions (OSCTXT* pctxt, s1ap_TargetNgRanNode_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TargetNgRanNode_ID_iE_Extensions 
   (const char* name, const s1ap_TargetNgRanNode_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetNgRanNode_ID_iE_Extensions (const char* name, 
   s1ap_TargetNgRanNode_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetNgRanNode_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetNgRanNode_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TargetNgRanNode_ID_iE_Extensions_element* 
   asn1Get_s1ap_TargetNgRanNode_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TargetNgRanNode_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TargetNgRanNode_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TargetNgRanNode_ID_iE_Extensions* pSrcValue, 
   s1ap_TargetNgRanNode_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TargetNgRanNode_ID_iE_Extensions (
   s1ap_TargetNgRanNode_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TargetNgRanNode_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TargetNgRanNode_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetNgRanNode_ID                                        */
/*                                                            */
/**************************************************************/
/*
TargetNgRanNode-ID ::= SEQUENCE {
   global-RAN-NODE-ID [0] EXPLICIT Global-RAN-NODE-ID,
   selected-TAI [1] FiveGSTAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TargetNgRanNode-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TargetNgRanNode-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TargetNgRanNode-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TargetNgRanNode_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Global_RAN_NODE_ID global_RAN_NODE_ID;
   s1ap_FiveGSTAI selected_TAI;
   s1ap_TargetNgRanNode_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TargetNgRanNode_ID;

EXTERN int asn1PE_s1ap_TargetNgRanNode_ID (OSCTXT* pctxt, s1ap_TargetNgRanNode_ID* pvalue);

EXTERN int asn1PD_s1ap_TargetNgRanNode_ID (OSCTXT* pctxt, s1ap_TargetNgRanNode_ID* pvalue);

EXTERN void asn1Print_s1ap_TargetNgRanNode_ID 
   (const char* name, const s1ap_TargetNgRanNode_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetNgRanNode_ID (const char* name, 
   s1ap_TargetNgRanNode_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetNgRanNode_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetNgRanNode_ID* pvalue);

EXTERN void asn1Copy_s1ap_TargetNgRanNode_ID (OSCTXT* pctxt, 
   const s1ap_TargetNgRanNode_ID* pSrcValue, s1ap_TargetNgRanNode_ID*
    pDstValue);

EXTERN int asn1Init_s1ap_TargetNgRanNode_ID (s1ap_TargetNgRanNode_ID* pvalue);

EXTERN void asn1Free_s1ap_TargetNgRanNode_ID (OSCTXT *pctxt, 
   s1ap_TargetNgRanNode_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetID                                                  */
/*                                                            */
/**************************************************************/
/*
TargetID ::= CHOICE {
   targeteNB-ID [0] TargeteNB-ID,
   targetRNC-ID [1] TargetRNC-ID,
   cGI [2] CGI,
   ...,
   targetgNgRanNode-ID [3] TargetNgRanNode-ID
}
*/
/* Choice tag constants */

#define T_s1ap_TargetID_targeteNB_ID    1
#define T_s1ap_TargetID_targetRNC_ID    2
#define T_s1ap_TargetID_cGI             3
#define T_s1ap_TargetID_targetgNgRanNode_ID 4
#define T_s1ap_TargetID_extElem1        5

typedef struct EXTERN s1ap_TargetID {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_TargeteNB_ID *targeteNB_ID;
      /* t = 2 */
      s1ap_TargetRNC_ID *targetRNC_ID;
      /* t = 3 */
      s1ap_CGI *cGI;
      /* t = 4 */
      s1ap_TargetNgRanNode_ID *targetgNgRanNode_ID;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_TargetID;

EXTERN int asn1PE_s1ap_TargetID (OSCTXT* pctxt, s1ap_TargetID* pvalue);

EXTERN int asn1PD_s1ap_TargetID (OSCTXT* pctxt, s1ap_TargetID* pvalue);

EXTERN void asn1Print_s1ap_TargetID (const char* name, const s1ap_TargetID* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetID (const char* name, s1ap_TargetID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetID (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetID* pvalue);

EXTERN void asn1Copy_s1ap_TargetID (OSCTXT* pctxt, const s1ap_TargetID* pSrcValue, 
   s1ap_TargetID* pDstValue);

EXTERN int asn1Init_s1ap_TargetID (s1ap_TargetID* pvalue);

EXTERN void asn1Free_s1ap_TargetID (OSCTXT *pctxt, s1ap_TargetID* pvalue);

/**************************************************************/
/*                                                            */
/*  Direct_Forwarding_Path_Availability                       */
/*                                                            */
/**************************************************************/
/*
Direct-Forwarding-Path-Availability ::= ENUMERATED { directPathAvailable(0), ... }
*/
typedef enum {
   s1ap_directPathAvailable = 0
} s1ap_Direct_Forwarding_Path_Availability_Root;

typedef OSUINT32 s1ap_Direct_Forwarding_Path_Availability;

EXTERN int asn1PE_s1ap_Direct_Forwarding_Path_Availability (OSCTXT* pctxt, s1ap_Direct_Forwarding_Path_Availability value);

EXTERN int asn1PD_s1ap_Direct_Forwarding_Path_Availability (OSCTXT* pctxt, s1ap_Direct_Forwarding_Path_Availability* pvalue);

EXTERN void asn1Print_s1ap_Direct_Forwarding_Path_Availability 
   (const char* name, const s1ap_Direct_Forwarding_Path_Availability* pvalue);

EXTERN int asn1PrtToStr_s1ap_Direct_Forwarding_Path_Availability (const char* name, 
   s1ap_Direct_Forwarding_Path_Availability* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Direct_Forwarding_Path_Availability (OSCTXT *pctxt, 
   const char* name, const s1ap_Direct_Forwarding_Path_Availability* pvalue);

EXTERN extern const OSEnumItem s1ap_Direct_Forwarding_Path_Availability_ENUMTAB[];
#define s1ap_Direct_Forwarding_Path_Availability_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_Direct_Forwarding_Path_Availability_ToString (OSINT32 value);

EXTERN int s1ap_Direct_Forwarding_Path_Availability_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Direct_Forwarding_Path_Availability* pvalue);

EXTERN int s1ap_Direct_Forwarding_Path_Availability_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Direct_Forwarding_Path_Availability* pvalue);

/**************************************************************/
/*                                                            */
/*  SRVCCHOIndication                                         */
/*                                                            */
/**************************************************************/
/*
SRVCCHOIndication ::= ENUMERATED { pSandCS(0), cSonly(1), ... }
*/
typedef enum {
   s1ap_pSandCS = 0,
   s1ap_cSonly = 1
} s1ap_SRVCCHOIndication_Root;

typedef OSUINT32 s1ap_SRVCCHOIndication;

EXTERN int asn1PE_s1ap_SRVCCHOIndication (OSCTXT* pctxt, s1ap_SRVCCHOIndication value);

EXTERN int asn1PD_s1ap_SRVCCHOIndication (OSCTXT* pctxt, s1ap_SRVCCHOIndication* pvalue);

EXTERN void asn1Print_s1ap_SRVCCHOIndication 
   (const char* name, const s1ap_SRVCCHOIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_SRVCCHOIndication (const char* name, 
   s1ap_SRVCCHOIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SRVCCHOIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_SRVCCHOIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_SRVCCHOIndication_ENUMTAB[];
#define s1ap_SRVCCHOIndication_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_SRVCCHOIndication_ToString (OSINT32 value);

EXTERN int s1ap_SRVCCHOIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SRVCCHOIndication* pvalue);

EXTERN int s1ap_SRVCCHOIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_SRVCCHOIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  Source_ToTarget_TransparentContainer                      */
/*                                                            */
/**************************************************************/
/*
Source-ToTarget-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Source_ToTarget_TransparentContainer;

EXTERN int asn1PE_s1ap_Source_ToTarget_TransparentContainer (OSCTXT* pctxt, s1ap_Source_ToTarget_TransparentContainer value);

EXTERN int asn1PD_s1ap_Source_ToTarget_TransparentContainer (OSCTXT* pctxt, s1ap_Source_ToTarget_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_Source_ToTarget_TransparentContainer 
   (const char* name, const s1ap_Source_ToTarget_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_Source_ToTarget_TransparentContainer (const char* name, 
   s1ap_Source_ToTarget_TransparentContainer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Source_ToTarget_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_Source_ToTarget_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_Source_ToTarget_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_Source_ToTarget_TransparentContainer* pSrcValue, 
   s1ap_Source_ToTarget_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_Source_ToTarget_TransparentContainer (
   s1ap_Source_ToTarget_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_Source_ToTarget_TransparentContainer (OSCTXT *pctxt, 
   s1ap_Source_ToTarget_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  MSClassmark2                                              */
/*                                                            */
/**************************************************************/
/*
MSClassmark2 ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_MSClassmark2;

EXTERN int asn1PE_s1ap_MSClassmark2 (OSCTXT* pctxt, s1ap_MSClassmark2 value);

EXTERN int asn1PD_s1ap_MSClassmark2 (OSCTXT* pctxt, s1ap_MSClassmark2* pvalue);

EXTERN void asn1Print_s1ap_MSClassmark2 
   (const char* name, const s1ap_MSClassmark2* pvalue);

EXTERN int asn1PrtToStr_s1ap_MSClassmark2 (const char* name, 
   s1ap_MSClassmark2* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MSClassmark2 (OSCTXT *pctxt, 
   const char* name, const s1ap_MSClassmark2* pvalue);

EXTERN void asn1Copy_s1ap_MSClassmark2 (OSCTXT* pctxt, 
   const s1ap_MSClassmark2* pSrcValue, s1ap_MSClassmark2* pDstValue);

EXTERN int asn1Init_s1ap_MSClassmark2 (s1ap_MSClassmark2* pvalue);

EXTERN void asn1Free_s1ap_MSClassmark2 (OSCTXT *pctxt, s1ap_MSClassmark2* pvalue);

/**************************************************************/
/*                                                            */
/*  MSClassmark3                                              */
/*                                                            */
/**************************************************************/
/*
MSClassmark3 ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_MSClassmark3;

EXTERN int asn1PE_s1ap_MSClassmark3 (OSCTXT* pctxt, s1ap_MSClassmark3 value);

EXTERN int asn1PD_s1ap_MSClassmark3 (OSCTXT* pctxt, s1ap_MSClassmark3* pvalue);

EXTERN void asn1Print_s1ap_MSClassmark3 
   (const char* name, const s1ap_MSClassmark3* pvalue);

EXTERN int asn1PrtToStr_s1ap_MSClassmark3 (const char* name, 
   s1ap_MSClassmark3* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MSClassmark3 (OSCTXT *pctxt, 
   const char* name, const s1ap_MSClassmark3* pvalue);

EXTERN void asn1Copy_s1ap_MSClassmark3 (OSCTXT* pctxt, 
   const s1ap_MSClassmark3* pSrcValue, s1ap_MSClassmark3* pDstValue);

EXTERN int asn1Init_s1ap_MSClassmark3 (s1ap_MSClassmark3* pvalue);

EXTERN void asn1Free_s1ap_MSClassmark3 (OSCTXT *pctxt, s1ap_MSClassmark3* pvalue);

/**************************************************************/
/*                                                            */
/*  CSG_Id                                                    */
/*                                                            */
/**************************************************************/
/*
CSG-Id ::= BIT STRING  (SIZE (27))
*/
typedef ASN1BitStr32 s1ap_CSG_Id;

EXTERN int asn1PE_s1ap_CSG_Id (OSCTXT* pctxt, s1ap_CSG_Id value);

EXTERN int asn1PD_s1ap_CSG_Id (OSCTXT* pctxt, s1ap_CSG_Id* pvalue);

EXTERN void asn1Print_s1ap_CSG_Id (const char* name, const s1ap_CSG_Id* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSG_Id (const char* name, s1ap_CSG_Id* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSG_Id (OSCTXT *pctxt, 
   const char* name, const s1ap_CSG_Id* pvalue);

EXTERN void asn1Copy_s1ap_CSG_Id (OSCTXT* pctxt, const s1ap_CSG_Id* pSrcValue, 
   s1ap_CSG_Id* pDstValue);

EXTERN int asn1Init_s1ap_CSG_Id (s1ap_CSG_Id* pvalue);

/**************************************************************/
/*                                                            */
/*  CellAccessMode                                            */
/*                                                            */
/**************************************************************/
/*
CellAccessMode ::= ENUMERATED { hybrid(0), ... }
*/
typedef enum {
   s1ap_hybrid = 0
} s1ap_CellAccessMode_Root;

typedef OSUINT32 s1ap_CellAccessMode;

EXTERN int asn1PE_s1ap_CellAccessMode (OSCTXT* pctxt, s1ap_CellAccessMode value);

EXTERN int asn1PD_s1ap_CellAccessMode (OSCTXT* pctxt, s1ap_CellAccessMode* pvalue);

EXTERN void asn1Print_s1ap_CellAccessMode 
   (const char* name, const s1ap_CellAccessMode* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellAccessMode (const char* name, 
   s1ap_CellAccessMode* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellAccessMode (OSCTXT *pctxt, 
   const char* name, const s1ap_CellAccessMode* pvalue);

EXTERN extern const OSEnumItem s1ap_CellAccessMode_ENUMTAB[];
#define s1ap_CellAccessMode_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_CellAccessMode_ToString (OSINT32 value);

EXTERN int s1ap_CellAccessMode_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CellAccessMode* pvalue);

EXTERN int s1ap_CellAccessMode_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CellAccessMode* pvalue);

/**************************************************************/
/*                                                            */
/*  PS_ServiceNotAvailable                                    */
/*                                                            */
/**************************************************************/
/*
PS-ServiceNotAvailable ::= ENUMERATED { ps-service-not-available(0), ... }
*/
typedef enum {
   s1ap_ps_service_not_available = 0
} s1ap_PS_ServiceNotAvailable_Root;

typedef OSUINT32 s1ap_PS_ServiceNotAvailable;

EXTERN int asn1PE_s1ap_PS_ServiceNotAvailable (OSCTXT* pctxt, s1ap_PS_ServiceNotAvailable value);

EXTERN int asn1PD_s1ap_PS_ServiceNotAvailable (OSCTXT* pctxt, s1ap_PS_ServiceNotAvailable* pvalue);

EXTERN void asn1Print_s1ap_PS_ServiceNotAvailable 
   (const char* name, const s1ap_PS_ServiceNotAvailable* pvalue);

EXTERN int asn1PrtToStr_s1ap_PS_ServiceNotAvailable (const char* name, 
   s1ap_PS_ServiceNotAvailable* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PS_ServiceNotAvailable (OSCTXT *pctxt, 
   const char* name, const s1ap_PS_ServiceNotAvailable* pvalue);

EXTERN extern const OSEnumItem s1ap_PS_ServiceNotAvailable_ENUMTAB[];
#define s1ap_PS_ServiceNotAvailable_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_PS_ServiceNotAvailable_ToString (OSINT32 value);

EXTERN int s1ap_PS_ServiceNotAvailable_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_PS_ServiceNotAvailable* pvalue);

EXTERN int s1ap_PS_ServiceNotAvailable_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_PS_ServiceNotAvailable* pvalue);

/**************************************************************/
/*                                                            */
/*  BitRate                                                   */
/*                                                            */
/**************************************************************/
/*
BitRate ::= INTEGER (0..10000000000)
*/
typedef OSUINT64 s1ap_BitRate;

EXTERN int asn1PE_s1ap_BitRate (OSCTXT* pctxt, s1ap_BitRate value);

EXTERN int asn1PD_s1ap_BitRate (OSCTXT* pctxt, s1ap_BitRate* pvalue);

EXTERN void asn1Print_s1ap_BitRate (const char* name, const s1ap_BitRate* pvalue);

EXTERN int asn1PrtToStr_s1ap_BitRate (const char* name, s1ap_BitRate* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BitRate (OSCTXT *pctxt, 
   const char* name, const s1ap_BitRate* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtendedBitRate                                           */
/*                                                            */
/**************************************************************/
/*
ExtendedBitRate ::= INTEGER (10000000001..4000000000000, ...)
*/
typedef OSUINT64 s1ap_ExtendedBitRate;

EXTERN int asn1PE_s1ap_ExtendedBitRate (OSCTXT* pctxt, s1ap_ExtendedBitRate value);

EXTERN int asn1PD_s1ap_ExtendedBitRate (OSCTXT* pctxt, s1ap_ExtendedBitRate* pvalue);

EXTERN void asn1Print_s1ap_ExtendedBitRate 
   (const char* name, const s1ap_ExtendedBitRate* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExtendedBitRate (const char* name, 
   s1ap_ExtendedBitRate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExtendedBitRate (OSCTXT *pctxt, 
   const char* name, const s1ap_ExtendedBitRate* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAggregateMaximumBitrate_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAggregateMaximumBitrate'
*/
typedef struct EXTERN s1ap_UEAggregateMaximumBitrate_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEAggregate_MaximumBitrates_ExtIEs_TVALUE t;

      /**
       * UEAggregate-MaximumBitrates-ExtIEs information objects
       */
      union {
         /**
          * id: id-extended-uEaggregateMaximumBitRateDL
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExtendedBitRate _UEAggregate_MaximumBitrates_ExtIEs_1;
         /**
          * id: id-extended-uEaggregateMaximumBitRateUL
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExtendedBitRate _UEAggregate_MaximumBitrates_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_UEAggregateMaximumBitrate_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element 
   (const char* name, const s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element (
   const char* name, 
   s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element_UEAggregate_MaximumBitrates_ExtIEs_1
   (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pElem
   , s1ap_ExtendedBitRate value);

EXTERN void asn1SetTC_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element_UEAggregate_MaximumBitrates_ExtIEs_2
   (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pElem
   , s1ap_ExtendedBitRate value);

EXTERN void asn1Copy_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pSrcValue, 
   s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UEAggregateMaximumBitrate_iE_Extensions_element (
   s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAggregateMaximumBitrate_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAggregateMaximumBitrate'
*/
/* List of s1ap_UEAggregateMaximumBitrate_iE_Extensions_element */
typedef OSRTDList s1ap_UEAggregateMaximumBitrate_iE_Extensions;

EXTERN int asn1PE_s1ap_UEAggregateMaximumBitrate_iE_Extensions (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UEAggregateMaximumBitrate_iE_Extensions (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UEAggregateMaximumBitrate_iE_Extensions 
   (const char* name, const s1ap_UEAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEAggregateMaximumBitrate_iE_Extensions (
   const char* name, s1ap_UEAggregateMaximumBitrate_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEAggregateMaximumBitrate_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UEAggregateMaximumBitrate_iE_Extensions* pvalue);

/* Append IE with value type s1ap_ExtendedBitRate to list */
EXTERN int asn1Append_s1ap_UEAggregateMaximumBitrate_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions* plist, 
   s1ap_ExtendedBitRate value);

/* Append IE with value type s1ap_ExtendedBitRate to list */
EXTERN int asn1Append_s1ap_UEAggregateMaximumBitrate_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate_iE_Extensions* plist, 
   s1ap_ExtendedBitRate value);

/* Get IE using id key value */
EXTERN struct s1ap_UEAggregateMaximumBitrate_iE_Extensions_element* 
   asn1Get_s1ap_UEAggregateMaximumBitrate_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_UEAggregateMaximumBitrate_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UEAggregateMaximumBitrate_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UEAggregateMaximumBitrate_iE_Extensions* pSrcValue, 
   s1ap_UEAggregateMaximumBitrate_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UEAggregateMaximumBitrate_iE_Extensions (
   s1ap_UEAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UEAggregateMaximumBitrate_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UEAggregateMaximumBitrate_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAggregateMaximumBitrate                                 */
/*                                                            */
/**************************************************************/
/*
 U
UEAggregateMaximumBitrate ::= SEQUENCE {
   uEaggregateMaximumBitRateDL [0] BitRate,
   uEaggregateMaximumBitRateUL [1] BitRate,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UEAggregate-MaximumBitrates-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UEAggregate-MaximumBitrates-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UEAggregate-MaximumBitrates-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UEAggregateMaximumBitrate {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_BitRate uEaggregateMaximumBitRateDL;
   s1ap_BitRate uEaggregateMaximumBitRateUL;
   s1ap_UEAggregateMaximumBitrate_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UEAggregateMaximumBitrate;

EXTERN int asn1PE_s1ap_UEAggregateMaximumBitrate (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate* pvalue);

EXTERN int asn1PD_s1ap_UEAggregateMaximumBitrate (OSCTXT* pctxt, s1ap_UEAggregateMaximumBitrate* pvalue);

EXTERN void asn1Print_s1ap_UEAggregateMaximumBitrate 
   (const char* name, const s1ap_UEAggregateMaximumBitrate* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEAggregateMaximumBitrate (const char* name, 
   s1ap_UEAggregateMaximumBitrate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEAggregateMaximumBitrate (OSCTXT *pctxt, 
   const char* name, const s1ap_UEAggregateMaximumBitrate* pvalue);

EXTERN void asn1Copy_s1ap_UEAggregateMaximumBitrate (OSCTXT* pctxt, 
   const s1ap_UEAggregateMaximumBitrate* pSrcValue, 
   s1ap_UEAggregateMaximumBitrate* pDstValue);

EXTERN int asn1Init_s1ap_UEAggregateMaximumBitrate (
   s1ap_UEAggregateMaximumBitrate* pvalue);

EXTERN void asn1Free_s1ap_UEAggregateMaximumBitrate (OSCTXT *pctxt, 
   s1ap_UEAggregateMaximumBitrate* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RAB_ID                                                  */
/*                                                            */
/**************************************************************/
/*
E-RAB-ID ::= INTEGER (0..15, ...)
*/
typedef OSUINT32 s1ap_E_RAB_ID;

EXTERN int asn1PE_s1ap_E_RAB_ID (OSCTXT* pctxt, s1ap_E_RAB_ID value);

EXTERN int asn1PD_s1ap_E_RAB_ID (OSCTXT* pctxt, s1ap_E_RAB_ID* pvalue);

EXTERN void asn1Print_s1ap_E_RAB_ID (const char* name, const s1ap_E_RAB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RAB_ID (const char* name, s1ap_E_RAB_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RAB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RAB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  TransportLayerAddress                                     */
/*                                                            */
/**************************************************************/
/*
TransportLayerAddress ::= BIT STRING  (SIZE (1..160, ...))
*/
typedef ASN1DynBitStr s1ap_TransportLayerAddress;

EXTERN int asn1PE_s1ap_TransportLayerAddress (OSCTXT* pctxt, s1ap_TransportLayerAddress value);

EXTERN int asn1PD_s1ap_TransportLayerAddress (OSCTXT* pctxt, s1ap_TransportLayerAddress* pvalue);

EXTERN void asn1Print_s1ap_TransportLayerAddress 
   (const char* name, const s1ap_TransportLayerAddress* pvalue);

EXTERN int asn1PrtToStr_s1ap_TransportLayerAddress (const char* name, 
   s1ap_TransportLayerAddress* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TransportLayerAddress (OSCTXT *pctxt, 
   const char* name, const s1ap_TransportLayerAddress* pvalue);

EXTERN void asn1Copy_s1ap_TransportLayerAddress (OSCTXT* pctxt, 
   const s1ap_TransportLayerAddress* pSrcValue, s1ap_TransportLayerAddress*
    pDstValue);

EXTERN int asn1Init_s1ap_TransportLayerAddress (s1ap_TransportLayerAddress* pvalue);

EXTERN void asn1Free_s1ap_TransportLayerAddress (OSCTXT *pctxt, 
   s1ap_TransportLayerAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  GTP_TEID                                                  */
/*                                                            */
/**************************************************************/
/*
GTP-TEID ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN s1ap_GTP_TEID {
   OSUINT32 numocts;
   OSOCTET data[4];
} s1ap_GTP_TEID;

EXTERN int asn1PE_s1ap_GTP_TEID (OSCTXT* pctxt, s1ap_GTP_TEID* pvalue);

EXTERN int asn1PD_s1ap_GTP_TEID (OSCTXT* pctxt, s1ap_GTP_TEID* pvalue);

EXTERN void asn1Print_s1ap_GTP_TEID (const char* name, const s1ap_GTP_TEID* pvalue);

EXTERN int asn1PrtToStr_s1ap_GTP_TEID (const char* name, s1ap_GTP_TEID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GTP_TEID (OSCTXT *pctxt, 
   const char* name, const s1ap_GTP_TEID* pvalue);

EXTERN void asn1Copy_s1ap_GTP_TEID (OSCTXT* pctxt, const s1ap_GTP_TEID* pSrcValue, 
   s1ap_GTP_TEID* pDstValue);

EXTERN int asn1Init_s1ap_GTP_TEID (s1ap_GTP_TEID* pvalue);

/**************************************************************/
/*                                                            */
/*  QCI                                                       */
/*                                                            */
/**************************************************************/
/*
 Q
QCI ::= INTEGER (0..255)
*/
typedef OSUINT8 s1ap_QCI;

EXTERN int asn1PE_s1ap_QCI (OSCTXT* pctxt, s1ap_QCI value);

EXTERN int asn1PD_s1ap_QCI (OSCTXT* pctxt, s1ap_QCI* pvalue);

EXTERN void asn1Print_s1ap_QCI (const char* name, const s1ap_QCI* pvalue);

EXTERN int asn1PrtToStr_s1ap_QCI (const char* name, s1ap_QCI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_QCI (OSCTXT *pctxt, 
   const char* name, const s1ap_QCI* pvalue);

/**************************************************************/
/*                                                            */
/*  PriorityLevel                                             */
/*                                                            */
/**************************************************************/
/*
PriorityLevel ::= INTEGER { spare(0), highest(1), lowest(14), no-priority(15) } (0..15)
*/
typedef enum {
   s1ap_spare = 0,
   s1ap_highest = 1,
   s1ap_lowest = 14,
   s1ap_no_priority = 15
} s1ap_PriorityLevel_Root;

typedef OSUINT8 s1ap_PriorityLevel;

EXTERN int asn1PE_s1ap_PriorityLevel (OSCTXT* pctxt, s1ap_PriorityLevel value);

EXTERN int asn1PD_s1ap_PriorityLevel (OSCTXT* pctxt, s1ap_PriorityLevel* pvalue);

EXTERN void asn1Print_s1ap_PriorityLevel 
   (const char* name, const s1ap_PriorityLevel* pvalue);

EXTERN int asn1PrtToStr_s1ap_PriorityLevel (const char* name, 
   s1ap_PriorityLevel* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PriorityLevel (OSCTXT *pctxt, 
   const char* name, const s1ap_PriorityLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  Pre_emptionCapability                                     */
/*                                                            */
/**************************************************************/
/*
Pre-emptionCapability ::= ENUMERATED { shall-not-trigger-pre-emption(0), may-trigger-pre-emption(1) }
*/
typedef enum {
   s1ap_shall_not_trigger_pre_emption = 0,
   s1ap_may_trigger_pre_emption = 1
} s1ap_Pre_emptionCapability_Root;

typedef OSUINT32 s1ap_Pre_emptionCapability;

EXTERN int asn1PE_s1ap_Pre_emptionCapability (OSCTXT* pctxt, s1ap_Pre_emptionCapability value);

EXTERN int asn1PD_s1ap_Pre_emptionCapability (OSCTXT* pctxt, s1ap_Pre_emptionCapability* pvalue);

EXTERN void asn1Print_s1ap_Pre_emptionCapability 
   (const char* name, const s1ap_Pre_emptionCapability* pvalue);

EXTERN int asn1PrtToStr_s1ap_Pre_emptionCapability (const char* name, 
   s1ap_Pre_emptionCapability* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Pre_emptionCapability (OSCTXT *pctxt, 
   const char* name, const s1ap_Pre_emptionCapability* pvalue);

EXTERN extern const OSEnumItem s1ap_Pre_emptionCapability_ENUMTAB[];
#define s1ap_Pre_emptionCapability_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_Pre_emptionCapability_ToString (OSINT32 value);

EXTERN int s1ap_Pre_emptionCapability_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Pre_emptionCapability* pvalue);

EXTERN int s1ap_Pre_emptionCapability_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Pre_emptionCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  Pre_emptionVulnerability                                  */
/*                                                            */
/**************************************************************/
/*
Pre-emptionVulnerability ::= ENUMERATED { not-pre-emptable(0), pre-emptable(1) }
*/
typedef enum {
   s1ap_not_pre_emptable = 0,
   s1ap_pre_emptable = 1
} s1ap_Pre_emptionVulnerability_Root;

typedef OSUINT32 s1ap_Pre_emptionVulnerability;

EXTERN int asn1PE_s1ap_Pre_emptionVulnerability (OSCTXT* pctxt, s1ap_Pre_emptionVulnerability value);

EXTERN int asn1PD_s1ap_Pre_emptionVulnerability (OSCTXT* pctxt, s1ap_Pre_emptionVulnerability* pvalue);

EXTERN void asn1Print_s1ap_Pre_emptionVulnerability 
   (const char* name, const s1ap_Pre_emptionVulnerability* pvalue);

EXTERN int asn1PrtToStr_s1ap_Pre_emptionVulnerability (const char* name, 
   s1ap_Pre_emptionVulnerability* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Pre_emptionVulnerability (OSCTXT *pctxt, 
   const char* name, const s1ap_Pre_emptionVulnerability* pvalue);

EXTERN extern const OSEnumItem s1ap_Pre_emptionVulnerability_ENUMTAB[];
#define s1ap_Pre_emptionVulnerability_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_Pre_emptionVulnerability_ToString (OSINT32 value);

EXTERN int s1ap_Pre_emptionVulnerability_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Pre_emptionVulnerability* pvalue);

EXTERN int s1ap_Pre_emptionVulnerability_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Pre_emptionVulnerability* pvalue);

/**************************************************************/
/*                                                            */
/*  AllocationAndRetentionPriority_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AllocationAndRetentionPriority'
*/
typedef struct EXTERN s1ap_AllocationAndRetentionPriority_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_AllocationAndRetentionPriority_iE_Extensions_element;

EXTERN int asn1PE_s1ap_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT* pctxt, s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT* pctxt, s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_AllocationAndRetentionPriority_iE_Extensions_element 
   (const char* name, const s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_AllocationAndRetentionPriority_iE_Extensions_element (
   const char* name, 
   s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pSrcValue, 
   s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_AllocationAndRetentionPriority_iE_Extensions_element (
   s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AllocationAndRetentionPriority_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AllocationAndRetentionPriority'
*/
/* List of s1ap_AllocationAndRetentionPriority_iE_Extensions_element */
typedef OSRTDList s1ap_AllocationAndRetentionPriority_iE_Extensions;

EXTERN int asn1PE_s1ap_AllocationAndRetentionPriority_iE_Extensions (OSCTXT* pctxt, s1ap_AllocationAndRetentionPriority_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_AllocationAndRetentionPriority_iE_Extensions (OSCTXT* pctxt, s1ap_AllocationAndRetentionPriority_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_AllocationAndRetentionPriority_iE_Extensions 
   (const char* name, const s1ap_AllocationAndRetentionPriority_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_AllocationAndRetentionPriority_iE_Extensions (
   const char* name, 
   s1ap_AllocationAndRetentionPriority_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AllocationAndRetentionPriority_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_AllocationAndRetentionPriority_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_AllocationAndRetentionPriority_iE_Extensions_element* 
   asn1Get_s1ap_AllocationAndRetentionPriority_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_AllocationAndRetentionPriority_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_AllocationAndRetentionPriority_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_AllocationAndRetentionPriority_iE_Extensions* pSrcValue, 
   s1ap_AllocationAndRetentionPriority_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_AllocationAndRetentionPriority_iE_Extensions (
   s1ap_AllocationAndRetentionPriority_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_AllocationAndRetentionPriority_iE_Extensions (OSCTXT *pctxt, 
   s1ap_AllocationAndRetentionPriority_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AllocationAndRetentionPriority                            */
/*                                                            */
/**************************************************************/
/*
AllocationAndRetentionPriority ::= SEQUENCE {
   priorityLevel [0] PriorityLevel,
   pre-emptionCapability [1] Pre-emptionCapability,
   pre-emptionVulnerability [2] Pre-emptionVulnerability,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({AllocationAndRetentionPriority-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({AllocationAndRetentionPriority-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({AllocationAndRetentionPriority-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_AllocationAndRetentionPriority {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PriorityLevel priorityLevel;
   s1ap_Pre_emptionCapability pre_emptionCapability;
   s1ap_Pre_emptionVulnerability pre_emptionVulnerability;
   s1ap_AllocationAndRetentionPriority_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_AllocationAndRetentionPriority;

EXTERN int asn1PE_s1ap_AllocationAndRetentionPriority (OSCTXT* pctxt, s1ap_AllocationAndRetentionPriority* pvalue);

EXTERN int asn1PD_s1ap_AllocationAndRetentionPriority (OSCTXT* pctxt, s1ap_AllocationAndRetentionPriority* pvalue);

EXTERN void asn1Print_s1ap_AllocationAndRetentionPriority 
   (const char* name, const s1ap_AllocationAndRetentionPriority* pvalue);

EXTERN int asn1PrtToStr_s1ap_AllocationAndRetentionPriority (const char* name, 
   s1ap_AllocationAndRetentionPriority* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AllocationAndRetentionPriority (OSCTXT *pctxt, 
   const char* name, const s1ap_AllocationAndRetentionPriority* pvalue);

EXTERN void asn1Copy_s1ap_AllocationAndRetentionPriority (OSCTXT* pctxt, 
   const s1ap_AllocationAndRetentionPriority* pSrcValue, 
   s1ap_AllocationAndRetentionPriority* pDstValue);

EXTERN int asn1Init_s1ap_AllocationAndRetentionPriority (
   s1ap_AllocationAndRetentionPriority* pvalue);

EXTERN void asn1Free_s1ap_AllocationAndRetentionPriority (OSCTXT *pctxt, 
   s1ap_AllocationAndRetentionPriority* pvalue);

/**************************************************************/
/*                                                            */
/*  GBR_QosInformation_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GBR-QosInformation'
*/
typedef struct EXTERN s1ap_GBR_QosInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      GBR_QosInformation_ExtIEs_TVALUE t;

      /**
       * GBR-QosInformation-ExtIEs information objects
       */
      union {
         /**
          * id: id-extended-e-RAB-MaximumBitrateDL
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExtendedBitRate _GBR_QosInformation_ExtIEs_1;
         /**
          * id: id-extended-e-RAB-MaximumBitrateUL
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExtendedBitRate _GBR_QosInformation_ExtIEs_2;
         /**
          * id: id-extended-e-RAB-GuaranteedBitrateDL
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExtendedBitRate _GBR_QosInformation_ExtIEs_3;
         /**
          * id: id-extended-e-RAB-GuaranteedBitrateUL
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExtendedBitRate _GBR_QosInformation_ExtIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_GBR_QosInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_GBR_QosInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_GBR_QosInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_GBR_QosInformation_iE_Extensions_element 
   (const char* name, const s1ap_GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_GBR_QosInformation_iE_Extensions_element (
   const char* name, s1ap_GBR_QosInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GBR_QosInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_GBR_QosInformation_iE_Extensions_element_GBR_QosInformation_ExtIEs_1
   (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions_element* pElem, 
   s1ap_ExtendedBitRate value);

EXTERN void asn1SetTC_s1ap_GBR_QosInformation_iE_Extensions_element_GBR_QosInformation_ExtIEs_2
   (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions_element* pElem, 
   s1ap_ExtendedBitRate value);

EXTERN void asn1SetTC_s1ap_GBR_QosInformation_iE_Extensions_element_GBR_QosInformation_ExtIEs_3
   (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions_element* pElem, 
   s1ap_ExtendedBitRate value);

EXTERN void asn1SetTC_s1ap_GBR_QosInformation_iE_Extensions_element_GBR_QosInformation_ExtIEs_4
   (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions_element* pElem, 
   s1ap_ExtendedBitRate value);

EXTERN void asn1Copy_s1ap_GBR_QosInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_GBR_QosInformation_iE_Extensions_element* pSrcValue, 
   s1ap_GBR_QosInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_GBR_QosInformation_iE_Extensions_element (
   s1ap_GBR_QosInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GBR_QosInformation_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GBR-QosInformation'
*/
/* List of s1ap_GBR_QosInformation_iE_Extensions_element */
typedef OSRTDList s1ap_GBR_QosInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_GBR_QosInformation_iE_Extensions (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_GBR_QosInformation_iE_Extensions (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_GBR_QosInformation_iE_Extensions 
   (const char* name, const s1ap_GBR_QosInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_GBR_QosInformation_iE_Extensions (const char* name, 
   s1ap_GBR_QosInformation_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GBR_QosInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_GBR_QosInformation_iE_Extensions* pvalue);

/* Append IE with value type s1ap_ExtendedBitRate to list */
EXTERN int asn1Append_s1ap_GBR_QosInformation_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions* plist, 
   s1ap_ExtendedBitRate value);

/* Append IE with value type s1ap_ExtendedBitRate to list */
EXTERN int asn1Append_s1ap_GBR_QosInformation_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions* plist, 
   s1ap_ExtendedBitRate value);

/* Append IE with value type s1ap_ExtendedBitRate to list */
EXTERN int asn1Append_s1ap_GBR_QosInformation_iE_Extensions_3
      (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions* plist, 
   s1ap_ExtendedBitRate value);

/* Append IE with value type s1ap_ExtendedBitRate to list */
EXTERN int asn1Append_s1ap_GBR_QosInformation_iE_Extensions_4
      (OSCTXT* pctxt, s1ap_GBR_QosInformation_iE_Extensions* plist, 
   s1ap_ExtendedBitRate value);

/* Get IE using id key value */
EXTERN struct s1ap_GBR_QosInformation_iE_Extensions_element* 
   asn1Get_s1ap_GBR_QosInformation_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_GBR_QosInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_GBR_QosInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_GBR_QosInformation_iE_Extensions* pSrcValue, 
   s1ap_GBR_QosInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_GBR_QosInformation_iE_Extensions (
   s1ap_GBR_QosInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_GBR_QosInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_GBR_QosInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GBR_QosInformation                                        */
/*                                                            */
/**************************************************************/
/*
 G
GBR-QosInformation ::= SEQUENCE {
   e-RAB-MaximumBitrateDL [0] BitRate,
   e-RAB-MaximumBitrateUL [1] BitRate,
   e-RAB-GuaranteedBitrateDL [2] BitRate,
   e-RAB-GuaranteedBitrateUL [3] BitRate,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({GBR-QosInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({GBR-QosInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({GBR-QosInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_GBR_QosInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_BitRate e_RAB_MaximumBitrateDL;
   s1ap_BitRate e_RAB_MaximumBitrateUL;
   s1ap_BitRate e_RAB_GuaranteedBitrateDL;
   s1ap_BitRate e_RAB_GuaranteedBitrateUL;
   s1ap_GBR_QosInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_GBR_QosInformation;

EXTERN int asn1PE_s1ap_GBR_QosInformation (OSCTXT* pctxt, s1ap_GBR_QosInformation* pvalue);

EXTERN int asn1PD_s1ap_GBR_QosInformation (OSCTXT* pctxt, s1ap_GBR_QosInformation* pvalue);

EXTERN void asn1Print_s1ap_GBR_QosInformation 
   (const char* name, const s1ap_GBR_QosInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_GBR_QosInformation (const char* name, 
   s1ap_GBR_QosInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GBR_QosInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_GBR_QosInformation* pvalue);

EXTERN void asn1Copy_s1ap_GBR_QosInformation (OSCTXT* pctxt, 
   const s1ap_GBR_QosInformation* pSrcValue, s1ap_GBR_QosInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_GBR_QosInformation (s1ap_GBR_QosInformation* pvalue);

EXTERN void asn1Free_s1ap_GBR_QosInformation (OSCTXT *pctxt, 
   s1ap_GBR_QosInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  Packet_LossRate                                           */
/*                                                            */
/**************************************************************/
/*
 P
Packet-LossRate ::= INTEGER (0..1000)
*/
typedef OSUINT16 s1ap_Packet_LossRate;

EXTERN int asn1PE_s1ap_Packet_LossRate (OSCTXT* pctxt, s1ap_Packet_LossRate value);

EXTERN int asn1PD_s1ap_Packet_LossRate (OSCTXT* pctxt, s1ap_Packet_LossRate* pvalue);

EXTERN void asn1Print_s1ap_Packet_LossRate 
   (const char* name, const s1ap_Packet_LossRate* pvalue);

EXTERN int asn1PrtToStr_s1ap_Packet_LossRate (const char* name, 
   s1ap_Packet_LossRate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Packet_LossRate (OSCTXT *pctxt, 
   const char* name, const s1ap_Packet_LossRate* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABLevelQoSParameters_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABLevelQoSParameters'
*/
typedef struct EXTERN s1ap_E_RABLevelQoSParameters_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABQoSParameters_ExtIEs_TVALUE t;

      /**
       * E-RABQoSParameters-ExtIEs information objects
       */
      union {
         /**
          * id: id-DownlinkPacketLossRate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Packet_LossRate _E_RABQoSParameters_ExtIEs_1;
         /**
          * id: id-UplinkPacketLossRate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Packet_LossRate _E_RABQoSParameters_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_E_RABLevelQoSParameters_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABLevelQoSParameters_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABLevelQoSParameters_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABLevelQoSParameters_iE_Extensions_element 
   (const char* name, const s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABLevelQoSParameters_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABLevelQoSParameters_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABLevelQoSParameters_iE_Extensions_element_E_RABQoSParameters_ExtIEs_1
   (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pElem, 
   s1ap_Packet_LossRate value);

EXTERN void asn1SetTC_s1ap_E_RABLevelQoSParameters_iE_Extensions_element_E_RABQoSParameters_ExtIEs_2
   (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pElem, 
   s1ap_Packet_LossRate value);

EXTERN void asn1Copy_s1ap_E_RABLevelQoSParameters_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABLevelQoSParameters_iE_Extensions_element (
   s1ap_E_RABLevelQoSParameters_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABLevelQoSParameters_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABLevelQoSParameters'
*/
/* List of s1ap_E_RABLevelQoSParameters_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABLevelQoSParameters_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABLevelQoSParameters_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABLevelQoSParameters_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABLevelQoSParameters_iE_Extensions 
   (const char* name, const s1ap_E_RABLevelQoSParameters_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABLevelQoSParameters_iE_Extensions (const char* name, 
   s1ap_E_RABLevelQoSParameters_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABLevelQoSParameters_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABLevelQoSParameters_iE_Extensions* pvalue);

/* Append IE with value type s1ap_Packet_LossRate to list */
EXTERN int asn1Append_s1ap_E_RABLevelQoSParameters_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions* plist, 
   s1ap_Packet_LossRate value);

/* Append IE with value type s1ap_Packet_LossRate to list */
EXTERN int asn1Append_s1ap_E_RABLevelQoSParameters_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters_iE_Extensions* plist, 
   s1ap_Packet_LossRate value);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABLevelQoSParameters_iE_Extensions_element* 
   asn1Get_s1ap_E_RABLevelQoSParameters_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABLevelQoSParameters_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABLevelQoSParameters_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABLevelQoSParameters_iE_Extensions* pSrcValue, 
   s1ap_E_RABLevelQoSParameters_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABLevelQoSParameters_iE_Extensions (
   s1ap_E_RABLevelQoSParameters_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABLevelQoSParameters_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABLevelQoSParameters_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABLevelQoSParameters                                   */
/*                                                            */
/**************************************************************/
/*
E-RABLevelQoSParameters ::= SEQUENCE {
   qCI [0] QCI,
   allocationRetentionPriority [1] AllocationAndRetentionPriority,
   gbrQosInformation [2] GBR-QosInformation OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABQoSParameters-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABQoSParameters-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABQoSParameters-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABLevelQoSParameters {
   struct {
      unsigned gbrQosInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_QCI qCI;
   s1ap_AllocationAndRetentionPriority allocationRetentionPriority;
   s1ap_GBR_QosInformation gbrQosInformation;
   s1ap_E_RABLevelQoSParameters_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABLevelQoSParameters;

EXTERN int asn1PE_s1ap_E_RABLevelQoSParameters (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters* pvalue);

EXTERN int asn1PD_s1ap_E_RABLevelQoSParameters (OSCTXT* pctxt, s1ap_E_RABLevelQoSParameters* pvalue);

EXTERN void asn1Print_s1ap_E_RABLevelQoSParameters 
   (const char* name, const s1ap_E_RABLevelQoSParameters* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABLevelQoSParameters (const char* name, 
   s1ap_E_RABLevelQoSParameters* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABLevelQoSParameters (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABLevelQoSParameters* pvalue);

EXTERN void asn1Copy_s1ap_E_RABLevelQoSParameters (OSCTXT* pctxt, 
   const s1ap_E_RABLevelQoSParameters* pSrcValue, s1ap_E_RABLevelQoSParameters*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABLevelQoSParameters (
   s1ap_E_RABLevelQoSParameters* pvalue);

EXTERN void asn1Free_s1ap_E_RABLevelQoSParameters (OSCTXT *pctxt, 
   s1ap_E_RABLevelQoSParameters* pvalue);

/**************************************************************/
/*                                                            */
/*  Data_Forwarding_Not_Possible                              */
/*                                                            */
/**************************************************************/
/*
Data-Forwarding-Not-Possible ::= ENUMERATED { data-Forwarding-not-Possible(0), ... }
*/
typedef enum {
   s1ap_data_Forwarding_not_Possible = 0
} s1ap_Data_Forwarding_Not_Possible_Root;

typedef OSUINT32 s1ap_Data_Forwarding_Not_Possible;

EXTERN int asn1PE_s1ap_Data_Forwarding_Not_Possible (OSCTXT* pctxt, s1ap_Data_Forwarding_Not_Possible value);

EXTERN int asn1PD_s1ap_Data_Forwarding_Not_Possible (OSCTXT* pctxt, s1ap_Data_Forwarding_Not_Possible* pvalue);

EXTERN void asn1Print_s1ap_Data_Forwarding_Not_Possible 
   (const char* name, const s1ap_Data_Forwarding_Not_Possible* pvalue);

EXTERN int asn1PrtToStr_s1ap_Data_Forwarding_Not_Possible (const char* name, 
   s1ap_Data_Forwarding_Not_Possible* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Data_Forwarding_Not_Possible (OSCTXT *pctxt, 
   const char* name, const s1ap_Data_Forwarding_Not_Possible* pvalue);

EXTERN extern const OSEnumItem s1ap_Data_Forwarding_Not_Possible_ENUMTAB[];
#define s1ap_Data_Forwarding_Not_Possible_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_Data_Forwarding_Not_Possible_ToString (OSINT32 value);

EXTERN int s1ap_Data_Forwarding_Not_Possible_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Data_Forwarding_Not_Possible* pvalue);

EXTERN int s1ap_Data_Forwarding_Not_Possible_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Data_Forwarding_Not_Possible* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerType                                                */
/*                                                            */
/**************************************************************/
/*
BearerType ::= ENUMERATED { non-IP(0), ... }
*/
typedef enum {
   s1ap_non_IP = 0
} s1ap_BearerType_Root;

typedef OSUINT32 s1ap_BearerType;

EXTERN int asn1PE_s1ap_BearerType (OSCTXT* pctxt, s1ap_BearerType value);

EXTERN int asn1PD_s1ap_BearerType (OSCTXT* pctxt, s1ap_BearerType* pvalue);

EXTERN void asn1Print_s1ap_BearerType 
   (const char* name, const s1ap_BearerType* pvalue);

EXTERN int asn1PrtToStr_s1ap_BearerType (const char* name, s1ap_BearerType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BearerType (OSCTXT *pctxt, 
   const char* name, const s1ap_BearerType* pvalue);

EXTERN extern const OSEnumItem s1ap_BearerType_ENUMTAB[];
#define s1ap_BearerType_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_BearerType_ToString (OSINT32 value);

EXTERN int s1ap_BearerType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_BearerType* pvalue);

EXTERN int s1ap_BearerType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_BearerType* pvalue);

/**************************************************************/
/*                                                            */
/*  EncryptionAlgorithms                                      */
/*                                                            */
/**************************************************************/
/*
EncryptionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr s1ap_EncryptionAlgorithms;

EXTERN int asn1PE_s1ap_EncryptionAlgorithms (OSCTXT* pctxt, s1ap_EncryptionAlgorithms value);

EXTERN int asn1PD_s1ap_EncryptionAlgorithms (OSCTXT* pctxt, s1ap_EncryptionAlgorithms* pvalue);

EXTERN void asn1Print_s1ap_EncryptionAlgorithms 
   (const char* name, const s1ap_EncryptionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_s1ap_EncryptionAlgorithms (const char* name, 
   s1ap_EncryptionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EncryptionAlgorithms (OSCTXT *pctxt, 
   const char* name, const s1ap_EncryptionAlgorithms* pvalue);

EXTERN void asn1Copy_s1ap_EncryptionAlgorithms (OSCTXT* pctxt, 
   const s1ap_EncryptionAlgorithms* pSrcValue, s1ap_EncryptionAlgorithms*
    pDstValue);

EXTERN int asn1Init_s1ap_EncryptionAlgorithms (s1ap_EncryptionAlgorithms* pvalue);

EXTERN void asn1Free_s1ap_EncryptionAlgorithms (OSCTXT *pctxt, 
   s1ap_EncryptionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionAlgorithms                             */
/*                                                            */
/**************************************************************/
/*
IntegrityProtectionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr s1ap_IntegrityProtectionAlgorithms;

EXTERN int asn1PE_s1ap_IntegrityProtectionAlgorithms (OSCTXT* pctxt, s1ap_IntegrityProtectionAlgorithms value);

EXTERN int asn1PD_s1ap_IntegrityProtectionAlgorithms (OSCTXT* pctxt, s1ap_IntegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Print_s1ap_IntegrityProtectionAlgorithms 
   (const char* name, const s1ap_IntegrityProtectionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_s1ap_IntegrityProtectionAlgorithms (const char* name, 
   s1ap_IntegrityProtectionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_IntegrityProtectionAlgorithms (OSCTXT *pctxt, 
   const char* name, const s1ap_IntegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Copy_s1ap_IntegrityProtectionAlgorithms (OSCTXT* pctxt, 
   const s1ap_IntegrityProtectionAlgorithms* pSrcValue, 
   s1ap_IntegrityProtectionAlgorithms* pDstValue);

EXTERN int asn1Init_s1ap_IntegrityProtectionAlgorithms (
   s1ap_IntegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Free_s1ap_IntegrityProtectionAlgorithms (OSCTXT *pctxt, 
   s1ap_IntegrityProtectionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  UESecurityCapabilities_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESecurityCapabilities'
*/
typedef struct EXTERN s1ap_UESecurityCapabilities_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_UESecurityCapabilities_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, s1ap_UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, s1ap_UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UESecurityCapabilities_iE_Extensions_element 
   (const char* name, const s1ap_UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UESecurityCapabilities_iE_Extensions_element (
   const char* name, 
   s1ap_UESecurityCapabilities_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UESecurityCapabilities_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_UESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UESecurityCapabilities_iE_Extensions_element* pSrcValue, 
   s1ap_UESecurityCapabilities_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UESecurityCapabilities_iE_Extensions_element (
   s1ap_UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_UESecurityCapabilities_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_UESecurityCapabilities_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UESecurityCapabilities_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESecurityCapabilities'
*/
/* List of s1ap_UESecurityCapabilities_iE_Extensions_element */
typedef OSRTDList s1ap_UESecurityCapabilities_iE_Extensions;

EXTERN int asn1PE_s1ap_UESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, s1ap_UESecurityCapabilities_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, s1ap_UESecurityCapabilities_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UESecurityCapabilities_iE_Extensions 
   (const char* name, const s1ap_UESecurityCapabilities_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UESecurityCapabilities_iE_Extensions (const char* name, 
   s1ap_UESecurityCapabilities_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UESecurityCapabilities_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UESecurityCapabilities_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UESecurityCapabilities_iE_Extensions_element* 
   asn1Get_s1ap_UESecurityCapabilities_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_UESecurityCapabilities_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UESecurityCapabilities_iE_Extensions* pSrcValue, 
   s1ap_UESecurityCapabilities_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UESecurityCapabilities_iE_Extensions (
   s1ap_UESecurityCapabilities_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UESecurityCapabilities_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UESecurityCapabilities_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UESecurityCapabilities                                    */
/*                                                            */
/**************************************************************/
/*
 This IE is a transparent container and shall be encoded as the rlf-Report-v9e0 contained in the UEInformationResponse message as defined in TS 36.331 [16]
UESecurityCapabilities ::= SEQUENCE {
   encryptionAlgorithms [0] EncryptionAlgorithms,
   integrityProtectionAlgorithms [1] IntegrityProtectionAlgorithms,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UESecurityCapabilities-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UESecurityCapabilities-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UESecurityCapabilities-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UESecurityCapabilities {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EncryptionAlgorithms encryptionAlgorithms;
   s1ap_IntegrityProtectionAlgorithms integrityProtectionAlgorithms;
   s1ap_UESecurityCapabilities_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UESecurityCapabilities;

EXTERN int asn1PE_s1ap_UESecurityCapabilities (OSCTXT* pctxt, s1ap_UESecurityCapabilities* pvalue);

EXTERN int asn1PD_s1ap_UESecurityCapabilities (OSCTXT* pctxt, s1ap_UESecurityCapabilities* pvalue);

EXTERN void asn1Print_s1ap_UESecurityCapabilities 
   (const char* name, const s1ap_UESecurityCapabilities* pvalue);

EXTERN int asn1PrtToStr_s1ap_UESecurityCapabilities (const char* name, 
   s1ap_UESecurityCapabilities* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UESecurityCapabilities (OSCTXT *pctxt, 
   const char* name, const s1ap_UESecurityCapabilities* pvalue);

EXTERN void asn1Copy_s1ap_UESecurityCapabilities (OSCTXT* pctxt, 
   const s1ap_UESecurityCapabilities* pSrcValue, s1ap_UESecurityCapabilities*
    pDstValue);

EXTERN int asn1Init_s1ap_UESecurityCapabilities (s1ap_UESecurityCapabilities* pvalue);

EXTERN void asn1Free_s1ap_UESecurityCapabilities (OSCTXT *pctxt, 
   s1ap_UESecurityCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  EPLMNs                                                    */
/*                                                            */
/**************************************************************/
/*
EPLMNs ::= SEQUENCE (SIZE (1..maxnoofEPLMNs)) OF PLMNidentity
*/
typedef struct EXTERN s1ap_EPLMNs {
   OSSIZE n;
   s1ap_PLMNidentity elem[15];
} s1ap_EPLMNs;

EXTERN int asn1PE_s1ap_EPLMNs (OSCTXT* pctxt, s1ap_EPLMNs* pvalue);

EXTERN int asn1PD_s1ap_EPLMNs (OSCTXT* pctxt, s1ap_EPLMNs* pvalue);

EXTERN void asn1Print_s1ap_EPLMNs (const char* name, const s1ap_EPLMNs* pvalue);

EXTERN int asn1PrtToStr_s1ap_EPLMNs (const char* name, s1ap_EPLMNs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EPLMNs (OSCTXT *pctxt, 
   const char* name, const s1ap_EPLMNs* pvalue);

EXTERN void asn1Copy_s1ap_EPLMNs (OSCTXT* pctxt, const s1ap_EPLMNs* pSrcValue, 
   s1ap_EPLMNs* pDstValue);

EXTERN int asn1Init_s1ap_EPLMNs (s1ap_EPLMNs* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenTACs                                             */
/*                                                            */
/**************************************************************/
/*
ForbiddenTACs ::= SEQUENCE (SIZE (1..maxnoofForbTACs)) OF TAC
*/
typedef struct EXTERN s1ap_ForbiddenTACs {
   OSSIZE n;
   s1ap_TAC elem[4096];
} s1ap_ForbiddenTACs;

EXTERN int asn1PE_s1ap_ForbiddenTACs (OSCTXT* pctxt, s1ap_ForbiddenTACs* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenTACs (OSCTXT* pctxt, s1ap_ForbiddenTACs* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenTACs 
   (const char* name, const s1ap_ForbiddenTACs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenTACs (const char* name, 
   s1ap_ForbiddenTACs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenTACs (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenTACs* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenTACs (OSCTXT* pctxt, 
   const s1ap_ForbiddenTACs* pSrcValue, s1ap_ForbiddenTACs* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenTACs (s1ap_ForbiddenTACs* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenTAs_Item_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ForbiddenTAs-Item'
*/
typedef struct EXTERN s1ap_ForbiddenTAs_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ForbiddenTAs_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ForbiddenTAs_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_ForbiddenTAs_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenTAs_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_ForbiddenTAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenTAs_Item_iE_Extensions_element 
   (const char* name, const s1ap_ForbiddenTAs_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenTAs_Item_iE_Extensions_element (
   const char* name, s1ap_ForbiddenTAs_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenTAs_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenTAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenTAs_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ForbiddenTAs_Item_iE_Extensions_element* pSrcValue, 
   s1ap_ForbiddenTAs_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenTAs_Item_iE_Extensions_element (
   s1ap_ForbiddenTAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenTAs_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ForbiddenTAs_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenTAs_Item_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ForbiddenTAs-Item'
*/
/* List of s1ap_ForbiddenTAs_Item_iE_Extensions_element */
typedef OSRTDList s1ap_ForbiddenTAs_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_ForbiddenTAs_Item_iE_Extensions (OSCTXT* pctxt, s1ap_ForbiddenTAs_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenTAs_Item_iE_Extensions (OSCTXT* pctxt, s1ap_ForbiddenTAs_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenTAs_Item_iE_Extensions 
   (const char* name, const s1ap_ForbiddenTAs_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenTAs_Item_iE_Extensions (const char* name, 
   s1ap_ForbiddenTAs_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenTAs_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenTAs_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ForbiddenTAs_Item_iE_Extensions_element* 
   asn1Get_s1ap_ForbiddenTAs_Item_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ForbiddenTAs_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ForbiddenTAs_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ForbiddenTAs_Item_iE_Extensions* pSrcValue, 
   s1ap_ForbiddenTAs_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenTAs_Item_iE_Extensions (
   s1ap_ForbiddenTAs_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenTAs_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ForbiddenTAs_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenTAs_Item                                         */
/*                                                            */
/**************************************************************/
/*
ForbiddenTAs-Item ::= SEQUENCE {
   pLMN-Identity [0] PLMNidentity,
   forbiddenTACs [1] ForbiddenTACs,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ForbiddenTAs-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ForbiddenTAs-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ForbiddenTAs-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ForbiddenTAs_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMN_Identity;
   s1ap_ForbiddenTACs forbiddenTACs;
   s1ap_ForbiddenTAs_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ForbiddenTAs_Item;

EXTERN int asn1PE_s1ap_ForbiddenTAs_Item (OSCTXT* pctxt, s1ap_ForbiddenTAs_Item* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenTAs_Item (OSCTXT* pctxt, s1ap_ForbiddenTAs_Item* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenTAs_Item 
   (const char* name, const s1ap_ForbiddenTAs_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenTAs_Item (const char* name, 
   s1ap_ForbiddenTAs_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenTAs_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenTAs_Item* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenTAs_Item (OSCTXT* pctxt, 
   const s1ap_ForbiddenTAs_Item* pSrcValue, s1ap_ForbiddenTAs_Item* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenTAs_Item (s1ap_ForbiddenTAs_Item* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenTAs_Item (OSCTXT *pctxt, 
   s1ap_ForbiddenTAs_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenTAs                                              */
/*                                                            */
/**************************************************************/
/*
ForbiddenTAs ::= SEQUENCE (SIZE (1..maxnoofEPLMNsPlusOne)) OF ForbiddenTAs-Item
*/
/* List of s1ap_ForbiddenTAs_Item */
typedef OSRTDList s1ap_ForbiddenTAs;

EXTERN int asn1PE_s1ap_ForbiddenTAs (OSCTXT* pctxt, s1ap_ForbiddenTAs* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenTAs (OSCTXT* pctxt, s1ap_ForbiddenTAs* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenTAs 
   (const char* name, const s1ap_ForbiddenTAs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenTAs (const char* name, 
   s1ap_ForbiddenTAs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenTAs (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenTAs* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenTAs (OSCTXT* pctxt, 
   const s1ap_ForbiddenTAs* pSrcValue, s1ap_ForbiddenTAs* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenTAs (s1ap_ForbiddenTAs* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenTAs (OSCTXT *pctxt, s1ap_ForbiddenTAs* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenLACs                                             */
/*                                                            */
/**************************************************************/
/*
ForbiddenLACs ::= SEQUENCE (SIZE (1..maxnoofForbLACs)) OF LAC
*/
typedef struct EXTERN s1ap_ForbiddenLACs {
   OSSIZE n;
   s1ap_LAC elem[4096];
} s1ap_ForbiddenLACs;

EXTERN int asn1PE_s1ap_ForbiddenLACs (OSCTXT* pctxt, s1ap_ForbiddenLACs* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenLACs (OSCTXT* pctxt, s1ap_ForbiddenLACs* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenLACs 
   (const char* name, const s1ap_ForbiddenLACs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenLACs (const char* name, 
   s1ap_ForbiddenLACs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenLACs (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenLACs* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenLACs (OSCTXT* pctxt, 
   const s1ap_ForbiddenLACs* pSrcValue, s1ap_ForbiddenLACs* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenLACs (s1ap_ForbiddenLACs* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenLAs_Item_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ForbiddenLAs-Item'
*/
typedef struct EXTERN s1ap_ForbiddenLAs_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ForbiddenLAs_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ForbiddenLAs_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_ForbiddenLAs_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenLAs_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_ForbiddenLAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenLAs_Item_iE_Extensions_element 
   (const char* name, const s1ap_ForbiddenLAs_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenLAs_Item_iE_Extensions_element (
   const char* name, s1ap_ForbiddenLAs_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenLAs_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenLAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenLAs_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ForbiddenLAs_Item_iE_Extensions_element* pSrcValue, 
   s1ap_ForbiddenLAs_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenLAs_Item_iE_Extensions_element (
   s1ap_ForbiddenLAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenLAs_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ForbiddenLAs_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenLAs_Item_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ForbiddenLAs-Item'
*/
/* List of s1ap_ForbiddenLAs_Item_iE_Extensions_element */
typedef OSRTDList s1ap_ForbiddenLAs_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_ForbiddenLAs_Item_iE_Extensions (OSCTXT* pctxt, s1ap_ForbiddenLAs_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenLAs_Item_iE_Extensions (OSCTXT* pctxt, s1ap_ForbiddenLAs_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenLAs_Item_iE_Extensions 
   (const char* name, const s1ap_ForbiddenLAs_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenLAs_Item_iE_Extensions (const char* name, 
   s1ap_ForbiddenLAs_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenLAs_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenLAs_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ForbiddenLAs_Item_iE_Extensions_element* 
   asn1Get_s1ap_ForbiddenLAs_Item_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ForbiddenLAs_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ForbiddenLAs_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ForbiddenLAs_Item_iE_Extensions* pSrcValue, 
   s1ap_ForbiddenLAs_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenLAs_Item_iE_Extensions (
   s1ap_ForbiddenLAs_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenLAs_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ForbiddenLAs_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenLAs_Item                                         */
/*                                                            */
/**************************************************************/
/*
ForbiddenLAs-Item ::= SEQUENCE {
   pLMN-Identity [0] PLMNidentity,
   forbiddenLACs [1] ForbiddenLACs,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ForbiddenLAs-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ForbiddenLAs-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ForbiddenLAs-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ForbiddenLAs_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMN_Identity;
   s1ap_ForbiddenLACs forbiddenLACs;
   s1ap_ForbiddenLAs_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ForbiddenLAs_Item;

EXTERN int asn1PE_s1ap_ForbiddenLAs_Item (OSCTXT* pctxt, s1ap_ForbiddenLAs_Item* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenLAs_Item (OSCTXT* pctxt, s1ap_ForbiddenLAs_Item* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenLAs_Item 
   (const char* name, const s1ap_ForbiddenLAs_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenLAs_Item (const char* name, 
   s1ap_ForbiddenLAs_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenLAs_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenLAs_Item* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenLAs_Item (OSCTXT* pctxt, 
   const s1ap_ForbiddenLAs_Item* pSrcValue, s1ap_ForbiddenLAs_Item* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenLAs_Item (s1ap_ForbiddenLAs_Item* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenLAs_Item (OSCTXT *pctxt, 
   s1ap_ForbiddenLAs_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenLAs                                              */
/*                                                            */
/**************************************************************/
/*
ForbiddenLAs ::= SEQUENCE (SIZE (1..maxnoofEPLMNsPlusOne)) OF ForbiddenLAs-Item
*/
/* List of s1ap_ForbiddenLAs_Item */
typedef OSRTDList s1ap_ForbiddenLAs;

EXTERN int asn1PE_s1ap_ForbiddenLAs (OSCTXT* pctxt, s1ap_ForbiddenLAs* pvalue);

EXTERN int asn1PD_s1ap_ForbiddenLAs (OSCTXT* pctxt, s1ap_ForbiddenLAs* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenLAs 
   (const char* name, const s1ap_ForbiddenLAs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenLAs (const char* name, 
   s1ap_ForbiddenLAs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenLAs (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenLAs* pvalue);

EXTERN void asn1Copy_s1ap_ForbiddenLAs (OSCTXT* pctxt, 
   const s1ap_ForbiddenLAs* pSrcValue, s1ap_ForbiddenLAs* pDstValue);

EXTERN int asn1Init_s1ap_ForbiddenLAs (s1ap_ForbiddenLAs* pvalue);

EXTERN void asn1Free_s1ap_ForbiddenLAs (OSCTXT *pctxt, s1ap_ForbiddenLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenInterRATs                                        */
/*                                                            */
/**************************************************************/
/*
ForbiddenInterRATs ::= ENUMERATED { all(0), geran(1), utran(2), cdma2000(3), ..., geranandutran(4), cdma2000andutran(5) }
*/
typedef enum {
   s1ap_all = 0,
   s1ap_geran = 1,
   s1ap_utran = 2,
   s1ap_cdma2000 = 3
} s1ap_ForbiddenInterRATs_Root;

typedef enum {
   s1ap_geranandutran = 4,
   s1ap_cdma2000andutran = 5
} s1ap_ForbiddenInterRATs_Ext;

typedef OSUINT32 s1ap_ForbiddenInterRATs;

EXTERN int asn1PE_s1ap_ForbiddenInterRATs (OSCTXT* pctxt, s1ap_ForbiddenInterRATs value);

EXTERN int asn1PD_s1ap_ForbiddenInterRATs (OSCTXT* pctxt, s1ap_ForbiddenInterRATs* pvalue);

EXTERN void asn1Print_s1ap_ForbiddenInterRATs 
   (const char* name, const s1ap_ForbiddenInterRATs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ForbiddenInterRATs (const char* name, 
   s1ap_ForbiddenInterRATs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ForbiddenInterRATs (OSCTXT *pctxt, 
   const char* name, const s1ap_ForbiddenInterRATs* pvalue);

EXTERN extern const OSEnumItem s1ap_ForbiddenInterRATs_ENUMTAB[];
#define s1ap_ForbiddenInterRATs_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* s1ap_ForbiddenInterRATs_ToString (OSINT32 value);

EXTERN int s1ap_ForbiddenInterRATs_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ForbiddenInterRATs* pvalue);

EXTERN int s1ap_ForbiddenInterRATs_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ForbiddenInterRATs* pvalue);

/**************************************************************/
/*                                                            */
/*  NRrestrictioninEPSasSecondaryRAT                          */
/*                                                            */
/**************************************************************/
/*
NRrestrictioninEPSasSecondaryRAT ::= ENUMERATED { nRrestrictedinEPSasSecondaryRAT(0), ... }
*/
typedef enum {
   s1ap_nRrestrictedinEPSasSecondaryRAT = 0
} s1ap_NRrestrictioninEPSasSecondaryRAT_Root;

typedef OSUINT32 s1ap_NRrestrictioninEPSasSecondaryRAT;

EXTERN int asn1PE_s1ap_NRrestrictioninEPSasSecondaryRAT (OSCTXT* pctxt, s1ap_NRrestrictioninEPSasSecondaryRAT value);

EXTERN int asn1PD_s1ap_NRrestrictioninEPSasSecondaryRAT (OSCTXT* pctxt, s1ap_NRrestrictioninEPSasSecondaryRAT* pvalue);

EXTERN void asn1Print_s1ap_NRrestrictioninEPSasSecondaryRAT 
   (const char* name, const s1ap_NRrestrictioninEPSasSecondaryRAT* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRrestrictioninEPSasSecondaryRAT (const char* name, 
   s1ap_NRrestrictioninEPSasSecondaryRAT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRrestrictioninEPSasSecondaryRAT (OSCTXT *pctxt, 
   const char* name, const s1ap_NRrestrictioninEPSasSecondaryRAT* pvalue);

EXTERN extern const OSEnumItem s1ap_NRrestrictioninEPSasSecondaryRAT_ENUMTAB[];
#define s1ap_NRrestrictioninEPSasSecondaryRAT_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_NRrestrictioninEPSasSecondaryRAT_ToString (OSINT32 value);

EXTERN int s1ap_NRrestrictioninEPSasSecondaryRAT_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NRrestrictioninEPSasSecondaryRAT* pvalue);

EXTERN int s1ap_NRrestrictioninEPSasSecondaryRAT_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_NRrestrictioninEPSasSecondaryRAT* pvalue);

/**************************************************************/
/*                                                            */
/*  UnlicensedSpectrumRestriction                             */
/*                                                            */
/**************************************************************/
/*
UnlicensedSpectrumRestriction ::= ENUMERATED { unlicensed-restricted(0), ... }
*/
typedef enum {
   s1ap_unlicensed_restricted = 0
} s1ap_UnlicensedSpectrumRestriction_Root;

typedef OSUINT32 s1ap_UnlicensedSpectrumRestriction;

EXTERN int asn1PE_s1ap_UnlicensedSpectrumRestriction (OSCTXT* pctxt, s1ap_UnlicensedSpectrumRestriction value);

EXTERN int asn1PD_s1ap_UnlicensedSpectrumRestriction (OSCTXT* pctxt, s1ap_UnlicensedSpectrumRestriction* pvalue);

EXTERN void asn1Print_s1ap_UnlicensedSpectrumRestriction 
   (const char* name, const s1ap_UnlicensedSpectrumRestriction* pvalue);

EXTERN int asn1PrtToStr_s1ap_UnlicensedSpectrumRestriction (const char* name, 
   s1ap_UnlicensedSpectrumRestriction* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UnlicensedSpectrumRestriction (OSCTXT *pctxt, 
   const char* name, const s1ap_UnlicensedSpectrumRestriction* pvalue);

EXTERN extern const OSEnumItem s1ap_UnlicensedSpectrumRestriction_ENUMTAB[];
#define s1ap_UnlicensedSpectrumRestriction_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_UnlicensedSpectrumRestriction_ToString (OSINT32 value);

EXTERN int s1ap_UnlicensedSpectrumRestriction_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_UnlicensedSpectrumRestriction* pvalue);

EXTERN int s1ap_UnlicensedSpectrumRestriction_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_UnlicensedSpectrumRestriction* pvalue);

/**************************************************************/
/*                                                            */
/*  CNType                                                    */
/*                                                            */
/**************************************************************/
/*
CNType ::= ENUMERATED { fiveGCForbiddden(0), ... }
*/
typedef enum {
   s1ap_fiveGCForbiddden = 0
} s1ap_CNType_Root;

typedef OSUINT32 s1ap_CNType;

EXTERN int asn1PE_s1ap_CNType (OSCTXT* pctxt, s1ap_CNType value);

EXTERN int asn1PD_s1ap_CNType (OSCTXT* pctxt, s1ap_CNType* pvalue);

EXTERN void asn1Print_s1ap_CNType (const char* name, const s1ap_CNType* pvalue);

EXTERN int asn1PrtToStr_s1ap_CNType (const char* name, s1ap_CNType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CNType (OSCTXT *pctxt, 
   const char* name, const s1ap_CNType* pvalue);

EXTERN extern const OSEnumItem s1ap_CNType_ENUMTAB[];
#define s1ap_CNType_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_CNType_ToString (OSINT32 value);

EXTERN int s1ap_CNType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CNType* pvalue);

EXTERN int s1ap_CNType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CNType* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictions_Item_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CNTypeRestrictions-Item'
*/
typedef struct EXTERN s1ap_CNTypeRestrictions_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CNTypeRestrictions_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CNTypeRestrictions_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CNTypeRestrictions_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CNTypeRestrictions_Item_iE_Extensions_element 
   (const char* name, const s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CNTypeRestrictions_Item_iE_Extensions_element (
   const char* name, 
   s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CNTypeRestrictions_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CNTypeRestrictions_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CNTypeRestrictions_Item_iE_Extensions_element (
   s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CNTypeRestrictions_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CNTypeRestrictions_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictions_Item_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CNTypeRestrictions-Item'
*/
/* List of s1ap_CNTypeRestrictions_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CNTypeRestrictions_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CNTypeRestrictions_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CNTypeRestrictions_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CNTypeRestrictions_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CNTypeRestrictions_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CNTypeRestrictions_Item_iE_Extensions 
   (const char* name, const s1ap_CNTypeRestrictions_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CNTypeRestrictions_Item_iE_Extensions (const char* name, 
   s1ap_CNTypeRestrictions_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CNTypeRestrictions_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CNTypeRestrictions_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CNTypeRestrictions_Item_iE_Extensions_element* 
   asn1Get_s1ap_CNTypeRestrictions_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CNTypeRestrictions_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CNTypeRestrictions_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CNTypeRestrictions_Item_iE_Extensions* pSrcValue, 
   s1ap_CNTypeRestrictions_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CNTypeRestrictions_Item_iE_Extensions (
   s1ap_CNTypeRestrictions_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CNTypeRestrictions_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CNTypeRestrictions_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictions_Item                                   */
/*                                                            */
/**************************************************************/
/*
CNTypeRestrictions-Item ::= SEQUENCE {
   pLMN-Identity [0] PLMNidentity,
   cNType [1] CNType,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CNTypeRestrictions-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CNTypeRestrictions-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CNTypeRestrictions-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CNTypeRestrictions_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMN_Identity;
   s1ap_CNType cNType;
   s1ap_CNTypeRestrictions_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CNTypeRestrictions_Item;

EXTERN int asn1PE_s1ap_CNTypeRestrictions_Item (OSCTXT* pctxt, s1ap_CNTypeRestrictions_Item* pvalue);

EXTERN int asn1PD_s1ap_CNTypeRestrictions_Item (OSCTXT* pctxt, s1ap_CNTypeRestrictions_Item* pvalue);

EXTERN void asn1Print_s1ap_CNTypeRestrictions_Item 
   (const char* name, const s1ap_CNTypeRestrictions_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CNTypeRestrictions_Item (const char* name, 
   s1ap_CNTypeRestrictions_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CNTypeRestrictions_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CNTypeRestrictions_Item* pvalue);

EXTERN void asn1Copy_s1ap_CNTypeRestrictions_Item (OSCTXT* pctxt, 
   const s1ap_CNTypeRestrictions_Item* pSrcValue, s1ap_CNTypeRestrictions_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_CNTypeRestrictions_Item (
   s1ap_CNTypeRestrictions_Item* pvalue);

EXTERN void asn1Free_s1ap_CNTypeRestrictions_Item (OSCTXT *pctxt, 
   s1ap_CNTypeRestrictions_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictions                                        */
/*                                                            */
/**************************************************************/
/*
CNTypeRestrictions ::= SEQUENCE (SIZE (1..maxnoofEPLMNsPlusOne)) OF CNTypeRestrictions-Item
*/
/* List of s1ap_CNTypeRestrictions_Item */
typedef OSRTDList s1ap_CNTypeRestrictions;

EXTERN int asn1PE_s1ap_CNTypeRestrictions (OSCTXT* pctxt, s1ap_CNTypeRestrictions* pvalue);

EXTERN int asn1PD_s1ap_CNTypeRestrictions (OSCTXT* pctxt, s1ap_CNTypeRestrictions* pvalue);

EXTERN void asn1Print_s1ap_CNTypeRestrictions 
   (const char* name, const s1ap_CNTypeRestrictions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CNTypeRestrictions (const char* name, 
   s1ap_CNTypeRestrictions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CNTypeRestrictions (OSCTXT *pctxt, 
   const char* name, const s1ap_CNTypeRestrictions* pvalue);

EXTERN void asn1Copy_s1ap_CNTypeRestrictions (OSCTXT* pctxt, 
   const s1ap_CNTypeRestrictions* pSrcValue, s1ap_CNTypeRestrictions*
    pDstValue);

EXTERN int asn1Init_s1ap_CNTypeRestrictions (s1ap_CNTypeRestrictions* pvalue);

EXTERN void asn1Free_s1ap_CNTypeRestrictions (OSCTXT *pctxt, 
   s1ap_CNTypeRestrictions* pvalue);

/**************************************************************/
/*                                                            */
/*  NRrestrictionin5GS                                        */
/*                                                            */
/**************************************************************/
/*
NRrestrictionin5GS ::= ENUMERATED { nRrestrictedin5GS(0), ... }
*/
typedef enum {
   s1ap_nRrestrictedin5GS = 0
} s1ap_NRrestrictionin5GS_Root;

typedef OSUINT32 s1ap_NRrestrictionin5GS;

EXTERN int asn1PE_s1ap_NRrestrictionin5GS (OSCTXT* pctxt, s1ap_NRrestrictionin5GS value);

EXTERN int asn1PD_s1ap_NRrestrictionin5GS (OSCTXT* pctxt, s1ap_NRrestrictionin5GS* pvalue);

EXTERN void asn1Print_s1ap_NRrestrictionin5GS 
   (const char* name, const s1ap_NRrestrictionin5GS* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRrestrictionin5GS (const char* name, 
   s1ap_NRrestrictionin5GS* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRrestrictionin5GS (OSCTXT *pctxt, 
   const char* name, const s1ap_NRrestrictionin5GS* pvalue);

EXTERN extern const OSEnumItem s1ap_NRrestrictionin5GS_ENUMTAB[];
#define s1ap_NRrestrictionin5GS_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_NRrestrictionin5GS_ToString (OSINT32 value);

EXTERN int s1ap_NRrestrictionin5GS_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NRrestrictionin5GS* pvalue);

EXTERN int s1ap_NRrestrictionin5GS_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_NRrestrictionin5GS* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRestrictionList_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRestrictionList'
*/
typedef struct EXTERN s1ap_HandoverRestrictionList_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverRestrictionList_ExtIEs_TVALUE t;

      /**
       * HandoverRestrictionList-ExtIEs information objects
       */
      union {
         /**
          * id: id-NRrestrictioninEPSasSecondaryRAT
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRrestrictioninEPSasSecondaryRAT _HandoverRestrictionList_ExtIEs_1;
         /**
          * id: id-UnlicensedSpectrumRestriction
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UnlicensedSpectrumRestriction _HandoverRestrictionList_ExtIEs_2;
         /**
          * id: id-CNTypeRestrictions
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CNTypeRestrictions *_HandoverRestrictionList_ExtIEs_3;
         /**
          * id: id-NRrestrictionin5GS
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRrestrictionin5GS _HandoverRestrictionList_ExtIEs_4;
         /**
          * id: id-LastNG-RANPLMNIdentity
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PLMNidentity *_HandoverRestrictionList_ExtIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_HandoverRestrictionList_iE_Extensions_element;

EXTERN int asn1PE_s1ap_HandoverRestrictionList_iE_Extensions_element (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverRestrictionList_iE_Extensions_element (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverRestrictionList_iE_Extensions_element 
   (const char* name, const s1ap_HandoverRestrictionList_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRestrictionList_iE_Extensions_element (
   const char* name, 
   s1ap_HandoverRestrictionList_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRestrictionList_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRestrictionList_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRestrictionList_iE_Extensions_element_HandoverRestrictionList_ExtIEs_1
   (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions_element* pElem, 
   s1ap_NRrestrictioninEPSasSecondaryRAT value);

EXTERN void asn1SetTC_s1ap_HandoverRestrictionList_iE_Extensions_element_HandoverRestrictionList_ExtIEs_2
   (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions_element* pElem, 
   s1ap_UnlicensedSpectrumRestriction value);

EXTERN void asn1SetTC_s1ap_HandoverRestrictionList_iE_Extensions_element_HandoverRestrictionList_ExtIEs_3
   (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions_element* pElem, 
   s1ap_CNTypeRestrictions *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRestrictionList_iE_Extensions_element_HandoverRestrictionList_ExtIEs_4
   (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions_element* pElem, 
   s1ap_NRrestrictionin5GS value);

EXTERN void asn1SetTC_s1ap_HandoverRestrictionList_iE_Extensions_element_HandoverRestrictionList_ExtIEs_5
   (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions_element* pElem, 
   s1ap_PLMNidentity *pvalue);

EXTERN void asn1Copy_s1ap_HandoverRestrictionList_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_HandoverRestrictionList_iE_Extensions_element* pSrcValue, 
   s1ap_HandoverRestrictionList_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRestrictionList_iE_Extensions_element (
   s1ap_HandoverRestrictionList_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverRestrictionList_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_HandoverRestrictionList_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRestrictionList_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRestrictionList'
*/
/* List of s1ap_HandoverRestrictionList_iE_Extensions_element */
typedef OSRTDList s1ap_HandoverRestrictionList_iE_Extensions;

EXTERN int asn1PE_s1ap_HandoverRestrictionList_iE_Extensions (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_HandoverRestrictionList_iE_Extensions (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_HandoverRestrictionList_iE_Extensions 
   (const char* name, const s1ap_HandoverRestrictionList_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRestrictionList_iE_Extensions (const char* name, 
   s1ap_HandoverRestrictionList_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRestrictionList_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRestrictionList_iE_Extensions* pvalue);

/* Append IE with value type s1ap_NRrestrictioninEPSasSecondaryRAT to list */
EXTERN int asn1Append_s1ap_HandoverRestrictionList_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions* plist, 
   s1ap_NRrestrictioninEPSasSecondaryRAT value);

/* Append IE with value type s1ap_UnlicensedSpectrumRestriction to list */
EXTERN int asn1Append_s1ap_HandoverRestrictionList_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions* plist, 
   s1ap_UnlicensedSpectrumRestriction value);

/* Append IE with value type s1ap_CNTypeRestrictions to list */
EXTERN int asn1Append_s1ap_HandoverRestrictionList_iE_Extensions_3
      (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions* plist, 
   s1ap_CNTypeRestrictions *pvalue);

/* Append IE with value type s1ap_NRrestrictionin5GS to list */
EXTERN int asn1Append_s1ap_HandoverRestrictionList_iE_Extensions_4
      (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions* plist, 
   s1ap_NRrestrictionin5GS value);

/* Append IE with value type s1ap_PLMNidentity to list */
struct s1ap_TBCD_STRING ;
EXTERN int asn1Append_s1ap_HandoverRestrictionList_iE_Extensions_5
      (OSCTXT* pctxt, s1ap_HandoverRestrictionList_iE_Extensions* plist, 
   struct s1ap_TBCD_STRING *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverRestrictionList_iE_Extensions_element* 
   asn1Get_s1ap_HandoverRestrictionList_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_HandoverRestrictionList_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_HandoverRestrictionList_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_HandoverRestrictionList_iE_Extensions* pSrcValue, 
   s1ap_HandoverRestrictionList_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRestrictionList_iE_Extensions (
   s1ap_HandoverRestrictionList_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_HandoverRestrictionList_iE_Extensions (OSCTXT *pctxt, 
   s1ap_HandoverRestrictionList_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRestrictionList                                   */
/*                                                            */
/**************************************************************/
/*
HandoverRestrictionList ::= SEQUENCE {
   servingPLMN [0] PLMNidentity,
   equivalentPLMNs [1] EPLMNs OPTIONAL,
   forbiddenTAs [2] ForbiddenTAs OPTIONAL,
   forbiddenLAs [3] ForbiddenLAs OPTIONAL,
   forbiddenInterRATs [4] ForbiddenInterRATs OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({HandoverRestrictionList-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({HandoverRestrictionList-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({HandoverRestrictionList-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_HandoverRestrictionList {
   struct {
      unsigned equivalentPLMNsPresent : 1;
      unsigned forbiddenTAsPresent : 1;
      unsigned forbiddenLAsPresent : 1;
      unsigned forbiddenInterRATsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity servingPLMN;
   s1ap_EPLMNs equivalentPLMNs;
   s1ap_ForbiddenTAs forbiddenTAs;
   s1ap_ForbiddenLAs forbiddenLAs;
   s1ap_ForbiddenInterRATs forbiddenInterRATs;
   s1ap_HandoverRestrictionList_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_HandoverRestrictionList;

EXTERN int asn1PE_s1ap_HandoverRestrictionList (OSCTXT* pctxt, s1ap_HandoverRestrictionList* pvalue);

EXTERN int asn1PD_s1ap_HandoverRestrictionList (OSCTXT* pctxt, s1ap_HandoverRestrictionList* pvalue);

EXTERN void asn1Print_s1ap_HandoverRestrictionList 
   (const char* name, const s1ap_HandoverRestrictionList* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRestrictionList (const char* name, 
   s1ap_HandoverRestrictionList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRestrictionList (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRestrictionList* pvalue);

EXTERN void asn1Copy_s1ap_HandoverRestrictionList (OSCTXT* pctxt, 
   const s1ap_HandoverRestrictionList* pSrcValue, s1ap_HandoverRestrictionList*
    pDstValue);

EXTERN int asn1Init_s1ap_HandoverRestrictionList (
   s1ap_HandoverRestrictionList* pvalue);

EXTERN void asn1Free_s1ap_HandoverRestrictionList (OSCTXT *pctxt, 
   s1ap_HandoverRestrictionList* pvalue);

/**************************************************************/
/*                                                            */
/*  E_UTRAN_Trace_ID                                          */
/*                                                            */
/**************************************************************/
/*
E-UTRAN-Trace-ID ::= OCTET STRING (SIZE (8))
*/
typedef struct EXTERN s1ap_E_UTRAN_Trace_ID {
   OSUINT32 numocts;
   OSOCTET data[8];
} s1ap_E_UTRAN_Trace_ID;

EXTERN int asn1PE_s1ap_E_UTRAN_Trace_ID (OSCTXT* pctxt, s1ap_E_UTRAN_Trace_ID* pvalue);

EXTERN int asn1PD_s1ap_E_UTRAN_Trace_ID (OSCTXT* pctxt, s1ap_E_UTRAN_Trace_ID* pvalue);

EXTERN void asn1Print_s1ap_E_UTRAN_Trace_ID 
   (const char* name, const s1ap_E_UTRAN_Trace_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_UTRAN_Trace_ID (const char* name, 
   s1ap_E_UTRAN_Trace_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_UTRAN_Trace_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_E_UTRAN_Trace_ID* pvalue);

EXTERN void asn1Copy_s1ap_E_UTRAN_Trace_ID (OSCTXT* pctxt, 
   const s1ap_E_UTRAN_Trace_ID* pSrcValue, s1ap_E_UTRAN_Trace_ID* pDstValue);

EXTERN int asn1Init_s1ap_E_UTRAN_Trace_ID (s1ap_E_UTRAN_Trace_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  InterfacesToTrace                                         */
/*                                                            */
/**************************************************************/
/*
InterfacesToTrace ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 s1ap_InterfacesToTrace;

EXTERN int asn1PE_s1ap_InterfacesToTrace (OSCTXT* pctxt, s1ap_InterfacesToTrace value);

EXTERN int asn1PD_s1ap_InterfacesToTrace (OSCTXT* pctxt, s1ap_InterfacesToTrace* pvalue);

EXTERN void asn1Print_s1ap_InterfacesToTrace 
   (const char* name, const s1ap_InterfacesToTrace* pvalue);

EXTERN int asn1PrtToStr_s1ap_InterfacesToTrace (const char* name, 
   s1ap_InterfacesToTrace* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InterfacesToTrace (OSCTXT *pctxt, 
   const char* name, const s1ap_InterfacesToTrace* pvalue);

EXTERN void asn1Copy_s1ap_InterfacesToTrace (OSCTXT* pctxt, 
   const s1ap_InterfacesToTrace* pSrcValue, s1ap_InterfacesToTrace* pDstValue);

EXTERN int asn1Init_s1ap_InterfacesToTrace (s1ap_InterfacesToTrace* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceDepth                                                */
/*                                                            */
/**************************************************************/
/*
TraceDepth ::= ENUMERATED { minimum(0), medium(1), maximum(2), minimumWithoutVendorSpecificExtension(3), mediumWithoutVendorSpecificExtension(4), maximumWithoutVendorSpecificExtension(5), ... }
*/
typedef enum {
   s1ap_minimum = 0,
   s1ap_medium_1 = 1,
   s1ap_maximum = 2,
   s1ap_minimumWithoutVendorSpecificExtension = 3,
   s1ap_mediumWithoutVendorSpecificExtension = 4,
   s1ap_maximumWithoutVendorSpecificExtension = 5
} s1ap_TraceDepth_Root;

typedef OSUINT32 s1ap_TraceDepth;

EXTERN int asn1PE_s1ap_TraceDepth (OSCTXT* pctxt, s1ap_TraceDepth value);

EXTERN int asn1PD_s1ap_TraceDepth (OSCTXT* pctxt, s1ap_TraceDepth* pvalue);

EXTERN void asn1Print_s1ap_TraceDepth 
   (const char* name, const s1ap_TraceDepth* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceDepth (const char* name, s1ap_TraceDepth* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceDepth (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceDepth* pvalue);

EXTERN extern const OSEnumItem s1ap_TraceDepth_ENUMTAB[];
#define s1ap_TraceDepth_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* s1ap_TraceDepth_ToString (OSINT32 value);

EXTERN int s1ap_TraceDepth_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_TraceDepth* pvalue);

EXTERN int s1ap_TraceDepth_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_TraceDepth* pvalue);

/**************************************************************/
/*                                                            */
/*  MDT_Activation                                            */
/*                                                            */
/**************************************************************/
/*
MDT-Activation ::= ENUMERATED { immediate-MDT-only(0), immediate-MDT-and-Trace(1), logged-MDT-only(2), ..., logged-MBSFN-MDT(3) }
*/
typedef enum {
   s1ap_immediate_MDT_only = 0,
   s1ap_immediate_MDT_and_Trace = 1,
   s1ap_logged_MDT_only = 2
} s1ap_MDT_Activation_Root;

typedef enum {
   s1ap_logged_MBSFN_MDT = 3
} s1ap_MDT_Activation_Ext;

typedef OSUINT32 s1ap_MDT_Activation;

EXTERN int asn1PE_s1ap_MDT_Activation (OSCTXT* pctxt, s1ap_MDT_Activation value);

EXTERN int asn1PD_s1ap_MDT_Activation (OSCTXT* pctxt, s1ap_MDT_Activation* pvalue);

EXTERN void asn1Print_s1ap_MDT_Activation 
   (const char* name, const s1ap_MDT_Activation* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDT_Activation (const char* name, 
   s1ap_MDT_Activation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDT_Activation (OSCTXT *pctxt, 
   const char* name, const s1ap_MDT_Activation* pvalue);

EXTERN extern const OSEnumItem s1ap_MDT_Activation_ENUMTAB[];
#define s1ap_MDT_Activation_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* s1ap_MDT_Activation_ToString (OSINT32 value);

EXTERN int s1ap_MDT_Activation_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_MDT_Activation* pvalue);

EXTERN int s1ap_MDT_Activation_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_MDT_Activation* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIdentity                                              */
/*                                                            */
/**************************************************************/
/*
CellIdentity ::= BIT STRING  (SIZE (28))
*/
typedef ASN1BitStr32 s1ap_CellIdentity;

EXTERN int asn1PE_s1ap_CellIdentity (OSCTXT* pctxt, s1ap_CellIdentity value);

EXTERN int asn1PD_s1ap_CellIdentity (OSCTXT* pctxt, s1ap_CellIdentity* pvalue);

EXTERN void asn1Print_s1ap_CellIdentity 
   (const char* name, const s1ap_CellIdentity* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellIdentity (const char* name, 
   s1ap_CellIdentity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellIdentity (OSCTXT *pctxt, 
   const char* name, const s1ap_CellIdentity* pvalue);

EXTERN void asn1Copy_s1ap_CellIdentity (OSCTXT* pctxt, 
   const s1ap_CellIdentity* pSrcValue, s1ap_CellIdentity* pDstValue);

EXTERN int asn1Init_s1ap_CellIdentity (s1ap_CellIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRAN_CGI_iE_Extensions_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EUTRAN-CGI'
*/
typedef struct EXTERN s1ap_EUTRAN_CGI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EUTRAN_CGI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EUTRAN_CGI_iE_Extensions_element (OSCTXT* pctxt, s1ap_EUTRAN_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EUTRAN_CGI_iE_Extensions_element (OSCTXT* pctxt, s1ap_EUTRAN_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EUTRAN_CGI_iE_Extensions_element 
   (const char* name, const s1ap_EUTRAN_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EUTRAN_CGI_iE_Extensions_element (const char* name, 
   s1ap_EUTRAN_CGI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EUTRAN_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EUTRAN_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EUTRAN_CGI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EUTRAN_CGI_iE_Extensions_element* pSrcValue, 
   s1ap_EUTRAN_CGI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EUTRAN_CGI_iE_Extensions_element (
   s1ap_EUTRAN_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EUTRAN_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EUTRAN_CGI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRAN_CGI_iE_Extensions                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EUTRAN-CGI'
*/
/* List of s1ap_EUTRAN_CGI_iE_Extensions_element */
typedef OSRTDList s1ap_EUTRAN_CGI_iE_Extensions;

EXTERN int asn1PE_s1ap_EUTRAN_CGI_iE_Extensions (OSCTXT* pctxt, s1ap_EUTRAN_CGI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EUTRAN_CGI_iE_Extensions (OSCTXT* pctxt, s1ap_EUTRAN_CGI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EUTRAN_CGI_iE_Extensions 
   (const char* name, const s1ap_EUTRAN_CGI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EUTRAN_CGI_iE_Extensions (const char* name, 
   s1ap_EUTRAN_CGI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EUTRAN_CGI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EUTRAN_CGI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EUTRAN_CGI_iE_Extensions_element* 
   asn1Get_s1ap_EUTRAN_CGI_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_EUTRAN_CGI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EUTRAN_CGI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EUTRAN_CGI_iE_Extensions* pSrcValue, 
   s1ap_EUTRAN_CGI_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EUTRAN_CGI_iE_Extensions (
   s1ap_EUTRAN_CGI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EUTRAN_CGI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EUTRAN_CGI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRAN_CGI                                                */
/*                                                            */
/**************************************************************/
/*
EUTRAN-CGI ::= SEQUENCE {
   pLMNidentity [0] PLMNidentity,
   cell-ID [1] CellIdentity,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EUTRAN-CGI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EUTRAN-CGI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EUTRAN-CGI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EUTRAN_CGI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_CellIdentity cell_ID;
   s1ap_EUTRAN_CGI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EUTRAN_CGI;

EXTERN int asn1PE_s1ap_EUTRAN_CGI (OSCTXT* pctxt, s1ap_EUTRAN_CGI* pvalue);

EXTERN int asn1PD_s1ap_EUTRAN_CGI (OSCTXT* pctxt, s1ap_EUTRAN_CGI* pvalue);

EXTERN void asn1Print_s1ap_EUTRAN_CGI 
   (const char* name, const s1ap_EUTRAN_CGI* pvalue);

EXTERN int asn1PrtToStr_s1ap_EUTRAN_CGI (const char* name, s1ap_EUTRAN_CGI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EUTRAN_CGI (OSCTXT *pctxt, 
   const char* name, const s1ap_EUTRAN_CGI* pvalue);

EXTERN void asn1Copy_s1ap_EUTRAN_CGI (OSCTXT* pctxt, 
   const s1ap_EUTRAN_CGI* pSrcValue, s1ap_EUTRAN_CGI* pDstValue);

EXTERN int asn1Init_s1ap_EUTRAN_CGI (s1ap_EUTRAN_CGI* pvalue);

EXTERN void asn1Free_s1ap_EUTRAN_CGI (OSCTXT *pctxt, s1ap_EUTRAN_CGI* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIdListforMDT                                          */
/*                                                            */
/**************************************************************/
/*
CellIdListforMDT ::= SEQUENCE (SIZE (1..maxnoofCellIDforMDT)) OF EUTRAN-CGI
*/
/* List of s1ap_EUTRAN_CGI */
typedef OSRTDList s1ap_CellIdListforMDT;

EXTERN int asn1PE_s1ap_CellIdListforMDT (OSCTXT* pctxt, s1ap_CellIdListforMDT* pvalue);

EXTERN int asn1PD_s1ap_CellIdListforMDT (OSCTXT* pctxt, s1ap_CellIdListforMDT* pvalue);

EXTERN void asn1Print_s1ap_CellIdListforMDT 
   (const char* name, const s1ap_CellIdListforMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellIdListforMDT (const char* name, 
   s1ap_CellIdListforMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellIdListforMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_CellIdListforMDT* pvalue);

EXTERN void asn1Copy_s1ap_CellIdListforMDT (OSCTXT* pctxt, 
   const s1ap_CellIdListforMDT* pSrcValue, s1ap_CellIdListforMDT* pDstValue);

EXTERN int asn1Init_s1ap_CellIdListforMDT (s1ap_CellIdListforMDT* pvalue);

EXTERN void asn1Free_s1ap_CellIdListforMDT (OSCTXT *pctxt, 
   s1ap_CellIdListforMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  CellBasedMDT_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellBasedMDT'
*/
typedef struct EXTERN s1ap_CellBasedMDT_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CellBasedMDT_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CellBasedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellBasedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CellBasedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellBasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CellBasedMDT_iE_Extensions_element 
   (const char* name, const s1ap_CellBasedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellBasedMDT_iE_Extensions_element (const char* name, 
   s1ap_CellBasedMDT_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellBasedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CellBasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CellBasedMDT_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CellBasedMDT_iE_Extensions_element* pSrcValue, 
   s1ap_CellBasedMDT_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CellBasedMDT_iE_Extensions_element (
   s1ap_CellBasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CellBasedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CellBasedMDT_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellBasedMDT_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellBasedMDT'
*/
/* List of s1ap_CellBasedMDT_iE_Extensions_element */
typedef OSRTDList s1ap_CellBasedMDT_iE_Extensions;

EXTERN int asn1PE_s1ap_CellBasedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_CellBasedMDT_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CellBasedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_CellBasedMDT_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CellBasedMDT_iE_Extensions 
   (const char* name, const s1ap_CellBasedMDT_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellBasedMDT_iE_Extensions (const char* name, 
   s1ap_CellBasedMDT_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellBasedMDT_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CellBasedMDT_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CellBasedMDT_iE_Extensions_element* 
   asn1Get_s1ap_CellBasedMDT_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_CellBasedMDT_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CellBasedMDT_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CellBasedMDT_iE_Extensions* pSrcValue, 
   s1ap_CellBasedMDT_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CellBasedMDT_iE_Extensions (
   s1ap_CellBasedMDT_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CellBasedMDT_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CellBasedMDT_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellBasedMDT                                              */
/*                                                            */
/**************************************************************/
/*
CellBasedMDT ::= SEQUENCE {
   cellIdListforMDT [0] CellIdListforMDT,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CellBasedMDT-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CellBasedMDT-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CellBasedMDT-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CellBasedMDT {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_CellIdListforMDT cellIdListforMDT;
   s1ap_CellBasedMDT_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CellBasedMDT;

EXTERN int asn1PE_s1ap_CellBasedMDT (OSCTXT* pctxt, s1ap_CellBasedMDT* pvalue);

EXTERN int asn1PD_s1ap_CellBasedMDT (OSCTXT* pctxt, s1ap_CellBasedMDT* pvalue);

EXTERN void asn1Print_s1ap_CellBasedMDT 
   (const char* name, const s1ap_CellBasedMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellBasedMDT (const char* name, 
   s1ap_CellBasedMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellBasedMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_CellBasedMDT* pvalue);

EXTERN void asn1Copy_s1ap_CellBasedMDT (OSCTXT* pctxt, 
   const s1ap_CellBasedMDT* pSrcValue, s1ap_CellBasedMDT* pDstValue);

EXTERN int asn1Init_s1ap_CellBasedMDT (s1ap_CellBasedMDT* pvalue);

EXTERN void asn1Free_s1ap_CellBasedMDT (OSCTXT *pctxt, s1ap_CellBasedMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  TAListforMDT                                              */
/*                                                            */
/**************************************************************/
/*
TAListforMDT ::= SEQUENCE (SIZE (1..maxnoofTAforMDT)) OF TAC
*/
typedef struct EXTERN s1ap_TAListforMDT {
   OSSIZE n;
   s1ap_TAC elem[8];
} s1ap_TAListforMDT;

EXTERN int asn1PE_s1ap_TAListforMDT (OSCTXT* pctxt, s1ap_TAListforMDT* pvalue);

EXTERN int asn1PD_s1ap_TAListforMDT (OSCTXT* pctxt, s1ap_TAListforMDT* pvalue);

EXTERN void asn1Print_s1ap_TAListforMDT 
   (const char* name, const s1ap_TAListforMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAListforMDT (const char* name, 
   s1ap_TAListforMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAListforMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_TAListforMDT* pvalue);

EXTERN void asn1Copy_s1ap_TAListforMDT (OSCTXT* pctxt, 
   const s1ap_TAListforMDT* pSrcValue, s1ap_TAListforMDT* pDstValue);

EXTERN int asn1Init_s1ap_TAListforMDT (s1ap_TAListforMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  TABasedMDT_iE_Extensions_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TABasedMDT'
*/
typedef struct EXTERN s1ap_TABasedMDT_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TABasedMDT_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TABasedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_TABasedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TABasedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_TABasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TABasedMDT_iE_Extensions_element 
   (const char* name, const s1ap_TABasedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TABasedMDT_iE_Extensions_element (const char* name, 
   s1ap_TABasedMDT_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TABasedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TABasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TABasedMDT_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TABasedMDT_iE_Extensions_element* pSrcValue, 
   s1ap_TABasedMDT_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TABasedMDT_iE_Extensions_element (
   s1ap_TABasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TABasedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TABasedMDT_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TABasedMDT_iE_Extensions                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TABasedMDT'
*/
/* List of s1ap_TABasedMDT_iE_Extensions_element */
typedef OSRTDList s1ap_TABasedMDT_iE_Extensions;

EXTERN int asn1PE_s1ap_TABasedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_TABasedMDT_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TABasedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_TABasedMDT_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TABasedMDT_iE_Extensions 
   (const char* name, const s1ap_TABasedMDT_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TABasedMDT_iE_Extensions (const char* name, 
   s1ap_TABasedMDT_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TABasedMDT_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TABasedMDT_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TABasedMDT_iE_Extensions_element* 
   asn1Get_s1ap_TABasedMDT_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TABasedMDT_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TABasedMDT_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TABasedMDT_iE_Extensions* pSrcValue, 
   s1ap_TABasedMDT_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TABasedMDT_iE_Extensions (
   s1ap_TABasedMDT_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TABasedMDT_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TABasedMDT_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TABasedMDT                                                */
/*                                                            */
/**************************************************************/
/*
TABasedMDT ::= SEQUENCE {
   tAListforMDT [0] TAListforMDT,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TABasedMDT-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TABasedMDT-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TABasedMDT-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TABasedMDT {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAListforMDT tAListforMDT;
   s1ap_TABasedMDT_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TABasedMDT;

EXTERN int asn1PE_s1ap_TABasedMDT (OSCTXT* pctxt, s1ap_TABasedMDT* pvalue);

EXTERN int asn1PD_s1ap_TABasedMDT (OSCTXT* pctxt, s1ap_TABasedMDT* pvalue);

EXTERN void asn1Print_s1ap_TABasedMDT 
   (const char* name, const s1ap_TABasedMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_TABasedMDT (const char* name, s1ap_TABasedMDT* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TABasedMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_TABasedMDT* pvalue);

EXTERN void asn1Copy_s1ap_TABasedMDT (OSCTXT* pctxt, 
   const s1ap_TABasedMDT* pSrcValue, s1ap_TABasedMDT* pDstValue);

EXTERN int asn1Init_s1ap_TABasedMDT (s1ap_TABasedMDT* pvalue);

EXTERN void asn1Free_s1ap_TABasedMDT (OSCTXT *pctxt, s1ap_TABasedMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListforMDT                                             */
/*                                                            */
/**************************************************************/
/*
TAIListforMDT ::= SEQUENCE (SIZE (1..maxnoofTAforMDT)) OF TAI
*/
/* List of s1ap_TAI */
typedef OSRTDList s1ap_TAIListforMDT;

EXTERN int asn1PE_s1ap_TAIListforMDT (OSCTXT* pctxt, s1ap_TAIListforMDT* pvalue);

EXTERN int asn1PD_s1ap_TAIListforMDT (OSCTXT* pctxt, s1ap_TAIListforMDT* pvalue);

EXTERN void asn1Print_s1ap_TAIListforMDT 
   (const char* name, const s1ap_TAIListforMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIListforMDT (const char* name, 
   s1ap_TAIListforMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIListforMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIListforMDT* pvalue);

EXTERN void asn1Copy_s1ap_TAIListforMDT (OSCTXT* pctxt, 
   const s1ap_TAIListforMDT* pSrcValue, s1ap_TAIListforMDT* pDstValue);

EXTERN int asn1Init_s1ap_TAIListforMDT (s1ap_TAIListforMDT* pvalue);

EXTERN void asn1Free_s1ap_TAIListforMDT (OSCTXT *pctxt, s1ap_TAIListforMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBasedMDT_iE_Extensions_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBasedMDT'
*/
typedef struct EXTERN s1ap_TAIBasedMDT_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TAIBasedMDT_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TAIBasedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAIBasedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TAIBasedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAIBasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TAIBasedMDT_iE_Extensions_element 
   (const char* name, const s1ap_TAIBasedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIBasedMDT_iE_Extensions_element (const char* name, 
   s1ap_TAIBasedMDT_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIBasedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIBasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TAIBasedMDT_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TAIBasedMDT_iE_Extensions_element* pSrcValue, 
   s1ap_TAIBasedMDT_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TAIBasedMDT_iE_Extensions_element (
   s1ap_TAIBasedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TAIBasedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TAIBasedMDT_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBasedMDT_iE_Extensions                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBasedMDT'
*/
/* List of s1ap_TAIBasedMDT_iE_Extensions_element */
typedef OSRTDList s1ap_TAIBasedMDT_iE_Extensions;

EXTERN int asn1PE_s1ap_TAIBasedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_TAIBasedMDT_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TAIBasedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_TAIBasedMDT_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TAIBasedMDT_iE_Extensions 
   (const char* name, const s1ap_TAIBasedMDT_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIBasedMDT_iE_Extensions (const char* name, 
   s1ap_TAIBasedMDT_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIBasedMDT_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIBasedMDT_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TAIBasedMDT_iE_Extensions_element* 
   asn1Get_s1ap_TAIBasedMDT_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TAIBasedMDT_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TAIBasedMDT_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TAIBasedMDT_iE_Extensions* pSrcValue, 
   s1ap_TAIBasedMDT_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TAIBasedMDT_iE_Extensions (
   s1ap_TAIBasedMDT_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TAIBasedMDT_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TAIBasedMDT_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBasedMDT                                               */
/*                                                            */
/**************************************************************/
/*
TAIBasedMDT ::= SEQUENCE {
   tAIListforMDT [0] TAIListforMDT,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TAIBasedMDT-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TAIBasedMDT-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TAIBasedMDT-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TAIBasedMDT {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAIListforMDT tAIListforMDT;
   s1ap_TAIBasedMDT_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TAIBasedMDT;

EXTERN int asn1PE_s1ap_TAIBasedMDT (OSCTXT* pctxt, s1ap_TAIBasedMDT* pvalue);

EXTERN int asn1PD_s1ap_TAIBasedMDT (OSCTXT* pctxt, s1ap_TAIBasedMDT* pvalue);

EXTERN void asn1Print_s1ap_TAIBasedMDT 
   (const char* name, const s1ap_TAIBasedMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIBasedMDT (const char* name, s1ap_TAIBasedMDT* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIBasedMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIBasedMDT* pvalue);

EXTERN void asn1Copy_s1ap_TAIBasedMDT (OSCTXT* pctxt, 
   const s1ap_TAIBasedMDT* pSrcValue, s1ap_TAIBasedMDT* pDstValue);

EXTERN int asn1Init_s1ap_TAIBasedMDT (s1ap_TAIBasedMDT* pvalue);

EXTERN void asn1Free_s1ap_TAIBasedMDT (OSCTXT *pctxt, s1ap_TAIBasedMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaScopeOfMDT                                            */
/*                                                            */
/**************************************************************/
/*
AreaScopeOfMDT ::= CHOICE {
   cellBased [0] CellBasedMDT,
   tABased [1] TABasedMDT,
   pLMNWide [2] NULL,
   ...,
   tAIBased [3] TAIBasedMDT
}
*/
/* Choice tag constants */

#define T_s1ap_AreaScopeOfMDT_cellBased 1
#define T_s1ap_AreaScopeOfMDT_tABased   2
#define T_s1ap_AreaScopeOfMDT_pLMNWide  3
#define T_s1ap_AreaScopeOfMDT_tAIBased  4
#define T_s1ap_AreaScopeOfMDT_extElem1  5

typedef struct EXTERN s1ap_AreaScopeOfMDT {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_CellBasedMDT *cellBased;
      /* t = 2 */
      s1ap_TABasedMDT *tABased;
      /* t = 3 */
      /* t = 4 */
      s1ap_TAIBasedMDT *tAIBased;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_AreaScopeOfMDT;

EXTERN int asn1PE_s1ap_AreaScopeOfMDT (OSCTXT* pctxt, s1ap_AreaScopeOfMDT* pvalue);

EXTERN int asn1PD_s1ap_AreaScopeOfMDT (OSCTXT* pctxt, s1ap_AreaScopeOfMDT* pvalue);

EXTERN void asn1Print_s1ap_AreaScopeOfMDT 
   (const char* name, const s1ap_AreaScopeOfMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_AreaScopeOfMDT (const char* name, 
   s1ap_AreaScopeOfMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AreaScopeOfMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_AreaScopeOfMDT* pvalue);

EXTERN void asn1Copy_s1ap_AreaScopeOfMDT (OSCTXT* pctxt, 
   const s1ap_AreaScopeOfMDT* pSrcValue, s1ap_AreaScopeOfMDT* pDstValue);

EXTERN int asn1Init_s1ap_AreaScopeOfMDT (s1ap_AreaScopeOfMDT* pvalue);

EXTERN void asn1Free_s1ap_AreaScopeOfMDT (OSCTXT *pctxt, s1ap_AreaScopeOfMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasurementsToActivate                                    */
/*                                                            */
/**************************************************************/
/*
MeasurementsToActivate ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 s1ap_MeasurementsToActivate;

EXTERN int asn1PE_s1ap_MeasurementsToActivate (OSCTXT* pctxt, s1ap_MeasurementsToActivate value);

EXTERN int asn1PD_s1ap_MeasurementsToActivate (OSCTXT* pctxt, s1ap_MeasurementsToActivate* pvalue);

EXTERN void asn1Print_s1ap_MeasurementsToActivate 
   (const char* name, const s1ap_MeasurementsToActivate* pvalue);

EXTERN int asn1PrtToStr_s1ap_MeasurementsToActivate (const char* name, 
   s1ap_MeasurementsToActivate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MeasurementsToActivate (OSCTXT *pctxt, 
   const char* name, const s1ap_MeasurementsToActivate* pvalue);

EXTERN void asn1Copy_s1ap_MeasurementsToActivate (OSCTXT* pctxt, 
   const s1ap_MeasurementsToActivate* pSrcValue, s1ap_MeasurementsToActivate*
    pDstValue);

EXTERN int asn1Init_s1ap_MeasurementsToActivate (s1ap_MeasurementsToActivate* pvalue);

/**************************************************************/
/*                                                            */
/*  M1ReportingTrigger                                        */
/*                                                            */
/**************************************************************/
/*
M1ReportingTrigger ::= ENUMERATED { periodic(0), a2eventtriggered(1), ..., a2eventtriggered-periodic(2) }
*/
typedef enum {
   s1ap_periodic = 0,
   s1ap_a2eventtriggered = 1
} s1ap_M1ReportingTrigger_Root;

typedef enum {
   s1ap_a2eventtriggered_periodic = 2
} s1ap_M1ReportingTrigger_Ext;

typedef OSUINT32 s1ap_M1ReportingTrigger;

EXTERN int asn1PE_s1ap_M1ReportingTrigger (OSCTXT* pctxt, s1ap_M1ReportingTrigger value);

EXTERN int asn1PD_s1ap_M1ReportingTrigger (OSCTXT* pctxt, s1ap_M1ReportingTrigger* pvalue);

EXTERN void asn1Print_s1ap_M1ReportingTrigger 
   (const char* name, const s1ap_M1ReportingTrigger* pvalue);

EXTERN int asn1PrtToStr_s1ap_M1ReportingTrigger (const char* name, 
   s1ap_M1ReportingTrigger* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M1ReportingTrigger (OSCTXT *pctxt, 
   const char* name, const s1ap_M1ReportingTrigger* pvalue);

EXTERN extern const OSEnumItem s1ap_M1ReportingTrigger_ENUMTAB[];
#define s1ap_M1ReportingTrigger_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_M1ReportingTrigger_ToString (OSINT32 value);

EXTERN int s1ap_M1ReportingTrigger_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_M1ReportingTrigger* pvalue);

EXTERN int s1ap_M1ReportingTrigger_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_M1ReportingTrigger* pvalue);

/**************************************************************/
/*                                                            */
/*  Threshold_RSRP                                            */
/*                                                            */
/**************************************************************/
/*
Threshold-RSRP ::= INTEGER (0..97)
*/
typedef OSUINT8 s1ap_Threshold_RSRP;

EXTERN int asn1PE_s1ap_Threshold_RSRP (OSCTXT* pctxt, s1ap_Threshold_RSRP value);

EXTERN int asn1PD_s1ap_Threshold_RSRP (OSCTXT* pctxt, s1ap_Threshold_RSRP* pvalue);

EXTERN void asn1Print_s1ap_Threshold_RSRP 
   (const char* name, const s1ap_Threshold_RSRP* pvalue);

EXTERN int asn1PrtToStr_s1ap_Threshold_RSRP (const char* name, 
   s1ap_Threshold_RSRP* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Threshold_RSRP (OSCTXT *pctxt, 
   const char* name, const s1ap_Threshold_RSRP* pvalue);

/**************************************************************/
/*                                                            */
/*  Threshold_RSRQ                                            */
/*                                                            */
/**************************************************************/
/*
Threshold-RSRQ ::= INTEGER (0..34)
*/
typedef OSUINT8 s1ap_Threshold_RSRQ;

EXTERN int asn1PE_s1ap_Threshold_RSRQ (OSCTXT* pctxt, s1ap_Threshold_RSRQ value);

EXTERN int asn1PD_s1ap_Threshold_RSRQ (OSCTXT* pctxt, s1ap_Threshold_RSRQ* pvalue);

EXTERN void asn1Print_s1ap_Threshold_RSRQ 
   (const char* name, const s1ap_Threshold_RSRQ* pvalue);

EXTERN int asn1PrtToStr_s1ap_Threshold_RSRQ (const char* name, 
   s1ap_Threshold_RSRQ* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Threshold_RSRQ (OSCTXT *pctxt, 
   const char* name, const s1ap_Threshold_RSRQ* pvalue);

/**************************************************************/
/*                                                            */
/*  MeasurementThresholdA2                                    */
/*                                                            */
/**************************************************************/
/*
MeasurementThresholdA2 ::= CHOICE {
   threshold-RSRP [0] Threshold-RSRP,
   threshold-RSRQ [1] Threshold-RSRQ,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_MeasurementThresholdA2_threshold_RSRP 1
#define T_s1ap_MeasurementThresholdA2_threshold_RSRQ 2
#define T_s1ap_MeasurementThresholdA2_extElem1 3

typedef struct EXTERN s1ap_MeasurementThresholdA2 {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_Threshold_RSRP threshold_RSRP;
      /* t = 2 */
      s1ap_Threshold_RSRQ threshold_RSRQ;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_MeasurementThresholdA2;

EXTERN int asn1PE_s1ap_MeasurementThresholdA2 (OSCTXT* pctxt, s1ap_MeasurementThresholdA2* pvalue);

EXTERN int asn1PD_s1ap_MeasurementThresholdA2 (OSCTXT* pctxt, s1ap_MeasurementThresholdA2* pvalue);

EXTERN void asn1Print_s1ap_MeasurementThresholdA2 
   (const char* name, const s1ap_MeasurementThresholdA2* pvalue);

EXTERN int asn1PrtToStr_s1ap_MeasurementThresholdA2 (const char* name, 
   s1ap_MeasurementThresholdA2* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MeasurementThresholdA2 (OSCTXT *pctxt, 
   const char* name, const s1ap_MeasurementThresholdA2* pvalue);

EXTERN void asn1Copy_s1ap_MeasurementThresholdA2 (OSCTXT* pctxt, 
   const s1ap_MeasurementThresholdA2* pSrcValue, s1ap_MeasurementThresholdA2*
    pDstValue);

EXTERN int asn1Init_s1ap_MeasurementThresholdA2 (s1ap_MeasurementThresholdA2* pvalue);

EXTERN void asn1Free_s1ap_MeasurementThresholdA2 (OSCTXT *pctxt, 
   s1ap_MeasurementThresholdA2* pvalue);

/**************************************************************/
/*                                                            */
/*  M1ThresholdEventA2_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M1ThresholdEventA2'
*/
typedef struct EXTERN s1ap_M1ThresholdEventA2_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_M1ThresholdEventA2_iE_Extensions_element;

EXTERN int asn1PE_s1ap_M1ThresholdEventA2_iE_Extensions_element (OSCTXT* pctxt, s1ap_M1ThresholdEventA2_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_M1ThresholdEventA2_iE_Extensions_element (OSCTXT* pctxt, s1ap_M1ThresholdEventA2_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_M1ThresholdEventA2_iE_Extensions_element 
   (const char* name, const s1ap_M1ThresholdEventA2_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_M1ThresholdEventA2_iE_Extensions_element (
   const char* name, s1ap_M1ThresholdEventA2_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M1ThresholdEventA2_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_M1ThresholdEventA2_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_M1ThresholdEventA2_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_M1ThresholdEventA2_iE_Extensions_element* pSrcValue, 
   s1ap_M1ThresholdEventA2_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_M1ThresholdEventA2_iE_Extensions_element (
   s1ap_M1ThresholdEventA2_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_M1ThresholdEventA2_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_M1ThresholdEventA2_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  M1ThresholdEventA2_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M1ThresholdEventA2'
*/
/* List of s1ap_M1ThresholdEventA2_iE_Extensions_element */
typedef OSRTDList s1ap_M1ThresholdEventA2_iE_Extensions;

EXTERN int asn1PE_s1ap_M1ThresholdEventA2_iE_Extensions (OSCTXT* pctxt, s1ap_M1ThresholdEventA2_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_M1ThresholdEventA2_iE_Extensions (OSCTXT* pctxt, s1ap_M1ThresholdEventA2_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_M1ThresholdEventA2_iE_Extensions 
   (const char* name, const s1ap_M1ThresholdEventA2_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_M1ThresholdEventA2_iE_Extensions (const char* name, 
   s1ap_M1ThresholdEventA2_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M1ThresholdEventA2_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_M1ThresholdEventA2_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_M1ThresholdEventA2_iE_Extensions_element* 
   asn1Get_s1ap_M1ThresholdEventA2_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_M1ThresholdEventA2_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_M1ThresholdEventA2_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_M1ThresholdEventA2_iE_Extensions* pSrcValue, 
   s1ap_M1ThresholdEventA2_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_M1ThresholdEventA2_iE_Extensions (
   s1ap_M1ThresholdEventA2_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_M1ThresholdEventA2_iE_Extensions (OSCTXT *pctxt, 
   s1ap_M1ThresholdEventA2_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  M1ThresholdEventA2                                        */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
M1ThresholdEventA2 ::= SEQUENCE {
   measurementThreshold [0] EXPLICIT MeasurementThresholdA2,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({M1ThresholdEventA2-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({M1ThresholdEventA2-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({M1ThresholdEventA2-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_M1ThresholdEventA2 {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MeasurementThresholdA2 measurementThreshold;
   s1ap_M1ThresholdEventA2_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_M1ThresholdEventA2;

EXTERN int asn1PE_s1ap_M1ThresholdEventA2 (OSCTXT* pctxt, s1ap_M1ThresholdEventA2* pvalue);

EXTERN int asn1PD_s1ap_M1ThresholdEventA2 (OSCTXT* pctxt, s1ap_M1ThresholdEventA2* pvalue);

EXTERN void asn1Print_s1ap_M1ThresholdEventA2 
   (const char* name, const s1ap_M1ThresholdEventA2* pvalue);

EXTERN int asn1PrtToStr_s1ap_M1ThresholdEventA2 (const char* name, 
   s1ap_M1ThresholdEventA2* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M1ThresholdEventA2 (OSCTXT *pctxt, 
   const char* name, const s1ap_M1ThresholdEventA2* pvalue);

EXTERN void asn1Copy_s1ap_M1ThresholdEventA2 (OSCTXT* pctxt, 
   const s1ap_M1ThresholdEventA2* pSrcValue, s1ap_M1ThresholdEventA2*
    pDstValue);

EXTERN int asn1Init_s1ap_M1ThresholdEventA2 (s1ap_M1ThresholdEventA2* pvalue);

EXTERN void asn1Free_s1ap_M1ThresholdEventA2 (OSCTXT *pctxt, 
   s1ap_M1ThresholdEventA2* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportIntervalMDT                                         */
/*                                                            */
/**************************************************************/
/*
ReportIntervalMDT ::= ENUMERATED { ms120(0), ms240(1), ms480(2), ms640(3), ms1024(4), ms2048(5), ms5120(6), ms10240(7), min1(8), min6(9), min12(10), min30(11), min60(12) }
*/
typedef enum {
   s1ap_ms120 = 0,
   s1ap_ms240 = 1,
   s1ap_ms480 = 2,
   s1ap_ms640 = 3,
   s1ap_ms1024_5 = 4,
   s1ap_ms2048_5 = 5,
   s1ap_ms5120_6 = 6,
   s1ap_ms10240_6 = 7,
   s1ap_min1_3 = 8,
   s1ap_min6 = 9,
   s1ap_min12 = 10,
   s1ap_min30 = 11,
   s1ap_min60 = 12
} s1ap_ReportIntervalMDT_Root;

typedef OSUINT32 s1ap_ReportIntervalMDT;

EXTERN int asn1PE_s1ap_ReportIntervalMDT (OSCTXT* pctxt, s1ap_ReportIntervalMDT value);

EXTERN int asn1PD_s1ap_ReportIntervalMDT (OSCTXT* pctxt, s1ap_ReportIntervalMDT* pvalue);

EXTERN void asn1Print_s1ap_ReportIntervalMDT 
   (const char* name, const s1ap_ReportIntervalMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReportIntervalMDT (const char* name, 
   s1ap_ReportIntervalMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReportIntervalMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_ReportIntervalMDT* pvalue);

EXTERN extern const OSEnumItem s1ap_ReportIntervalMDT_ENUMTAB[];
#define s1ap_ReportIntervalMDT_ENUMTABSIZE 13

EXTERN const OSUTF8CHAR* s1ap_ReportIntervalMDT_ToString (OSINT32 value);

EXTERN int s1ap_ReportIntervalMDT_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ReportIntervalMDT* pvalue);

EXTERN int s1ap_ReportIntervalMDT_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ReportIntervalMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportAmountMDT                                           */
/*                                                            */
/**************************************************************/
/*
ReportAmountMDT ::= ENUMERATED { r1(0), r2(1), r4(2), r8(3), r16(4), r32(5), r64(6), rinfinity(7) }
*/
typedef enum {
   s1ap_r1 = 0,
   s1ap_r2 = 1,
   s1ap_r4 = 2,
   s1ap_r8 = 3,
   s1ap_r16 = 4,
   s1ap_r32 = 5,
   s1ap_r64 = 6,
   s1ap_rinfinity = 7
} s1ap_ReportAmountMDT_Root;

typedef OSUINT32 s1ap_ReportAmountMDT;

EXTERN int asn1PE_s1ap_ReportAmountMDT (OSCTXT* pctxt, s1ap_ReportAmountMDT value);

EXTERN int asn1PD_s1ap_ReportAmountMDT (OSCTXT* pctxt, s1ap_ReportAmountMDT* pvalue);

EXTERN void asn1Print_s1ap_ReportAmountMDT 
   (const char* name, const s1ap_ReportAmountMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReportAmountMDT (const char* name, 
   s1ap_ReportAmountMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReportAmountMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_ReportAmountMDT* pvalue);

EXTERN extern const OSEnumItem s1ap_ReportAmountMDT_ENUMTAB[];
#define s1ap_ReportAmountMDT_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* s1ap_ReportAmountMDT_ToString (OSINT32 value);

EXTERN int s1ap_ReportAmountMDT_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ReportAmountMDT* pvalue);

EXTERN int s1ap_ReportAmountMDT_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ReportAmountMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  M1PeriodicReporting_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M1PeriodicReporting'
*/
typedef struct EXTERN s1ap_M1PeriodicReporting_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_M1PeriodicReporting_iE_Extensions_element;

EXTERN int asn1PE_s1ap_M1PeriodicReporting_iE_Extensions_element (OSCTXT* pctxt, s1ap_M1PeriodicReporting_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_M1PeriodicReporting_iE_Extensions_element (OSCTXT* pctxt, s1ap_M1PeriodicReporting_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_M1PeriodicReporting_iE_Extensions_element 
   (const char* name, const s1ap_M1PeriodicReporting_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_M1PeriodicReporting_iE_Extensions_element (
   const char* name, s1ap_M1PeriodicReporting_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M1PeriodicReporting_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_M1PeriodicReporting_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_M1PeriodicReporting_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_M1PeriodicReporting_iE_Extensions_element* pSrcValue, 
   s1ap_M1PeriodicReporting_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_M1PeriodicReporting_iE_Extensions_element (
   s1ap_M1PeriodicReporting_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_M1PeriodicReporting_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_M1PeriodicReporting_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  M1PeriodicReporting_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M1PeriodicReporting'
*/
/* List of s1ap_M1PeriodicReporting_iE_Extensions_element */
typedef OSRTDList s1ap_M1PeriodicReporting_iE_Extensions;

EXTERN int asn1PE_s1ap_M1PeriodicReporting_iE_Extensions (OSCTXT* pctxt, s1ap_M1PeriodicReporting_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_M1PeriodicReporting_iE_Extensions (OSCTXT* pctxt, s1ap_M1PeriodicReporting_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_M1PeriodicReporting_iE_Extensions 
   (const char* name, const s1ap_M1PeriodicReporting_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_M1PeriodicReporting_iE_Extensions (const char* name, 
   s1ap_M1PeriodicReporting_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M1PeriodicReporting_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_M1PeriodicReporting_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_M1PeriodicReporting_iE_Extensions_element* 
   asn1Get_s1ap_M1PeriodicReporting_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_M1PeriodicReporting_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_M1PeriodicReporting_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_M1PeriodicReporting_iE_Extensions* pSrcValue, 
   s1ap_M1PeriodicReporting_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_M1PeriodicReporting_iE_Extensions (
   s1ap_M1PeriodicReporting_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_M1PeriodicReporting_iE_Extensions (OSCTXT *pctxt, 
   s1ap_M1PeriodicReporting_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  M1PeriodicReporting                                       */
/*                                                            */
/**************************************************************/
/*
M1PeriodicReporting ::= SEQUENCE {
   reportInterval [0] ReportIntervalMDT,
   reportAmount [1] ReportAmountMDT,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({M1PeriodicReporting-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({M1PeriodicReporting-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({M1PeriodicReporting-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_M1PeriodicReporting {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ReportIntervalMDT reportInterval;
   s1ap_ReportAmountMDT reportAmount;
   s1ap_M1PeriodicReporting_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_M1PeriodicReporting;

EXTERN int asn1PE_s1ap_M1PeriodicReporting (OSCTXT* pctxt, s1ap_M1PeriodicReporting* pvalue);

EXTERN int asn1PD_s1ap_M1PeriodicReporting (OSCTXT* pctxt, s1ap_M1PeriodicReporting* pvalue);

EXTERN void asn1Print_s1ap_M1PeriodicReporting 
   (const char* name, const s1ap_M1PeriodicReporting* pvalue);

EXTERN int asn1PrtToStr_s1ap_M1PeriodicReporting (const char* name, 
   s1ap_M1PeriodicReporting* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M1PeriodicReporting (OSCTXT *pctxt, 
   const char* name, const s1ap_M1PeriodicReporting* pvalue);

EXTERN void asn1Copy_s1ap_M1PeriodicReporting (OSCTXT* pctxt, 
   const s1ap_M1PeriodicReporting* pSrcValue, s1ap_M1PeriodicReporting*
    pDstValue);

EXTERN int asn1Init_s1ap_M1PeriodicReporting (s1ap_M1PeriodicReporting* pvalue);

EXTERN void asn1Free_s1ap_M1PeriodicReporting (OSCTXT *pctxt, 
   s1ap_M1PeriodicReporting* pvalue);

/**************************************************************/
/*                                                            */
/*  M3period                                                  */
/*                                                            */
/**************************************************************/
/*
M3period ::= ENUMERATED { ms100(0), ms1000(1), ms10000(2), ..., ms1024(3), ms1280(4), ms2048(5), ms2560(6), ms5120(7), ms10240(8), min1(9) }
*/
typedef enum {
   s1ap_ms100 = 0,
   s1ap_ms1000 = 1,
   s1ap_ms10000 = 2
} s1ap_M3period_Root;

typedef enum {
   s1ap_ms1024_1 = 3,
   s1ap_ms1280_1 = 4,
   s1ap_ms2048_1 = 5,
   s1ap_ms2560_1 = 6,
   s1ap_ms5120_1 = 7,
   s1ap_ms10240_1 = 8,
   s1ap_min1 = 9
} s1ap_M3period_Ext;

typedef OSUINT32 s1ap_M3period;

EXTERN int asn1PE_s1ap_M3period (OSCTXT* pctxt, s1ap_M3period value);

EXTERN int asn1PD_s1ap_M3period (OSCTXT* pctxt, s1ap_M3period* pvalue);

EXTERN void asn1Print_s1ap_M3period (const char* name, const s1ap_M3period* pvalue);

EXTERN int asn1PrtToStr_s1ap_M3period (const char* name, s1ap_M3period* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M3period (OSCTXT *pctxt, 
   const char* name, const s1ap_M3period* pvalue);

EXTERN extern const OSEnumItem s1ap_M3period_ENUMTAB[];
#define s1ap_M3period_ENUMTABSIZE 10

EXTERN const OSUTF8CHAR* s1ap_M3period_ToString (OSINT32 value);

EXTERN int s1ap_M3period_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_M3period* pvalue);

EXTERN int s1ap_M3period_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_M3period* pvalue);

/**************************************************************/
/*                                                            */
/*  M3Configuration_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M3Configuration'
*/
typedef struct EXTERN s1ap_M3Configuration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_M3Configuration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_M3Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M3Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_M3Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M3Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_M3Configuration_iE_Extensions_element 
   (const char* name, const s1ap_M3Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_M3Configuration_iE_Extensions_element (const char* name, 
   s1ap_M3Configuration_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M3Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_M3Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_M3Configuration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_M3Configuration_iE_Extensions_element* pSrcValue, 
   s1ap_M3Configuration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_M3Configuration_iE_Extensions_element (
   s1ap_M3Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_M3Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_M3Configuration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  M3Configuration_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M3Configuration'
*/
/* List of s1ap_M3Configuration_iE_Extensions_element */
typedef OSRTDList s1ap_M3Configuration_iE_Extensions;

EXTERN int asn1PE_s1ap_M3Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M3Configuration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_M3Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M3Configuration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_M3Configuration_iE_Extensions 
   (const char* name, const s1ap_M3Configuration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_M3Configuration_iE_Extensions (const char* name, 
   s1ap_M3Configuration_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M3Configuration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_M3Configuration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_M3Configuration_iE_Extensions_element* 
   asn1Get_s1ap_M3Configuration_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_M3Configuration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_M3Configuration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_M3Configuration_iE_Extensions* pSrcValue, 
   s1ap_M3Configuration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_M3Configuration_iE_Extensions (
   s1ap_M3Configuration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_M3Configuration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_M3Configuration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  M3Configuration                                           */
/*                                                            */
/**************************************************************/
/*
 M
M3Configuration ::= SEQUENCE {
   m3period [0] M3period,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({M3Configuration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({M3Configuration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({M3Configuration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_M3Configuration {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_M3period m3period;
   s1ap_M3Configuration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_M3Configuration;

EXTERN int asn1PE_s1ap_M3Configuration (OSCTXT* pctxt, s1ap_M3Configuration* pvalue);

EXTERN int asn1PD_s1ap_M3Configuration (OSCTXT* pctxt, s1ap_M3Configuration* pvalue);

EXTERN void asn1Print_s1ap_M3Configuration 
   (const char* name, const s1ap_M3Configuration* pvalue);

EXTERN int asn1PrtToStr_s1ap_M3Configuration (const char* name, 
   s1ap_M3Configuration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M3Configuration (OSCTXT *pctxt, 
   const char* name, const s1ap_M3Configuration* pvalue);

EXTERN void asn1Copy_s1ap_M3Configuration (OSCTXT* pctxt, 
   const s1ap_M3Configuration* pSrcValue, s1ap_M3Configuration* pDstValue);

EXTERN int asn1Init_s1ap_M3Configuration (s1ap_M3Configuration* pvalue);

EXTERN void asn1Free_s1ap_M3Configuration (OSCTXT *pctxt, 
   s1ap_M3Configuration* pvalue);

/**************************************************************/
/*                                                            */
/*  M4period                                                  */
/*                                                            */
/**************************************************************/
/*
M4period ::= ENUMERATED { ms1024(0), ms2048(1), ms5120(2), ms10240(3), min1(4), ... }
*/
typedef enum {
   s1ap_ms1024_2 = 0,
   s1ap_ms2048_2 = 1,
   s1ap_ms5120_2 = 2,
   s1ap_ms10240_2 = 3,
   s1ap_min1_1 = 4
} s1ap_M4period_Root;

typedef OSUINT32 s1ap_M4period;

EXTERN int asn1PE_s1ap_M4period (OSCTXT* pctxt, s1ap_M4period value);

EXTERN int asn1PD_s1ap_M4period (OSCTXT* pctxt, s1ap_M4period* pvalue);

EXTERN void asn1Print_s1ap_M4period (const char* name, const s1ap_M4period* pvalue);

EXTERN int asn1PrtToStr_s1ap_M4period (const char* name, s1ap_M4period* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M4period (OSCTXT *pctxt, 
   const char* name, const s1ap_M4period* pvalue);

EXTERN extern const OSEnumItem s1ap_M4period_ENUMTAB[];
#define s1ap_M4period_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* s1ap_M4period_ToString (OSINT32 value);

EXTERN int s1ap_M4period_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_M4period* pvalue);

EXTERN int s1ap_M4period_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_M4period* pvalue);

/**************************************************************/
/*                                                            */
/*  Links_to_log                                              */
/*                                                            */
/**************************************************************/
/*
Links-to-log ::= ENUMERATED { uplink(0), downlink(1), both-uplink-and-downlink(2), ... }
*/
typedef enum {
   s1ap_uplink = 0,
   s1ap_downlink = 1,
   s1ap_both_uplink_and_downlink = 2
} s1ap_Links_to_log_Root;

typedef OSUINT32 s1ap_Links_to_log;

EXTERN int asn1PE_s1ap_Links_to_log (OSCTXT* pctxt, s1ap_Links_to_log value);

EXTERN int asn1PD_s1ap_Links_to_log (OSCTXT* pctxt, s1ap_Links_to_log* pvalue);

EXTERN void asn1Print_s1ap_Links_to_log 
   (const char* name, const s1ap_Links_to_log* pvalue);

EXTERN int asn1PrtToStr_s1ap_Links_to_log (const char* name, 
   s1ap_Links_to_log* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Links_to_log (OSCTXT *pctxt, 
   const char* name, const s1ap_Links_to_log* pvalue);

EXTERN extern const OSEnumItem s1ap_Links_to_log_ENUMTAB[];
#define s1ap_Links_to_log_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_Links_to_log_ToString (OSINT32 value);

EXTERN int s1ap_Links_to_log_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Links_to_log* pvalue);

EXTERN int s1ap_Links_to_log_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Links_to_log* pvalue);

/**************************************************************/
/*                                                            */
/*  M4Configuration_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M4Configuration'
*/
typedef struct EXTERN s1ap_M4Configuration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_M4Configuration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_M4Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M4Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_M4Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M4Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_M4Configuration_iE_Extensions_element 
   (const char* name, const s1ap_M4Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_M4Configuration_iE_Extensions_element (const char* name, 
   s1ap_M4Configuration_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M4Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_M4Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_M4Configuration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_M4Configuration_iE_Extensions_element* pSrcValue, 
   s1ap_M4Configuration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_M4Configuration_iE_Extensions_element (
   s1ap_M4Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_M4Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_M4Configuration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  M4Configuration_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M4Configuration'
*/
/* List of s1ap_M4Configuration_iE_Extensions_element */
typedef OSRTDList s1ap_M4Configuration_iE_Extensions;

EXTERN int asn1PE_s1ap_M4Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M4Configuration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_M4Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M4Configuration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_M4Configuration_iE_Extensions 
   (const char* name, const s1ap_M4Configuration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_M4Configuration_iE_Extensions (const char* name, 
   s1ap_M4Configuration_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M4Configuration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_M4Configuration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_M4Configuration_iE_Extensions_element* 
   asn1Get_s1ap_M4Configuration_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_M4Configuration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_M4Configuration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_M4Configuration_iE_Extensions* pSrcValue, 
   s1ap_M4Configuration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_M4Configuration_iE_Extensions (
   s1ap_M4Configuration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_M4Configuration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_M4Configuration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  M4Configuration                                           */
/*                                                            */
/**************************************************************/
/*
M4Configuration ::= SEQUENCE {
   m4period [0] M4period,
   m4-links-to-log [1] Links-to-log,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({M4Configuration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({M4Configuration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({M4Configuration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_M4Configuration {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_M4period m4period;
   s1ap_Links_to_log m4_links_to_log;
   s1ap_M4Configuration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_M4Configuration;

EXTERN int asn1PE_s1ap_M4Configuration (OSCTXT* pctxt, s1ap_M4Configuration* pvalue);

EXTERN int asn1PD_s1ap_M4Configuration (OSCTXT* pctxt, s1ap_M4Configuration* pvalue);

EXTERN void asn1Print_s1ap_M4Configuration 
   (const char* name, const s1ap_M4Configuration* pvalue);

EXTERN int asn1PrtToStr_s1ap_M4Configuration (const char* name, 
   s1ap_M4Configuration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M4Configuration (OSCTXT *pctxt, 
   const char* name, const s1ap_M4Configuration* pvalue);

EXTERN void asn1Copy_s1ap_M4Configuration (OSCTXT* pctxt, 
   const s1ap_M4Configuration* pSrcValue, s1ap_M4Configuration* pDstValue);

EXTERN int asn1Init_s1ap_M4Configuration (s1ap_M4Configuration* pvalue);

EXTERN void asn1Free_s1ap_M4Configuration (OSCTXT *pctxt, 
   s1ap_M4Configuration* pvalue);

/**************************************************************/
/*                                                            */
/*  M5period                                                  */
/*                                                            */
/**************************************************************/
/*
M5period ::= ENUMERATED { ms1024(0), ms2048(1), ms5120(2), ms10240(3), min1(4), ... }
*/
typedef enum {
   s1ap_ms1024_3 = 0,
   s1ap_ms2048_3 = 1,
   s1ap_ms5120_3 = 2,
   s1ap_ms10240_3 = 3,
   s1ap_min1_2 = 4
} s1ap_M5period_Root;

typedef OSUINT32 s1ap_M5period;

EXTERN int asn1PE_s1ap_M5period (OSCTXT* pctxt, s1ap_M5period value);

EXTERN int asn1PD_s1ap_M5period (OSCTXT* pctxt, s1ap_M5period* pvalue);

EXTERN void asn1Print_s1ap_M5period (const char* name, const s1ap_M5period* pvalue);

EXTERN int asn1PrtToStr_s1ap_M5period (const char* name, s1ap_M5period* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M5period (OSCTXT *pctxt, 
   const char* name, const s1ap_M5period* pvalue);

EXTERN extern const OSEnumItem s1ap_M5period_ENUMTAB[];
#define s1ap_M5period_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* s1ap_M5period_ToString (OSINT32 value);

EXTERN int s1ap_M5period_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_M5period* pvalue);

EXTERN int s1ap_M5period_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_M5period* pvalue);

/**************************************************************/
/*                                                            */
/*  M5Configuration_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M5Configuration'
*/
typedef struct EXTERN s1ap_M5Configuration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_M5Configuration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_M5Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M5Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_M5Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M5Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_M5Configuration_iE_Extensions_element 
   (const char* name, const s1ap_M5Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_M5Configuration_iE_Extensions_element (const char* name, 
   s1ap_M5Configuration_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M5Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_M5Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_M5Configuration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_M5Configuration_iE_Extensions_element* pSrcValue, 
   s1ap_M5Configuration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_M5Configuration_iE_Extensions_element (
   s1ap_M5Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_M5Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_M5Configuration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  M5Configuration_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M5Configuration'
*/
/* List of s1ap_M5Configuration_iE_Extensions_element */
typedef OSRTDList s1ap_M5Configuration_iE_Extensions;

EXTERN int asn1PE_s1ap_M5Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M5Configuration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_M5Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M5Configuration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_M5Configuration_iE_Extensions 
   (const char* name, const s1ap_M5Configuration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_M5Configuration_iE_Extensions (const char* name, 
   s1ap_M5Configuration_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M5Configuration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_M5Configuration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_M5Configuration_iE_Extensions_element* 
   asn1Get_s1ap_M5Configuration_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_M5Configuration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_M5Configuration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_M5Configuration_iE_Extensions* pSrcValue, 
   s1ap_M5Configuration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_M5Configuration_iE_Extensions (
   s1ap_M5Configuration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_M5Configuration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_M5Configuration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  M5Configuration                                           */
/*                                                            */
/**************************************************************/
/*
M5Configuration ::= SEQUENCE {
   m5period [0] M5period,
   m5-links-to-log [1] Links-to-log,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({M5Configuration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({M5Configuration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({M5Configuration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_M5Configuration {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_M5period m5period;
   s1ap_Links_to_log m5_links_to_log;
   s1ap_M5Configuration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_M5Configuration;

EXTERN int asn1PE_s1ap_M5Configuration (OSCTXT* pctxt, s1ap_M5Configuration* pvalue);

EXTERN int asn1PD_s1ap_M5Configuration (OSCTXT* pctxt, s1ap_M5Configuration* pvalue);

EXTERN void asn1Print_s1ap_M5Configuration 
   (const char* name, const s1ap_M5Configuration* pvalue);

EXTERN int asn1PrtToStr_s1ap_M5Configuration (const char* name, 
   s1ap_M5Configuration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M5Configuration (OSCTXT *pctxt, 
   const char* name, const s1ap_M5Configuration* pvalue);

EXTERN void asn1Copy_s1ap_M5Configuration (OSCTXT* pctxt, 
   const s1ap_M5Configuration* pSrcValue, s1ap_M5Configuration* pDstValue);

EXTERN int asn1Init_s1ap_M5Configuration (s1ap_M5Configuration* pvalue);

EXTERN void asn1Free_s1ap_M5Configuration (OSCTXT *pctxt, 
   s1ap_M5Configuration* pvalue);

/**************************************************************/
/*                                                            */
/*  MDT_Location_Info                                         */
/*                                                            */
/**************************************************************/
/*
MDT-Location-Info ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 s1ap_MDT_Location_Info;

EXTERN int asn1PE_s1ap_MDT_Location_Info (OSCTXT* pctxt, s1ap_MDT_Location_Info value);

EXTERN int asn1PD_s1ap_MDT_Location_Info (OSCTXT* pctxt, s1ap_MDT_Location_Info* pvalue);

EXTERN void asn1Print_s1ap_MDT_Location_Info 
   (const char* name, const s1ap_MDT_Location_Info* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDT_Location_Info (const char* name, 
   s1ap_MDT_Location_Info* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDT_Location_Info (OSCTXT *pctxt, 
   const char* name, const s1ap_MDT_Location_Info* pvalue);

EXTERN void asn1Copy_s1ap_MDT_Location_Info (OSCTXT* pctxt, 
   const s1ap_MDT_Location_Info* pSrcValue, s1ap_MDT_Location_Info* pDstValue);

EXTERN int asn1Init_s1ap_MDT_Location_Info (s1ap_MDT_Location_Info* pvalue);

/**************************************************************/
/*                                                            */
/*  M6report_Interval                                         */
/*                                                            */
/**************************************************************/
/*
M6report-Interval ::= ENUMERATED { ms1024(0), ms2048(1), ms5120(2), ms10240(3), ... }
*/
typedef enum {
   s1ap_ms1024_4 = 0,
   s1ap_ms2048_4 = 1,
   s1ap_ms5120_4 = 2,
   s1ap_ms10240_4 = 3
} s1ap_M6report_Interval_Root;

typedef OSUINT32 s1ap_M6report_Interval;

EXTERN int asn1PE_s1ap_M6report_Interval (OSCTXT* pctxt, s1ap_M6report_Interval value);

EXTERN int asn1PD_s1ap_M6report_Interval (OSCTXT* pctxt, s1ap_M6report_Interval* pvalue);

EXTERN void asn1Print_s1ap_M6report_Interval 
   (const char* name, const s1ap_M6report_Interval* pvalue);

EXTERN int asn1PrtToStr_s1ap_M6report_Interval (const char* name, 
   s1ap_M6report_Interval* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M6report_Interval (OSCTXT *pctxt, 
   const char* name, const s1ap_M6report_Interval* pvalue);

EXTERN extern const OSEnumItem s1ap_M6report_Interval_ENUMTAB[];
#define s1ap_M6report_Interval_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* s1ap_M6report_Interval_ToString (OSINT32 value);

EXTERN int s1ap_M6report_Interval_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_M6report_Interval* pvalue);

EXTERN int s1ap_M6report_Interval_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_M6report_Interval* pvalue);

/**************************************************************/
/*                                                            */
/*  M6delay_threshold                                         */
/*                                                            */
/**************************************************************/
/*
M6delay-threshold ::= ENUMERATED { ms30(0), ms40(1), ms50(2), ms60(3), ms70(4), ms80(5), ms90(6), ms100(7), ms150(8), ms300(9), ms500(10), ms750(11), ... }
*/
typedef enum {
   s1ap_ms30 = 0,
   s1ap_ms40 = 1,
   s1ap_ms50 = 2,
   s1ap_ms60 = 3,
   s1ap_ms70 = 4,
   s1ap_ms80 = 5,
   s1ap_ms90 = 6,
   s1ap_ms100_1 = 7,
   s1ap_ms150 = 8,
   s1ap_ms300 = 9,
   s1ap_ms500 = 10,
   s1ap_ms750 = 11
} s1ap_M6delay_threshold_Root;

typedef OSUINT32 s1ap_M6delay_threshold;

EXTERN int asn1PE_s1ap_M6delay_threshold (OSCTXT* pctxt, s1ap_M6delay_threshold value);

EXTERN int asn1PD_s1ap_M6delay_threshold (OSCTXT* pctxt, s1ap_M6delay_threshold* pvalue);

EXTERN void asn1Print_s1ap_M6delay_threshold 
   (const char* name, const s1ap_M6delay_threshold* pvalue);

EXTERN int asn1PrtToStr_s1ap_M6delay_threshold (const char* name, 
   s1ap_M6delay_threshold* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M6delay_threshold (OSCTXT *pctxt, 
   const char* name, const s1ap_M6delay_threshold* pvalue);

EXTERN extern const OSEnumItem s1ap_M6delay_threshold_ENUMTAB[];
#define s1ap_M6delay_threshold_ENUMTABSIZE 12

EXTERN const OSUTF8CHAR* s1ap_M6delay_threshold_ToString (OSINT32 value);

EXTERN int s1ap_M6delay_threshold_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_M6delay_threshold* pvalue);

EXTERN int s1ap_M6delay_threshold_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_M6delay_threshold* pvalue);

/**************************************************************/
/*                                                            */
/*  M6Configuration_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M6Configuration'
*/
typedef struct EXTERN s1ap_M6Configuration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_M6Configuration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_M6Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M6Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_M6Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M6Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_M6Configuration_iE_Extensions_element 
   (const char* name, const s1ap_M6Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_M6Configuration_iE_Extensions_element (const char* name, 
   s1ap_M6Configuration_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M6Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_M6Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_M6Configuration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_M6Configuration_iE_Extensions_element* pSrcValue, 
   s1ap_M6Configuration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_M6Configuration_iE_Extensions_element (
   s1ap_M6Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_M6Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_M6Configuration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  M6Configuration_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M6Configuration'
*/
/* List of s1ap_M6Configuration_iE_Extensions_element */
typedef OSRTDList s1ap_M6Configuration_iE_Extensions;

EXTERN int asn1PE_s1ap_M6Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M6Configuration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_M6Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M6Configuration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_M6Configuration_iE_Extensions 
   (const char* name, const s1ap_M6Configuration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_M6Configuration_iE_Extensions (const char* name, 
   s1ap_M6Configuration_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M6Configuration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_M6Configuration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_M6Configuration_iE_Extensions_element* 
   asn1Get_s1ap_M6Configuration_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_M6Configuration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_M6Configuration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_M6Configuration_iE_Extensions* pSrcValue, 
   s1ap_M6Configuration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_M6Configuration_iE_Extensions (
   s1ap_M6Configuration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_M6Configuration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_M6Configuration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  M6Configuration                                           */
/*                                                            */
/**************************************************************/
/*
M6Configuration ::= SEQUENCE {
   m6report-Interval [0] M6report-Interval,
   m6delay-threshold [1] M6delay-threshold OPTIONAL,
--This IE shall be present if the M6 Links to log IE is set to uplink or to both-uplink-and-downlink 
   m6-links-to-log [2] Links-to-log,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({M6Configuration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({M6Configuration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({M6Configuration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_M6Configuration {
   struct {
      unsigned m6delay_thresholdPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_M6report_Interval m6report_Interval;
   s1ap_M6delay_threshold m6delay_threshold;
   s1ap_Links_to_log m6_links_to_log;
   s1ap_M6Configuration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_M6Configuration;

EXTERN int asn1PE_s1ap_M6Configuration (OSCTXT* pctxt, s1ap_M6Configuration* pvalue);

EXTERN int asn1PD_s1ap_M6Configuration (OSCTXT* pctxt, s1ap_M6Configuration* pvalue);

EXTERN void asn1Print_s1ap_M6Configuration 
   (const char* name, const s1ap_M6Configuration* pvalue);

EXTERN int asn1PrtToStr_s1ap_M6Configuration (const char* name, 
   s1ap_M6Configuration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M6Configuration (OSCTXT *pctxt, 
   const char* name, const s1ap_M6Configuration* pvalue);

EXTERN void asn1Copy_s1ap_M6Configuration (OSCTXT* pctxt, 
   const s1ap_M6Configuration* pSrcValue, s1ap_M6Configuration* pDstValue);

EXTERN int asn1Init_s1ap_M6Configuration (s1ap_M6Configuration* pvalue);

EXTERN void asn1Free_s1ap_M6Configuration (OSCTXT *pctxt, 
   s1ap_M6Configuration* pvalue);

/**************************************************************/
/*                                                            */
/*  M7period                                                  */
/*                                                            */
/**************************************************************/
/*
M7period ::= INTEGER (1..60, ...)
*/
typedef OSUINT32 s1ap_M7period;

EXTERN int asn1PE_s1ap_M7period (OSCTXT* pctxt, s1ap_M7period value);

EXTERN int asn1PD_s1ap_M7period (OSCTXT* pctxt, s1ap_M7period* pvalue);

EXTERN void asn1Print_s1ap_M7period (const char* name, const s1ap_M7period* pvalue);

EXTERN int asn1PrtToStr_s1ap_M7period (const char* name, s1ap_M7period* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M7period (OSCTXT *pctxt, 
   const char* name, const s1ap_M7period* pvalue);

/**************************************************************/
/*                                                            */
/*  M7Configuration_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M7Configuration'
*/
typedef struct EXTERN s1ap_M7Configuration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_M7Configuration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_M7Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M7Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_M7Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_M7Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_M7Configuration_iE_Extensions_element 
   (const char* name, const s1ap_M7Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_M7Configuration_iE_Extensions_element (const char* name, 
   s1ap_M7Configuration_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M7Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_M7Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_M7Configuration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_M7Configuration_iE_Extensions_element* pSrcValue, 
   s1ap_M7Configuration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_M7Configuration_iE_Extensions_element (
   s1ap_M7Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_M7Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_M7Configuration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  M7Configuration_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'M7Configuration'
*/
/* List of s1ap_M7Configuration_iE_Extensions_element */
typedef OSRTDList s1ap_M7Configuration_iE_Extensions;

EXTERN int asn1PE_s1ap_M7Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M7Configuration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_M7Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_M7Configuration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_M7Configuration_iE_Extensions 
   (const char* name, const s1ap_M7Configuration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_M7Configuration_iE_Extensions (const char* name, 
   s1ap_M7Configuration_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M7Configuration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_M7Configuration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_M7Configuration_iE_Extensions_element* 
   asn1Get_s1ap_M7Configuration_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_M7Configuration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_M7Configuration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_M7Configuration_iE_Extensions* pSrcValue, 
   s1ap_M7Configuration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_M7Configuration_iE_Extensions (
   s1ap_M7Configuration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_M7Configuration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_M7Configuration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  M7Configuration                                           */
/*                                                            */
/**************************************************************/
/*
M7Configuration ::= SEQUENCE {
   m7period [0] M7period,
   m7-links-to-log [1] Links-to-log,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({M7Configuration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({M7Configuration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({M7Configuration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_M7Configuration {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_M7period m7period;
   s1ap_Links_to_log m7_links_to_log;
   s1ap_M7Configuration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_M7Configuration;

EXTERN int asn1PE_s1ap_M7Configuration (OSCTXT* pctxt, s1ap_M7Configuration* pvalue);

EXTERN int asn1PD_s1ap_M7Configuration (OSCTXT* pctxt, s1ap_M7Configuration* pvalue);

EXTERN void asn1Print_s1ap_M7Configuration 
   (const char* name, const s1ap_M7Configuration* pvalue);

EXTERN int asn1PrtToStr_s1ap_M7Configuration (const char* name, 
   s1ap_M7Configuration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M7Configuration (OSCTXT *pctxt, 
   const char* name, const s1ap_M7Configuration* pvalue);

EXTERN void asn1Copy_s1ap_M7Configuration (OSCTXT* pctxt, 
   const s1ap_M7Configuration* pSrcValue, s1ap_M7Configuration* pDstValue);

EXTERN int asn1Init_s1ap_M7Configuration (s1ap_M7Configuration* pvalue);

EXTERN void asn1Free_s1ap_M7Configuration (OSCTXT *pctxt, 
   s1ap_M7Configuration* pvalue);

/**************************************************************/
/*                                                            */
/*  BluetoothMeasConfig                                       */
/*                                                            */
/**************************************************************/
/*
BluetoothMeasConfig ::= ENUMERATED { setup(0), ... }
*/
typedef enum {
   s1ap_setup = 0
} s1ap_BluetoothMeasConfig_Root;

typedef OSUINT32 s1ap_BluetoothMeasConfig;

EXTERN int asn1PE_s1ap_BluetoothMeasConfig (OSCTXT* pctxt, s1ap_BluetoothMeasConfig value);

EXTERN int asn1PD_s1ap_BluetoothMeasConfig (OSCTXT* pctxt, s1ap_BluetoothMeasConfig* pvalue);

EXTERN void asn1Print_s1ap_BluetoothMeasConfig 
   (const char* name, const s1ap_BluetoothMeasConfig* pvalue);

EXTERN int asn1PrtToStr_s1ap_BluetoothMeasConfig (const char* name, 
   s1ap_BluetoothMeasConfig* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BluetoothMeasConfig (OSCTXT *pctxt, 
   const char* name, const s1ap_BluetoothMeasConfig* pvalue);

EXTERN extern const OSEnumItem s1ap_BluetoothMeasConfig_ENUMTAB[];
#define s1ap_BluetoothMeasConfig_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_BluetoothMeasConfig_ToString (OSINT32 value);

EXTERN int s1ap_BluetoothMeasConfig_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_BluetoothMeasConfig* pvalue);

EXTERN int s1ap_BluetoothMeasConfig_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_BluetoothMeasConfig* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  BluetoothName                                             */
/*                                                            */
/**************************************************************/
/*
BluetoothName ::= OCTET STRING (SIZE (1..248))
*/
typedef struct EXTERN s1ap_BluetoothName {
   OSUINT32 numocts;
   OSOCTET data[248];
} s1ap_BluetoothName;

EXTERN int asn1PE_s1ap_BluetoothName (OSCTXT* pctxt, s1ap_BluetoothName* pvalue);

EXTERN int asn1PD_s1ap_BluetoothName (OSCTXT* pctxt, s1ap_BluetoothName* pvalue);

EXTERN void asn1Print_s1ap_BluetoothName 
   (const char* name, const s1ap_BluetoothName* pvalue);

EXTERN int asn1PrtToStr_s1ap_BluetoothName (const char* name, 
   s1ap_BluetoothName* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BluetoothName (OSCTXT *pctxt, 
   const char* name, const s1ap_BluetoothName* pvalue);

EXTERN void asn1Copy_s1ap_BluetoothName (OSCTXT* pctxt, 
   const s1ap_BluetoothName* pSrcValue, s1ap_BluetoothName* pDstValue);

EXTERN int asn1Init_s1ap_BluetoothName (s1ap_BluetoothName* pvalue);

/**************************************************************/
/*                                                            */
/*  BluetoothMeasConfigNameList                               */
/*                                                            */
/**************************************************************/
/*
BluetoothMeasConfigNameList ::= SEQUENCE (SIZE (1..maxnoofBluetoothName)) OF BluetoothName
*/
typedef struct EXTERN s1ap_BluetoothMeasConfigNameList {
   OSSIZE n;
   s1ap_BluetoothName elem[4];
} s1ap_BluetoothMeasConfigNameList;

EXTERN int asn1PE_s1ap_BluetoothMeasConfigNameList (OSCTXT* pctxt, s1ap_BluetoothMeasConfigNameList* pvalue);

EXTERN int asn1PD_s1ap_BluetoothMeasConfigNameList (OSCTXT* pctxt, s1ap_BluetoothMeasConfigNameList* pvalue);

EXTERN void asn1Print_s1ap_BluetoothMeasConfigNameList 
   (const char* name, const s1ap_BluetoothMeasConfigNameList* pvalue);

EXTERN int asn1PrtToStr_s1ap_BluetoothMeasConfigNameList (const char* name, 
   s1ap_BluetoothMeasConfigNameList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BluetoothMeasConfigNameList (OSCTXT *pctxt, 
   const char* name, const s1ap_BluetoothMeasConfigNameList* pvalue);

EXTERN void asn1Copy_s1ap_BluetoothMeasConfigNameList (OSCTXT* pctxt, 
   const s1ap_BluetoothMeasConfigNameList* pSrcValue, 
   s1ap_BluetoothMeasConfigNameList* pDstValue);

EXTERN int asn1Init_s1ap_BluetoothMeasConfigNameList (
   s1ap_BluetoothMeasConfigNameList* pvalue);

/**************************************************************/
/*                                                            */
/*  BluetoothMeasurementConfiguration_bt_rssi                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'BluetoothMeasurementConfiguration'
*/
typedef enum {
   s1ap_true_ = 0
} s1ap_BluetoothMeasurementConfiguration_bt_rssi_Root;

typedef OSUINT32 s1ap_BluetoothMeasurementConfiguration_bt_rssi;

EXTERN int asn1PE_s1ap_BluetoothMeasurementConfiguration_bt_rssi (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration_bt_rssi value);

EXTERN int asn1PD_s1ap_BluetoothMeasurementConfiguration_bt_rssi (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration_bt_rssi* pvalue);

EXTERN void asn1Print_s1ap_BluetoothMeasurementConfiguration_bt_rssi 
   (const char* name, const s1ap_BluetoothMeasurementConfiguration_bt_rssi* pvalue);

EXTERN int asn1PrtToStr_s1ap_BluetoothMeasurementConfiguration_bt_rssi (
   const char* name, s1ap_BluetoothMeasurementConfiguration_bt_rssi* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BluetoothMeasurementConfiguration_bt_rssi (OSCTXT *pctxt, 
   const char* name, const s1ap_BluetoothMeasurementConfiguration_bt_rssi* pvalue);

EXTERN extern const OSEnumItem s1ap_BluetoothMeasurementConfiguration_bt_rssi_ENUMTAB[];
#define s1ap_BluetoothMeasurementConfiguration_bt_rssi_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_BluetoothMeasurementConfiguration_bt_rssi_ToString (OSINT32 value);

EXTERN 
   int s1ap_BluetoothMeasurementConfiguration_bt_rssi_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_BluetoothMeasurementConfiguration_bt_rssi* pvalue);

EXTERN 
   int s1ap_BluetoothMeasurementConfiguration_bt_rssi_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_BluetoothMeasurementConfiguration_bt_rssi* pvalue);

/**************************************************************/
/*                                                            */
/*  BluetoothMeasurementConfiguration_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'BluetoothMeasurementConfiguration'
*/
typedef struct EXTERN s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element 
   (const char* name, const s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element (
   const char* name, 
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pSrcValue, 
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element (
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  BluetoothMeasurementConfiguration_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'BluetoothMeasurementConfiguration'
*/
/* List of s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element */
typedef OSRTDList s1ap_BluetoothMeasurementConfiguration_iE_Extensions;

EXTERN int asn1PE_s1ap_BluetoothMeasurementConfiguration_iE_Extensions (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_BluetoothMeasurementConfiguration_iE_Extensions (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_BluetoothMeasurementConfiguration_iE_Extensions 
   (const char* name, const s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_BluetoothMeasurementConfiguration_iE_Extensions (
   const char* name, 
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BluetoothMeasurementConfiguration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_BluetoothMeasurementConfiguration_iE_Extensions_element* 
   asn1Get_s1ap_BluetoothMeasurementConfiguration_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_BluetoothMeasurementConfiguration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pSrcValue, 
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_BluetoothMeasurementConfiguration_iE_Extensions (
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_BluetoothMeasurementConfiguration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  BluetoothMeasurementConfiguration                         */
/*                                                            */
/**************************************************************/
/*
BluetoothMeasurementConfiguration ::= SEQUENCE {
   bluetoothMeasConfig [0] BluetoothMeasConfig,
   bluetoothMeasConfigNameList [1] BluetoothMeasConfigNameList OPTIONAL,
   bt-rssi [2] ENUMERATED { true(0), ... } OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({BluetoothMeasurementConfiguration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({BluetoothMeasurementConfiguration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({BluetoothMeasurementConfiguration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_BluetoothMeasurementConfiguration {
   struct {
      unsigned bluetoothMeasConfigNameListPresent : 1;
      unsigned bt_rssiPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_BluetoothMeasConfig bluetoothMeasConfig;
   s1ap_BluetoothMeasConfigNameList bluetoothMeasConfigNameList;
   s1ap_BluetoothMeasurementConfiguration_bt_rssi bt_rssi;
   s1ap_BluetoothMeasurementConfiguration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_BluetoothMeasurementConfiguration;

EXTERN int asn1PE_s1ap_BluetoothMeasurementConfiguration (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration* pvalue);

EXTERN int asn1PD_s1ap_BluetoothMeasurementConfiguration (OSCTXT* pctxt, s1ap_BluetoothMeasurementConfiguration* pvalue);

EXTERN void asn1Print_s1ap_BluetoothMeasurementConfiguration 
   (const char* name, const s1ap_BluetoothMeasurementConfiguration* pvalue);

EXTERN int asn1PrtToStr_s1ap_BluetoothMeasurementConfiguration (const char* name, 
   s1ap_BluetoothMeasurementConfiguration* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BluetoothMeasurementConfiguration (OSCTXT *pctxt, 
   const char* name, const s1ap_BluetoothMeasurementConfiguration* pvalue);

EXTERN void asn1Copy_s1ap_BluetoothMeasurementConfiguration (OSCTXT* pctxt, 
   const s1ap_BluetoothMeasurementConfiguration* pSrcValue, 
   s1ap_BluetoothMeasurementConfiguration* pDstValue);

EXTERN int asn1Init_s1ap_BluetoothMeasurementConfiguration (
   s1ap_BluetoothMeasurementConfiguration* pvalue);

EXTERN void asn1Free_s1ap_BluetoothMeasurementConfiguration (OSCTXT *pctxt, 
   s1ap_BluetoothMeasurementConfiguration* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANMeasConfig                                            */
/*                                                            */
/**************************************************************/
/*
WLANMeasConfig ::= ENUMERATED { setup(0), ... }
*/
typedef enum {
   s1ap_setup_1 = 0
} s1ap_WLANMeasConfig_Root;

typedef OSUINT32 s1ap_WLANMeasConfig;

EXTERN int asn1PE_s1ap_WLANMeasConfig (OSCTXT* pctxt, s1ap_WLANMeasConfig value);

EXTERN int asn1PD_s1ap_WLANMeasConfig (OSCTXT* pctxt, s1ap_WLANMeasConfig* pvalue);

EXTERN void asn1Print_s1ap_WLANMeasConfig 
   (const char* name, const s1ap_WLANMeasConfig* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANMeasConfig (const char* name, 
   s1ap_WLANMeasConfig* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANMeasConfig (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANMeasConfig* pvalue);

EXTERN extern const OSEnumItem s1ap_WLANMeasConfig_ENUMTAB[];
#define s1ap_WLANMeasConfig_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_WLANMeasConfig_ToString (OSINT32 value);

EXTERN int s1ap_WLANMeasConfig_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_WLANMeasConfig* pvalue);

EXTERN int s1ap_WLANMeasConfig_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_WLANMeasConfig* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANName                                                  */
/*                                                            */
/**************************************************************/
/*
WLANName ::= OCTET STRING (SIZE (1..32))
*/
typedef struct EXTERN s1ap_WLANName {
   OSUINT32 numocts;
   OSOCTET data[32];
} s1ap_WLANName;

EXTERN int asn1PE_s1ap_WLANName (OSCTXT* pctxt, s1ap_WLANName* pvalue);

EXTERN int asn1PD_s1ap_WLANName (OSCTXT* pctxt, s1ap_WLANName* pvalue);

EXTERN void asn1Print_s1ap_WLANName (const char* name, const s1ap_WLANName* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANName (const char* name, s1ap_WLANName* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANName (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANName* pvalue);

EXTERN void asn1Copy_s1ap_WLANName (OSCTXT* pctxt, const s1ap_WLANName* pSrcValue, 
   s1ap_WLANName* pDstValue);

EXTERN int asn1Init_s1ap_WLANName (s1ap_WLANName* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANMeasConfigNameList                                    */
/*                                                            */
/**************************************************************/
/*
WLANMeasConfigNameList ::= SEQUENCE (SIZE (1..maxnoofWLANName)) OF WLANName
*/
typedef struct EXTERN s1ap_WLANMeasConfigNameList {
   OSSIZE n;
   s1ap_WLANName elem[4];
} s1ap_WLANMeasConfigNameList;

EXTERN int asn1PE_s1ap_WLANMeasConfigNameList (OSCTXT* pctxt, s1ap_WLANMeasConfigNameList* pvalue);

EXTERN int asn1PD_s1ap_WLANMeasConfigNameList (OSCTXT* pctxt, s1ap_WLANMeasConfigNameList* pvalue);

EXTERN void asn1Print_s1ap_WLANMeasConfigNameList 
   (const char* name, const s1ap_WLANMeasConfigNameList* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANMeasConfigNameList (const char* name, 
   s1ap_WLANMeasConfigNameList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANMeasConfigNameList (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANMeasConfigNameList* pvalue);

EXTERN void asn1Copy_s1ap_WLANMeasConfigNameList (OSCTXT* pctxt, 
   const s1ap_WLANMeasConfigNameList* pSrcValue, s1ap_WLANMeasConfigNameList*
    pDstValue);

EXTERN int asn1Init_s1ap_WLANMeasConfigNameList (s1ap_WLANMeasConfigNameList* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANMeasurementConfiguration_wlan_rssi                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WLANMeasurementConfiguration'
*/
typedef enum {
   s1ap_true__9 = 0
} s1ap_WLANMeasurementConfiguration_wlan_rssi_Root;

typedef OSUINT32 s1ap_WLANMeasurementConfiguration_wlan_rssi;

EXTERN int asn1PE_s1ap_WLANMeasurementConfiguration_wlan_rssi (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_wlan_rssi value);

EXTERN int asn1PD_s1ap_WLANMeasurementConfiguration_wlan_rssi (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_wlan_rssi* pvalue);

EXTERN void asn1Print_s1ap_WLANMeasurementConfiguration_wlan_rssi 
   (const char* name, const s1ap_WLANMeasurementConfiguration_wlan_rssi* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANMeasurementConfiguration_wlan_rssi (
   const char* name, s1ap_WLANMeasurementConfiguration_wlan_rssi* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANMeasurementConfiguration_wlan_rssi (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANMeasurementConfiguration_wlan_rssi* pvalue);

EXTERN extern const OSEnumItem s1ap_WLANMeasurementConfiguration_wlan_rssi_ENUMTAB[];
#define s1ap_WLANMeasurementConfiguration_wlan_rssi_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_WLANMeasurementConfiguration_wlan_rssi_ToString (OSINT32 value);

EXTERN int s1ap_WLANMeasurementConfiguration_wlan_rssi_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_WLANMeasurementConfiguration_wlan_rssi* pvalue);

EXTERN int s1ap_WLANMeasurementConfiguration_wlan_rssi_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_WLANMeasurementConfiguration_wlan_rssi* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANMeasurementConfiguration_wlan_rtt                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WLANMeasurementConfiguration'
*/
typedef enum {
   s1ap_true__10 = 0
} s1ap_WLANMeasurementConfiguration_wlan_rtt_Root;

typedef OSUINT32 s1ap_WLANMeasurementConfiguration_wlan_rtt;

EXTERN int asn1PE_s1ap_WLANMeasurementConfiguration_wlan_rtt (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_wlan_rtt value);

EXTERN int asn1PD_s1ap_WLANMeasurementConfiguration_wlan_rtt (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_wlan_rtt* pvalue);

EXTERN void asn1Print_s1ap_WLANMeasurementConfiguration_wlan_rtt 
   (const char* name, const s1ap_WLANMeasurementConfiguration_wlan_rtt* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANMeasurementConfiguration_wlan_rtt (const char* name, 
   s1ap_WLANMeasurementConfiguration_wlan_rtt* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANMeasurementConfiguration_wlan_rtt (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANMeasurementConfiguration_wlan_rtt* pvalue);

EXTERN extern const OSEnumItem s1ap_WLANMeasurementConfiguration_wlan_rtt_ENUMTAB[];
#define s1ap_WLANMeasurementConfiguration_wlan_rtt_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_WLANMeasurementConfiguration_wlan_rtt_ToString (OSINT32 value);

EXTERN int s1ap_WLANMeasurementConfiguration_wlan_rtt_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_WLANMeasurementConfiguration_wlan_rtt* pvalue)
      ;

EXTERN int s1ap_WLANMeasurementConfiguration_wlan_rtt_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_WLANMeasurementConfiguration_wlan_rtt* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANMeasurementConfiguration_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WLANMeasurementConfiguration'
*/
typedef struct EXTERN s1ap_WLANMeasurementConfiguration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_WLANMeasurementConfiguration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_WLANMeasurementConfiguration_iE_Extensions_element (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_WLANMeasurementConfiguration_iE_Extensions_element (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_WLANMeasurementConfiguration_iE_Extensions_element 
   (const char* name, const s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANMeasurementConfiguration_iE_Extensions_element (
   const char* name, 
   s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANMeasurementConfiguration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_WLANMeasurementConfiguration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pSrcValue, 
   s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_WLANMeasurementConfiguration_iE_Extensions_element (
   s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_WLANMeasurementConfiguration_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_WLANMeasurementConfiguration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANMeasurementConfiguration_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WLANMeasurementConfiguration'
*/
/* List of s1ap_WLANMeasurementConfiguration_iE_Extensions_element */
typedef OSRTDList s1ap_WLANMeasurementConfiguration_iE_Extensions;

EXTERN int asn1PE_s1ap_WLANMeasurementConfiguration_iE_Extensions (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_WLANMeasurementConfiguration_iE_Extensions (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_WLANMeasurementConfiguration_iE_Extensions 
   (const char* name, const s1ap_WLANMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANMeasurementConfiguration_iE_Extensions (
   const char* name, s1ap_WLANMeasurementConfiguration_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANMeasurementConfiguration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANMeasurementConfiguration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_WLANMeasurementConfiguration_iE_Extensions_element* 
   asn1Get_s1ap_WLANMeasurementConfiguration_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_WLANMeasurementConfiguration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_WLANMeasurementConfiguration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_WLANMeasurementConfiguration_iE_Extensions* pSrcValue, 
   s1ap_WLANMeasurementConfiguration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_WLANMeasurementConfiguration_iE_Extensions (
   s1ap_WLANMeasurementConfiguration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_WLANMeasurementConfiguration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_WLANMeasurementConfiguration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANMeasurementConfiguration                              */
/*                                                            */
/**************************************************************/
/*
WLANMeasurementConfiguration ::= SEQUENCE {
   wlanMeasConfig [0] WLANMeasConfig,
   wlanMeasConfigNameList [1] WLANMeasConfigNameList OPTIONAL,
   wlan-rssi [2] ENUMERATED { true(0), ... } OPTIONAL,
   wlan-rtt [3] ENUMERATED { true(0), ... } OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({WLANMeasurementConfiguration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({WLANMeasurementConfiguration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({WLANMeasurementConfiguration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_WLANMeasurementConfiguration {
   struct {
      unsigned wlanMeasConfigNameListPresent : 1;
      unsigned wlan_rssiPresent : 1;
      unsigned wlan_rttPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_WLANMeasConfig wlanMeasConfig;
   s1ap_WLANMeasConfigNameList wlanMeasConfigNameList;
   s1ap_WLANMeasurementConfiguration_wlan_rssi wlan_rssi;
   s1ap_WLANMeasurementConfiguration_wlan_rtt wlan_rtt;
   s1ap_WLANMeasurementConfiguration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_WLANMeasurementConfiguration;

EXTERN int asn1PE_s1ap_WLANMeasurementConfiguration (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration* pvalue);

EXTERN int asn1PD_s1ap_WLANMeasurementConfiguration (OSCTXT* pctxt, s1ap_WLANMeasurementConfiguration* pvalue);

EXTERN void asn1Print_s1ap_WLANMeasurementConfiguration 
   (const char* name, const s1ap_WLANMeasurementConfiguration* pvalue);

EXTERN int asn1PrtToStr_s1ap_WLANMeasurementConfiguration (const char* name, 
   s1ap_WLANMeasurementConfiguration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WLANMeasurementConfiguration (OSCTXT *pctxt, 
   const char* name, const s1ap_WLANMeasurementConfiguration* pvalue);

EXTERN void asn1Copy_s1ap_WLANMeasurementConfiguration (OSCTXT* pctxt, 
   const s1ap_WLANMeasurementConfiguration* pSrcValue, 
   s1ap_WLANMeasurementConfiguration* pDstValue);

EXTERN int asn1Init_s1ap_WLANMeasurementConfiguration (
   s1ap_WLANMeasurementConfiguration* pvalue);

EXTERN void asn1Free_s1ap_WLANMeasurementConfiguration (OSCTXT *pctxt, 
   s1ap_WLANMeasurementConfiguration* pvalue);

/**************************************************************/
/*                                                            */
/*  ImmediateMDT_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ImmediateMDT'
*/
typedef struct EXTERN s1ap_ImmediateMDT_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ImmediateMDT_ExtIEs_TVALUE t;

      /**
       * ImmediateMDT-ExtIEs information objects
       */
      union {
         /**
          * id: id-M3Configuration
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_M3Configuration *_ImmediateMDT_ExtIEs_1;
         /**
          * id: id-M4Configuration
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_M4Configuration *_ImmediateMDT_ExtIEs_2;
         /**
          * id: id-M5Configuration
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_M5Configuration *_ImmediateMDT_ExtIEs_3;
         /**
          * id: id-MDT-Location-Info
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MDT_Location_Info *_ImmediateMDT_ExtIEs_4;
         /**
          * id: id-M6Configuration
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_M6Configuration *_ImmediateMDT_ExtIEs_5;
         /**
          * id: id-M7Configuration
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_M7Configuration *_ImmediateMDT_ExtIEs_6;
         /**
          * id: id-BluetoothMeasurementConfiguration
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_BluetoothMeasurementConfiguration *_ImmediateMDT_ExtIEs_7;
         /**
          * id: id-WLANMeasurementConfiguration
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WLANMeasurementConfiguration *_ImmediateMDT_ExtIEs_8;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_ImmediateMDT_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ImmediateMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ImmediateMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ImmediateMDT_iE_Extensions_element 
   (const char* name, const s1ap_ImmediateMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ImmediateMDT_iE_Extensions_element (const char* name, 
   s1ap_ImmediateMDT_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ImmediateMDT_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ImmediateMDT_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_1
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_M3Configuration *pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_2
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_M4Configuration *pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_3
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_M5Configuration *pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_4
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_MDT_Location_Info *pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_5
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_M6Configuration *pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_6
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_M7Configuration *pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_7
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_BluetoothMeasurementConfiguration *pvalue);

EXTERN void asn1SetTC_s1ap_ImmediateMDT_iE_Extensions_element_ImmediateMDT_ExtIEs_8
   (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions_element* pElem, 
   s1ap_WLANMeasurementConfiguration *pvalue);

EXTERN void asn1Copy_s1ap_ImmediateMDT_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ImmediateMDT_iE_Extensions_element* pSrcValue, 
   s1ap_ImmediateMDT_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ImmediateMDT_iE_Extensions_element (
   s1ap_ImmediateMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ImmediateMDT_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ImmediateMDT_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ImmediateMDT_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ImmediateMDT'
*/
/* List of s1ap_ImmediateMDT_iE_Extensions_element */
typedef OSRTDList s1ap_ImmediateMDT_iE_Extensions;

EXTERN int asn1PE_s1ap_ImmediateMDT_iE_Extensions (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ImmediateMDT_iE_Extensions (OSCTXT* pctxt, s1ap_ImmediateMDT_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ImmediateMDT_iE_Extensions 
   (const char* name, const s1ap_ImmediateMDT_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ImmediateMDT_iE_Extensions (const char* name, 
   s1ap_ImmediateMDT_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ImmediateMDT_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ImmediateMDT_iE_Extensions* pvalue);

/* Append IE with value type s1ap_M3Configuration to list */
struct s1ap_M3Configuration ;
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_1   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, struct s1ap_M3Configuration *pvalue)
   ;

/* Append IE with value type s1ap_M4Configuration to list */
struct s1ap_M4Configuration ;
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_2   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, struct s1ap_M4Configuration *pvalue)
   ;

/* Append IE with value type s1ap_M5Configuration to list */
struct s1ap_M5Configuration ;
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_3   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, struct s1ap_M5Configuration *pvalue)
   ;

/* Append IE with value type s1ap_MDT_Location_Info to list */
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_4   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, s1ap_MDT_Location_Info *pvalue);

/* Append IE with value type s1ap_M6Configuration to list */
struct s1ap_M6Configuration ;
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_5   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, struct s1ap_M6Configuration *pvalue)
   ;

/* Append IE with value type s1ap_M7Configuration to list */
struct s1ap_M7Configuration ;
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_6   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, struct s1ap_M7Configuration *pvalue)
   ;

/* Append IE with value type s1ap_BluetoothMeasurementConfiguration to list */
struct s1ap_BluetoothMeasurementConfiguration ;
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_7   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, struct 
   s1ap_BluetoothMeasurementConfiguration *pvalue);

/* Append IE with value type s1ap_WLANMeasurementConfiguration to list */
struct s1ap_WLANMeasurementConfiguration ;
EXTERN int asn1Append_s1ap_ImmediateMDT_iE_Extensions_8   (OSCTXT* pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* plist, struct 
   s1ap_WLANMeasurementConfiguration *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ImmediateMDT_iE_Extensions_element* 
   asn1Get_s1ap_ImmediateMDT_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ImmediateMDT_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ImmediateMDT_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ImmediateMDT_iE_Extensions* pSrcValue, 
   s1ap_ImmediateMDT_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ImmediateMDT_iE_Extensions (
   s1ap_ImmediateMDT_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ImmediateMDT_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ImmediateMDT_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ImmediateMDT                                              */
/*                                                            */
/**************************************************************/
/*
ImmediateMDT ::= SEQUENCE {
   measurementsToActivate [0] MeasurementsToActivate,
   m1reportingTrigger [1] M1ReportingTrigger,
   m1thresholdeventA2 [2] M1ThresholdEventA2 OPTIONAL,
--Included in case of event-triggered, or event-triggered periodic reporting for measurement M1
   m1periodicReporting [3] M1PeriodicReporting OPTIONAL,
--Included in case of periodic or event-triggered periodic reporting
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ImmediateMDT-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ImmediateMDT-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ImmediateMDT-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ImmediateMDT {
   struct {
      unsigned m1thresholdeventA2Present : 1;
      unsigned m1periodicReportingPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MeasurementsToActivate measurementsToActivate;
   s1ap_M1ReportingTrigger m1reportingTrigger;
   s1ap_M1ThresholdEventA2 m1thresholdeventA2;
   s1ap_M1PeriodicReporting m1periodicReporting;
   s1ap_ImmediateMDT_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ImmediateMDT;

EXTERN int asn1PE_s1ap_ImmediateMDT (OSCTXT* pctxt, s1ap_ImmediateMDT* pvalue);

EXTERN int asn1PD_s1ap_ImmediateMDT (OSCTXT* pctxt, s1ap_ImmediateMDT* pvalue);

EXTERN void asn1Print_s1ap_ImmediateMDT 
   (const char* name, const s1ap_ImmediateMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_ImmediateMDT (const char* name, 
   s1ap_ImmediateMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ImmediateMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_ImmediateMDT* pvalue);

EXTERN void asn1Copy_s1ap_ImmediateMDT (OSCTXT* pctxt, 
   const s1ap_ImmediateMDT* pSrcValue, s1ap_ImmediateMDT* pDstValue);

EXTERN int asn1Init_s1ap_ImmediateMDT (s1ap_ImmediateMDT* pvalue);

EXTERN void asn1Free_s1ap_ImmediateMDT (OSCTXT *pctxt, s1ap_ImmediateMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggingInterval                                           */
/*                                                            */
/**************************************************************/
/*
LoggingInterval ::= ENUMERATED { ms128(0), ms256(1), ms512(2), ms1024(3), ms2048(4), ms3072(5), ms4096(6), ms6144(7) }
*/
typedef enum {
   s1ap_ms128 = 0,
   s1ap_ms256 = 1,
   s1ap_ms512 = 2,
   s1ap_ms1024 = 3,
   s1ap_ms2048 = 4,
   s1ap_ms3072 = 5,
   s1ap_ms4096 = 6,
   s1ap_ms6144 = 7
} s1ap_LoggingInterval_Root;

typedef OSUINT32 s1ap_LoggingInterval;

EXTERN int asn1PE_s1ap_LoggingInterval (OSCTXT* pctxt, s1ap_LoggingInterval value);

EXTERN int asn1PD_s1ap_LoggingInterval (OSCTXT* pctxt, s1ap_LoggingInterval* pvalue);

EXTERN void asn1Print_s1ap_LoggingInterval 
   (const char* name, const s1ap_LoggingInterval* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggingInterval (const char* name, 
   s1ap_LoggingInterval* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggingInterval (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggingInterval* pvalue);

EXTERN extern const OSEnumItem s1ap_LoggingInterval_ENUMTAB[];
#define s1ap_LoggingInterval_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* s1ap_LoggingInterval_ToString (OSINT32 value);

EXTERN int s1ap_LoggingInterval_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_LoggingInterval* pvalue);

EXTERN int s1ap_LoggingInterval_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_LoggingInterval* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggingDuration                                           */
/*                                                            */
/**************************************************************/
/*
LoggingDuration ::= ENUMERATED { m10(0), m20(1), m40(2), m60(3), m90(4), m120(5) }
*/
typedef enum {
   s1ap_m10 = 0,
   s1ap_m20 = 1,
   s1ap_m40 = 2,
   s1ap_m60 = 3,
   s1ap_m90 = 4,
   s1ap_m120 = 5
} s1ap_LoggingDuration_Root;

typedef OSUINT32 s1ap_LoggingDuration;

EXTERN int asn1PE_s1ap_LoggingDuration (OSCTXT* pctxt, s1ap_LoggingDuration value);

EXTERN int asn1PD_s1ap_LoggingDuration (OSCTXT* pctxt, s1ap_LoggingDuration* pvalue);

EXTERN void asn1Print_s1ap_LoggingDuration 
   (const char* name, const s1ap_LoggingDuration* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggingDuration (const char* name, 
   s1ap_LoggingDuration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggingDuration (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggingDuration* pvalue);

EXTERN extern const OSEnumItem s1ap_LoggingDuration_ENUMTAB[];
#define s1ap_LoggingDuration_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* s1ap_LoggingDuration_ToString (OSINT32 value);

EXTERN int s1ap_LoggingDuration_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_LoggingDuration* pvalue);

EXTERN int s1ap_LoggingDuration_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_LoggingDuration* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggedMDT_iE_Extensions_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LoggedMDT'
*/
typedef struct EXTERN s1ap_LoggedMDT_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      LoggedMDT_ExtIEs_TVALUE t;

      /**
       * LoggedMDT-ExtIEs information objects
       */
      union {
         /**
          * id: id-BluetoothMeasurementConfiguration
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_BluetoothMeasurementConfiguration *_LoggedMDT_ExtIEs_1;
         /**
          * id: id-WLANMeasurementConfiguration
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WLANMeasurementConfiguration *_LoggedMDT_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_LoggedMDT_iE_Extensions_element;

EXTERN int asn1PE_s1ap_LoggedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_LoggedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_LoggedMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_LoggedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_LoggedMDT_iE_Extensions_element 
   (const char* name, const s1ap_LoggedMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggedMDT_iE_Extensions_element (const char* name, 
   s1ap_LoggedMDT_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_LoggedMDT_iE_Extensions_element_LoggedMDT_ExtIEs_1
   (OSCTXT* pctxt, s1ap_LoggedMDT_iE_Extensions_element* pElem, 
   s1ap_BluetoothMeasurementConfiguration *pvalue);

EXTERN void asn1SetTC_s1ap_LoggedMDT_iE_Extensions_element_LoggedMDT_ExtIEs_2
   (OSCTXT* pctxt, s1ap_LoggedMDT_iE_Extensions_element* pElem, 
   s1ap_WLANMeasurementConfiguration *pvalue);

EXTERN void asn1Copy_s1ap_LoggedMDT_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_LoggedMDT_iE_Extensions_element* pSrcValue, 
   s1ap_LoggedMDT_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_LoggedMDT_iE_Extensions_element (
   s1ap_LoggedMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_LoggedMDT_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_LoggedMDT_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggedMDT_iE_Extensions                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LoggedMDT'
*/
/* List of s1ap_LoggedMDT_iE_Extensions_element */
typedef OSRTDList s1ap_LoggedMDT_iE_Extensions;

EXTERN int asn1PE_s1ap_LoggedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_LoggedMDT_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_LoggedMDT_iE_Extensions (OSCTXT* pctxt, s1ap_LoggedMDT_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_LoggedMDT_iE_Extensions 
   (const char* name, const s1ap_LoggedMDT_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggedMDT_iE_Extensions (const char* name, 
   s1ap_LoggedMDT_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggedMDT_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggedMDT_iE_Extensions* pvalue);

/* Append IE with value type s1ap_BluetoothMeasurementConfiguration to list */
struct s1ap_BluetoothMeasurementConfiguration ;
EXTERN int asn1Append_s1ap_LoggedMDT_iE_Extensions_1   (OSCTXT* pctxt, 
   s1ap_LoggedMDT_iE_Extensions* plist, struct 
   s1ap_BluetoothMeasurementConfiguration *pvalue);

/* Append IE with value type s1ap_WLANMeasurementConfiguration to list */
struct s1ap_WLANMeasurementConfiguration ;
EXTERN int asn1Append_s1ap_LoggedMDT_iE_Extensions_2   (OSCTXT* pctxt, 
   s1ap_LoggedMDT_iE_Extensions* plist, struct 
   s1ap_WLANMeasurementConfiguration *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_LoggedMDT_iE_Extensions_element* 
   asn1Get_s1ap_LoggedMDT_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_LoggedMDT_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_LoggedMDT_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_LoggedMDT_iE_Extensions* pSrcValue, s1ap_LoggedMDT_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_LoggedMDT_iE_Extensions (
   s1ap_LoggedMDT_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_LoggedMDT_iE_Extensions (OSCTXT *pctxt, 
   s1ap_LoggedMDT_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggedMDT                                                 */
/*                                                            */
/**************************************************************/
/*
LoggedMDT ::= SEQUENCE {
   loggingInterval [0] LoggingInterval,
   loggingDuration [1] LoggingDuration,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({LoggedMDT-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({LoggedMDT-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({LoggedMDT-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_LoggedMDT {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_LoggingInterval loggingInterval;
   s1ap_LoggingDuration loggingDuration;
   s1ap_LoggedMDT_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_LoggedMDT;

EXTERN int asn1PE_s1ap_LoggedMDT (OSCTXT* pctxt, s1ap_LoggedMDT* pvalue);

EXTERN int asn1PD_s1ap_LoggedMDT (OSCTXT* pctxt, s1ap_LoggedMDT* pvalue);

EXTERN void asn1Print_s1ap_LoggedMDT (const char* name, const s1ap_LoggedMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggedMDT (const char* name, s1ap_LoggedMDT* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggedMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggedMDT* pvalue);

EXTERN void asn1Copy_s1ap_LoggedMDT (OSCTXT* pctxt, const s1ap_LoggedMDT* pSrcValue, 
   s1ap_LoggedMDT* pDstValue);

EXTERN int asn1Init_s1ap_LoggedMDT (s1ap_LoggedMDT* pvalue);

EXTERN void asn1Free_s1ap_LoggedMDT (OSCTXT *pctxt, s1ap_LoggedMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  EARFCN                                                    */
/*                                                            */
/**************************************************************/
/*
 E
EARFCN ::= INTEGER (0..maxEARFCN, ...)
*/
typedef OSUINT32 s1ap_EARFCN;

EXTERN int asn1PE_s1ap_EARFCN (OSCTXT* pctxt, s1ap_EARFCN value);

EXTERN int asn1PD_s1ap_EARFCN (OSCTXT* pctxt, s1ap_EARFCN* pvalue);

EXTERN void asn1Print_s1ap_EARFCN (const char* name, const s1ap_EARFCN* pvalue);

EXTERN int asn1PrtToStr_s1ap_EARFCN (const char* name, s1ap_EARFCN* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EARFCN (OSCTXT *pctxt, 
   const char* name, const s1ap_EARFCN* pvalue);

/**************************************************************/
/*                                                            */
/*  MBSFN_ResultToLogInfo_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MBSFN-ResultToLogInfo'
*/
typedef struct EXTERN s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element;

EXTERN int asn1PE_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element 
   (const char* name, const s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element (
   const char* name, s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pSrcValue, 
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element (
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MBSFN_ResultToLogInfo_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MBSFN-ResultToLogInfo'
*/
/* List of s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element */
typedef OSRTDList s1ap_MBSFN_ResultToLogInfo_iE_Extensions;

EXTERN int asn1PE_s1ap_MBSFN_ResultToLogInfo_iE_Extensions (OSCTXT* pctxt, s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_MBSFN_ResultToLogInfo_iE_Extensions (OSCTXT* pctxt, s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_MBSFN_ResultToLogInfo_iE_Extensions 
   (const char* name, const s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_MBSFN_ResultToLogInfo_iE_Extensions (const char* name, 
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MBSFN_ResultToLogInfo_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MBSFN_ResultToLogInfo_iE_Extensions_element* 
   asn1Get_s1ap_MBSFN_ResultToLogInfo_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_MBSFN_ResultToLogInfo_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pSrcValue, 
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_MBSFN_ResultToLogInfo_iE_Extensions (
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_MBSFN_ResultToLogInfo_iE_Extensions (OSCTXT *pctxt, 
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  MBSFN_ResultToLogInfo                                     */
/*                                                            */
/**************************************************************/
/*
MBSFN-ResultToLogInfo ::= SEQUENCE {
   mBSFN-AreaId [0] INTEGER (0..255) OPTIONAL,
   carrierFreq [1] EARFCN,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({MBSFN-ResultToLogInfo-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({MBSFN-ResultToLogInfo-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({MBSFN-ResultToLogInfo-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_MBSFN_ResultToLogInfo {
   struct {
      unsigned mBSFN_AreaIdPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT8 mBSFN_AreaId;
   s1ap_EARFCN carrierFreq;
   s1ap_MBSFN_ResultToLogInfo_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_MBSFN_ResultToLogInfo;

EXTERN int asn1PE_s1ap_MBSFN_ResultToLogInfo (OSCTXT* pctxt, s1ap_MBSFN_ResultToLogInfo* pvalue);

EXTERN int asn1PD_s1ap_MBSFN_ResultToLogInfo (OSCTXT* pctxt, s1ap_MBSFN_ResultToLogInfo* pvalue);

EXTERN void asn1Print_s1ap_MBSFN_ResultToLogInfo 
   (const char* name, const s1ap_MBSFN_ResultToLogInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_MBSFN_ResultToLogInfo (const char* name, 
   s1ap_MBSFN_ResultToLogInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MBSFN_ResultToLogInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_MBSFN_ResultToLogInfo* pvalue);

EXTERN void asn1Copy_s1ap_MBSFN_ResultToLogInfo (OSCTXT* pctxt, 
   const s1ap_MBSFN_ResultToLogInfo* pSrcValue, s1ap_MBSFN_ResultToLogInfo*
    pDstValue);

EXTERN int asn1Init_s1ap_MBSFN_ResultToLogInfo (s1ap_MBSFN_ResultToLogInfo* pvalue);

EXTERN void asn1Free_s1ap_MBSFN_ResultToLogInfo (OSCTXT *pctxt, 
   s1ap_MBSFN_ResultToLogInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  MBSFN_ResultToLog                                         */
/*                                                            */
/**************************************************************/
/*
MBSFN-ResultToLog ::= SEQUENCE (SIZE (1..maxnoofMBSFNAreaMDT)) OF MBSFN-ResultToLogInfo
*/
/* List of s1ap_MBSFN_ResultToLogInfo */
typedef OSRTDList s1ap_MBSFN_ResultToLog;

EXTERN int asn1PE_s1ap_MBSFN_ResultToLog (OSCTXT* pctxt, s1ap_MBSFN_ResultToLog* pvalue);

EXTERN int asn1PD_s1ap_MBSFN_ResultToLog (OSCTXT* pctxt, s1ap_MBSFN_ResultToLog* pvalue);

EXTERN void asn1Print_s1ap_MBSFN_ResultToLog 
   (const char* name, const s1ap_MBSFN_ResultToLog* pvalue);

EXTERN int asn1PrtToStr_s1ap_MBSFN_ResultToLog (const char* name, 
   s1ap_MBSFN_ResultToLog* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MBSFN_ResultToLog (OSCTXT *pctxt, 
   const char* name, const s1ap_MBSFN_ResultToLog* pvalue);

EXTERN void asn1Copy_s1ap_MBSFN_ResultToLog (OSCTXT* pctxt, 
   const s1ap_MBSFN_ResultToLog* pSrcValue, s1ap_MBSFN_ResultToLog* pDstValue);

EXTERN int asn1Init_s1ap_MBSFN_ResultToLog (s1ap_MBSFN_ResultToLog* pvalue);

EXTERN void asn1Free_s1ap_MBSFN_ResultToLog (OSCTXT *pctxt, 
   s1ap_MBSFN_ResultToLog* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggedMBSFNMDT_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LoggedMBSFNMDT'
*/
typedef struct EXTERN s1ap_LoggedMBSFNMDT_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_LoggedMBSFNMDT_iE_Extensions_element;

EXTERN int asn1PE_s1ap_LoggedMBSFNMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_LoggedMBSFNMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_LoggedMBSFNMDT_iE_Extensions_element (OSCTXT* pctxt, s1ap_LoggedMBSFNMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_LoggedMBSFNMDT_iE_Extensions_element 
   (const char* name, const s1ap_LoggedMBSFNMDT_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggedMBSFNMDT_iE_Extensions_element (const char* name, 
   s1ap_LoggedMBSFNMDT_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggedMBSFNMDT_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggedMBSFNMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_LoggedMBSFNMDT_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_LoggedMBSFNMDT_iE_Extensions_element* pSrcValue, 
   s1ap_LoggedMBSFNMDT_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_LoggedMBSFNMDT_iE_Extensions_element (
   s1ap_LoggedMBSFNMDT_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_LoggedMBSFNMDT_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_LoggedMBSFNMDT_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggedMBSFNMDT_iE_Extensions                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LoggedMBSFNMDT'
*/
/* List of s1ap_LoggedMBSFNMDT_iE_Extensions_element */
typedef OSRTDList s1ap_LoggedMBSFNMDT_iE_Extensions;

EXTERN int asn1PE_s1ap_LoggedMBSFNMDT_iE_Extensions (OSCTXT* pctxt, s1ap_LoggedMBSFNMDT_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_LoggedMBSFNMDT_iE_Extensions (OSCTXT* pctxt, s1ap_LoggedMBSFNMDT_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_LoggedMBSFNMDT_iE_Extensions 
   (const char* name, const s1ap_LoggedMBSFNMDT_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggedMBSFNMDT_iE_Extensions (const char* name, 
   s1ap_LoggedMBSFNMDT_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggedMBSFNMDT_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggedMBSFNMDT_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_LoggedMBSFNMDT_iE_Extensions_element* 
   asn1Get_s1ap_LoggedMBSFNMDT_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_LoggedMBSFNMDT_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_LoggedMBSFNMDT_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_LoggedMBSFNMDT_iE_Extensions* pSrcValue, 
   s1ap_LoggedMBSFNMDT_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_LoggedMBSFNMDT_iE_Extensions (
   s1ap_LoggedMBSFNMDT_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_LoggedMBSFNMDT_iE_Extensions (OSCTXT *pctxt, 
   s1ap_LoggedMBSFNMDT_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggedMBSFNMDT                                            */
/*                                                            */
/**************************************************************/
/*
LoggedMBSFNMDT ::= SEQUENCE {
   loggingInterval [0] LoggingInterval,
   loggingDuration [1] LoggingDuration,
   mBSFN-ResultToLog [2] MBSFN-ResultToLog OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({LoggedMBSFNMDT-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({LoggedMBSFNMDT-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({LoggedMBSFNMDT-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_LoggedMBSFNMDT {
   struct {
      unsigned mBSFN_ResultToLogPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_LoggingInterval loggingInterval;
   s1ap_LoggingDuration loggingDuration;
   s1ap_MBSFN_ResultToLog mBSFN_ResultToLog;
   s1ap_LoggedMBSFNMDT_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_LoggedMBSFNMDT;

EXTERN int asn1PE_s1ap_LoggedMBSFNMDT (OSCTXT* pctxt, s1ap_LoggedMBSFNMDT* pvalue);

EXTERN int asn1PD_s1ap_LoggedMBSFNMDT (OSCTXT* pctxt, s1ap_LoggedMBSFNMDT* pvalue);

EXTERN void asn1Print_s1ap_LoggedMBSFNMDT 
   (const char* name, const s1ap_LoggedMBSFNMDT* pvalue);

EXTERN int asn1PrtToStr_s1ap_LoggedMBSFNMDT (const char* name, 
   s1ap_LoggedMBSFNMDT* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LoggedMBSFNMDT (OSCTXT *pctxt, 
   const char* name, const s1ap_LoggedMBSFNMDT* pvalue);

EXTERN void asn1Copy_s1ap_LoggedMBSFNMDT (OSCTXT* pctxt, 
   const s1ap_LoggedMBSFNMDT* pSrcValue, s1ap_LoggedMBSFNMDT* pDstValue);

EXTERN int asn1Init_s1ap_LoggedMBSFNMDT (s1ap_LoggedMBSFNMDT* pvalue);

EXTERN void asn1Free_s1ap_LoggedMBSFNMDT (OSCTXT *pctxt, s1ap_LoggedMBSFNMDT* pvalue);

/**************************************************************/
/*                                                            */
/*  MDTMode_Extension                                         */
/*                                                            */
/**************************************************************/
/*
MDTMode-Extension ::= SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({MDTMode-ExtensionIE}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({MDTMode-ExtensionIE}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MDTMode-ExtensionIE}{@id})
}
*/
typedef struct EXTERN s1ap_MDTMode_Extension {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   s1ap_LoggedMBSFNMDT  value;
} s1ap_MDTMode_Extension;

EXTERN int asn1PE_s1ap_MDTMode_Extension (OSCTXT* pctxt, s1ap_MDTMode_Extension* pvalue);

EXTERN int asn1PD_s1ap_MDTMode_Extension (OSCTXT* pctxt, s1ap_MDTMode_Extension* pvalue);

EXTERN void asn1Print_s1ap_MDTMode_Extension 
   (const char* name, const s1ap_MDTMode_Extension* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDTMode_Extension (const char* name, 
   s1ap_MDTMode_Extension* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDTMode_Extension (OSCTXT *pctxt, 
   const char* name, const s1ap_MDTMode_Extension* pvalue);

EXTERN void asn1Copy_s1ap_MDTMode_Extension (OSCTXT* pctxt, 
   const s1ap_MDTMode_Extension* pSrcValue, s1ap_MDTMode_Extension* pDstValue);

EXTERN int asn1Init_s1ap_MDTMode_Extension (s1ap_MDTMode_Extension* pvalue);

EXTERN void asn1Free_s1ap_MDTMode_Extension (OSCTXT *pctxt, 
   s1ap_MDTMode_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  MDTMode                                                   */
/*                                                            */
/**************************************************************/
/*
MDTMode ::= CHOICE {
   immediateMDT [0] ImmediateMDT,
   loggedMDT [1] LoggedMDT,
   ...,
   mDTMode-Extension [2] MDTMode-Extension
}
*/
/* Choice tag constants */

#define T_s1ap_MDTMode_immediateMDT     1
#define T_s1ap_MDTMode_loggedMDT        2
#define T_s1ap_MDTMode_mDTMode_Extension 3
#define T_s1ap_MDTMode_extElem1         4

typedef struct EXTERN s1ap_MDTMode {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_ImmediateMDT *immediateMDT;
      /* t = 2 */
      s1ap_LoggedMDT *loggedMDT;
      /* t = 3 */
      s1ap_MDTMode_Extension *mDTMode_Extension;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_MDTMode;

EXTERN int asn1PE_s1ap_MDTMode (OSCTXT* pctxt, s1ap_MDTMode* pvalue);

EXTERN int asn1PD_s1ap_MDTMode (OSCTXT* pctxt, s1ap_MDTMode* pvalue);

EXTERN void asn1Print_s1ap_MDTMode (const char* name, const s1ap_MDTMode* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDTMode (const char* name, s1ap_MDTMode* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDTMode (OSCTXT *pctxt, 
   const char* name, const s1ap_MDTMode* pvalue);

EXTERN void asn1Copy_s1ap_MDTMode (OSCTXT* pctxt, const s1ap_MDTMode* pSrcValue, 
   s1ap_MDTMode* pDstValue);

EXTERN int asn1Init_s1ap_MDTMode (s1ap_MDTMode* pvalue);

EXTERN void asn1Free_s1ap_MDTMode (OSCTXT *pctxt, s1ap_MDTMode* pvalue);

/**************************************************************/
/*                                                            */
/*  MDTPLMNList                                               */
/*                                                            */
/**************************************************************/
/*
MDTPLMNList ::= SEQUENCE (SIZE (1..maxnoofMDTPLMNs)) OF PLMNidentity
*/
typedef struct EXTERN s1ap_MDTPLMNList {
   OSSIZE n;
   s1ap_PLMNidentity elem[16];
} s1ap_MDTPLMNList;

EXTERN int asn1PE_s1ap_MDTPLMNList (OSCTXT* pctxt, s1ap_MDTPLMNList* pvalue);

EXTERN int asn1PD_s1ap_MDTPLMNList (OSCTXT* pctxt, s1ap_MDTPLMNList* pvalue);

EXTERN void asn1Print_s1ap_MDTPLMNList 
   (const char* name, const s1ap_MDTPLMNList* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDTPLMNList (const char* name, s1ap_MDTPLMNList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDTPLMNList (OSCTXT *pctxt, 
   const char* name, const s1ap_MDTPLMNList* pvalue);

EXTERN void asn1Copy_s1ap_MDTPLMNList (OSCTXT* pctxt, 
   const s1ap_MDTPLMNList* pSrcValue, s1ap_MDTPLMNList* pDstValue);

EXTERN int asn1Init_s1ap_MDTPLMNList (s1ap_MDTPLMNList* pvalue);

/**************************************************************/
/*                                                            */
/*  MDT_Configuration_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MDT-Configuration'
*/
typedef struct EXTERN s1ap_MDT_Configuration_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MDT_Configuration_ExtIEs_TVALUE t;

      /**
       * MDT-Configuration-ExtIEs information objects
       */
      union {
         /**
          * id: id-SignallingBasedMDTPLMNList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MDTPLMNList *_MDT_Configuration_ExtIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_MDT_Configuration_iE_Extensions_element;

EXTERN int asn1PE_s1ap_MDT_Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_MDT_Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_MDT_Configuration_iE_Extensions_element (OSCTXT* pctxt, s1ap_MDT_Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_MDT_Configuration_iE_Extensions_element 
   (const char* name, const s1ap_MDT_Configuration_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDT_Configuration_iE_Extensions_element (
   const char* name, s1ap_MDT_Configuration_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDT_Configuration_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MDT_Configuration_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_MDT_Configuration_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_MDT_Configuration_iE_Extensions_element* pSrcValue, 
   s1ap_MDT_Configuration_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_MDT_Configuration_iE_Extensions_element (
   s1ap_MDT_Configuration_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MDT_Configuration_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MDT-Configuration'
*/
/* List of s1ap_MDT_Configuration_iE_Extensions_element */
typedef OSRTDList s1ap_MDT_Configuration_iE_Extensions;

EXTERN int asn1PE_s1ap_MDT_Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_MDT_Configuration_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_MDT_Configuration_iE_Extensions (OSCTXT* pctxt, s1ap_MDT_Configuration_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_MDT_Configuration_iE_Extensions 
   (const char* name, const s1ap_MDT_Configuration_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDT_Configuration_iE_Extensions (const char* name, 
   s1ap_MDT_Configuration_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDT_Configuration_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_MDT_Configuration_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MDT_Configuration_iE_Extensions_element* 
   asn1Get_s1ap_MDT_Configuration_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_MDT_Configuration_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_MDT_Configuration_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_MDT_Configuration_iE_Extensions* pSrcValue, 
   s1ap_MDT_Configuration_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_MDT_Configuration_iE_Extensions (
   s1ap_MDT_Configuration_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_MDT_Configuration_iE_Extensions (OSCTXT *pctxt, 
   s1ap_MDT_Configuration_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  MDT_Configuration                                         */
/*                                                            */
/**************************************************************/
/*
MDT-Configuration ::= SEQUENCE {
   mdt-Activation [0] MDT-Activation,
   areaScopeOfMDT [1] EXPLICIT AreaScopeOfMDT,
   mDTMode [2] EXPLICIT MDTMode,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({MDT-Configuration-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({MDT-Configuration-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({MDT-Configuration-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_MDT_Configuration {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MDT_Activation mdt_Activation;
   s1ap_AreaScopeOfMDT areaScopeOfMDT;
   s1ap_MDTMode mDTMode;
   s1ap_MDT_Configuration_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_MDT_Configuration;

EXTERN int asn1PE_s1ap_MDT_Configuration (OSCTXT* pctxt, s1ap_MDT_Configuration* pvalue);

EXTERN int asn1PD_s1ap_MDT_Configuration (OSCTXT* pctxt, s1ap_MDT_Configuration* pvalue);

EXTERN void asn1Print_s1ap_MDT_Configuration 
   (const char* name, const s1ap_MDT_Configuration* pvalue);

EXTERN int asn1PrtToStr_s1ap_MDT_Configuration (const char* name, 
   s1ap_MDT_Configuration* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MDT_Configuration (OSCTXT *pctxt, 
   const char* name, const s1ap_MDT_Configuration* pvalue);

EXTERN void asn1Copy_s1ap_MDT_Configuration (OSCTXT* pctxt, 
   const s1ap_MDT_Configuration* pSrcValue, s1ap_MDT_Configuration* pDstValue);

EXTERN int asn1Init_s1ap_MDT_Configuration (s1ap_MDT_Configuration* pvalue);

EXTERN void asn1Free_s1ap_MDT_Configuration (OSCTXT *pctxt, 
   s1ap_MDT_Configuration* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAppLayerMeasConfig_containerForAppLayerMeasConfig       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAppLayerMeasConfig'
*/
typedef struct EXTERN s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig {
   OSUINT32 numocts;
   OSOCTET data[1000];
} s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig;

EXTERN int asn1PE_s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pvalue);

EXTERN int asn1PD_s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pvalue);

EXTERN void asn1Print_s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig 
   (const char* name, const s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig (
   const char* name, 
   s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig (OSCTXT *pctxt, 
   const char* name, const s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pvalue);

EXTERN void asn1Copy_s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig (OSCTXT* pctxt, 
   const s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pSrcValue, 
   s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pDstValue);

EXTERN int asn1Init_s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig (
   s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIdListforQMC                                          */
/*                                                            */
/**************************************************************/
/*
CellIdListforQMC ::= SEQUENCE (SIZE (1..maxnoofCellIDforQMC)) OF EUTRAN-CGI
*/
/* List of s1ap_EUTRAN_CGI */
typedef OSRTDList s1ap_CellIdListforQMC;

EXTERN int asn1PE_s1ap_CellIdListforQMC (OSCTXT* pctxt, s1ap_CellIdListforQMC* pvalue);

EXTERN int asn1PD_s1ap_CellIdListforQMC (OSCTXT* pctxt, s1ap_CellIdListforQMC* pvalue);

EXTERN void asn1Print_s1ap_CellIdListforQMC 
   (const char* name, const s1ap_CellIdListforQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellIdListforQMC (const char* name, 
   s1ap_CellIdListforQMC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellIdListforQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_CellIdListforQMC* pvalue);

EXTERN void asn1Copy_s1ap_CellIdListforQMC (OSCTXT* pctxt, 
   const s1ap_CellIdListforQMC* pSrcValue, s1ap_CellIdListforQMC* pDstValue);

EXTERN int asn1Init_s1ap_CellIdListforQMC (s1ap_CellIdListforQMC* pvalue);

EXTERN void asn1Free_s1ap_CellIdListforQMC (OSCTXT *pctxt, 
   s1ap_CellIdListforQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  CellBasedQMC_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellBasedQMC'
*/
typedef struct EXTERN s1ap_CellBasedQMC_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CellBasedQMC_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CellBasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellBasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CellBasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CellBasedQMC_iE_Extensions_element 
   (const char* name, const s1ap_CellBasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellBasedQMC_iE_Extensions_element (const char* name, 
   s1ap_CellBasedQMC_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellBasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CellBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CellBasedQMC_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CellBasedQMC_iE_Extensions_element* pSrcValue, 
   s1ap_CellBasedQMC_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CellBasedQMC_iE_Extensions_element (
   s1ap_CellBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CellBasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CellBasedQMC_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellBasedQMC_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellBasedQMC'
*/
/* List of s1ap_CellBasedQMC_iE_Extensions_element */
typedef OSRTDList s1ap_CellBasedQMC_iE_Extensions;

EXTERN int asn1PE_s1ap_CellBasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_CellBasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CellBasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_CellBasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CellBasedQMC_iE_Extensions 
   (const char* name, const s1ap_CellBasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellBasedQMC_iE_Extensions (const char* name, 
   s1ap_CellBasedQMC_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellBasedQMC_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CellBasedQMC_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CellBasedQMC_iE_Extensions_element* 
   asn1Get_s1ap_CellBasedQMC_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_CellBasedQMC_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CellBasedQMC_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CellBasedQMC_iE_Extensions* pSrcValue, 
   s1ap_CellBasedQMC_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CellBasedQMC_iE_Extensions (
   s1ap_CellBasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CellBasedQMC_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CellBasedQMC_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellBasedQMC                                              */
/*                                                            */
/**************************************************************/
/*
CellBasedQMC ::= SEQUENCE {
   cellIdListforQMC [0] CellIdListforQMC,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CellBasedQMC-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CellBasedQMC-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CellBasedQMC-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CellBasedQMC {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_CellIdListforQMC cellIdListforQMC;
   s1ap_CellBasedQMC_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CellBasedQMC;

EXTERN int asn1PE_s1ap_CellBasedQMC (OSCTXT* pctxt, s1ap_CellBasedQMC* pvalue);

EXTERN int asn1PD_s1ap_CellBasedQMC (OSCTXT* pctxt, s1ap_CellBasedQMC* pvalue);

EXTERN void asn1Print_s1ap_CellBasedQMC 
   (const char* name, const s1ap_CellBasedQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellBasedQMC (const char* name, 
   s1ap_CellBasedQMC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellBasedQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_CellBasedQMC* pvalue);

EXTERN void asn1Copy_s1ap_CellBasedQMC (OSCTXT* pctxt, 
   const s1ap_CellBasedQMC* pSrcValue, s1ap_CellBasedQMC* pDstValue);

EXTERN int asn1Init_s1ap_CellBasedQMC (s1ap_CellBasedQMC* pvalue);

EXTERN void asn1Free_s1ap_CellBasedQMC (OSCTXT *pctxt, s1ap_CellBasedQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  TAListforQMC                                              */
/*                                                            */
/**************************************************************/
/*
TAListforQMC ::= SEQUENCE (SIZE (1..maxnoofTAforQMC)) OF TAC
*/
typedef struct EXTERN s1ap_TAListforQMC {
   OSSIZE n;
   s1ap_TAC elem[8];
} s1ap_TAListforQMC;

EXTERN int asn1PE_s1ap_TAListforQMC (OSCTXT* pctxt, s1ap_TAListforQMC* pvalue);

EXTERN int asn1PD_s1ap_TAListforQMC (OSCTXT* pctxt, s1ap_TAListforQMC* pvalue);

EXTERN void asn1Print_s1ap_TAListforQMC 
   (const char* name, const s1ap_TAListforQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAListforQMC (const char* name, 
   s1ap_TAListforQMC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAListforQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_TAListforQMC* pvalue);

EXTERN void asn1Copy_s1ap_TAListforQMC (OSCTXT* pctxt, 
   const s1ap_TAListforQMC* pSrcValue, s1ap_TAListforQMC* pDstValue);

EXTERN int asn1Init_s1ap_TAListforQMC (s1ap_TAListforQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  TABasedQMC_iE_Extensions_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TABasedQMC'
*/
typedef struct EXTERN s1ap_TABasedQMC_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TABasedQMC_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TABasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_TABasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TABasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_TABasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TABasedQMC_iE_Extensions_element 
   (const char* name, const s1ap_TABasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TABasedQMC_iE_Extensions_element (const char* name, 
   s1ap_TABasedQMC_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TABasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TABasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TABasedQMC_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TABasedQMC_iE_Extensions_element* pSrcValue, 
   s1ap_TABasedQMC_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TABasedQMC_iE_Extensions_element (
   s1ap_TABasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TABasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TABasedQMC_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TABasedQMC_iE_Extensions                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TABasedQMC'
*/
/* List of s1ap_TABasedQMC_iE_Extensions_element */
typedef OSRTDList s1ap_TABasedQMC_iE_Extensions;

EXTERN int asn1PE_s1ap_TABasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_TABasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TABasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_TABasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TABasedQMC_iE_Extensions 
   (const char* name, const s1ap_TABasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TABasedQMC_iE_Extensions (const char* name, 
   s1ap_TABasedQMC_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TABasedQMC_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TABasedQMC_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TABasedQMC_iE_Extensions_element* 
   asn1Get_s1ap_TABasedQMC_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TABasedQMC_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TABasedQMC_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TABasedQMC_iE_Extensions* pSrcValue, 
   s1ap_TABasedQMC_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TABasedQMC_iE_Extensions (
   s1ap_TABasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TABasedQMC_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TABasedQMC_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TABasedQMC                                                */
/*                                                            */
/**************************************************************/
/*
TABasedQMC ::= SEQUENCE {
   tAListforQMC [0] TAListforQMC,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TABasedQMC-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TABasedQMC-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TABasedQMC-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TABasedQMC {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAListforQMC tAListforQMC;
   s1ap_TABasedQMC_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TABasedQMC;

EXTERN int asn1PE_s1ap_TABasedQMC (OSCTXT* pctxt, s1ap_TABasedQMC* pvalue);

EXTERN int asn1PD_s1ap_TABasedQMC (OSCTXT* pctxt, s1ap_TABasedQMC* pvalue);

EXTERN void asn1Print_s1ap_TABasedQMC 
   (const char* name, const s1ap_TABasedQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_TABasedQMC (const char* name, s1ap_TABasedQMC* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TABasedQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_TABasedQMC* pvalue);

EXTERN void asn1Copy_s1ap_TABasedQMC (OSCTXT* pctxt, 
   const s1ap_TABasedQMC* pSrcValue, s1ap_TABasedQMC* pDstValue);

EXTERN int asn1Init_s1ap_TABasedQMC (s1ap_TABasedQMC* pvalue);

EXTERN void asn1Free_s1ap_TABasedQMC (OSCTXT *pctxt, s1ap_TABasedQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListforQMC                                             */
/*                                                            */
/**************************************************************/
/*
TAIListforQMC ::= SEQUENCE (SIZE (1..maxnoofTAforQMC)) OF TAI
*/
/* List of s1ap_TAI */
typedef OSRTDList s1ap_TAIListforQMC;

EXTERN int asn1PE_s1ap_TAIListforQMC (OSCTXT* pctxt, s1ap_TAIListforQMC* pvalue);

EXTERN int asn1PD_s1ap_TAIListforQMC (OSCTXT* pctxt, s1ap_TAIListforQMC* pvalue);

EXTERN void asn1Print_s1ap_TAIListforQMC 
   (const char* name, const s1ap_TAIListforQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIListforQMC (const char* name, 
   s1ap_TAIListforQMC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIListforQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIListforQMC* pvalue);

EXTERN void asn1Copy_s1ap_TAIListforQMC (OSCTXT* pctxt, 
   const s1ap_TAIListforQMC* pSrcValue, s1ap_TAIListforQMC* pDstValue);

EXTERN int asn1Init_s1ap_TAIListforQMC (s1ap_TAIListforQMC* pvalue);

EXTERN void asn1Free_s1ap_TAIListforQMC (OSCTXT *pctxt, s1ap_TAIListforQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBasedQMC_iE_Extensions_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBasedQMC'
*/
typedef struct EXTERN s1ap_TAIBasedQMC_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TAIBasedQMC_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TAIBasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAIBasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TAIBasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAIBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TAIBasedQMC_iE_Extensions_element 
   (const char* name, const s1ap_TAIBasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIBasedQMC_iE_Extensions_element (const char* name, 
   s1ap_TAIBasedQMC_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIBasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TAIBasedQMC_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TAIBasedQMC_iE_Extensions_element* pSrcValue, 
   s1ap_TAIBasedQMC_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TAIBasedQMC_iE_Extensions_element (
   s1ap_TAIBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TAIBasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TAIBasedQMC_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBasedQMC_iE_Extensions                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBasedQMC'
*/
/* List of s1ap_TAIBasedQMC_iE_Extensions_element */
typedef OSRTDList s1ap_TAIBasedQMC_iE_Extensions;

EXTERN int asn1PE_s1ap_TAIBasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_TAIBasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TAIBasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_TAIBasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TAIBasedQMC_iE_Extensions 
   (const char* name, const s1ap_TAIBasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIBasedQMC_iE_Extensions (const char* name, 
   s1ap_TAIBasedQMC_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIBasedQMC_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIBasedQMC_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TAIBasedQMC_iE_Extensions_element* 
   asn1Get_s1ap_TAIBasedQMC_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TAIBasedQMC_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TAIBasedQMC_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TAIBasedQMC_iE_Extensions* pSrcValue, 
   s1ap_TAIBasedQMC_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TAIBasedQMC_iE_Extensions (
   s1ap_TAIBasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TAIBasedQMC_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TAIBasedQMC_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBasedQMC                                               */
/*                                                            */
/**************************************************************/
/*
TAIBasedQMC ::= SEQUENCE {
   tAIListforQMC [0] TAIListforQMC,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TAIBasedQMC-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TAIBasedQMC-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TAIBasedQMC-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TAIBasedQMC {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAIListforQMC tAIListforQMC;
   s1ap_TAIBasedQMC_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TAIBasedQMC;

EXTERN int asn1PE_s1ap_TAIBasedQMC (OSCTXT* pctxt, s1ap_TAIBasedQMC* pvalue);

EXTERN int asn1PD_s1ap_TAIBasedQMC (OSCTXT* pctxt, s1ap_TAIBasedQMC* pvalue);

EXTERN void asn1Print_s1ap_TAIBasedQMC 
   (const char* name, const s1ap_TAIBasedQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIBasedQMC (const char* name, s1ap_TAIBasedQMC* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIBasedQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIBasedQMC* pvalue);

EXTERN void asn1Copy_s1ap_TAIBasedQMC (OSCTXT* pctxt, 
   const s1ap_TAIBasedQMC* pSrcValue, s1ap_TAIBasedQMC* pDstValue);

EXTERN int asn1Init_s1ap_TAIBasedQMC (s1ap_TAIBasedQMC* pvalue);

EXTERN void asn1Free_s1ap_TAIBasedQMC (OSCTXT *pctxt, s1ap_TAIBasedQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNListforQMC                                            */
/*                                                            */
/**************************************************************/
/*
PLMNListforQMC ::= SEQUENCE (SIZE (1..maxnoofPLMNforQMC)) OF PLMNidentity
*/
typedef struct EXTERN s1ap_PLMNListforQMC {
   OSSIZE n;
   s1ap_PLMNidentity elem[16];
} s1ap_PLMNListforQMC;

EXTERN int asn1PE_s1ap_PLMNListforQMC (OSCTXT* pctxt, s1ap_PLMNListforQMC* pvalue);

EXTERN int asn1PD_s1ap_PLMNListforQMC (OSCTXT* pctxt, s1ap_PLMNListforQMC* pvalue);

EXTERN void asn1Print_s1ap_PLMNListforQMC 
   (const char* name, const s1ap_PLMNListforQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_PLMNListforQMC (const char* name, 
   s1ap_PLMNListforQMC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PLMNListforQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_PLMNListforQMC* pvalue);

EXTERN void asn1Copy_s1ap_PLMNListforQMC (OSCTXT* pctxt, 
   const s1ap_PLMNListforQMC* pSrcValue, s1ap_PLMNListforQMC* pDstValue);

EXTERN int asn1Init_s1ap_PLMNListforQMC (s1ap_PLMNListforQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNAreaBasedQMC_iE_Extensions_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PLMNAreaBasedQMC'
*/
typedef struct EXTERN s1ap_PLMNAreaBasedQMC_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_PLMNAreaBasedQMC_iE_Extensions_element;

EXTERN int asn1PE_s1ap_PLMNAreaBasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_PLMNAreaBasedQMC_iE_Extensions_element (OSCTXT* pctxt, s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_PLMNAreaBasedQMC_iE_Extensions_element 
   (const char* name, const s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PLMNAreaBasedQMC_iE_Extensions_element (
   const char* name, s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PLMNAreaBasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_PLMNAreaBasedQMC_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pSrcValue, 
   s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_PLMNAreaBasedQMC_iE_Extensions_element (
   s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_PLMNAreaBasedQMC_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_PLMNAreaBasedQMC_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNAreaBasedQMC_iE_Extensions                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PLMNAreaBasedQMC'
*/
/* List of s1ap_PLMNAreaBasedQMC_iE_Extensions_element */
typedef OSRTDList s1ap_PLMNAreaBasedQMC_iE_Extensions;

EXTERN int asn1PE_s1ap_PLMNAreaBasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_PLMNAreaBasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_PLMNAreaBasedQMC_iE_Extensions (OSCTXT* pctxt, s1ap_PLMNAreaBasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_PLMNAreaBasedQMC_iE_Extensions 
   (const char* name, const s1ap_PLMNAreaBasedQMC_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_PLMNAreaBasedQMC_iE_Extensions (const char* name, 
   s1ap_PLMNAreaBasedQMC_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PLMNAreaBasedQMC_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_PLMNAreaBasedQMC_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PLMNAreaBasedQMC_iE_Extensions_element* 
   asn1Get_s1ap_PLMNAreaBasedQMC_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_PLMNAreaBasedQMC_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_PLMNAreaBasedQMC_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_PLMNAreaBasedQMC_iE_Extensions* pSrcValue, 
   s1ap_PLMNAreaBasedQMC_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_PLMNAreaBasedQMC_iE_Extensions (
   s1ap_PLMNAreaBasedQMC_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_PLMNAreaBasedQMC_iE_Extensions (OSCTXT *pctxt, 
   s1ap_PLMNAreaBasedQMC_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNAreaBasedQMC                                          */
/*                                                            */
/**************************************************************/
/*
PLMNAreaBasedQMC ::= SEQUENCE {
   plmnListforQMC [0] PLMNListforQMC,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({PLMNAreaBasedQMC-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({PLMNAreaBasedQMC-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({PLMNAreaBasedQMC-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_PLMNAreaBasedQMC {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNListforQMC plmnListforQMC;
   s1ap_PLMNAreaBasedQMC_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_PLMNAreaBasedQMC;

EXTERN int asn1PE_s1ap_PLMNAreaBasedQMC (OSCTXT* pctxt, s1ap_PLMNAreaBasedQMC* pvalue);

EXTERN int asn1PD_s1ap_PLMNAreaBasedQMC (OSCTXT* pctxt, s1ap_PLMNAreaBasedQMC* pvalue);

EXTERN void asn1Print_s1ap_PLMNAreaBasedQMC 
   (const char* name, const s1ap_PLMNAreaBasedQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_PLMNAreaBasedQMC (const char* name, 
   s1ap_PLMNAreaBasedQMC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PLMNAreaBasedQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_PLMNAreaBasedQMC* pvalue);

EXTERN void asn1Copy_s1ap_PLMNAreaBasedQMC (OSCTXT* pctxt, 
   const s1ap_PLMNAreaBasedQMC* pSrcValue, s1ap_PLMNAreaBasedQMC* pDstValue);

EXTERN int asn1Init_s1ap_PLMNAreaBasedQMC (s1ap_PLMNAreaBasedQMC* pvalue);

EXTERN void asn1Free_s1ap_PLMNAreaBasedQMC (OSCTXT *pctxt, 
   s1ap_PLMNAreaBasedQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaScopeOfQMC                                            */
/*                                                            */
/**************************************************************/
/*
AreaScopeOfQMC ::= CHOICE {
   cellBased [0] CellBasedQMC,
   tABased [1] TABasedQMC,
   tAIBased [2] TAIBasedQMC,
   pLMNAreaBased [3] PLMNAreaBasedQMC,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_AreaScopeOfQMC_cellBased 1
#define T_s1ap_AreaScopeOfQMC_tABased   2
#define T_s1ap_AreaScopeOfQMC_tAIBased  3
#define T_s1ap_AreaScopeOfQMC_pLMNAreaBased 4
#define T_s1ap_AreaScopeOfQMC_extElem1  5

typedef struct EXTERN s1ap_AreaScopeOfQMC {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_CellBasedQMC *cellBased;
      /* t = 2 */
      s1ap_TABasedQMC *tABased;
      /* t = 3 */
      s1ap_TAIBasedQMC *tAIBased;
      /* t = 4 */
      s1ap_PLMNAreaBasedQMC *pLMNAreaBased;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_AreaScopeOfQMC;

EXTERN int asn1PE_s1ap_AreaScopeOfQMC (OSCTXT* pctxt, s1ap_AreaScopeOfQMC* pvalue);

EXTERN int asn1PD_s1ap_AreaScopeOfQMC (OSCTXT* pctxt, s1ap_AreaScopeOfQMC* pvalue);

EXTERN void asn1Print_s1ap_AreaScopeOfQMC 
   (const char* name, const s1ap_AreaScopeOfQMC* pvalue);

EXTERN int asn1PrtToStr_s1ap_AreaScopeOfQMC (const char* name, 
   s1ap_AreaScopeOfQMC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AreaScopeOfQMC (OSCTXT *pctxt, 
   const char* name, const s1ap_AreaScopeOfQMC* pvalue);

EXTERN void asn1Copy_s1ap_AreaScopeOfQMC (OSCTXT* pctxt, 
   const s1ap_AreaScopeOfQMC* pSrcValue, s1ap_AreaScopeOfQMC* pDstValue);

EXTERN int asn1Init_s1ap_AreaScopeOfQMC (s1ap_AreaScopeOfQMC* pvalue);

EXTERN void asn1Free_s1ap_AreaScopeOfQMC (OSCTXT *pctxt, s1ap_AreaScopeOfQMC* pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceType                                               */
/*                                                            */
/**************************************************************/
/*
ServiceType ::= ENUMERATED { qMC-for-streaming-service(0), qMC-for-MTSI-service(1), ... }
*/
typedef enum {
   s1ap_qMC_for_streaming_service = 0,
   s1ap_qMC_for_MTSI_service = 1
} s1ap_ServiceType_Root;

typedef OSUINT32 s1ap_ServiceType;

EXTERN int asn1PE_s1ap_ServiceType (OSCTXT* pctxt, s1ap_ServiceType value);

EXTERN int asn1PD_s1ap_ServiceType (OSCTXT* pctxt, s1ap_ServiceType* pvalue);

EXTERN void asn1Print_s1ap_ServiceType 
   (const char* name, const s1ap_ServiceType* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServiceType (const char* name, s1ap_ServiceType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServiceType (OSCTXT *pctxt, 
   const char* name, const s1ap_ServiceType* pvalue);

EXTERN extern const OSEnumItem s1ap_ServiceType_ENUMTAB[];
#define s1ap_ServiceType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_ServiceType_ToString (OSINT32 value);

EXTERN int s1ap_ServiceType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ServiceType* pvalue);

EXTERN int s1ap_ServiceType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ServiceType* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAppLayerMeasConfig_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAppLayerMeasConfig'
*/
typedef struct EXTERN s1ap_UEAppLayerMeasConfig_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEAppLayerMeasConfig_ExtIEs_TVALUE t;

      /**
       * UEAppLayerMeasConfig-ExtIEs information objects
       */
      union {
         /**
          * id: id-serviceType
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ServiceType _UEAppLayerMeasConfig_ExtIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_UEAppLayerMeasConfig_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UEAppLayerMeasConfig_iE_Extensions_element (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UEAppLayerMeasConfig_iE_Extensions_element (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UEAppLayerMeasConfig_iE_Extensions_element 
   (const char* name, const s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEAppLayerMeasConfig_iE_Extensions_element (
   const char* name, s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEAppLayerMeasConfig_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_UEAppLayerMeasConfig_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pSrcValue, 
   s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UEAppLayerMeasConfig_iE_Extensions_element (
   s1ap_UEAppLayerMeasConfig_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAppLayerMeasConfig_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAppLayerMeasConfig'
*/
/* List of s1ap_UEAppLayerMeasConfig_iE_Extensions_element */
typedef OSRTDList s1ap_UEAppLayerMeasConfig_iE_Extensions;

EXTERN int asn1PE_s1ap_UEAppLayerMeasConfig_iE_Extensions (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UEAppLayerMeasConfig_iE_Extensions (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UEAppLayerMeasConfig_iE_Extensions 
   (const char* name, const s1ap_UEAppLayerMeasConfig_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEAppLayerMeasConfig_iE_Extensions (const char* name, 
   s1ap_UEAppLayerMeasConfig_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEAppLayerMeasConfig_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UEAppLayerMeasConfig_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEAppLayerMeasConfig_iE_Extensions_element* 
   asn1Get_s1ap_UEAppLayerMeasConfig_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_UEAppLayerMeasConfig_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UEAppLayerMeasConfig_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UEAppLayerMeasConfig_iE_Extensions* pSrcValue, 
   s1ap_UEAppLayerMeasConfig_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UEAppLayerMeasConfig_iE_Extensions (
   s1ap_UEAppLayerMeasConfig_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UEAppLayerMeasConfig_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UEAppLayerMeasConfig_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAppLayerMeasConfig                                      */
/*                                                            */
/**************************************************************/
/*
UEAppLayerMeasConfig ::= SEQUENCE {
   containerForAppLayerMeasConfig [0] OCTET STRING (SIZE (1..1000)),
   areaScopeOfQMC [1] EXPLICIT AreaScopeOfQMC,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UEAppLayerMeasConfig-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UEAppLayerMeasConfig-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UEAppLayerMeasConfig-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UEAppLayerMeasConfig {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_UEAppLayerMeasConfig_containerForAppLayerMeasConfig containerForAppLayerMeasConfig;
   s1ap_AreaScopeOfQMC areaScopeOfQMC;
   s1ap_UEAppLayerMeasConfig_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UEAppLayerMeasConfig;

EXTERN int asn1PE_s1ap_UEAppLayerMeasConfig (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig* pvalue);

EXTERN int asn1PD_s1ap_UEAppLayerMeasConfig (OSCTXT* pctxt, s1ap_UEAppLayerMeasConfig* pvalue);

EXTERN void asn1Print_s1ap_UEAppLayerMeasConfig 
   (const char* name, const s1ap_UEAppLayerMeasConfig* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEAppLayerMeasConfig (const char* name, 
   s1ap_UEAppLayerMeasConfig* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEAppLayerMeasConfig (OSCTXT *pctxt, 
   const char* name, const s1ap_UEAppLayerMeasConfig* pvalue);

EXTERN void asn1Copy_s1ap_UEAppLayerMeasConfig (OSCTXT* pctxt, 
   const s1ap_UEAppLayerMeasConfig* pSrcValue, s1ap_UEAppLayerMeasConfig*
    pDstValue);

EXTERN int asn1Init_s1ap_UEAppLayerMeasConfig (s1ap_UEAppLayerMeasConfig* pvalue);

EXTERN void asn1Free_s1ap_UEAppLayerMeasConfig (OSCTXT *pctxt, 
   s1ap_UEAppLayerMeasConfig* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceActivation_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceActivation'
*/
typedef struct EXTERN s1ap_TraceActivation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      TraceActivation_ExtIEs_TVALUE t;

      /**
       * TraceActivation-ExtIEs information objects
       */
      union {
         /**
          * id: id-MDTConfiguration
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MDT_Configuration *_TraceActivation_ExtIEs_1;
         /**
          * id: id-UEAppLayerMeasConfig
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UEAppLayerMeasConfig *_TraceActivation_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_TraceActivation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TraceActivation_iE_Extensions_element (OSCTXT* pctxt, s1ap_TraceActivation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TraceActivation_iE_Extensions_element (OSCTXT* pctxt, s1ap_TraceActivation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TraceActivation_iE_Extensions_element 
   (const char* name, const s1ap_TraceActivation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceActivation_iE_Extensions_element (const char* name, 
   s1ap_TraceActivation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceActivation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceActivation_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_TraceActivation_iE_Extensions_element_TraceActivation_ExtIEs_1
   (OSCTXT* pctxt, s1ap_TraceActivation_iE_Extensions_element* pElem, 
   s1ap_MDT_Configuration *pvalue);

EXTERN void asn1SetTC_s1ap_TraceActivation_iE_Extensions_element_TraceActivation_ExtIEs_2
   (OSCTXT* pctxt, s1ap_TraceActivation_iE_Extensions_element* pElem, 
   s1ap_UEAppLayerMeasConfig *pvalue);

EXTERN void asn1Copy_s1ap_TraceActivation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TraceActivation_iE_Extensions_element* pSrcValue, 
   s1ap_TraceActivation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TraceActivation_iE_Extensions_element (
   s1ap_TraceActivation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TraceActivation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TraceActivation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceActivation_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceActivation'
*/
/* List of s1ap_TraceActivation_iE_Extensions_element */
typedef OSRTDList s1ap_TraceActivation_iE_Extensions;

EXTERN int asn1PE_s1ap_TraceActivation_iE_Extensions (OSCTXT* pctxt, s1ap_TraceActivation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TraceActivation_iE_Extensions (OSCTXT* pctxt, s1ap_TraceActivation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TraceActivation_iE_Extensions 
   (const char* name, const s1ap_TraceActivation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceActivation_iE_Extensions (const char* name, 
   s1ap_TraceActivation_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceActivation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceActivation_iE_Extensions* pvalue);

/* Append IE with value type s1ap_MDT_Configuration to list */
struct s1ap_MDT_Configuration ;
EXTERN int asn1Append_s1ap_TraceActivation_iE_Extensions_1   (OSCTXT* pctxt, 
   s1ap_TraceActivation_iE_Extensions* plist, struct s1ap_MDT_Configuration 
   *pvalue);

/* Append IE with value type s1ap_UEAppLayerMeasConfig to list */
struct s1ap_UEAppLayerMeasConfig ;
EXTERN int asn1Append_s1ap_TraceActivation_iE_Extensions_2   (OSCTXT* pctxt, 
   s1ap_TraceActivation_iE_Extensions* plist, struct s1ap_UEAppLayerMeasConfig 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TraceActivation_iE_Extensions_element* 
   asn1Get_s1ap_TraceActivation_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TraceActivation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TraceActivation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TraceActivation_iE_Extensions* pSrcValue, 
   s1ap_TraceActivation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TraceActivation_iE_Extensions (
   s1ap_TraceActivation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TraceActivation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TraceActivation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceActivation                                           */
/*                                                            */
/**************************************************************/
/*
TraceActivation ::= SEQUENCE {
   e-UTRAN-Trace-ID [0] E-UTRAN-Trace-ID,
   interfacesToTrace [1] InterfacesToTrace,
   traceDepth [2] TraceDepth,
   traceCollectionEntityIPAddress [3] TransportLayerAddress,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TraceActivation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TraceActivation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TraceActivation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TraceActivation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_UTRAN_Trace_ID e_UTRAN_Trace_ID;
   s1ap_InterfacesToTrace interfacesToTrace;
   s1ap_TraceDepth traceDepth;
   s1ap_TransportLayerAddress traceCollectionEntityIPAddress;
   s1ap_TraceActivation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TraceActivation;

EXTERN int asn1PE_s1ap_TraceActivation (OSCTXT* pctxt, s1ap_TraceActivation* pvalue);

EXTERN int asn1PD_s1ap_TraceActivation (OSCTXT* pctxt, s1ap_TraceActivation* pvalue);

EXTERN void asn1Print_s1ap_TraceActivation 
   (const char* name, const s1ap_TraceActivation* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceActivation (const char* name, 
   s1ap_TraceActivation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceActivation (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceActivation* pvalue);

EXTERN void asn1Copy_s1ap_TraceActivation (OSCTXT* pctxt, 
   const s1ap_TraceActivation* pSrcValue, s1ap_TraceActivation* pDstValue);

EXTERN int asn1Init_s1ap_TraceActivation (s1ap_TraceActivation* pvalue);

EXTERN void asn1Free_s1ap_TraceActivation (OSCTXT *pctxt, 
   s1ap_TraceActivation* pvalue);

/**************************************************************/
/*                                                            */
/*  EventType                                                 */
/*                                                            */
/**************************************************************/
/*
EventType ::= ENUMERATED { direct(0), change-of-serve-cell(1), stop-change-of-serve-cell(2), ... }
*/
typedef enum {
   s1ap_direct = 0,
   s1ap_change_of_serve_cell = 1,
   s1ap_stop_change_of_serve_cell = 2
} s1ap_EventType_Root;

typedef OSUINT32 s1ap_EventType;

EXTERN int asn1PE_s1ap_EventType (OSCTXT* pctxt, s1ap_EventType value);

EXTERN int asn1PD_s1ap_EventType (OSCTXT* pctxt, s1ap_EventType* pvalue);

EXTERN void asn1Print_s1ap_EventType (const char* name, const s1ap_EventType* pvalue);

EXTERN int asn1PrtToStr_s1ap_EventType (const char* name, s1ap_EventType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EventType (OSCTXT *pctxt, 
   const char* name, const s1ap_EventType* pvalue);

EXTERN extern const OSEnumItem s1ap_EventType_ENUMTAB[];
#define s1ap_EventType_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_EventType_ToString (OSINT32 value);

EXTERN int s1ap_EventType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_EventType* pvalue);

EXTERN int s1ap_EventType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_EventType* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportArea                                                */
/*                                                            */
/**************************************************************/
/*
ReportArea ::= ENUMERATED { ecgi(0), ... }
*/
typedef enum {
   s1ap_ecgi = 0
} s1ap_ReportArea_Root;

typedef OSUINT32 s1ap_ReportArea;

EXTERN int asn1PE_s1ap_ReportArea (OSCTXT* pctxt, s1ap_ReportArea value);

EXTERN int asn1PD_s1ap_ReportArea (OSCTXT* pctxt, s1ap_ReportArea* pvalue);

EXTERN void asn1Print_s1ap_ReportArea 
   (const char* name, const s1ap_ReportArea* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReportArea (const char* name, s1ap_ReportArea* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReportArea (OSCTXT *pctxt, 
   const char* name, const s1ap_ReportArea* pvalue);

EXTERN extern const OSEnumItem s1ap_ReportArea_ENUMTAB[];
#define s1ap_ReportArea_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_ReportArea_ToString (OSINT32 value);

EXTERN int s1ap_ReportArea_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ReportArea* pvalue);

EXTERN int s1ap_ReportArea_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ReportArea* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestType_iE_Extensions_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RequestType'
*/
typedef struct EXTERN s1ap_RequestType_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_RequestType_iE_Extensions_element;

EXTERN int asn1PE_s1ap_RequestType_iE_Extensions_element (OSCTXT* pctxt, s1ap_RequestType_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_RequestType_iE_Extensions_element (OSCTXT* pctxt, s1ap_RequestType_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_RequestType_iE_Extensions_element 
   (const char* name, const s1ap_RequestType_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RequestType_iE_Extensions_element (const char* name, 
   s1ap_RequestType_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RequestType_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RequestType_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_RequestType_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_RequestType_iE_Extensions_element* pSrcValue, 
   s1ap_RequestType_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_RequestType_iE_Extensions_element (
   s1ap_RequestType_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_RequestType_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_RequestType_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestType_iE_Extensions                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RequestType'
*/
/* List of s1ap_RequestType_iE_Extensions_element */
typedef OSRTDList s1ap_RequestType_iE_Extensions;

EXTERN int asn1PE_s1ap_RequestType_iE_Extensions (OSCTXT* pctxt, s1ap_RequestType_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_RequestType_iE_Extensions (OSCTXT* pctxt, s1ap_RequestType_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_RequestType_iE_Extensions 
   (const char* name, const s1ap_RequestType_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_RequestType_iE_Extensions (const char* name, 
   s1ap_RequestType_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RequestType_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_RequestType_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RequestType_iE_Extensions_element* 
   asn1Get_s1ap_RequestType_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_RequestType_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_RequestType_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_RequestType_iE_Extensions* pSrcValue, 
   s1ap_RequestType_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_RequestType_iE_Extensions (
   s1ap_RequestType_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_RequestType_iE_Extensions (OSCTXT *pctxt, 
   s1ap_RequestType_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestType                                               */
/*                                                            */
/**************************************************************/
/*
RequestType ::= SEQUENCE {
   eventType [0] EventType,
   reportArea [1] ReportArea,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({RequestType-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({RequestType-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({RequestType-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_RequestType {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EventType eventType;
   s1ap_ReportArea reportArea;
   s1ap_RequestType_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_RequestType;

EXTERN int asn1PE_s1ap_RequestType (OSCTXT* pctxt, s1ap_RequestType* pvalue);

EXTERN int asn1PD_s1ap_RequestType (OSCTXT* pctxt, s1ap_RequestType* pvalue);

EXTERN void asn1Print_s1ap_RequestType 
   (const char* name, const s1ap_RequestType* pvalue);

EXTERN int asn1PrtToStr_s1ap_RequestType (const char* name, s1ap_RequestType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RequestType (OSCTXT *pctxt, 
   const char* name, const s1ap_RequestType* pvalue);

EXTERN void asn1Copy_s1ap_RequestType (OSCTXT* pctxt, 
   const s1ap_RequestType* pSrcValue, s1ap_RequestType* pDstValue);

EXTERN int asn1Init_s1ap_RequestType (s1ap_RequestType* pvalue);

EXTERN void asn1Free_s1ap_RequestType (OSCTXT *pctxt, s1ap_RequestType* pvalue);

/**************************************************************/
/*                                                            */
/*  SRVCCOperationPossible                                    */
/*                                                            */
/**************************************************************/
/*
SRVCCOperationPossible ::= ENUMERATED { possible(0), ... }
*/
typedef enum {
   s1ap_possible = 0
} s1ap_SRVCCOperationPossible_Root;

typedef OSUINT32 s1ap_SRVCCOperationPossible;

EXTERN int asn1PE_s1ap_SRVCCOperationPossible (OSCTXT* pctxt, s1ap_SRVCCOperationPossible value);

EXTERN int asn1PD_s1ap_SRVCCOperationPossible (OSCTXT* pctxt, s1ap_SRVCCOperationPossible* pvalue);

EXTERN void asn1Print_s1ap_SRVCCOperationPossible 
   (const char* name, const s1ap_SRVCCOperationPossible* pvalue);

EXTERN int asn1PrtToStr_s1ap_SRVCCOperationPossible (const char* name, 
   s1ap_SRVCCOperationPossible* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SRVCCOperationPossible (OSCTXT *pctxt, 
   const char* name, const s1ap_SRVCCOperationPossible* pvalue);

EXTERN extern const OSEnumItem s1ap_SRVCCOperationPossible_ENUMTAB[];
#define s1ap_SRVCCOperationPossible_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_SRVCCOperationPossible_ToString (OSINT32 value);

EXTERN int s1ap_SRVCCOperationPossible_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SRVCCOperationPossible* pvalue);

EXTERN int s1ap_SRVCCOperationPossible_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_SRVCCOperationPossible* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityKey                                               */
/*                                                            */
/**************************************************************/
/*
 S
SecurityKey ::= BIT STRING  (SIZE (256))
*/
typedef struct s1ap_SecurityKey {
   OSUINT32 numbits;
   OSOCTET data[32];
} s1ap_SecurityKey;

EXTERN int asn1PE_s1ap_SecurityKey (OSCTXT* pctxt, s1ap_SecurityKey* pvalue);

EXTERN int asn1PD_s1ap_SecurityKey (OSCTXT* pctxt, s1ap_SecurityKey* pvalue);

EXTERN void asn1Print_s1ap_SecurityKey 
   (const char* name, const s1ap_SecurityKey* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecurityKey (const char* name, s1ap_SecurityKey* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecurityKey (OSCTXT *pctxt, 
   const char* name, const s1ap_SecurityKey* pvalue);

EXTERN void asn1Copy_s1ap_SecurityKey (OSCTXT* pctxt, 
   const s1ap_SecurityKey* pSrcValue, s1ap_SecurityKey* pDstValue);

EXTERN int asn1Init_s1ap_SecurityKey (s1ap_SecurityKey* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityContext_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityContext'
*/
typedef struct EXTERN s1ap_SecurityContext_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_SecurityContext_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SecurityContext_iE_Extensions_element (OSCTXT* pctxt, s1ap_SecurityContext_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SecurityContext_iE_Extensions_element (OSCTXT* pctxt, s1ap_SecurityContext_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SecurityContext_iE_Extensions_element 
   (const char* name, const s1ap_SecurityContext_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecurityContext_iE_Extensions_element (const char* name, 
   s1ap_SecurityContext_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecurityContext_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SecurityContext_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_SecurityContext_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SecurityContext_iE_Extensions_element* pSrcValue, 
   s1ap_SecurityContext_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_SecurityContext_iE_Extensions_element (
   s1ap_SecurityContext_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_SecurityContext_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_SecurityContext_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityContext_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityContext'
*/
/* List of s1ap_SecurityContext_iE_Extensions_element */
typedef OSRTDList s1ap_SecurityContext_iE_Extensions;

EXTERN int asn1PE_s1ap_SecurityContext_iE_Extensions (OSCTXT* pctxt, s1ap_SecurityContext_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SecurityContext_iE_Extensions (OSCTXT* pctxt, s1ap_SecurityContext_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SecurityContext_iE_Extensions 
   (const char* name, const s1ap_SecurityContext_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecurityContext_iE_Extensions (const char* name, 
   s1ap_SecurityContext_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecurityContext_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SecurityContext_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SecurityContext_iE_Extensions_element* 
   asn1Get_s1ap_SecurityContext_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_SecurityContext_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SecurityContext_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SecurityContext_iE_Extensions* pSrcValue, 
   s1ap_SecurityContext_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SecurityContext_iE_Extensions (
   s1ap_SecurityContext_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SecurityContext_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SecurityContext_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityContext                                           */
/*                                                            */
/**************************************************************/
/*
SecurityContext ::= SEQUENCE {
   nextHopChainingCount [0] INTEGER (0..7),
   nextHopParameter [1] SecurityKey,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SecurityContext-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SecurityContext-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SecurityContext-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_SecurityContext {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT8 nextHopChainingCount;
   s1ap_SecurityKey nextHopParameter;
   s1ap_SecurityContext_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_SecurityContext;

EXTERN int asn1PE_s1ap_SecurityContext (OSCTXT* pctxt, s1ap_SecurityContext* pvalue);

EXTERN int asn1PD_s1ap_SecurityContext (OSCTXT* pctxt, s1ap_SecurityContext* pvalue);

EXTERN void asn1Print_s1ap_SecurityContext 
   (const char* name, const s1ap_SecurityContext* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecurityContext (const char* name, 
   s1ap_SecurityContext* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecurityContext (OSCTXT *pctxt, 
   const char* name, const s1ap_SecurityContext* pvalue);

EXTERN void asn1Copy_s1ap_SecurityContext (OSCTXT* pctxt, 
   const s1ap_SecurityContext* pSrcValue, s1ap_SecurityContext* pDstValue);

EXTERN int asn1Init_s1ap_SecurityContext (s1ap_SecurityContext* pvalue);

EXTERN void asn1Free_s1ap_SecurityContext (OSCTXT *pctxt, 
   s1ap_SecurityContext* pvalue);

/**************************************************************/
/*                                                            */
/*  NASSecurityParameterstoE_UTRAN                            */
/*                                                            */
/**************************************************************/
/*
NASSecurityParameterstoE-UTRAN ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_NASSecurityParameterstoE_UTRAN;

EXTERN int asn1PE_s1ap_NASSecurityParameterstoE_UTRAN (OSCTXT* pctxt, s1ap_NASSecurityParameterstoE_UTRAN value);

EXTERN int asn1PD_s1ap_NASSecurityParameterstoE_UTRAN (OSCTXT* pctxt, s1ap_NASSecurityParameterstoE_UTRAN* pvalue);

EXTERN void asn1Print_s1ap_NASSecurityParameterstoE_UTRAN 
   (const char* name, const s1ap_NASSecurityParameterstoE_UTRAN* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASSecurityParameterstoE_UTRAN (const char* name, 
   s1ap_NASSecurityParameterstoE_UTRAN* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASSecurityParameterstoE_UTRAN (OSCTXT *pctxt, 
   const char* name, const s1ap_NASSecurityParameterstoE_UTRAN* pvalue);

EXTERN void asn1Copy_s1ap_NASSecurityParameterstoE_UTRAN (OSCTXT* pctxt, 
   const s1ap_NASSecurityParameterstoE_UTRAN* pSrcValue, 
   s1ap_NASSecurityParameterstoE_UTRAN* pDstValue);

EXTERN int asn1Init_s1ap_NASSecurityParameterstoE_UTRAN (
   s1ap_NASSecurityParameterstoE_UTRAN* pvalue);

EXTERN void asn1Free_s1ap_NASSecurityParameterstoE_UTRAN (OSCTXT *pctxt, 
   s1ap_NASSecurityParameterstoE_UTRAN* pvalue);

/**************************************************************/
/*                                                            */
/*  CSGMembershipStatus                                       */
/*                                                            */
/**************************************************************/
/*
CSGMembershipStatus ::= ENUMERATED { member(0), not-member(1) }
*/
typedef enum {
   s1ap_member = 0,
   s1ap_not_member = 1
} s1ap_CSGMembershipStatus_Root;

typedef OSUINT32 s1ap_CSGMembershipStatus;

EXTERN int asn1PE_s1ap_CSGMembershipStatus (OSCTXT* pctxt, s1ap_CSGMembershipStatus value);

EXTERN int asn1PD_s1ap_CSGMembershipStatus (OSCTXT* pctxt, s1ap_CSGMembershipStatus* pvalue);

EXTERN void asn1Print_s1ap_CSGMembershipStatus 
   (const char* name, const s1ap_CSGMembershipStatus* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSGMembershipStatus (const char* name, 
   s1ap_CSGMembershipStatus* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSGMembershipStatus (OSCTXT *pctxt, 
   const char* name, const s1ap_CSGMembershipStatus* pvalue);

EXTERN extern const OSEnumItem s1ap_CSGMembershipStatus_ENUMTAB[];
#define s1ap_CSGMembershipStatus_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_CSGMembershipStatus_ToString (OSINT32 value);

EXTERN int s1ap_CSGMembershipStatus_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CSGMembershipStatus* pvalue);

EXTERN int s1ap_CSGMembershipStatus_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CSGMembershipStatus* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  MME_Group_ID                                              */
/*                                                            */
/**************************************************************/
/*
MME-Group-ID ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN s1ap_MME_Group_ID {
   OSUINT32 numocts;
   OSOCTET data[2];
} s1ap_MME_Group_ID;

EXTERN int asn1PE_s1ap_MME_Group_ID (OSCTXT* pctxt, s1ap_MME_Group_ID* pvalue);

EXTERN int asn1PD_s1ap_MME_Group_ID (OSCTXT* pctxt, s1ap_MME_Group_ID* pvalue);

EXTERN void asn1Print_s1ap_MME_Group_ID 
   (const char* name, const s1ap_MME_Group_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_MME_Group_ID (const char* name, 
   s1ap_MME_Group_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MME_Group_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_MME_Group_ID* pvalue);

EXTERN void asn1Copy_s1ap_MME_Group_ID (OSCTXT* pctxt, 
   const s1ap_MME_Group_ID* pSrcValue, s1ap_MME_Group_ID* pDstValue);

EXTERN int asn1Init_s1ap_MME_Group_ID (s1ap_MME_Group_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  MME_Code                                                  */
/*                                                            */
/**************************************************************/
/*
MME-Code ::= OCTET STRING (SIZE (1))
*/
typedef struct EXTERN s1ap_MME_Code {
   OSUINT32 numocts;
   OSOCTET data[1];
} s1ap_MME_Code;

EXTERN int asn1PE_s1ap_MME_Code (OSCTXT* pctxt, s1ap_MME_Code* pvalue);

EXTERN int asn1PD_s1ap_MME_Code (OSCTXT* pctxt, s1ap_MME_Code* pvalue);

EXTERN void asn1Print_s1ap_MME_Code (const char* name, const s1ap_MME_Code* pvalue);

EXTERN int asn1PrtToStr_s1ap_MME_Code (const char* name, s1ap_MME_Code* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MME_Code (OSCTXT *pctxt, 
   const char* name, const s1ap_MME_Code* pvalue);

EXTERN void asn1Copy_s1ap_MME_Code (OSCTXT* pctxt, const s1ap_MME_Code* pSrcValue, 
   s1ap_MME_Code* pDstValue);

EXTERN int asn1Init_s1ap_MME_Code (s1ap_MME_Code* pvalue);

/**************************************************************/
/*                                                            */
/*  GUMMEI_iE_Extensions_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GUMMEI'
*/
typedef struct EXTERN s1ap_GUMMEI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_GUMMEI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_GUMMEI_iE_Extensions_element (OSCTXT* pctxt, s1ap_GUMMEI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_GUMMEI_iE_Extensions_element (OSCTXT* pctxt, s1ap_GUMMEI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_GUMMEI_iE_Extensions_element 
   (const char* name, const s1ap_GUMMEI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_GUMMEI_iE_Extensions_element (const char* name, 
   s1ap_GUMMEI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GUMMEI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_GUMMEI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_GUMMEI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_GUMMEI_iE_Extensions_element* pSrcValue, 
   s1ap_GUMMEI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_GUMMEI_iE_Extensions_element (
   s1ap_GUMMEI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_GUMMEI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_GUMMEI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GUMMEI_iE_Extensions                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GUMMEI'
*/
/* List of s1ap_GUMMEI_iE_Extensions_element */
typedef OSRTDList s1ap_GUMMEI_iE_Extensions;

EXTERN int asn1PE_s1ap_GUMMEI_iE_Extensions (OSCTXT* pctxt, s1ap_GUMMEI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_GUMMEI_iE_Extensions (OSCTXT* pctxt, s1ap_GUMMEI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_GUMMEI_iE_Extensions 
   (const char* name, const s1ap_GUMMEI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_GUMMEI_iE_Extensions (const char* name, 
   s1ap_GUMMEI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GUMMEI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_GUMMEI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_GUMMEI_iE_Extensions_element* 
   asn1Get_s1ap_GUMMEI_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_GUMMEI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_GUMMEI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_GUMMEI_iE_Extensions* pSrcValue, s1ap_GUMMEI_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_GUMMEI_iE_Extensions (s1ap_GUMMEI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_GUMMEI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_GUMMEI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GUMMEI                                                    */
/*                                                            */
/**************************************************************/
/*
GUMMEI ::= SEQUENCE {
   pLMN-Identity [0] PLMNidentity,
   mME-Group-ID [1] MME-Group-ID,
   mME-Code [2] MME-Code,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({GUMMEI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({GUMMEI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({GUMMEI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_GUMMEI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMN_Identity;
   s1ap_MME_Group_ID mME_Group_ID;
   s1ap_MME_Code mME_Code;
   s1ap_GUMMEI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_GUMMEI;

EXTERN int asn1PE_s1ap_GUMMEI (OSCTXT* pctxt, s1ap_GUMMEI* pvalue);

EXTERN int asn1PD_s1ap_GUMMEI (OSCTXT* pctxt, s1ap_GUMMEI* pvalue);

EXTERN void asn1Print_s1ap_GUMMEI (const char* name, const s1ap_GUMMEI* pvalue);

EXTERN int asn1PrtToStr_s1ap_GUMMEI (const char* name, s1ap_GUMMEI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GUMMEI (OSCTXT *pctxt, 
   const char* name, const s1ap_GUMMEI* pvalue);

EXTERN void asn1Copy_s1ap_GUMMEI (OSCTXT* pctxt, const s1ap_GUMMEI* pSrcValue, 
   s1ap_GUMMEI* pDstValue);

EXTERN int asn1Init_s1ap_GUMMEI (s1ap_GUMMEI* pvalue);

EXTERN void asn1Free_s1ap_GUMMEI (OSCTXT *pctxt, s1ap_GUMMEI* pvalue);

/**************************************************************/
/*                                                            */
/*  ManagementBasedMDTAllowed                                 */
/*                                                            */
/**************************************************************/
/*
ManagementBasedMDTAllowed ::= ENUMERATED { allowed(0), ... }
*/
typedef enum {
   s1ap_allowed_1 = 0
} s1ap_ManagementBasedMDTAllowed_Root;

typedef OSUINT32 s1ap_ManagementBasedMDTAllowed;

EXTERN int asn1PE_s1ap_ManagementBasedMDTAllowed (OSCTXT* pctxt, s1ap_ManagementBasedMDTAllowed value);

EXTERN int asn1PD_s1ap_ManagementBasedMDTAllowed (OSCTXT* pctxt, s1ap_ManagementBasedMDTAllowed* pvalue);

EXTERN void asn1Print_s1ap_ManagementBasedMDTAllowed 
   (const char* name, const s1ap_ManagementBasedMDTAllowed* pvalue);

EXTERN int asn1PrtToStr_s1ap_ManagementBasedMDTAllowed (const char* name, 
   s1ap_ManagementBasedMDTAllowed* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ManagementBasedMDTAllowed (OSCTXT *pctxt, 
   const char* name, const s1ap_ManagementBasedMDTAllowed* pvalue);

EXTERN extern const OSEnumItem s1ap_ManagementBasedMDTAllowed_ENUMTAB[];
#define s1ap_ManagementBasedMDTAllowed_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_ManagementBasedMDTAllowed_ToString (OSINT32 value);

EXTERN int s1ap_ManagementBasedMDTAllowed_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ManagementBasedMDTAllowed* pvalue);

EXTERN int s1ap_ManagementBasedMDTAllowed_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_ManagementBasedMDTAllowed* pvalue);

/**************************************************************/
/*                                                            */
/*  Masked_IMEISV                                             */
/*                                                            */
/**************************************************************/
/*
 I
Masked-IMEISV ::= BIT STRING  (SIZE (64))
*/
typedef struct s1ap_Masked_IMEISV {
   OSUINT32 numbits;
   OSOCTET data[8];
} s1ap_Masked_IMEISV;

EXTERN int asn1PE_s1ap_Masked_IMEISV (OSCTXT* pctxt, s1ap_Masked_IMEISV* pvalue);

EXTERN int asn1PD_s1ap_Masked_IMEISV (OSCTXT* pctxt, s1ap_Masked_IMEISV* pvalue);

EXTERN void asn1Print_s1ap_Masked_IMEISV 
   (const char* name, const s1ap_Masked_IMEISV* pvalue);

EXTERN int asn1PrtToStr_s1ap_Masked_IMEISV (const char* name, 
   s1ap_Masked_IMEISV* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Masked_IMEISV (OSCTXT *pctxt, 
   const char* name, const s1ap_Masked_IMEISV* pvalue);

EXTERN void asn1Copy_s1ap_Masked_IMEISV (OSCTXT* pctxt, 
   const s1ap_Masked_IMEISV* pSrcValue, s1ap_Masked_IMEISV* pDstValue);

EXTERN int asn1Init_s1ap_Masked_IMEISV (s1ap_Masked_IMEISV* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedActivityPeriod                                    */
/*                                                            */
/**************************************************************/
/*
ExpectedActivityPeriod ::= INTEGER (1..30 | 40 | 50 | 60 | 80 | 100 | 120 | 150 | 180 | 181, ...)
*/
typedef OSUINT32 s1ap_ExpectedActivityPeriod;

EXTERN int asn1PE_s1ap_ExpectedActivityPeriod (OSCTXT* pctxt, s1ap_ExpectedActivityPeriod value);

EXTERN int asn1PD_s1ap_ExpectedActivityPeriod (OSCTXT* pctxt, s1ap_ExpectedActivityPeriod* pvalue);

EXTERN void asn1Print_s1ap_ExpectedActivityPeriod 
   (const char* name, const s1ap_ExpectedActivityPeriod* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedActivityPeriod (const char* name, 
   s1ap_ExpectedActivityPeriod* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedActivityPeriod (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedActivityPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedIdlePeriod                                        */
/*                                                            */
/**************************************************************/
/*
ExpectedIdlePeriod ::= INTEGER (1..30 | 40 | 50 | 60 | 80 | 100 | 120 | 150 | 180 | 181, ...)
*/
typedef OSUINT32 s1ap_ExpectedIdlePeriod;

EXTERN int asn1PE_s1ap_ExpectedIdlePeriod (OSCTXT* pctxt, s1ap_ExpectedIdlePeriod value);

EXTERN int asn1PD_s1ap_ExpectedIdlePeriod (OSCTXT* pctxt, s1ap_ExpectedIdlePeriod* pvalue);

EXTERN void asn1Print_s1ap_ExpectedIdlePeriod 
   (const char* name, const s1ap_ExpectedIdlePeriod* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedIdlePeriod (const char* name, 
   s1ap_ExpectedIdlePeriod* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedIdlePeriod (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedIdlePeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceOfUEActivityBehaviourInformation                    */
/*                                                            */
/**************************************************************/
/*
SourceOfUEActivityBehaviourInformation ::= ENUMERATED { subscription-information(0), statistics(1), ... }
*/
typedef enum {
   s1ap_subscription_information = 0,
   s1ap_statistics = 1
} s1ap_SourceOfUEActivityBehaviourInformation_Root;

typedef OSUINT32 s1ap_SourceOfUEActivityBehaviourInformation;

EXTERN int asn1PE_s1ap_SourceOfUEActivityBehaviourInformation (OSCTXT* pctxt, s1ap_SourceOfUEActivityBehaviourInformation value);

EXTERN int asn1PD_s1ap_SourceOfUEActivityBehaviourInformation (OSCTXT* pctxt, s1ap_SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN void asn1Print_s1ap_SourceOfUEActivityBehaviourInformation 
   (const char* name, const s1ap_SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceOfUEActivityBehaviourInformation (
   const char* name, s1ap_SourceOfUEActivityBehaviourInformation* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceOfUEActivityBehaviourInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN extern const OSEnumItem s1ap_SourceOfUEActivityBehaviourInformation_ENUMTAB[];
#define s1ap_SourceOfUEActivityBehaviourInformation_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_SourceOfUEActivityBehaviourInformation_ToString (OSINT32 value);

EXTERN int s1ap_SourceOfUEActivityBehaviourInformation_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN int s1ap_SourceOfUEActivityBehaviourInformation_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_SourceOfUEActivityBehaviourInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEActivityBehaviour_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEActivityBehaviour'
*/
typedef struct EXTERN s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT* pctxt, s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT* pctxt, s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element 
   (const char* name, const s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element (
   const char* name, 
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pSrcValue, 
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element (
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEActivityBehaviour_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEActivityBehaviour'
*/
/* List of s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element */
typedef OSRTDList s1ap_ExpectedUEActivityBehaviour_iE_Extensions;

EXTERN int asn1PE_s1ap_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT* pctxt, s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT* pctxt, s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ExpectedUEActivityBehaviour_iE_Extensions 
   (const char* name, const s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedUEActivityBehaviour_iE_Extensions (
   const char* name, s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ExpectedUEActivityBehaviour_iE_Extensions_element* 
   asn1Get_s1ap_ExpectedUEActivityBehaviour_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pSrcValue, 
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ExpectedUEActivityBehaviour_iE_Extensions (
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEActivityBehaviour                               */
/*                                                            */
/**************************************************************/
/*
ExpectedUEActivityBehaviour ::= SEQUENCE {
   expectedActivityPeriod [0] ExpectedActivityPeriod OPTIONAL,
   expectedIdlePeriod [1] ExpectedIdlePeriod OPTIONAL,
   sourceofUEActivityBehaviourInformation [2] SourceOfUEActivityBehaviourInformation OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ExpectedUEActivityBehaviour-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ExpectedUEActivityBehaviour-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ExpectedUEActivityBehaviour-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ExpectedUEActivityBehaviour {
   struct {
      unsigned expectedActivityPeriodPresent : 1;
      unsigned expectedIdlePeriodPresent : 1;
      unsigned sourceofUEActivityBehaviourInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ExpectedActivityPeriod expectedActivityPeriod;
   s1ap_ExpectedIdlePeriod expectedIdlePeriod;
   s1ap_SourceOfUEActivityBehaviourInformation sourceofUEActivityBehaviourInformation;
   s1ap_ExpectedUEActivityBehaviour_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ExpectedUEActivityBehaviour;

EXTERN int asn1PE_s1ap_ExpectedUEActivityBehaviour (OSCTXT* pctxt, s1ap_ExpectedUEActivityBehaviour* pvalue);

EXTERN int asn1PD_s1ap_ExpectedUEActivityBehaviour (OSCTXT* pctxt, s1ap_ExpectedUEActivityBehaviour* pvalue);

EXTERN void asn1Print_s1ap_ExpectedUEActivityBehaviour 
   (const char* name, const s1ap_ExpectedUEActivityBehaviour* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedUEActivityBehaviour (const char* name, 
   s1ap_ExpectedUEActivityBehaviour* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedUEActivityBehaviour (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedUEActivityBehaviour* pvalue);

EXTERN void asn1Copy_s1ap_ExpectedUEActivityBehaviour (OSCTXT* pctxt, 
   const s1ap_ExpectedUEActivityBehaviour* pSrcValue, 
   s1ap_ExpectedUEActivityBehaviour* pDstValue);

EXTERN int asn1Init_s1ap_ExpectedUEActivityBehaviour (
   s1ap_ExpectedUEActivityBehaviour* pvalue);

EXTERN void asn1Free_s1ap_ExpectedUEActivityBehaviour (OSCTXT *pctxt, 
   s1ap_ExpectedUEActivityBehaviour* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedHOInterval                                        */
/*                                                            */
/**************************************************************/
/*
ExpectedHOInterval ::= ENUMERATED { sec15(0), sec30(1), sec60(2), sec90(3), sec120(4), sec180(5), long-time(6), ... }
*/
typedef enum {
   s1ap_sec15 = 0,
   s1ap_sec30 = 1,
   s1ap_sec60 = 2,
   s1ap_sec90 = 3,
   s1ap_sec120 = 4,
   s1ap_sec180 = 5,
   s1ap_long_time = 6
} s1ap_ExpectedHOInterval_Root;

typedef OSUINT32 s1ap_ExpectedHOInterval;

EXTERN int asn1PE_s1ap_ExpectedHOInterval (OSCTXT* pctxt, s1ap_ExpectedHOInterval value);

EXTERN int asn1PD_s1ap_ExpectedHOInterval (OSCTXT* pctxt, s1ap_ExpectedHOInterval* pvalue);

EXTERN void asn1Print_s1ap_ExpectedHOInterval 
   (const char* name, const s1ap_ExpectedHOInterval* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedHOInterval (const char* name, 
   s1ap_ExpectedHOInterval* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedHOInterval (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedHOInterval* pvalue);

EXTERN extern const OSEnumItem s1ap_ExpectedHOInterval_ENUMTAB[];
#define s1ap_ExpectedHOInterval_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* s1ap_ExpectedHOInterval_ToString (OSINT32 value);

EXTERN int s1ap_ExpectedHOInterval_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ExpectedHOInterval* pvalue);

EXTERN int s1ap_ExpectedHOInterval_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ExpectedHOInterval* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEBehaviour_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEBehaviour'
*/
typedef struct EXTERN s1ap_ExpectedUEBehaviour_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ExpectedUEBehaviour_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT* pctxt, s1ap_ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT* pctxt, s1ap_ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ExpectedUEBehaviour_iE_Extensions_element 
   (const char* name, const s1ap_ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedUEBehaviour_iE_Extensions_element (
   const char* name, s1ap_ExpectedUEBehaviour_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ExpectedUEBehaviour_iE_Extensions_element* pSrcValue, 
   s1ap_ExpectedUEBehaviour_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ExpectedUEBehaviour_iE_Extensions_element (
   s1ap_ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ExpectedUEBehaviour_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEBehaviour_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEBehaviour'
*/
/* List of s1ap_ExpectedUEBehaviour_iE_Extensions_element */
typedef OSRTDList s1ap_ExpectedUEBehaviour_iE_Extensions;

EXTERN int asn1PE_s1ap_ExpectedUEBehaviour_iE_Extensions (OSCTXT* pctxt, s1ap_ExpectedUEBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ExpectedUEBehaviour_iE_Extensions (OSCTXT* pctxt, s1ap_ExpectedUEBehaviour_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ExpectedUEBehaviour_iE_Extensions 
   (const char* name, const s1ap_ExpectedUEBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedUEBehaviour_iE_Extensions (const char* name, 
   s1ap_ExpectedUEBehaviour_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedUEBehaviour_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedUEBehaviour_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ExpectedUEBehaviour_iE_Extensions_element* 
   asn1Get_s1ap_ExpectedUEBehaviour_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_ExpectedUEBehaviour_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ExpectedUEBehaviour_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ExpectedUEBehaviour_iE_Extensions* pSrcValue, 
   s1ap_ExpectedUEBehaviour_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ExpectedUEBehaviour_iE_Extensions (
   s1ap_ExpectedUEBehaviour_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ExpectedUEBehaviour_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ExpectedUEBehaviour_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEBehaviour                                       */
/*                                                            */
/**************************************************************/
/*
ExpectedUEBehaviour ::= SEQUENCE {
   expectedActivity [0] ExpectedUEActivityBehaviour OPTIONAL,
   expectedHOInterval [1] ExpectedHOInterval OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ExpectedUEBehaviour-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ExpectedUEBehaviour-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ExpectedUEBehaviour-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ExpectedUEBehaviour {
   struct {
      unsigned expectedActivityPresent : 1;
      unsigned expectedHOIntervalPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ExpectedUEActivityBehaviour expectedActivity;
   s1ap_ExpectedHOInterval expectedHOInterval;
   s1ap_ExpectedUEBehaviour_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ExpectedUEBehaviour;

EXTERN int asn1PE_s1ap_ExpectedUEBehaviour (OSCTXT* pctxt, s1ap_ExpectedUEBehaviour* pvalue);

EXTERN int asn1PD_s1ap_ExpectedUEBehaviour (OSCTXT* pctxt, s1ap_ExpectedUEBehaviour* pvalue);

EXTERN void asn1Print_s1ap_ExpectedUEBehaviour 
   (const char* name, const s1ap_ExpectedUEBehaviour* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExpectedUEBehaviour (const char* name, 
   s1ap_ExpectedUEBehaviour* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExpectedUEBehaviour (OSCTXT *pctxt, 
   const char* name, const s1ap_ExpectedUEBehaviour* pvalue);

EXTERN void asn1Copy_s1ap_ExpectedUEBehaviour (OSCTXT* pctxt, 
   const s1ap_ExpectedUEBehaviour* pSrcValue, s1ap_ExpectedUEBehaviour*
    pDstValue);

EXTERN int asn1Init_s1ap_ExpectedUEBehaviour (s1ap_ExpectedUEBehaviour* pvalue);

EXTERN void asn1Free_s1ap_ExpectedUEBehaviour (OSCTXT *pctxt, 
   s1ap_ExpectedUEBehaviour* pvalue);

/**************************************************************/
/*                                                            */
/*  ProSeDirectDiscovery                                      */
/*                                                            */
/**************************************************************/
/*
ProSeDirectDiscovery ::= ENUMERATED { authorized(0), not-authorized(1), ... }
*/
typedef enum {
   s1ap_authorized = 0,
   s1ap_not_authorized = 1
} s1ap_ProSeDirectDiscovery_Root;

typedef OSUINT32 s1ap_ProSeDirectDiscovery;

EXTERN int asn1PE_s1ap_ProSeDirectDiscovery (OSCTXT* pctxt, s1ap_ProSeDirectDiscovery value);

EXTERN int asn1PD_s1ap_ProSeDirectDiscovery (OSCTXT* pctxt, s1ap_ProSeDirectDiscovery* pvalue);

EXTERN void asn1Print_s1ap_ProSeDirectDiscovery 
   (const char* name, const s1ap_ProSeDirectDiscovery* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProSeDirectDiscovery (const char* name, 
   s1ap_ProSeDirectDiscovery* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProSeDirectDiscovery (OSCTXT *pctxt, 
   const char* name, const s1ap_ProSeDirectDiscovery* pvalue);

EXTERN extern const OSEnumItem s1ap_ProSeDirectDiscovery_ENUMTAB[];
#define s1ap_ProSeDirectDiscovery_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_ProSeDirectDiscovery_ToString (OSINT32 value);

EXTERN int s1ap_ProSeDirectDiscovery_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ProSeDirectDiscovery* pvalue);

EXTERN int s1ap_ProSeDirectDiscovery_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ProSeDirectDiscovery* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ProSeDirectCommunication                                  */
/*                                                            */
/**************************************************************/
/*
ProSeDirectCommunication ::= ENUMERATED { authorized(0), not-authorized(1), ... }
*/
typedef enum {
   s1ap_authorized_2 = 0,
   s1ap_not_authorized_2 = 1
} s1ap_ProSeDirectCommunication_Root;

typedef OSUINT32 s1ap_ProSeDirectCommunication;

EXTERN int asn1PE_s1ap_ProSeDirectCommunication (OSCTXT* pctxt, s1ap_ProSeDirectCommunication value);

EXTERN int asn1PD_s1ap_ProSeDirectCommunication (OSCTXT* pctxt, s1ap_ProSeDirectCommunication* pvalue);

EXTERN void asn1Print_s1ap_ProSeDirectCommunication 
   (const char* name, const s1ap_ProSeDirectCommunication* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProSeDirectCommunication (const char* name, 
   s1ap_ProSeDirectCommunication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProSeDirectCommunication (OSCTXT *pctxt, 
   const char* name, const s1ap_ProSeDirectCommunication* pvalue);

EXTERN extern const OSEnumItem s1ap_ProSeDirectCommunication_ENUMTAB[];
#define s1ap_ProSeDirectCommunication_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_ProSeDirectCommunication_ToString (OSINT32 value);

EXTERN int s1ap_ProSeDirectCommunication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ProSeDirectCommunication* pvalue);

EXTERN int s1ap_ProSeDirectCommunication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_ProSeDirectCommunication* pvalue);

/**************************************************************/
/*                                                            */
/*  ProSeUEtoNetworkRelaying                                  */
/*                                                            */
/**************************************************************/
/*
ProSeUEtoNetworkRelaying ::= ENUMERATED { authorized(0), not-authorized(1), ... }
*/
typedef enum {
   s1ap_authorized_1 = 0,
   s1ap_not_authorized_1 = 1
} s1ap_ProSeUEtoNetworkRelaying_Root;

typedef OSUINT32 s1ap_ProSeUEtoNetworkRelaying;

EXTERN int asn1PE_s1ap_ProSeUEtoNetworkRelaying (OSCTXT* pctxt, s1ap_ProSeUEtoNetworkRelaying value);

EXTERN int asn1PD_s1ap_ProSeUEtoNetworkRelaying (OSCTXT* pctxt, s1ap_ProSeUEtoNetworkRelaying* pvalue);

EXTERN void asn1Print_s1ap_ProSeUEtoNetworkRelaying 
   (const char* name, const s1ap_ProSeUEtoNetworkRelaying* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProSeUEtoNetworkRelaying (const char* name, 
   s1ap_ProSeUEtoNetworkRelaying* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProSeUEtoNetworkRelaying (OSCTXT *pctxt, 
   const char* name, const s1ap_ProSeUEtoNetworkRelaying* pvalue);

EXTERN extern const OSEnumItem s1ap_ProSeUEtoNetworkRelaying_ENUMTAB[];
#define s1ap_ProSeUEtoNetworkRelaying_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_ProSeUEtoNetworkRelaying_ToString (OSINT32 value);

EXTERN int s1ap_ProSeUEtoNetworkRelaying_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ProSeUEtoNetworkRelaying* pvalue);

EXTERN int s1ap_ProSeUEtoNetworkRelaying_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_ProSeUEtoNetworkRelaying* pvalue);

/**************************************************************/
/*                                                            */
/*  ProSeAuthorized_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProSeAuthorized'
*/
typedef struct EXTERN s1ap_ProSeAuthorized_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ProSeAuthorized_ExtIEs_TVALUE t;

      /**
       * ProSeAuthorized-ExtIEs information objects
       */
      union {
         /**
          * id: id-ProSeUEtoNetworkRelaying
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ProSeUEtoNetworkRelaying _ProSeAuthorized_ExtIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_ProSeAuthorized_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ProSeAuthorized_iE_Extensions_element (OSCTXT* pctxt, s1ap_ProSeAuthorized_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ProSeAuthorized_iE_Extensions_element (OSCTXT* pctxt, s1ap_ProSeAuthorized_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ProSeAuthorized_iE_Extensions_element 
   (const char* name, const s1ap_ProSeAuthorized_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProSeAuthorized_iE_Extensions_element (const char* name, 
   s1ap_ProSeAuthorized_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProSeAuthorized_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ProSeAuthorized_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ProSeAuthorized_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ProSeAuthorized_iE_Extensions_element* pSrcValue, 
   s1ap_ProSeAuthorized_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ProSeAuthorized_iE_Extensions_element (
   s1ap_ProSeAuthorized_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ProSeAuthorized_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProSeAuthorized'
*/
/* List of s1ap_ProSeAuthorized_iE_Extensions_element */
typedef OSRTDList s1ap_ProSeAuthorized_iE_Extensions;

EXTERN int asn1PE_s1ap_ProSeAuthorized_iE_Extensions (OSCTXT* pctxt, s1ap_ProSeAuthorized_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ProSeAuthorized_iE_Extensions (OSCTXT* pctxt, s1ap_ProSeAuthorized_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ProSeAuthorized_iE_Extensions 
   (const char* name, const s1ap_ProSeAuthorized_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProSeAuthorized_iE_Extensions (const char* name, 
   s1ap_ProSeAuthorized_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProSeAuthorized_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ProSeAuthorized_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ProSeAuthorized_iE_Extensions_element* 
   asn1Get_s1ap_ProSeAuthorized_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ProSeAuthorized_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ProSeAuthorized_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ProSeAuthorized_iE_Extensions* pSrcValue, 
   s1ap_ProSeAuthorized_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ProSeAuthorized_iE_Extensions (
   s1ap_ProSeAuthorized_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ProSeAuthorized_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ProSeAuthorized_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ProSeAuthorized                                           */
/*                                                            */
/**************************************************************/
/*
ProSeAuthorized ::= SEQUENCE {
   proSeDirectDiscovery [0] ProSeDirectDiscovery OPTIONAL,
   proSeDirectCommunication [1] ProSeDirectCommunication OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ProSeAuthorized-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ProSeAuthorized-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ProSeAuthorized-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ProSeAuthorized {
   struct {
      unsigned proSeDirectDiscoveryPresent : 1;
      unsigned proSeDirectCommunicationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ProSeDirectDiscovery proSeDirectDiscovery;
   s1ap_ProSeDirectCommunication proSeDirectCommunication;
   s1ap_ProSeAuthorized_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ProSeAuthorized;

EXTERN int asn1PE_s1ap_ProSeAuthorized (OSCTXT* pctxt, s1ap_ProSeAuthorized* pvalue);

EXTERN int asn1PD_s1ap_ProSeAuthorized (OSCTXT* pctxt, s1ap_ProSeAuthorized* pvalue);

EXTERN void asn1Print_s1ap_ProSeAuthorized 
   (const char* name, const s1ap_ProSeAuthorized* pvalue);

EXTERN int asn1PrtToStr_s1ap_ProSeAuthorized (const char* name, 
   s1ap_ProSeAuthorized* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ProSeAuthorized (OSCTXT *pctxt, 
   const char* name, const s1ap_ProSeAuthorized* pvalue);

EXTERN void asn1Copy_s1ap_ProSeAuthorized (OSCTXT* pctxt, 
   const s1ap_ProSeAuthorized* pSrcValue, s1ap_ProSeAuthorized* pDstValue);

EXTERN int asn1Init_s1ap_ProSeAuthorized (s1ap_ProSeAuthorized* pvalue);

EXTERN void asn1Free_s1ap_ProSeAuthorized (OSCTXT *pctxt, 
   s1ap_ProSeAuthorized* pvalue);

/**************************************************************/
/*                                                            */
/*  UEUserPlaneCIoTSupportIndicator                           */
/*                                                            */
/**************************************************************/
/*
UEUserPlaneCIoTSupportIndicator ::= ENUMERATED { supported(0), ... }
*/
typedef enum {
   s1ap_supported_1 = 0
} s1ap_UEUserPlaneCIoTSupportIndicator_Root;

typedef OSUINT32 s1ap_UEUserPlaneCIoTSupportIndicator;

EXTERN int asn1PE_s1ap_UEUserPlaneCIoTSupportIndicator (OSCTXT* pctxt, s1ap_UEUserPlaneCIoTSupportIndicator value);

EXTERN int asn1PD_s1ap_UEUserPlaneCIoTSupportIndicator (OSCTXT* pctxt, s1ap_UEUserPlaneCIoTSupportIndicator* pvalue);

EXTERN void asn1Print_s1ap_UEUserPlaneCIoTSupportIndicator 
   (const char* name, const s1ap_UEUserPlaneCIoTSupportIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEUserPlaneCIoTSupportIndicator (const char* name, 
   s1ap_UEUserPlaneCIoTSupportIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEUserPlaneCIoTSupportIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_UEUserPlaneCIoTSupportIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_UEUserPlaneCIoTSupportIndicator_ENUMTAB[];
#define s1ap_UEUserPlaneCIoTSupportIndicator_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_UEUserPlaneCIoTSupportIndicator_ToString (OSINT32 value);

EXTERN int s1ap_UEUserPlaneCIoTSupportIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_UEUserPlaneCIoTSupportIndicator* pvalue);

EXTERN int s1ap_UEUserPlaneCIoTSupportIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_UEUserPlaneCIoTSupportIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleUE                                                 */
/*                                                            */
/**************************************************************/
/*
VehicleUE ::= ENUMERATED { authorized(0), not-authorized(1), ... }
*/
typedef enum {
   s1ap_authorized_3 = 0,
   s1ap_not_authorized_3 = 1
} s1ap_VehicleUE_Root;

typedef OSUINT32 s1ap_VehicleUE;

EXTERN int asn1PE_s1ap_VehicleUE (OSCTXT* pctxt, s1ap_VehicleUE value);

EXTERN int asn1PD_s1ap_VehicleUE (OSCTXT* pctxt, s1ap_VehicleUE* pvalue);

EXTERN void asn1Print_s1ap_VehicleUE (const char* name, const s1ap_VehicleUE* pvalue);

EXTERN int asn1PrtToStr_s1ap_VehicleUE (const char* name, s1ap_VehicleUE* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_VehicleUE (OSCTXT *pctxt, 
   const char* name, const s1ap_VehicleUE* pvalue);

EXTERN extern const OSEnumItem s1ap_VehicleUE_ENUMTAB[];
#define s1ap_VehicleUE_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_VehicleUE_ToString (OSINT32 value);

EXTERN int s1ap_VehicleUE_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_VehicleUE* pvalue);

EXTERN int s1ap_VehicleUE_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_VehicleUE* pvalue);

/**************************************************************/
/*                                                            */
/*  PedestrianUE                                              */
/*                                                            */
/**************************************************************/
/*
PedestrianUE ::= ENUMERATED { authorized(0), not-authorized(1), ... }
*/
typedef enum {
   s1ap_authorized_4 = 0,
   s1ap_not_authorized_4 = 1
} s1ap_PedestrianUE_Root;

typedef OSUINT32 s1ap_PedestrianUE;

EXTERN int asn1PE_s1ap_PedestrianUE (OSCTXT* pctxt, s1ap_PedestrianUE value);

EXTERN int asn1PD_s1ap_PedestrianUE (OSCTXT* pctxt, s1ap_PedestrianUE* pvalue);

EXTERN void asn1Print_s1ap_PedestrianUE 
   (const char* name, const s1ap_PedestrianUE* pvalue);

EXTERN int asn1PrtToStr_s1ap_PedestrianUE (const char* name, 
   s1ap_PedestrianUE* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PedestrianUE (OSCTXT *pctxt, 
   const char* name, const s1ap_PedestrianUE* pvalue);

EXTERN extern const OSEnumItem s1ap_PedestrianUE_ENUMTAB[];
#define s1ap_PedestrianUE_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_PedestrianUE_ToString (OSINT32 value);

EXTERN int s1ap_PedestrianUE_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_PedestrianUE* pvalue);

EXTERN int s1ap_PedestrianUE_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_PedestrianUE* pvalue);

/**************************************************************/
/*                                                            */
/*  V2XServicesAuthorized_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'V2XServicesAuthorized'
*/
typedef struct EXTERN s1ap_V2XServicesAuthorized_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_V2XServicesAuthorized_iE_Extensions_element;

EXTERN int asn1PE_s1ap_V2XServicesAuthorized_iE_Extensions_element (OSCTXT* pctxt, s1ap_V2XServicesAuthorized_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_V2XServicesAuthorized_iE_Extensions_element (OSCTXT* pctxt, s1ap_V2XServicesAuthorized_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_V2XServicesAuthorized_iE_Extensions_element 
   (const char* name, const s1ap_V2XServicesAuthorized_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_V2XServicesAuthorized_iE_Extensions_element (
   const char* name, s1ap_V2XServicesAuthorized_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_V2XServicesAuthorized_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_V2XServicesAuthorized_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_V2XServicesAuthorized_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_V2XServicesAuthorized_iE_Extensions_element* pSrcValue, 
   s1ap_V2XServicesAuthorized_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_V2XServicesAuthorized_iE_Extensions_element (
   s1ap_V2XServicesAuthorized_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_V2XServicesAuthorized_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_V2XServicesAuthorized_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  V2XServicesAuthorized_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'V2XServicesAuthorized'
*/
/* List of s1ap_V2XServicesAuthorized_iE_Extensions_element */
typedef OSRTDList s1ap_V2XServicesAuthorized_iE_Extensions;

EXTERN int asn1PE_s1ap_V2XServicesAuthorized_iE_Extensions (OSCTXT* pctxt, s1ap_V2XServicesAuthorized_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_V2XServicesAuthorized_iE_Extensions (OSCTXT* pctxt, s1ap_V2XServicesAuthorized_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_V2XServicesAuthorized_iE_Extensions 
   (const char* name, const s1ap_V2XServicesAuthorized_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_V2XServicesAuthorized_iE_Extensions (const char* name, 
   s1ap_V2XServicesAuthorized_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_V2XServicesAuthorized_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_V2XServicesAuthorized_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_V2XServicesAuthorized_iE_Extensions_element* 
   asn1Get_s1ap_V2XServicesAuthorized_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_V2XServicesAuthorized_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_V2XServicesAuthorized_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_V2XServicesAuthorized_iE_Extensions* pSrcValue, 
   s1ap_V2XServicesAuthorized_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_V2XServicesAuthorized_iE_Extensions (
   s1ap_V2XServicesAuthorized_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_V2XServicesAuthorized_iE_Extensions (OSCTXT *pctxt, 
   s1ap_V2XServicesAuthorized_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  V2XServicesAuthorized                                     */
/*                                                            */
/**************************************************************/
/*
V2XServicesAuthorized ::= SEQUENCE {
   vehicleUE [0] VehicleUE OPTIONAL,
   pedestrianUE [1] PedestrianUE OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({V2XServicesAuthorized-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({V2XServicesAuthorized-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({V2XServicesAuthorized-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_V2XServicesAuthorized {
   struct {
      unsigned vehicleUEPresent : 1;
      unsigned pedestrianUEPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_VehicleUE vehicleUE;
   s1ap_PedestrianUE pedestrianUE;
   s1ap_V2XServicesAuthorized_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_V2XServicesAuthorized;

EXTERN int asn1PE_s1ap_V2XServicesAuthorized (OSCTXT* pctxt, s1ap_V2XServicesAuthorized* pvalue);

EXTERN int asn1PD_s1ap_V2XServicesAuthorized (OSCTXT* pctxt, s1ap_V2XServicesAuthorized* pvalue);

EXTERN void asn1Print_s1ap_V2XServicesAuthorized 
   (const char* name, const s1ap_V2XServicesAuthorized* pvalue);

EXTERN int asn1PrtToStr_s1ap_V2XServicesAuthorized (const char* name, 
   s1ap_V2XServicesAuthorized* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_V2XServicesAuthorized (OSCTXT *pctxt, 
   const char* name, const s1ap_V2XServicesAuthorized* pvalue);

EXTERN void asn1Copy_s1ap_V2XServicesAuthorized (OSCTXT* pctxt, 
   const s1ap_V2XServicesAuthorized* pSrcValue, s1ap_V2XServicesAuthorized*
    pDstValue);

EXTERN int asn1Init_s1ap_V2XServicesAuthorized (s1ap_V2XServicesAuthorized* pvalue);

EXTERN void asn1Free_s1ap_V2XServicesAuthorized (OSCTXT *pctxt, 
   s1ap_V2XServicesAuthorized* pvalue);

/**************************************************************/
/*                                                            */
/*  UESidelinkAggregateMaximumBitrate_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESidelinkAggregateMaximumBitrate'
*/
typedef struct EXTERN s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element (OSCTXT* pctxt, s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element (OSCTXT* pctxt, s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element 
   (const char* name, const s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element (
   const char* name, 
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pSrcValue, 
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element (
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UESidelinkAggregateMaximumBitrate_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESidelinkAggregateMaximumBitrate'
*/
/* List of s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element */
typedef OSRTDList s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions;

EXTERN int asn1PE_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions (OSCTXT* pctxt, s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions (OSCTXT* pctxt, s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions 
   (const char* name, const s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions (
   const char* name, 
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions_element* 
   asn1Get_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pSrcValue, 
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions (
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UESidelinkAggregateMaximumBitrate                         */
/*                                                            */
/**************************************************************/
/*
UESidelinkAggregateMaximumBitrate ::= SEQUENCE {
   uESidelinkAggregateMaximumBitRate [0] BitRate,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UE-Sidelink-Aggregate-MaximumBitrates-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UE-Sidelink-Aggregate-MaximumBitrates-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UE-Sidelink-Aggregate-MaximumBitrates-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UESidelinkAggregateMaximumBitrate {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_BitRate uESidelinkAggregateMaximumBitRate;
   s1ap_UESidelinkAggregateMaximumBitrate_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UESidelinkAggregateMaximumBitrate;

EXTERN int asn1PE_s1ap_UESidelinkAggregateMaximumBitrate (OSCTXT* pctxt, s1ap_UESidelinkAggregateMaximumBitrate* pvalue);

EXTERN int asn1PD_s1ap_UESidelinkAggregateMaximumBitrate (OSCTXT* pctxt, s1ap_UESidelinkAggregateMaximumBitrate* pvalue);

EXTERN void asn1Print_s1ap_UESidelinkAggregateMaximumBitrate 
   (const char* name, const s1ap_UESidelinkAggregateMaximumBitrate* pvalue);

EXTERN int asn1PrtToStr_s1ap_UESidelinkAggregateMaximumBitrate (const char* name, 
   s1ap_UESidelinkAggregateMaximumBitrate* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UESidelinkAggregateMaximumBitrate (OSCTXT *pctxt, 
   const char* name, const s1ap_UESidelinkAggregateMaximumBitrate* pvalue);

EXTERN void asn1Copy_s1ap_UESidelinkAggregateMaximumBitrate (OSCTXT* pctxt, 
   const s1ap_UESidelinkAggregateMaximumBitrate* pSrcValue, 
   s1ap_UESidelinkAggregateMaximumBitrate* pDstValue);

EXTERN int asn1Init_s1ap_UESidelinkAggregateMaximumBitrate (
   s1ap_UESidelinkAggregateMaximumBitrate* pvalue);

EXTERN void asn1Free_s1ap_UESidelinkAggregateMaximumBitrate (OSCTXT *pctxt, 
   s1ap_UESidelinkAggregateMaximumBitrate* pvalue);

/**************************************************************/
/*                                                            */
/*  EnhancedCoverageRestricted                                */
/*                                                            */
/**************************************************************/
/*
EnhancedCoverageRestricted ::= ENUMERATED { restricted(0), ... }
*/
typedef enum {
   s1ap_restricted = 0
} s1ap_EnhancedCoverageRestricted_Root;

typedef OSUINT32 s1ap_EnhancedCoverageRestricted;

EXTERN int asn1PE_s1ap_EnhancedCoverageRestricted (OSCTXT* pctxt, s1ap_EnhancedCoverageRestricted value);

EXTERN int asn1PD_s1ap_EnhancedCoverageRestricted (OSCTXT* pctxt, s1ap_EnhancedCoverageRestricted* pvalue);

EXTERN void asn1Print_s1ap_EnhancedCoverageRestricted 
   (const char* name, const s1ap_EnhancedCoverageRestricted* pvalue);

EXTERN int asn1PrtToStr_s1ap_EnhancedCoverageRestricted (const char* name, 
   s1ap_EnhancedCoverageRestricted* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EnhancedCoverageRestricted (OSCTXT *pctxt, 
   const char* name, const s1ap_EnhancedCoverageRestricted* pvalue);

EXTERN extern const OSEnumItem s1ap_EnhancedCoverageRestricted_ENUMTAB[];
#define s1ap_EnhancedCoverageRestricted_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_EnhancedCoverageRestricted_ToString (OSINT32 value);

EXTERN int s1ap_EnhancedCoverageRestricted_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_EnhancedCoverageRestricted* pvalue);

EXTERN int s1ap_EnhancedCoverageRestricted_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_EnhancedCoverageRestricted* pvalue);

/**************************************************************/
/*                                                            */
/*  NRencryptionAlgorithms                                    */
/*                                                            */
/**************************************************************/
/*
NRencryptionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr s1ap_NRencryptionAlgorithms;

EXTERN int asn1PE_s1ap_NRencryptionAlgorithms (OSCTXT* pctxt, s1ap_NRencryptionAlgorithms value);

EXTERN int asn1PD_s1ap_NRencryptionAlgorithms (OSCTXT* pctxt, s1ap_NRencryptionAlgorithms* pvalue);

EXTERN void asn1Print_s1ap_NRencryptionAlgorithms 
   (const char* name, const s1ap_NRencryptionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRencryptionAlgorithms (const char* name, 
   s1ap_NRencryptionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRencryptionAlgorithms (OSCTXT *pctxt, 
   const char* name, const s1ap_NRencryptionAlgorithms* pvalue);

EXTERN void asn1Copy_s1ap_NRencryptionAlgorithms (OSCTXT* pctxt, 
   const s1ap_NRencryptionAlgorithms* pSrcValue, s1ap_NRencryptionAlgorithms*
    pDstValue);

EXTERN int asn1Init_s1ap_NRencryptionAlgorithms (s1ap_NRencryptionAlgorithms* pvalue);

EXTERN void asn1Free_s1ap_NRencryptionAlgorithms (OSCTXT *pctxt, 
   s1ap_NRencryptionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  NRintegrityProtectionAlgorithms                           */
/*                                                            */
/**************************************************************/
/*
NRintegrityProtectionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr s1ap_NRintegrityProtectionAlgorithms;

EXTERN int asn1PE_s1ap_NRintegrityProtectionAlgorithms (OSCTXT* pctxt, s1ap_NRintegrityProtectionAlgorithms value);

EXTERN int asn1PD_s1ap_NRintegrityProtectionAlgorithms (OSCTXT* pctxt, s1ap_NRintegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Print_s1ap_NRintegrityProtectionAlgorithms 
   (const char* name, const s1ap_NRintegrityProtectionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRintegrityProtectionAlgorithms (const char* name, 
   s1ap_NRintegrityProtectionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRintegrityProtectionAlgorithms (OSCTXT *pctxt, 
   const char* name, const s1ap_NRintegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Copy_s1ap_NRintegrityProtectionAlgorithms (OSCTXT* pctxt, 
   const s1ap_NRintegrityProtectionAlgorithms* pSrcValue, 
   s1ap_NRintegrityProtectionAlgorithms* pDstValue);

EXTERN int asn1Init_s1ap_NRintegrityProtectionAlgorithms (
   s1ap_NRintegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Free_s1ap_NRintegrityProtectionAlgorithms (OSCTXT *pctxt, 
   s1ap_NRintegrityProtectionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  NRUESecurityCapabilities_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NRUESecurityCapabilities'
*/
typedef struct EXTERN s1ap_NRUESecurityCapabilities_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_NRUESecurityCapabilities_iE_Extensions_element;

EXTERN int asn1PE_s1ap_NRUESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, s1ap_NRUESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_NRUESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, s1ap_NRUESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_NRUESecurityCapabilities_iE_Extensions_element 
   (const char* name, const s1ap_NRUESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRUESecurityCapabilities_iE_Extensions_element (
   const char* name, 
   s1ap_NRUESecurityCapabilities_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRUESecurityCapabilities_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_NRUESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_NRUESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_NRUESecurityCapabilities_iE_Extensions_element* pSrcValue, 
   s1ap_NRUESecurityCapabilities_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_NRUESecurityCapabilities_iE_Extensions_element (
   s1ap_NRUESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_NRUESecurityCapabilities_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_NRUESecurityCapabilities_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NRUESecurityCapabilities_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NRUESecurityCapabilities'
*/
/* List of s1ap_NRUESecurityCapabilities_iE_Extensions_element */
typedef OSRTDList s1ap_NRUESecurityCapabilities_iE_Extensions;

EXTERN int asn1PE_s1ap_NRUESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, s1ap_NRUESecurityCapabilities_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_NRUESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, s1ap_NRUESecurityCapabilities_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_NRUESecurityCapabilities_iE_Extensions 
   (const char* name, const s1ap_NRUESecurityCapabilities_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRUESecurityCapabilities_iE_Extensions (
   const char* name, s1ap_NRUESecurityCapabilities_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRUESecurityCapabilities_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_NRUESecurityCapabilities_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_NRUESecurityCapabilities_iE_Extensions_element* 
   asn1Get_s1ap_NRUESecurityCapabilities_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_NRUESecurityCapabilities_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_NRUESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_NRUESecurityCapabilities_iE_Extensions* pSrcValue, 
   s1ap_NRUESecurityCapabilities_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_NRUESecurityCapabilities_iE_Extensions (
   s1ap_NRUESecurityCapabilities_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_NRUESecurityCapabilities_iE_Extensions (OSCTXT *pctxt, 
   s1ap_NRUESecurityCapabilities_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NRUESecurityCapabilities                                  */
/*                                                            */
/**************************************************************/
/*
NRUESecurityCapabilities ::= SEQUENCE {
   nRencryptionAlgorithms [0] NRencryptionAlgorithms,
   nRintegrityProtectionAlgorithms [1] NRintegrityProtectionAlgorithms,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({NRUESecurityCapabilities-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({NRUESecurityCapabilities-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({NRUESecurityCapabilities-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_NRUESecurityCapabilities {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_NRencryptionAlgorithms nRencryptionAlgorithms;
   s1ap_NRintegrityProtectionAlgorithms nRintegrityProtectionAlgorithms;
   s1ap_NRUESecurityCapabilities_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_NRUESecurityCapabilities;

EXTERN int asn1PE_s1ap_NRUESecurityCapabilities (OSCTXT* pctxt, s1ap_NRUESecurityCapabilities* pvalue);

EXTERN int asn1PD_s1ap_NRUESecurityCapabilities (OSCTXT* pctxt, s1ap_NRUESecurityCapabilities* pvalue);

EXTERN void asn1Print_s1ap_NRUESecurityCapabilities 
   (const char* name, const s1ap_NRUESecurityCapabilities* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRUESecurityCapabilities (const char* name, 
   s1ap_NRUESecurityCapabilities* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRUESecurityCapabilities (OSCTXT *pctxt, 
   const char* name, const s1ap_NRUESecurityCapabilities* pvalue);

EXTERN void asn1Copy_s1ap_NRUESecurityCapabilities (OSCTXT* pctxt, 
   const s1ap_NRUESecurityCapabilities* pSrcValue, 
   s1ap_NRUESecurityCapabilities* pDstValue);

EXTERN int asn1Init_s1ap_NRUESecurityCapabilities (
   s1ap_NRUESecurityCapabilities* pvalue);

EXTERN void asn1Free_s1ap_NRUESecurityCapabilities (OSCTXT *pctxt, 
   s1ap_NRUESecurityCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  CE_ModeBRestricted                                        */
/*                                                            */
/**************************************************************/
/*
CE-ModeBRestricted ::= ENUMERATED { restricted(0), not-restricted(1), ... }
*/
typedef enum {
   s1ap_restricted_1 = 0,
   s1ap_not_restricted = 1
} s1ap_CE_ModeBRestricted_Root;

typedef OSUINT32 s1ap_CE_ModeBRestricted;

EXTERN int asn1PE_s1ap_CE_ModeBRestricted (OSCTXT* pctxt, s1ap_CE_ModeBRestricted value);

EXTERN int asn1PD_s1ap_CE_ModeBRestricted (OSCTXT* pctxt, s1ap_CE_ModeBRestricted* pvalue);

EXTERN void asn1Print_s1ap_CE_ModeBRestricted 
   (const char* name, const s1ap_CE_ModeBRestricted* pvalue);

EXTERN int asn1PrtToStr_s1ap_CE_ModeBRestricted (const char* name, 
   s1ap_CE_ModeBRestricted* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CE_ModeBRestricted (OSCTXT *pctxt, 
   const char* name, const s1ap_CE_ModeBRestricted* pvalue);

EXTERN extern const OSEnumItem s1ap_CE_ModeBRestricted_ENUMTAB[];
#define s1ap_CE_ModeBRestricted_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_CE_ModeBRestricted_ToString (OSINT32 value);

EXTERN int s1ap_CE_ModeBRestricted_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CE_ModeBRestricted* pvalue);

EXTERN int s1ap_CE_ModeBRestricted_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CE_ModeBRestricted* pvalue);

/**************************************************************/
/*                                                            */
/*  AerialUEsubscriptionInformation                           */
/*                                                            */
/**************************************************************/
/*
AerialUEsubscriptionInformation ::= ENUMERATED { allowed(0), not-allowed(1), ... }
*/
typedef enum {
   s1ap_allowed = 0,
   s1ap_not_allowed = 1
} s1ap_AerialUEsubscriptionInformation_Root;

typedef OSUINT32 s1ap_AerialUEsubscriptionInformation;

EXTERN int asn1PE_s1ap_AerialUEsubscriptionInformation (OSCTXT* pctxt, s1ap_AerialUEsubscriptionInformation value);

EXTERN int asn1PD_s1ap_AerialUEsubscriptionInformation (OSCTXT* pctxt, s1ap_AerialUEsubscriptionInformation* pvalue);

EXTERN void asn1Print_s1ap_AerialUEsubscriptionInformation 
   (const char* name, const s1ap_AerialUEsubscriptionInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_AerialUEsubscriptionInformation (const char* name, 
   s1ap_AerialUEsubscriptionInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AerialUEsubscriptionInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_AerialUEsubscriptionInformation* pvalue);

EXTERN extern const OSEnumItem s1ap_AerialUEsubscriptionInformation_ENUMTAB[];
#define s1ap_AerialUEsubscriptionInformation_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_AerialUEsubscriptionInformation_ToString (OSINT32 value);

EXTERN int s1ap_AerialUEsubscriptionInformation_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_AerialUEsubscriptionInformation* pvalue);

EXTERN int s1ap_AerialUEsubscriptionInformation_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_AerialUEsubscriptionInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  PendingDataIndication                                     */
/*                                                            */
/**************************************************************/
/*
PendingDataIndication ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   s1ap_true__7 = 0
} s1ap_PendingDataIndication_Root;

typedef OSUINT32 s1ap_PendingDataIndication;

EXTERN int asn1PE_s1ap_PendingDataIndication (OSCTXT* pctxt, s1ap_PendingDataIndication value);

EXTERN int asn1PD_s1ap_PendingDataIndication (OSCTXT* pctxt, s1ap_PendingDataIndication* pvalue);

EXTERN void asn1Print_s1ap_PendingDataIndication 
   (const char* name, const s1ap_PendingDataIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_PendingDataIndication (const char* name, 
   s1ap_PendingDataIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PendingDataIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_PendingDataIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_PendingDataIndication_ENUMTAB[];
#define s1ap_PendingDataIndication_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_PendingDataIndication_ToString (OSINT32 value);

EXTERN int s1ap_PendingDataIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_PendingDataIndication* pvalue);

EXTERN int s1ap_PendingDataIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_PendingDataIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  Subscription_Based_UE_DifferentiationInfo_periodicCommun  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Subscription-Based-UE-DifferentiationInfo'
*/
typedef enum {
   s1ap_periodically = 0,
   s1ap_ondemand = 1
} s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator_Root;

typedef OSUINT32 s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator;

EXTERN int asn1PE_s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator value);

EXTERN int asn1PD_s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator* pvalue);

EXTERN void asn1Print_s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator 
   (const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator (
   const char* name, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator_ENUMTAB[];
#define s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator_ToString (OSINT32 value);

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator* pvalue)
      ;

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ScheduledCommunicationTime_iE_Extensions_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ScheduledCommunicationTime'
*/
typedef struct EXTERN s1ap_ScheduledCommunicationTime_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ScheduledCommunicationTime_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ScheduledCommunicationTime_iE_Extensions_element (OSCTXT* pctxt, s1ap_ScheduledCommunicationTime_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ScheduledCommunicationTime_iE_Extensions_element (OSCTXT* pctxt, s1ap_ScheduledCommunicationTime_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ScheduledCommunicationTime_iE_Extensions_element 
   (const char* name, const s1ap_ScheduledCommunicationTime_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ScheduledCommunicationTime_iE_Extensions_element (
   const char* name, 
   s1ap_ScheduledCommunicationTime_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ScheduledCommunicationTime_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ScheduledCommunicationTime_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ScheduledCommunicationTime_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ScheduledCommunicationTime_iE_Extensions_element* pSrcValue, 
   s1ap_ScheduledCommunicationTime_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ScheduledCommunicationTime_iE_Extensions_element (
   s1ap_ScheduledCommunicationTime_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ScheduledCommunicationTime_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ScheduledCommunicationTime_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduledCommunicationTime_iE_Extensions                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ScheduledCommunicationTime'
*/
/* List of s1ap_ScheduledCommunicationTime_iE_Extensions_element */
typedef OSRTDList s1ap_ScheduledCommunicationTime_iE_Extensions;

EXTERN int asn1PE_s1ap_ScheduledCommunicationTime_iE_Extensions (OSCTXT* pctxt, s1ap_ScheduledCommunicationTime_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ScheduledCommunicationTime_iE_Extensions (OSCTXT* pctxt, s1ap_ScheduledCommunicationTime_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ScheduledCommunicationTime_iE_Extensions 
   (const char* name, const s1ap_ScheduledCommunicationTime_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ScheduledCommunicationTime_iE_Extensions (
   const char* name, s1ap_ScheduledCommunicationTime_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ScheduledCommunicationTime_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ScheduledCommunicationTime_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ScheduledCommunicationTime_iE_Extensions_element* 
   asn1Get_s1ap_ScheduledCommunicationTime_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_ScheduledCommunicationTime_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ScheduledCommunicationTime_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ScheduledCommunicationTime_iE_Extensions* pSrcValue, 
   s1ap_ScheduledCommunicationTime_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ScheduledCommunicationTime_iE_Extensions (
   s1ap_ScheduledCommunicationTime_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ScheduledCommunicationTime_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ScheduledCommunicationTime_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduledCommunicationTime                                */
/*                                                            */
/**************************************************************/
/*
ScheduledCommunicationTime ::= SEQUENCE {
   dayofWeek [0] BIT STRING  (SIZE (7)) OPTIONAL,
   timeofDayStart [1] INTEGER (0..86399, ...) OPTIONAL,
   timeofDayEnd [2] INTEGER (0..86399, ...) OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ScheduledCommunicationTime-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ScheduledCommunicationTime-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ScheduledCommunicationTime-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ScheduledCommunicationTime {
   struct {
      unsigned dayofWeekPresent : 1;
      unsigned timeofDayStartPresent : 1;
      unsigned timeofDayEndPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ASN1BitStr32 dayofWeek;
   OSUINT32 timeofDayStart;
   OSUINT32 timeofDayEnd;
   s1ap_ScheduledCommunicationTime_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ScheduledCommunicationTime;

EXTERN int asn1PE_s1ap_ScheduledCommunicationTime (OSCTXT* pctxt, s1ap_ScheduledCommunicationTime* pvalue);

EXTERN int asn1PD_s1ap_ScheduledCommunicationTime (OSCTXT* pctxt, s1ap_ScheduledCommunicationTime* pvalue);

EXTERN void asn1Print_s1ap_ScheduledCommunicationTime 
   (const char* name, const s1ap_ScheduledCommunicationTime* pvalue);

EXTERN int asn1PrtToStr_s1ap_ScheduledCommunicationTime (const char* name, 
   s1ap_ScheduledCommunicationTime* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ScheduledCommunicationTime (OSCTXT *pctxt, 
   const char* name, const s1ap_ScheduledCommunicationTime* pvalue);

EXTERN void asn1Copy_s1ap_ScheduledCommunicationTime (OSCTXT* pctxt, 
   const s1ap_ScheduledCommunicationTime* pSrcValue, 
   s1ap_ScheduledCommunicationTime* pDstValue);

EXTERN int asn1Init_s1ap_ScheduledCommunicationTime (
   s1ap_ScheduledCommunicationTime* pvalue);

EXTERN void asn1Free_s1ap_ScheduledCommunicationTime (OSCTXT *pctxt, 
   s1ap_ScheduledCommunicationTime* pvalue);

/**************************************************************/
/*                                                            */
/*  Subscription_Based_UE_DifferentiationInfo_stationaryIndi  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Subscription-Based-UE-DifferentiationInfo'
*/
typedef enum {
   s1ap_stationary = 0,
   s1ap_mobile = 1
} s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication_Root;

typedef OSUINT32 s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication;

EXTERN int asn1PE_s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication value);

EXTERN int asn1PD_s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication* pvalue);

EXTERN void asn1Print_s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication 
   (const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication (
   const char* name, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication_ENUMTAB[];
#define s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication_ToString (OSINT32 value);

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication* pvalue)
      ;

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  Subscription_Based_UE_DifferentiationInfo_trafficProfile  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Subscription-Based-UE-DifferentiationInfo'
*/
typedef enum {
   s1ap_single_packet = 0,
   s1ap_dual_packets = 1,
   s1ap_multiple_packets = 2
} s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile_Root;

typedef OSUINT32 s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile;

EXTERN int asn1PE_s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile value);

EXTERN int asn1PD_s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile* pvalue);

EXTERN void asn1Print_s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile 
   (const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile* pvalue);

EXTERN int asn1PrtToStr_s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile (
   const char* name, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile (OSCTXT *pctxt, 
   const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile* pvalue);

EXTERN extern const OSEnumItem s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile_ENUMTAB[];
#define s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile_ToString (OSINT32 value);

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile* pvalue);

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile* pvalue);

/**************************************************************/
/*                                                            */
/*  Subscription_Based_UE_DifferentiationInfo_batteryIndicat  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Subscription-Based-UE-DifferentiationInfo'
*/
typedef enum {
   s1ap_battery_powered = 0,
   s1ap_battery_powered_not_rechargeable_or_replaceable = 1,
   s1ap_not_battery_powered = 2
} s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication_Root;

typedef OSUINT32 s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication;

EXTERN int asn1PE_s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication value);

EXTERN int asn1PD_s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication* pvalue);

EXTERN void asn1Print_s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication 
   (const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication (
   const char* name, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication_ENUMTAB[];
#define s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication_ToString (OSINT32 value);

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication* pvalue)
      ;

EXTERN 
   int s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  Subscription_Based_UE_DifferentiationInfo_iE_Extensions_  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Subscription-Based-UE-DifferentiationInfo'
*/
typedef struct EXTERN s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element 
   (const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element (
   const char* name, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pSrcValue, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element*
    pDstValue);

EXTERN int asn1Init_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element (
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Subscription_Based_UE_DifferentiationInfo_iE_Extensions   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Subscription-Based-UE-DifferentiationInfo'
*/
/* List of s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element */
typedef OSRTDList s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions;

EXTERN int asn1PE_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions 
   (const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions (
   const char* name, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions_element* 
   asn1Get_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pSrcValue, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions (
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Subscription_Based_UE_DifferentiationInfo                 */
/*                                                            */
/**************************************************************/
/*
Subscription-Based-UE-DifferentiationInfo ::= SEQUENCE {
   periodicCommunicationIndicator [0] ENUMERATED { periodically(0), ondemand(1), ... } OPTIONAL,
   periodicTime [1] INTEGER (1..3600, ...) OPTIONAL,
   scheduledCommunicationTime [2] ScheduledCommunicationTime OPTIONAL,
   stationaryIndication [3] ENUMERATED { stationary(0), mobile(1), ... } OPTIONAL,
   trafficProfile [4] ENUMERATED { single-packet(0), dual-packets(1), multiple-packets(2), ... } OPTIONAL,
   batteryIndication [5] ENUMERATED { battery-powered(0), battery-powered-not-rechargeable-or-replaceable(1), not-battery-powered(2), ... } OPTIONAL,
   iE-Extensions [6] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Subscription-Based-UE-DifferentiationInfo-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Subscription-Based-UE-DifferentiationInfo-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Subscription-Based-UE-DifferentiationInfo-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Subscription_Based_UE_DifferentiationInfo {
   struct {
      unsigned periodicCommunicationIndicatorPresent : 1;
      unsigned periodicTimePresent : 1;
      unsigned scheduledCommunicationTimePresent : 1;
      unsigned stationaryIndicationPresent : 1;
      unsigned trafficProfilePresent : 1;
      unsigned batteryIndicationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Subscription_Based_UE_DifferentiationInfo_periodicCommunicationIndicator periodicCommunicationIndicator;
   OSUINT32 periodicTime;
   s1ap_ScheduledCommunicationTime scheduledCommunicationTime;
   s1ap_Subscription_Based_UE_DifferentiationInfo_stationaryIndication stationaryIndication;
   s1ap_Subscription_Based_UE_DifferentiationInfo_trafficProfile trafficProfile;
   s1ap_Subscription_Based_UE_DifferentiationInfo_batteryIndication batteryIndication;
   s1ap_Subscription_Based_UE_DifferentiationInfo_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Subscription_Based_UE_DifferentiationInfo;

EXTERN int asn1PE_s1ap_Subscription_Based_UE_DifferentiationInfo (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo* pvalue);

EXTERN int asn1PD_s1ap_Subscription_Based_UE_DifferentiationInfo (OSCTXT* pctxt, s1ap_Subscription_Based_UE_DifferentiationInfo* pvalue);

EXTERN void asn1Print_s1ap_Subscription_Based_UE_DifferentiationInfo 
   (const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_Subscription_Based_UE_DifferentiationInfo (
   const char* name, s1ap_Subscription_Based_UE_DifferentiationInfo* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Subscription_Based_UE_DifferentiationInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_Subscription_Based_UE_DifferentiationInfo* pvalue);

EXTERN void asn1Copy_s1ap_Subscription_Based_UE_DifferentiationInfo (OSCTXT* pctxt, 
   const s1ap_Subscription_Based_UE_DifferentiationInfo* pSrcValue, 
   s1ap_Subscription_Based_UE_DifferentiationInfo* pDstValue);

EXTERN int asn1Init_s1ap_Subscription_Based_UE_DifferentiationInfo (
   s1ap_Subscription_Based_UE_DifferentiationInfo* pvalue);

EXTERN void asn1Free_s1ap_Subscription_Based_UE_DifferentiationInfo (OSCTXT *pctxt, 
   s1ap_Subscription_Based_UE_DifferentiationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  Port_Number                                               */
/*                                                            */
/**************************************************************/
/*
Port-Number ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN s1ap_Port_Number {
   OSUINT32 numocts;
   OSOCTET data[2];
} s1ap_Port_Number;

EXTERN int asn1PE_s1ap_Port_Number (OSCTXT* pctxt, s1ap_Port_Number* pvalue);

EXTERN int asn1PD_s1ap_Port_Number (OSCTXT* pctxt, s1ap_Port_Number* pvalue);

EXTERN void asn1Print_s1ap_Port_Number 
   (const char* name, const s1ap_Port_Number* pvalue);

EXTERN int asn1PrtToStr_s1ap_Port_Number (const char* name, s1ap_Port_Number* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Port_Number (OSCTXT *pctxt, 
   const char* name, const s1ap_Port_Number* pvalue);

EXTERN void asn1Copy_s1ap_Port_Number (OSCTXT* pctxt, 
   const s1ap_Port_Number* pSrcValue, s1ap_Port_Number* pDstValue);

EXTERN int asn1Init_s1ap_Port_Number (s1ap_Port_Number* pvalue);

/**************************************************************/
/*                                                            */
/*  TunnelInformation_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TunnelInformation'
*/
typedef struct EXTERN s1ap_TunnelInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TunnelInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TunnelInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_TunnelInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TunnelInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_TunnelInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TunnelInformation_iE_Extensions_element 
   (const char* name, const s1ap_TunnelInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TunnelInformation_iE_Extensions_element (
   const char* name, s1ap_TunnelInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TunnelInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TunnelInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TunnelInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TunnelInformation_iE_Extensions_element* pSrcValue, 
   s1ap_TunnelInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TunnelInformation_iE_Extensions_element (
   s1ap_TunnelInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TunnelInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TunnelInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TunnelInformation_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TunnelInformation'
*/
/* List of s1ap_TunnelInformation_iE_Extensions_element */
typedef OSRTDList s1ap_TunnelInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_TunnelInformation_iE_Extensions (OSCTXT* pctxt, s1ap_TunnelInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TunnelInformation_iE_Extensions (OSCTXT* pctxt, s1ap_TunnelInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TunnelInformation_iE_Extensions 
   (const char* name, const s1ap_TunnelInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TunnelInformation_iE_Extensions (const char* name, 
   s1ap_TunnelInformation_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TunnelInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TunnelInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TunnelInformation_iE_Extensions_element* 
   asn1Get_s1ap_TunnelInformation_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TunnelInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TunnelInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TunnelInformation_iE_Extensions* pSrcValue, 
   s1ap_TunnelInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TunnelInformation_iE_Extensions (
   s1ap_TunnelInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TunnelInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TunnelInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TunnelInformation                                         */
/*                                                            */
/**************************************************************/
/*
TunnelInformation ::= SEQUENCE {
   transportLayerAddress [0] TransportLayerAddress,
   uDP-Port-Number [1] Port-Number OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Tunnel-Information-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Tunnel-Information-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Tunnel-Information-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TunnelInformation {
   struct {
      unsigned uDP_Port_NumberPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_Port_Number uDP_Port_Number;
   s1ap_TunnelInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TunnelInformation;

EXTERN int asn1PE_s1ap_TunnelInformation (OSCTXT* pctxt, s1ap_TunnelInformation* pvalue);

EXTERN int asn1PD_s1ap_TunnelInformation (OSCTXT* pctxt, s1ap_TunnelInformation* pvalue);

EXTERN void asn1Print_s1ap_TunnelInformation 
   (const char* name, const s1ap_TunnelInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_TunnelInformation (const char* name, 
   s1ap_TunnelInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TunnelInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_TunnelInformation* pvalue);

EXTERN void asn1Copy_s1ap_TunnelInformation (OSCTXT* pctxt, 
   const s1ap_TunnelInformation* pSrcValue, s1ap_TunnelInformation* pDstValue);

EXTERN int asn1Init_s1ap_TunnelInformation (s1ap_TunnelInformation* pvalue);

EXTERN void asn1Free_s1ap_TunnelInformation (OSCTXT *pctxt, 
   s1ap_TunnelInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LHN_ID                                                    */
/*                                                            */
/**************************************************************/
/*
LHN-ID ::= OCTET STRING (SIZE (32..256))
*/
typedef struct EXTERN s1ap_LHN_ID {
   OSUINT32 numocts;
   OSOCTET data[256];
} s1ap_LHN_ID;

EXTERN int asn1PE_s1ap_LHN_ID (OSCTXT* pctxt, s1ap_LHN_ID* pvalue);

EXTERN int asn1PD_s1ap_LHN_ID (OSCTXT* pctxt, s1ap_LHN_ID* pvalue);

EXTERN void asn1Print_s1ap_LHN_ID (const char* name, const s1ap_LHN_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_LHN_ID (const char* name, s1ap_LHN_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LHN_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_LHN_ID* pvalue);

EXTERN void asn1Copy_s1ap_LHN_ID (OSCTXT* pctxt, const s1ap_LHN_ID* pSrcValue, 
   s1ap_LHN_ID* pDstValue);

EXTERN int asn1Init_s1ap_LHN_ID (s1ap_LHN_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  RRC_Establishment_Cause                                   */
/*                                                            */
/**************************************************************/
/*
RRC-Establishment-Cause ::= ENUMERATED { emergency(0), highPriorityAccess(1), mt-Access(2), mo-Signalling(3), mo-Data(4), ..., delay-TolerantAccess(5), mo-VoiceCall(6), mo-ExceptionData(7) }
*/
typedef enum {
   s1ap_emergency = 0,
   s1ap_highPriorityAccess = 1,
   s1ap_mt_Access = 2,
   s1ap_mo_Signalling = 3,
   s1ap_mo_Data = 4
} s1ap_RRC_Establishment_Cause_Root;

typedef enum {
   s1ap_delay_TolerantAccess = 5,
   s1ap_mo_VoiceCall = 6,
   s1ap_mo_ExceptionData = 7
} s1ap_RRC_Establishment_Cause_Ext;

typedef OSUINT32 s1ap_RRC_Establishment_Cause;

EXTERN int asn1PE_s1ap_RRC_Establishment_Cause (OSCTXT* pctxt, s1ap_RRC_Establishment_Cause value);

EXTERN int asn1PD_s1ap_RRC_Establishment_Cause (OSCTXT* pctxt, s1ap_RRC_Establishment_Cause* pvalue);

EXTERN void asn1Print_s1ap_RRC_Establishment_Cause 
   (const char* name, const s1ap_RRC_Establishment_Cause* pvalue);

EXTERN int asn1PrtToStr_s1ap_RRC_Establishment_Cause (const char* name, 
   s1ap_RRC_Establishment_Cause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RRC_Establishment_Cause (OSCTXT *pctxt, 
   const char* name, const s1ap_RRC_Establishment_Cause* pvalue);

EXTERN extern const OSEnumItem s1ap_RRC_Establishment_Cause_ENUMTAB[];
#define s1ap_RRC_Establishment_Cause_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* s1ap_RRC_Establishment_Cause_ToString (OSINT32 value);

EXTERN int s1ap_RRC_Establishment_Cause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_RRC_Establishment_Cause* pvalue);

EXTERN int s1ap_RRC_Establishment_Cause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_RRC_Establishment_Cause* pvalue);

/**************************************************************/
/*                                                            */
/*  NAS_PDU                                                   */
/*                                                            */
/**************************************************************/
/*
 N
NAS-PDU ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_NAS_PDU;

EXTERN int asn1PE_s1ap_NAS_PDU (OSCTXT* pctxt, s1ap_NAS_PDU value);

EXTERN int asn1PD_s1ap_NAS_PDU (OSCTXT* pctxt, s1ap_NAS_PDU* pvalue);

EXTERN void asn1Print_s1ap_NAS_PDU (const char* name, const s1ap_NAS_PDU* pvalue);

EXTERN int asn1PrtToStr_s1ap_NAS_PDU (const char* name, s1ap_NAS_PDU* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NAS_PDU (OSCTXT *pctxt, 
   const char* name, const s1ap_NAS_PDU* pvalue);

EXTERN void asn1Copy_s1ap_NAS_PDU (OSCTXT* pctxt, const s1ap_NAS_PDU* pSrcValue, 
   s1ap_NAS_PDU* pDstValue);

EXTERN int asn1Init_s1ap_NAS_PDU (s1ap_NAS_PDU* pvalue);

EXTERN void asn1Free_s1ap_NAS_PDU (OSCTXT *pctxt, s1ap_NAS_PDU* pvalue);

/**************************************************************/
/*                                                            */
/*  Correlation_ID                                            */
/*                                                            */
/**************************************************************/
/*
Correlation-ID ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN s1ap_Correlation_ID {
   OSUINT32 numocts;
   OSOCTET data[4];
} s1ap_Correlation_ID;

EXTERN int asn1PE_s1ap_Correlation_ID (OSCTXT* pctxt, s1ap_Correlation_ID* pvalue);

EXTERN int asn1PD_s1ap_Correlation_ID (OSCTXT* pctxt, s1ap_Correlation_ID* pvalue);

EXTERN void asn1Print_s1ap_Correlation_ID 
   (const char* name, const s1ap_Correlation_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Correlation_ID (const char* name, 
   s1ap_Correlation_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Correlation_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_Correlation_ID* pvalue);

EXTERN void asn1Copy_s1ap_Correlation_ID (OSCTXT* pctxt, 
   const s1ap_Correlation_ID* pSrcValue, s1ap_Correlation_ID* pDstValue);

EXTERN int asn1Init_s1ap_Correlation_ID (s1ap_Correlation_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  TransportInformation                                      */
/*                                                            */
/**************************************************************/
/*
TransportInformation ::= SEQUENCE {
   transportLayerAddress [0] TransportLayerAddress,
   uL-GTP-TEID [1] GTP-TEID,
   ...
}
*/
typedef struct EXTERN s1ap_TransportInformation {
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID uL_GTP_TEID;
   OSRTDList extElem1;
} s1ap_TransportInformation;

EXTERN int asn1PE_s1ap_TransportInformation (OSCTXT* pctxt, s1ap_TransportInformation* pvalue);

EXTERN int asn1PD_s1ap_TransportInformation (OSCTXT* pctxt, s1ap_TransportInformation* pvalue);

EXTERN void asn1Print_s1ap_TransportInformation 
   (const char* name, const s1ap_TransportInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_TransportInformation (const char* name, 
   s1ap_TransportInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TransportInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_TransportInformation* pvalue);

EXTERN void asn1Copy_s1ap_TransportInformation (OSCTXT* pctxt, 
   const s1ap_TransportInformation* pSrcValue, s1ap_TransportInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_TransportInformation (s1ap_TransportInformation* pvalue);

EXTERN void asn1Free_s1ap_TransportInformation (OSCTXT *pctxt, 
   s1ap_TransportInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageRequest                              */
/*                                                            */
/**************************************************************/
/*
SecondaryRATDataUsageRequest ::= ENUMERATED { requested(0), ... }
*/
typedef enum {
   s1ap_requested_1 = 0
} s1ap_SecondaryRATDataUsageRequest_Root;

typedef OSUINT32 s1ap_SecondaryRATDataUsageRequest;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageRequest (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageRequest value);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageRequest (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageRequest* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageRequest 
   (const char* name, const s1ap_SecondaryRATDataUsageRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageRequest (const char* name, 
   s1ap_SecondaryRATDataUsageRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageRequest* pvalue);

EXTERN extern const OSEnumItem s1ap_SecondaryRATDataUsageRequest_ENUMTAB[];
#define s1ap_SecondaryRATDataUsageRequest_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_SecondaryRATDataUsageRequest_ToString (OSINT32 value);

EXTERN int s1ap_SecondaryRATDataUsageRequest_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SecondaryRATDataUsageRequest* pvalue);

EXTERN int s1ap_SecondaryRATDataUsageRequest_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_SecondaryRATDataUsageRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABItem_iE_Extensions_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABItem'
*/
typedef struct EXTERN s1ap_E_RABItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABItem_iE_Extensions_element 
   (const char* name, const s1ap_E_RABItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABItem_iE_Extensions_element (const char* name, 
   s1ap_E_RABItem_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABItem_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABItem_iE_Extensions_element (
   s1ap_E_RABItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABItem_iE_Extensions                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABItem'
*/
/* List of s1ap_E_RABItem_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABItem_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABItem_iE_Extensions 
   (const char* name, const s1ap_E_RABItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABItem_iE_Extensions (const char* name, 
   s1ap_E_RABItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABItem_iE_Extensions_element* 
   asn1Get_s1ap_E_RABItem_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABItem_iE_Extensions* pSrcValue, s1ap_E_RABItem_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABItem_iE_Extensions (
   s1ap_E_RABItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABItem                                                 */
/*                                                            */
/**************************************************************/
/*
E-RABItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   cause [1] EXPLICIT Cause,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_Cause cause;
   s1ap_E_RABItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABItem;

EXTERN int asn1PE_s1ap_E_RABItem (OSCTXT* pctxt, s1ap_E_RABItem* pvalue);

EXTERN int asn1PD_s1ap_E_RABItem (OSCTXT* pctxt, s1ap_E_RABItem* pvalue);

EXTERN void asn1Print_s1ap_E_RABItem (const char* name, const s1ap_E_RABItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABItem (const char* name, s1ap_E_RABItem* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABItem (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABItem* pvalue);

EXTERN void asn1Copy_s1ap_E_RABItem (OSCTXT* pctxt, const s1ap_E_RABItem* pSrcValue, 
   s1ap_E_RABItem* pDstValue);

EXTERN int asn1Init_s1ap_E_RABItem (s1ap_E_RABItem* pvalue);

EXTERN void asn1Free_s1ap_E_RABItem (OSCTXT *pctxt, s1ap_E_RABItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABList_element                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABList'
*/
typedef struct EXTERN s1ap_E_RABList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABItemIEs_TVALUE t;

      /**
       * E-RABItemIEs information objects
       */
      union {
         /**
          * id: id-E-RABItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABItem *_E_RABItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABList_element;

EXTERN int asn1PE_s1ap_E_RABList_element (OSCTXT* pctxt, s1ap_E_RABList_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABList_element (OSCTXT* pctxt, s1ap_E_RABList_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABList_element 
   (const char* name, const s1ap_E_RABList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABList_element (const char* name, 
   s1ap_E_RABList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABList_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABList_element (OSCTXT* pctxt, 
   const s1ap_E_RABList_element* pSrcValue, s1ap_E_RABList_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABList_element (s1ap_E_RABList_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABList_element (OSCTXT *pctxt, 
   s1ap_E_RABList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABList                                                 */
/*                                                            */
/**************************************************************/
/*
E-RABList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABItemIEs}{@id})
}
*/
/* List of s1ap_E_RABList_element */
typedef OSRTDList s1ap_E_RABList;

EXTERN int asn1PE_s1ap_E_RABList (OSCTXT* pctxt, s1ap_E_RABList* pvalue);

EXTERN int asn1PD_s1ap_E_RABList (OSCTXT* pctxt, s1ap_E_RABList* pvalue);

EXTERN void asn1Print_s1ap_E_RABList (const char* name, const s1ap_E_RABList* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABList (const char* name, s1ap_E_RABList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABList (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABList_element* asn1Get_s1ap_E_RABList 
   (s1ap_ProtocolIE_ID id, s1ap_E_RABList* plist);

EXTERN void asn1Copy_s1ap_E_RABList (OSCTXT* pctxt, const s1ap_E_RABList* pSrcValue, 
   s1ap_E_RABList* pDstValue);

EXTERN int asn1Init_s1ap_E_RABList (s1ap_E_RABList* pvalue);

EXTERN void asn1Free_s1ap_E_RABList (OSCTXT *pctxt, s1ap_E_RABList* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapability                                         */
/*                                                            */
/**************************************************************/
/*
UERadioCapability ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_UERadioCapability;

EXTERN int asn1PE_s1ap_UERadioCapability (OSCTXT* pctxt, s1ap_UERadioCapability value);

EXTERN int asn1PD_s1ap_UERadioCapability (OSCTXT* pctxt, s1ap_UERadioCapability* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapability 
   (const char* name, const s1ap_UERadioCapability* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapability (const char* name, 
   s1ap_UERadioCapability* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapability (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapability* pvalue);

EXTERN void asn1Copy_s1ap_UERadioCapability (OSCTXT* pctxt, 
   const s1ap_UERadioCapability* pSrcValue, s1ap_UERadioCapability* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapability (s1ap_UERadioCapability* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapability (OSCTXT *pctxt, 
   s1ap_UERadioCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  SubscriberProfileIDforRFP                                 */
/*                                                            */
/**************************************************************/
/*
SubscriberProfileIDforRFP ::= INTEGER (1..256)
*/
typedef OSUINT16 s1ap_SubscriberProfileIDforRFP;

EXTERN int asn1PE_s1ap_SubscriberProfileIDforRFP (OSCTXT* pctxt, s1ap_SubscriberProfileIDforRFP value);

EXTERN int asn1PD_s1ap_SubscriberProfileIDforRFP (OSCTXT* pctxt, s1ap_SubscriberProfileIDforRFP* pvalue);

EXTERN void asn1Print_s1ap_SubscriberProfileIDforRFP 
   (const char* name, const s1ap_SubscriberProfileIDforRFP* pvalue);

EXTERN int asn1PrtToStr_s1ap_SubscriberProfileIDforRFP (const char* name, 
   s1ap_SubscriberProfileIDforRFP* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SubscriberProfileIDforRFP (OSCTXT *pctxt, 
   const char* name, const s1ap_SubscriberProfileIDforRFP* pvalue);

/**************************************************************/
/*                                                            */
/*  CSFallbackIndicator                                       */
/*                                                            */
/**************************************************************/
/*
CSFallbackIndicator ::= ENUMERATED { cs-fallback-required(0), ..., cs-fallback-high-priority(1) }
*/
typedef enum {
   s1ap_cs_fallback_required = 0
} s1ap_CSFallbackIndicator_Root;

typedef enum {
   s1ap_cs_fallback_high_priority = 1
} s1ap_CSFallbackIndicator_Ext;

typedef OSUINT32 s1ap_CSFallbackIndicator;

EXTERN int asn1PE_s1ap_CSFallbackIndicator (OSCTXT* pctxt, s1ap_CSFallbackIndicator value);

EXTERN int asn1PD_s1ap_CSFallbackIndicator (OSCTXT* pctxt, s1ap_CSFallbackIndicator* pvalue);

EXTERN void asn1Print_s1ap_CSFallbackIndicator 
   (const char* name, const s1ap_CSFallbackIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSFallbackIndicator (const char* name, 
   s1ap_CSFallbackIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSFallbackIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_CSFallbackIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_CSFallbackIndicator_ENUMTAB[];
#define s1ap_CSFallbackIndicator_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_CSFallbackIndicator_ToString (OSINT32 value);

EXTERN int s1ap_CSFallbackIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CSFallbackIndicator* pvalue);

EXTERN int s1ap_CSFallbackIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CSFallbackIndicator* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  AdditionalCSFallbackIndicator                             */
/*                                                            */
/**************************************************************/
/*
AdditionalCSFallbackIndicator ::= ENUMERATED { no-restriction(0), restriction(1), ... }
*/
typedef enum {
   s1ap_no_restriction = 0,
   s1ap_restriction = 1
} s1ap_AdditionalCSFallbackIndicator_Root;

typedef OSUINT32 s1ap_AdditionalCSFallbackIndicator;

EXTERN int asn1PE_s1ap_AdditionalCSFallbackIndicator (OSCTXT* pctxt, s1ap_AdditionalCSFallbackIndicator value);

EXTERN int asn1PD_s1ap_AdditionalCSFallbackIndicator (OSCTXT* pctxt, s1ap_AdditionalCSFallbackIndicator* pvalue);

EXTERN void asn1Print_s1ap_AdditionalCSFallbackIndicator 
   (const char* name, const s1ap_AdditionalCSFallbackIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_AdditionalCSFallbackIndicator (const char* name, 
   s1ap_AdditionalCSFallbackIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AdditionalCSFallbackIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_AdditionalCSFallbackIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_AdditionalCSFallbackIndicator_ENUMTAB[];
#define s1ap_AdditionalCSFallbackIndicator_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_AdditionalCSFallbackIndicator_ToString (OSINT32 value);

EXTERN int s1ap_AdditionalCSFallbackIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_AdditionalCSFallbackIndicator* pvalue);

EXTERN int s1ap_AdditionalCSFallbackIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_AdditionalCSFallbackIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageIdentifier                                         */
/*                                                            */
/**************************************************************/
/*
MessageIdentifier ::= BIT STRING  (SIZE (16))
*/
typedef ASN1BitStr32 s1ap_MessageIdentifier;

EXTERN int asn1PE_s1ap_MessageIdentifier (OSCTXT* pctxt, s1ap_MessageIdentifier value);

EXTERN int asn1PD_s1ap_MessageIdentifier (OSCTXT* pctxt, s1ap_MessageIdentifier* pvalue);

EXTERN void asn1Print_s1ap_MessageIdentifier 
   (const char* name, const s1ap_MessageIdentifier* pvalue);

EXTERN int asn1PrtToStr_s1ap_MessageIdentifier (const char* name, 
   s1ap_MessageIdentifier* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MessageIdentifier (OSCTXT *pctxt, 
   const char* name, const s1ap_MessageIdentifier* pvalue);

EXTERN void asn1Copy_s1ap_MessageIdentifier (OSCTXT* pctxt, 
   const s1ap_MessageIdentifier* pSrcValue, s1ap_MessageIdentifier* pDstValue);

EXTERN int asn1Init_s1ap_MessageIdentifier (s1ap_MessageIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  SerialNumber                                              */
/*                                                            */
/**************************************************************/
/*
SerialNumber ::= BIT STRING  (SIZE (16))
*/
typedef ASN1BitStr32 s1ap_SerialNumber;

EXTERN int asn1PE_s1ap_SerialNumber (OSCTXT* pctxt, s1ap_SerialNumber value);

EXTERN int asn1PD_s1ap_SerialNumber (OSCTXT* pctxt, s1ap_SerialNumber* pvalue);

EXTERN void asn1Print_s1ap_SerialNumber 
   (const char* name, const s1ap_SerialNumber* pvalue);

EXTERN int asn1PrtToStr_s1ap_SerialNumber (const char* name, 
   s1ap_SerialNumber* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SerialNumber (OSCTXT *pctxt, 
   const char* name, const s1ap_SerialNumber* pvalue);

EXTERN void asn1Copy_s1ap_SerialNumber (OSCTXT* pctxt, 
   const s1ap_SerialNumber* pSrcValue, s1ap_SerialNumber* pDstValue);

EXTERN int asn1Init_s1ap_SerialNumber (s1ap_SerialNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  ECGIList                                                  */
/*                                                            */
/**************************************************************/
/*
ECGIList ::= SEQUENCE (SIZE (1..maxnoofCellID)) OF EUTRAN-CGI
*/
/* List of s1ap_EUTRAN_CGI */
typedef OSRTDList s1ap_ECGIList;

EXTERN int asn1PE_s1ap_ECGIList (OSCTXT* pctxt, s1ap_ECGIList* pvalue);

EXTERN int asn1PD_s1ap_ECGIList (OSCTXT* pctxt, s1ap_ECGIList* pvalue);

EXTERN void asn1Print_s1ap_ECGIList (const char* name, const s1ap_ECGIList* pvalue);

EXTERN int asn1PrtToStr_s1ap_ECGIList (const char* name, s1ap_ECGIList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ECGIList (OSCTXT *pctxt, 
   const char* name, const s1ap_ECGIList* pvalue);

EXTERN void asn1Copy_s1ap_ECGIList (OSCTXT* pctxt, const s1ap_ECGIList* pSrcValue, 
   s1ap_ECGIList* pDstValue);

EXTERN int asn1Init_s1ap_ECGIList (s1ap_ECGIList* pvalue);

EXTERN void asn1Free_s1ap_ECGIList (OSCTXT *pctxt, s1ap_ECGIList* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListforWarning                                         */
/*                                                            */
/**************************************************************/
/*
TAIListforWarning ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAI
*/
/* List of s1ap_TAI */
typedef OSRTDList s1ap_TAIListforWarning;

EXTERN int asn1PE_s1ap_TAIListforWarning (OSCTXT* pctxt, s1ap_TAIListforWarning* pvalue);

EXTERN int asn1PD_s1ap_TAIListforWarning (OSCTXT* pctxt, s1ap_TAIListforWarning* pvalue);

EXTERN void asn1Print_s1ap_TAIListforWarning 
   (const char* name, const s1ap_TAIListforWarning* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIListforWarning (const char* name, 
   s1ap_TAIListforWarning* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIListforWarning (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIListforWarning* pvalue);

EXTERN void asn1Copy_s1ap_TAIListforWarning (OSCTXT* pctxt, 
   const s1ap_TAIListforWarning* pSrcValue, s1ap_TAIListforWarning* pDstValue);

EXTERN int asn1Init_s1ap_TAIListforWarning (s1ap_TAIListforWarning* pvalue);

EXTERN void asn1Free_s1ap_TAIListforWarning (OSCTXT *pctxt, 
   s1ap_TAIListforWarning* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID                                           */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaID ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN s1ap_EmergencyAreaID {
   OSUINT32 numocts;
   OSOCTET data[3];
} s1ap_EmergencyAreaID;

EXTERN int asn1PE_s1ap_EmergencyAreaID (OSCTXT* pctxt, s1ap_EmergencyAreaID* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID (OSCTXT* pctxt, s1ap_EmergencyAreaID* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID 
   (const char* name, const s1ap_EmergencyAreaID* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID (const char* name, 
   s1ap_EmergencyAreaID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaID (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID* pSrcValue, s1ap_EmergencyAreaID* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID (s1ap_EmergencyAreaID* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDList                                       */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDList ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaID
*/
/* List of s1ap_EmergencyAreaID */
typedef OSRTDList s1ap_EmergencyAreaIDList;

EXTERN int asn1PE_s1ap_EmergencyAreaIDList (OSCTXT* pctxt, s1ap_EmergencyAreaIDList* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaIDList (OSCTXT* pctxt, s1ap_EmergencyAreaIDList* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaIDList 
   (const char* name, const s1ap_EmergencyAreaIDList* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaIDList (const char* name, 
   s1ap_EmergencyAreaIDList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaIDList (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaIDList* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaIDList (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaIDList* pSrcValue, s1ap_EmergencyAreaIDList*
    pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaIDList (s1ap_EmergencyAreaIDList* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaIDList (OSCTXT *pctxt, 
   s1ap_EmergencyAreaIDList* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningAreaList                                           */
/*                                                            */
/**************************************************************/
/*
WarningAreaList ::= CHOICE {
   cellIDList [0] ECGIList,
   trackingAreaListforWarning [1] TAIListforWarning,
   emergencyAreaIDList [2] EmergencyAreaIDList,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_WarningAreaList_cellIDList 1
#define T_s1ap_WarningAreaList_trackingAreaListforWarning 2
#define T_s1ap_WarningAreaList_emergencyAreaIDList 3
#define T_s1ap_WarningAreaList_extElem1 4

typedef struct EXTERN s1ap_WarningAreaList {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_ECGIList *cellIDList;
      /* t = 2 */
      s1ap_TAIListforWarning *trackingAreaListforWarning;
      /* t = 3 */
      s1ap_EmergencyAreaIDList *emergencyAreaIDList;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_WarningAreaList;

EXTERN int asn1PE_s1ap_WarningAreaList (OSCTXT* pctxt, s1ap_WarningAreaList* pvalue);

EXTERN int asn1PD_s1ap_WarningAreaList (OSCTXT* pctxt, s1ap_WarningAreaList* pvalue);

EXTERN void asn1Print_s1ap_WarningAreaList 
   (const char* name, const s1ap_WarningAreaList* pvalue);

EXTERN int asn1PrtToStr_s1ap_WarningAreaList (const char* name, 
   s1ap_WarningAreaList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WarningAreaList (OSCTXT *pctxt, 
   const char* name, const s1ap_WarningAreaList* pvalue);

EXTERN void asn1Copy_s1ap_WarningAreaList (OSCTXT* pctxt, 
   const s1ap_WarningAreaList* pSrcValue, s1ap_WarningAreaList* pDstValue);

EXTERN int asn1Init_s1ap_WarningAreaList (s1ap_WarningAreaList* pvalue);

EXTERN void asn1Free_s1ap_WarningAreaList (OSCTXT *pctxt, 
   s1ap_WarningAreaList* pvalue);

/**************************************************************/
/*                                                            */
/*  KillAllWarningMessages                                    */
/*                                                            */
/**************************************************************/
/*
 J
 K
KillAllWarningMessages ::= ENUMERATED { true(0) }
*/
typedef enum {
   s1ap_true__5 = 0
} s1ap_KillAllWarningMessages_Root;

typedef OSUINT32 s1ap_KillAllWarningMessages;

EXTERN int asn1PE_s1ap_KillAllWarningMessages (OSCTXT* pctxt, s1ap_KillAllWarningMessages value);

EXTERN int asn1PD_s1ap_KillAllWarningMessages (OSCTXT* pctxt, s1ap_KillAllWarningMessages* pvalue);

EXTERN void asn1Print_s1ap_KillAllWarningMessages 
   (const char* name, const s1ap_KillAllWarningMessages* pvalue);

EXTERN int asn1PrtToStr_s1ap_KillAllWarningMessages (const char* name, 
   s1ap_KillAllWarningMessages* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_KillAllWarningMessages (OSCTXT *pctxt, 
   const char* name, const s1ap_KillAllWarningMessages* pvalue);

EXTERN extern const OSEnumItem s1ap_KillAllWarningMessages_ENUMTAB[];
#define s1ap_KillAllWarningMessages_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_KillAllWarningMessages_ToString (OSINT32 value);

EXTERN int s1ap_KillAllWarningMessages_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_KillAllWarningMessages* pvalue);

EXTERN int s1ap_KillAllWarningMessages_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_KillAllWarningMessages* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalS1_ConnectionItem_iE_Extensions_elem  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-associatedLogicalS1-ConnectionItem'
*/
typedef struct EXTERN s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element 
   (const char* name, const s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element (
   const char* name, 
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pSrcValue, 
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element (
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalS1_ConnectionItem_iE_Extensions       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-associatedLogicalS1-ConnectionItem'
*/
/* List of s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element */
typedef OSRTDList s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions;

EXTERN int asn1PE_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions 
   (const char* name, const s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions (
   const char* name, 
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions_element* 
   asn1Get_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pSrcValue, 
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions (
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalS1_ConnectionItem                     */
/*                                                            */
/**************************************************************/
/*
UE-associatedLogicalS1-ConnectionItem ::= SEQUENCE {
   mME-UE-S1AP-ID [0] MME-UE-S1AP-ID OPTIONAL,
   eNB-UE-S1AP-ID [1] ENB-UE-S1AP-ID OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UE-associatedLogicalS1-ConnectionItemExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UE-associatedLogicalS1-ConnectionItemExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UE-associatedLogicalS1-ConnectionItemExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UE_associatedLogicalS1_ConnectionItem {
   struct {
      unsigned mME_UE_S1AP_IDPresent : 1;
      unsigned eNB_UE_S1AP_IDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MME_UE_S1AP_ID mME_UE_S1AP_ID;
   s1ap_ENB_UE_S1AP_ID eNB_UE_S1AP_ID;
   s1ap_UE_associatedLogicalS1_ConnectionItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UE_associatedLogicalS1_ConnectionItem;

EXTERN int asn1PE_s1ap_UE_associatedLogicalS1_ConnectionItem (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionItem* pvalue);

EXTERN int asn1PD_s1ap_UE_associatedLogicalS1_ConnectionItem (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionItem* pvalue);

EXTERN void asn1Print_s1ap_UE_associatedLogicalS1_ConnectionItem 
   (const char* name, const s1ap_UE_associatedLogicalS1_ConnectionItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_associatedLogicalS1_ConnectionItem (const char* name, 
   s1ap_UE_associatedLogicalS1_ConnectionItem* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_associatedLogicalS1_ConnectionItem (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_associatedLogicalS1_ConnectionItem* pvalue);

EXTERN void asn1Copy_s1ap_UE_associatedLogicalS1_ConnectionItem (OSCTXT* pctxt, 
   const s1ap_UE_associatedLogicalS1_ConnectionItem* pSrcValue, 
   s1ap_UE_associatedLogicalS1_ConnectionItem* pDstValue);

EXTERN int asn1Init_s1ap_UE_associatedLogicalS1_ConnectionItem (
   s1ap_UE_associatedLogicalS1_ConnectionItem* pvalue);

EXTERN void asn1Free_s1ap_UE_associatedLogicalS1_ConnectionItem (OSCTXT *pctxt, 
   s1ap_UE_associatedLogicalS1_ConnectionItem* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBname                                                   */
/*                                                            */
/**************************************************************/
/*
ENBname ::= PrintableString (SIZE (1..150, ...))
*/
typedef const char* s1ap_ENBname;

EXTERN int asn1PE_s1ap_ENBname (OSCTXT* pctxt, s1ap_ENBname value);

EXTERN int asn1PD_s1ap_ENBname (OSCTXT* pctxt, s1ap_ENBname* pvalue);

EXTERN void asn1Print_s1ap_ENBname (const char* name, const s1ap_ENBname pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBname (const char* name, s1ap_ENBname pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBname (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBname pvalue);

EXTERN void asn1Copy_s1ap_ENBname (OSCTXT* pctxt, const s1ap_ENBname pSrcValue, 
   s1ap_ENBname* pDstValue);

EXTERN void asn1Free_s1ap_ENBname (OSCTXT *pctxt, s1ap_ENBname pvalue);

/**************************************************************/
/*                                                            */
/*  BPLMNs                                                    */
/*                                                            */
/**************************************************************/
/*
BPLMNs ::= SEQUENCE (SIZE (1..maxnoofBPLMNs)) OF PLMNidentity
*/
typedef struct EXTERN s1ap_BPLMNs {
   OSSIZE n;
   s1ap_PLMNidentity elem[6];
} s1ap_BPLMNs;

EXTERN int asn1PE_s1ap_BPLMNs (OSCTXT* pctxt, s1ap_BPLMNs* pvalue);

EXTERN int asn1PD_s1ap_BPLMNs (OSCTXT* pctxt, s1ap_BPLMNs* pvalue);

EXTERN void asn1Print_s1ap_BPLMNs (const char* name, const s1ap_BPLMNs* pvalue);

EXTERN int asn1PrtToStr_s1ap_BPLMNs (const char* name, s1ap_BPLMNs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BPLMNs (OSCTXT *pctxt, 
   const char* name, const s1ap_BPLMNs* pvalue);

EXTERN void asn1Copy_s1ap_BPLMNs (OSCTXT* pctxt, const s1ap_BPLMNs* pSrcValue, 
   s1ap_BPLMNs* pDstValue);

EXTERN int asn1Init_s1ap_BPLMNs (s1ap_BPLMNs* pvalue);

/**************************************************************/
/*                                                            */
/*  RAT_Type                                                  */
/*                                                            */
/**************************************************************/
/*
RAT-Type ::= ENUMERATED { nbiot(0), ... }
*/
typedef enum {
   s1ap_nbiot = 0
} s1ap_RAT_Type_Root;

typedef OSUINT32 s1ap_RAT_Type;

EXTERN int asn1PE_s1ap_RAT_Type (OSCTXT* pctxt, s1ap_RAT_Type value);

EXTERN int asn1PD_s1ap_RAT_Type (OSCTXT* pctxt, s1ap_RAT_Type* pvalue);

EXTERN void asn1Print_s1ap_RAT_Type (const char* name, const s1ap_RAT_Type* pvalue);

EXTERN int asn1PrtToStr_s1ap_RAT_Type (const char* name, s1ap_RAT_Type* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RAT_Type (OSCTXT *pctxt, 
   const char* name, const s1ap_RAT_Type* pvalue);

EXTERN extern const OSEnumItem s1ap_RAT_Type_ENUMTAB[];
#define s1ap_RAT_Type_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_RAT_Type_ToString (OSINT32 value);

EXTERN int s1ap_RAT_Type_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_RAT_Type* pvalue);

EXTERN int s1ap_RAT_Type_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_RAT_Type* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAs_Item_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SupportedTAs-Item'
*/
typedef struct EXTERN s1ap_SupportedTAs_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      SupportedTAs_Item_ExtIEs_TVALUE t;

      /**
       * SupportedTAs-Item-ExtIEs information objects
       */
      union {
         /**
          * id: id-RAT-Type
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_RAT_Type _SupportedTAs_Item_ExtIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_SupportedTAs_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SupportedTAs_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_SupportedTAs_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SupportedTAs_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_SupportedTAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SupportedTAs_Item_iE_Extensions_element 
   (const char* name, const s1ap_SupportedTAs_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SupportedTAs_Item_iE_Extensions_element (
   const char* name, s1ap_SupportedTAs_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SupportedTAs_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SupportedTAs_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_SupportedTAs_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SupportedTAs_Item_iE_Extensions_element* pSrcValue, 
   s1ap_SupportedTAs_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_SupportedTAs_Item_iE_Extensions_element (
   s1ap_SupportedTAs_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAs_Item_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SupportedTAs-Item'
*/
/* List of s1ap_SupportedTAs_Item_iE_Extensions_element */
typedef OSRTDList s1ap_SupportedTAs_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_SupportedTAs_Item_iE_Extensions (OSCTXT* pctxt, s1ap_SupportedTAs_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SupportedTAs_Item_iE_Extensions (OSCTXT* pctxt, s1ap_SupportedTAs_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SupportedTAs_Item_iE_Extensions 
   (const char* name, const s1ap_SupportedTAs_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SupportedTAs_Item_iE_Extensions (const char* name, 
   s1ap_SupportedTAs_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SupportedTAs_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SupportedTAs_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SupportedTAs_Item_iE_Extensions_element* 
   asn1Get_s1ap_SupportedTAs_Item_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_SupportedTAs_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SupportedTAs_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SupportedTAs_Item_iE_Extensions* pSrcValue, 
   s1ap_SupportedTAs_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SupportedTAs_Item_iE_Extensions (
   s1ap_SupportedTAs_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SupportedTAs_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SupportedTAs_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAs_Item                                         */
/*                                                            */
/**************************************************************/
/*
SupportedTAs-Item ::= SEQUENCE {
   tAC [0] TAC,
   broadcastPLMNs [1] BPLMNs,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SupportedTAs-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SupportedTAs-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SupportedTAs-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_SupportedTAs_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAC tAC;
   s1ap_BPLMNs broadcastPLMNs;
   s1ap_SupportedTAs_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_SupportedTAs_Item;

EXTERN int asn1PE_s1ap_SupportedTAs_Item (OSCTXT* pctxt, s1ap_SupportedTAs_Item* pvalue);

EXTERN int asn1PD_s1ap_SupportedTAs_Item (OSCTXT* pctxt, s1ap_SupportedTAs_Item* pvalue);

EXTERN void asn1Print_s1ap_SupportedTAs_Item 
   (const char* name, const s1ap_SupportedTAs_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_SupportedTAs_Item (const char* name, 
   s1ap_SupportedTAs_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SupportedTAs_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_SupportedTAs_Item* pvalue);

EXTERN void asn1Copy_s1ap_SupportedTAs_Item (OSCTXT* pctxt, 
   const s1ap_SupportedTAs_Item* pSrcValue, s1ap_SupportedTAs_Item* pDstValue);

EXTERN int asn1Init_s1ap_SupportedTAs_Item (s1ap_SupportedTAs_Item* pvalue);

EXTERN void asn1Free_s1ap_SupportedTAs_Item (OSCTXT *pctxt, 
   s1ap_SupportedTAs_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAs                                              */
/*                                                            */
/**************************************************************/
/*
SupportedTAs ::= SEQUENCE (SIZE (1..maxnoofTACs)) OF SupportedTAs-Item
*/
/* List of s1ap_SupportedTAs_Item */
typedef OSRTDList s1ap_SupportedTAs;

EXTERN int asn1PE_s1ap_SupportedTAs (OSCTXT* pctxt, s1ap_SupportedTAs* pvalue);

EXTERN int asn1PD_s1ap_SupportedTAs (OSCTXT* pctxt, s1ap_SupportedTAs* pvalue);

EXTERN void asn1Print_s1ap_SupportedTAs 
   (const char* name, const s1ap_SupportedTAs* pvalue);

EXTERN int asn1PrtToStr_s1ap_SupportedTAs (const char* name, 
   s1ap_SupportedTAs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SupportedTAs (OSCTXT *pctxt, 
   const char* name, const s1ap_SupportedTAs* pvalue);

EXTERN void asn1Copy_s1ap_SupportedTAs (OSCTXT* pctxt, 
   const s1ap_SupportedTAs* pSrcValue, s1ap_SupportedTAs* pDstValue);

EXTERN int asn1Init_s1ap_SupportedTAs (s1ap_SupportedTAs* pvalue);

EXTERN void asn1Free_s1ap_SupportedTAs (OSCTXT *pctxt, s1ap_SupportedTAs* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingDRX                                                 */
/*                                                            */
/**************************************************************/
/*
PagingDRX ::= ENUMERATED { v32(0), v64(1), v128(2), v256(3), ... }
*/
typedef enum {
   s1ap_v32 = 0,
   s1ap_v64 = 1,
   s1ap_v128_1 = 2,
   s1ap_v256_1 = 3
} s1ap_PagingDRX_Root;

typedef OSUINT32 s1ap_PagingDRX;

EXTERN int asn1PE_s1ap_PagingDRX (OSCTXT* pctxt, s1ap_PagingDRX value);

EXTERN int asn1PD_s1ap_PagingDRX (OSCTXT* pctxt, s1ap_PagingDRX* pvalue);

EXTERN void asn1Print_s1ap_PagingDRX (const char* name, const s1ap_PagingDRX* pvalue);

EXTERN int asn1PrtToStr_s1ap_PagingDRX (const char* name, s1ap_PagingDRX* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PagingDRX (OSCTXT *pctxt, 
   const char* name, const s1ap_PagingDRX* pvalue);

EXTERN extern const OSEnumItem s1ap_PagingDRX_ENUMTAB[];
#define s1ap_PagingDRX_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* s1ap_PagingDRX_ToString (OSINT32 value);

EXTERN int s1ap_PagingDRX_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_PagingDRX* pvalue);

EXTERN int s1ap_PagingDRX_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_PagingDRX* pvalue);

/**************************************************************/
/*                                                            */
/*  CSG_IdList_Item_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CSG-IdList-Item'
*/
typedef struct EXTERN s1ap_CSG_IdList_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CSG_IdList_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CSG_IdList_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CSG_IdList_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CSG_IdList_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CSG_IdList_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CSG_IdList_Item_iE_Extensions_element 
   (const char* name, const s1ap_CSG_IdList_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSG_IdList_Item_iE_Extensions_element (const char* name, 
   s1ap_CSG_IdList_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSG_IdList_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CSG_IdList_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CSG_IdList_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CSG_IdList_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CSG_IdList_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CSG_IdList_Item_iE_Extensions_element (
   s1ap_CSG_IdList_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CSG_IdList_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CSG_IdList_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CSG_IdList_Item_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CSG-IdList-Item'
*/
/* List of s1ap_CSG_IdList_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CSG_IdList_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CSG_IdList_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CSG_IdList_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CSG_IdList_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CSG_IdList_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CSG_IdList_Item_iE_Extensions 
   (const char* name, const s1ap_CSG_IdList_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSG_IdList_Item_iE_Extensions (const char* name, 
   s1ap_CSG_IdList_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSG_IdList_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CSG_IdList_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CSG_IdList_Item_iE_Extensions_element* 
   asn1Get_s1ap_CSG_IdList_Item_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_CSG_IdList_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CSG_IdList_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CSG_IdList_Item_iE_Extensions* pSrcValue, 
   s1ap_CSG_IdList_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CSG_IdList_Item_iE_Extensions (
   s1ap_CSG_IdList_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CSG_IdList_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CSG_IdList_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CSG_IdList_Item                                           */
/*                                                            */
/**************************************************************/
/*
CSG-IdList-Item ::= SEQUENCE {
   cSG-Id [0] CSG-Id,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CSG-IdList-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CSG-IdList-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CSG-IdList-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CSG_IdList_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_CSG_Id cSG_Id;
   s1ap_CSG_IdList_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CSG_IdList_Item;

EXTERN int asn1PE_s1ap_CSG_IdList_Item (OSCTXT* pctxt, s1ap_CSG_IdList_Item* pvalue);

EXTERN int asn1PD_s1ap_CSG_IdList_Item (OSCTXT* pctxt, s1ap_CSG_IdList_Item* pvalue);

EXTERN void asn1Print_s1ap_CSG_IdList_Item 
   (const char* name, const s1ap_CSG_IdList_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSG_IdList_Item (const char* name, 
   s1ap_CSG_IdList_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSG_IdList_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CSG_IdList_Item* pvalue);

EXTERN void asn1Copy_s1ap_CSG_IdList_Item (OSCTXT* pctxt, 
   const s1ap_CSG_IdList_Item* pSrcValue, s1ap_CSG_IdList_Item* pDstValue);

EXTERN int asn1Init_s1ap_CSG_IdList_Item (s1ap_CSG_IdList_Item* pvalue);

EXTERN void asn1Free_s1ap_CSG_IdList_Item (OSCTXT *pctxt, 
   s1ap_CSG_IdList_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CSG_IdList                                                */
/*                                                            */
/**************************************************************/
/*
CSG-IdList ::= SEQUENCE (SIZE (1..maxnoofCSGs)) OF CSG-IdList-Item
*/
/* List of s1ap_CSG_IdList_Item */
typedef OSRTDList s1ap_CSG_IdList;

EXTERN int asn1PE_s1ap_CSG_IdList (OSCTXT* pctxt, s1ap_CSG_IdList* pvalue);

EXTERN int asn1PD_s1ap_CSG_IdList (OSCTXT* pctxt, s1ap_CSG_IdList* pvalue);

EXTERN void asn1Print_s1ap_CSG_IdList 
   (const char* name, const s1ap_CSG_IdList* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSG_IdList (const char* name, s1ap_CSG_IdList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSG_IdList (OSCTXT *pctxt, 
   const char* name, const s1ap_CSG_IdList* pvalue);

EXTERN void asn1Copy_s1ap_CSG_IdList (OSCTXT* pctxt, 
   const s1ap_CSG_IdList* pSrcValue, s1ap_CSG_IdList* pDstValue);

EXTERN int asn1Init_s1ap_CSG_IdList (s1ap_CSG_IdList* pvalue);

EXTERN void asn1Free_s1ap_CSG_IdList (OSCTXT *pctxt, s1ap_CSG_IdList* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_RetentionInformation                                   */
/*                                                            */
/**************************************************************/
/*
UE-RetentionInformation ::= ENUMERATED { ues-retained(0), ... }
*/
typedef enum {
   s1ap_ues_retained = 0
} s1ap_UE_RetentionInformation_Root;

typedef OSUINT32 s1ap_UE_RetentionInformation;

EXTERN int asn1PE_s1ap_UE_RetentionInformation (OSCTXT* pctxt, s1ap_UE_RetentionInformation value);

EXTERN int asn1PD_s1ap_UE_RetentionInformation (OSCTXT* pctxt, s1ap_UE_RetentionInformation* pvalue);

EXTERN void asn1Print_s1ap_UE_RetentionInformation 
   (const char* name, const s1ap_UE_RetentionInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_RetentionInformation (const char* name, 
   s1ap_UE_RetentionInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_RetentionInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_RetentionInformation* pvalue);

EXTERN extern const OSEnumItem s1ap_UE_RetentionInformation_ENUMTAB[];
#define s1ap_UE_RetentionInformation_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_UE_RetentionInformation_ToString (OSINT32 value);

EXTERN int s1ap_UE_RetentionInformation_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_UE_RetentionInformation* pvalue);

EXTERN int s1ap_UE_RetentionInformation_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_UE_RetentionInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  NB_IoT_DefaultPagingDRX                                   */
/*                                                            */
/**************************************************************/
/*
NB-IoT-DefaultPagingDRX ::= ENUMERATED { v128(0), v256(1), v512(2), v1024(3), ... }
*/
typedef enum {
   s1ap_v128 = 0,
   s1ap_v256 = 1,
   s1ap_v512 = 2,
   s1ap_v1024 = 3
} s1ap_NB_IoT_DefaultPagingDRX_Root;

typedef OSUINT32 s1ap_NB_IoT_DefaultPagingDRX;

EXTERN int asn1PE_s1ap_NB_IoT_DefaultPagingDRX (OSCTXT* pctxt, s1ap_NB_IoT_DefaultPagingDRX value);

EXTERN int asn1PD_s1ap_NB_IoT_DefaultPagingDRX (OSCTXT* pctxt, s1ap_NB_IoT_DefaultPagingDRX* pvalue);

EXTERN void asn1Print_s1ap_NB_IoT_DefaultPagingDRX 
   (const char* name, const s1ap_NB_IoT_DefaultPagingDRX* pvalue);

EXTERN int asn1PrtToStr_s1ap_NB_IoT_DefaultPagingDRX (const char* name, 
   s1ap_NB_IoT_DefaultPagingDRX* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NB_IoT_DefaultPagingDRX (OSCTXT *pctxt, 
   const char* name, const s1ap_NB_IoT_DefaultPagingDRX* pvalue);

EXTERN extern const OSEnumItem s1ap_NB_IoT_DefaultPagingDRX_ENUMTAB[];
#define s1ap_NB_IoT_DefaultPagingDRX_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* s1ap_NB_IoT_DefaultPagingDRX_ToString (OSINT32 value);

EXTERN int s1ap_NB_IoT_DefaultPagingDRX_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NB_IoT_DefaultPagingDRX* pvalue);

EXTERN int s1ap_NB_IoT_DefaultPagingDRX_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_NB_IoT_DefaultPagingDRX* pvalue);

/**************************************************************/
/*                                                            */
/*  En_gNB_ID                                                 */
/*                                                            */
/**************************************************************/
/*
En-gNB-ID ::= BIT STRING  (SIZE (22..32, ...))
*/
typedef ASN1DynBitStr s1ap_En_gNB_ID;

EXTERN int asn1PE_s1ap_En_gNB_ID (OSCTXT* pctxt, s1ap_En_gNB_ID value);

EXTERN int asn1PD_s1ap_En_gNB_ID (OSCTXT* pctxt, s1ap_En_gNB_ID* pvalue);

EXTERN void asn1Print_s1ap_En_gNB_ID (const char* name, const s1ap_En_gNB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_En_gNB_ID (const char* name, s1ap_En_gNB_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_En_gNB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_En_gNB_ID* pvalue);

EXTERN void asn1Copy_s1ap_En_gNB_ID (OSCTXT* pctxt, const s1ap_En_gNB_ID* pSrcValue, 
   s1ap_En_gNB_ID* pDstValue);

EXTERN int asn1Init_s1ap_En_gNB_ID (s1ap_En_gNB_ID* pvalue);

EXTERN void asn1Free_s1ap_En_gNB_ID (OSCTXT *pctxt, s1ap_En_gNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectedengNBItem_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ConnectedengNBItem'
*/
typedef struct EXTERN s1ap_ConnectedengNBItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ConnectedengNBItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ConnectedengNBItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_ConnectedengNBItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ConnectedengNBItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_ConnectedengNBItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ConnectedengNBItem_iE_Extensions_element 
   (const char* name, const s1ap_ConnectedengNBItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConnectedengNBItem_iE_Extensions_element (
   const char* name, s1ap_ConnectedengNBItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConnectedengNBItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ConnectedengNBItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ConnectedengNBItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ConnectedengNBItem_iE_Extensions_element* pSrcValue, 
   s1ap_ConnectedengNBItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ConnectedengNBItem_iE_Extensions_element (
   s1ap_ConnectedengNBItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ConnectedengNBItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ConnectedengNBItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectedengNBItem_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ConnectedengNBItem'
*/
/* List of s1ap_ConnectedengNBItem_iE_Extensions_element */
typedef OSRTDList s1ap_ConnectedengNBItem_iE_Extensions;

EXTERN int asn1PE_s1ap_ConnectedengNBItem_iE_Extensions (OSCTXT* pctxt, s1ap_ConnectedengNBItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ConnectedengNBItem_iE_Extensions (OSCTXT* pctxt, s1ap_ConnectedengNBItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ConnectedengNBItem_iE_Extensions 
   (const char* name, const s1ap_ConnectedengNBItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConnectedengNBItem_iE_Extensions (const char* name, 
   s1ap_ConnectedengNBItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConnectedengNBItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ConnectedengNBItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ConnectedengNBItem_iE_Extensions_element* 
   asn1Get_s1ap_ConnectedengNBItem_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ConnectedengNBItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ConnectedengNBItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ConnectedengNBItem_iE_Extensions* pSrcValue, 
   s1ap_ConnectedengNBItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ConnectedengNBItem_iE_Extensions (
   s1ap_ConnectedengNBItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ConnectedengNBItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ConnectedengNBItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectedengNBItem                                        */
/*                                                            */
/**************************************************************/
/*
ConnectedengNBItem ::= SEQUENCE {
   en-gNB-ID [0] En-gNB-ID,
   supportedTAs [1] SupportedTAs,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ConnectedengNBItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ConnectedengNBItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ConnectedengNBItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ConnectedengNBItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_En_gNB_ID en_gNB_ID;
   s1ap_SupportedTAs supportedTAs;
   s1ap_ConnectedengNBItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ConnectedengNBItem;

EXTERN int asn1PE_s1ap_ConnectedengNBItem (OSCTXT* pctxt, s1ap_ConnectedengNBItem* pvalue);

EXTERN int asn1PD_s1ap_ConnectedengNBItem (OSCTXT* pctxt, s1ap_ConnectedengNBItem* pvalue);

EXTERN void asn1Print_s1ap_ConnectedengNBItem 
   (const char* name, const s1ap_ConnectedengNBItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConnectedengNBItem (const char* name, 
   s1ap_ConnectedengNBItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConnectedengNBItem (OSCTXT *pctxt, 
   const char* name, const s1ap_ConnectedengNBItem* pvalue);

EXTERN void asn1Copy_s1ap_ConnectedengNBItem (OSCTXT* pctxt, 
   const s1ap_ConnectedengNBItem* pSrcValue, s1ap_ConnectedengNBItem*
    pDstValue);

EXTERN int asn1Init_s1ap_ConnectedengNBItem (s1ap_ConnectedengNBItem* pvalue);

EXTERN void asn1Free_s1ap_ConnectedengNBItem (OSCTXT *pctxt, 
   s1ap_ConnectedengNBItem* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectedengNBList                                        */
/*                                                            */
/**************************************************************/
/*
ConnectedengNBList ::= SEQUENCE (SIZE (1..maxnoofConnectedengNBs)) OF ConnectedengNBItem
*/
/* List of s1ap_ConnectedengNBItem */
typedef OSRTDList s1ap_ConnectedengNBList;

EXTERN int asn1PE_s1ap_ConnectedengNBList (OSCTXT* pctxt, s1ap_ConnectedengNBList* pvalue);

EXTERN int asn1PD_s1ap_ConnectedengNBList (OSCTXT* pctxt, s1ap_ConnectedengNBList* pvalue);

EXTERN void asn1Print_s1ap_ConnectedengNBList 
   (const char* name, const s1ap_ConnectedengNBList* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConnectedengNBList (const char* name, 
   s1ap_ConnectedengNBList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConnectedengNBList (OSCTXT *pctxt, 
   const char* name, const s1ap_ConnectedengNBList* pvalue);

EXTERN void asn1Copy_s1ap_ConnectedengNBList (OSCTXT* pctxt, 
   const s1ap_ConnectedengNBList* pSrcValue, s1ap_ConnectedengNBList*
    pDstValue);

EXTERN int asn1Init_s1ap_ConnectedengNBList (s1ap_ConnectedengNBList* pvalue);

EXTERN void asn1Free_s1ap_ConnectedengNBList (OSCTXT *pctxt, 
   s1ap_ConnectedengNBList* pvalue);

/**************************************************************/
/*                                                            */
/*  SRVCCOperationNotPossible                                 */
/*                                                            */
/**************************************************************/
/*
SRVCCOperationNotPossible ::= ENUMERATED { notPossible(0), ... }
*/
typedef enum {
   s1ap_notPossible = 0
} s1ap_SRVCCOperationNotPossible_Root;

typedef OSUINT32 s1ap_SRVCCOperationNotPossible;

EXTERN int asn1PE_s1ap_SRVCCOperationNotPossible (OSCTXT* pctxt, s1ap_SRVCCOperationNotPossible value);

EXTERN int asn1PD_s1ap_SRVCCOperationNotPossible (OSCTXT* pctxt, s1ap_SRVCCOperationNotPossible* pvalue);

EXTERN void asn1Print_s1ap_SRVCCOperationNotPossible 
   (const char* name, const s1ap_SRVCCOperationNotPossible* pvalue);

EXTERN int asn1PrtToStr_s1ap_SRVCCOperationNotPossible (const char* name, 
   s1ap_SRVCCOperationNotPossible* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SRVCCOperationNotPossible (OSCTXT *pctxt, 
   const char* name, const s1ap_SRVCCOperationNotPossible* pvalue);

EXTERN extern const OSEnumItem s1ap_SRVCCOperationNotPossible_ENUMTAB[];
#define s1ap_SRVCCOperationNotPossible_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_SRVCCOperationNotPossible_ToString (OSINT32 value);

EXTERN int s1ap_SRVCCOperationNotPossible_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SRVCCOperationNotPossible* pvalue);

EXTERN int s1ap_SRVCCOperationNotPossible_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_SRVCCOperationNotPossible* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_S1AP_ID_pair_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-S1AP-ID-pair'
*/
typedef struct EXTERN s1ap_UE_S1AP_ID_pair_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_UE_S1AP_ID_pair_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UE_S1AP_ID_pair_iE_Extensions_element (OSCTXT* pctxt, s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UE_S1AP_ID_pair_iE_Extensions_element (OSCTXT* pctxt, s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UE_S1AP_ID_pair_iE_Extensions_element 
   (const char* name, const s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_S1AP_ID_pair_iE_Extensions_element (const char* name, 
   s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_S1AP_ID_pair_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_UE_S1AP_ID_pair_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pSrcValue, 
   s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UE_S1AP_ID_pair_iE_Extensions_element (
   s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_UE_S1AP_ID_pair_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_UE_S1AP_ID_pair_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_S1AP_ID_pair_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-S1AP-ID-pair'
*/
/* List of s1ap_UE_S1AP_ID_pair_iE_Extensions_element */
typedef OSRTDList s1ap_UE_S1AP_ID_pair_iE_Extensions;

EXTERN int asn1PE_s1ap_UE_S1AP_ID_pair_iE_Extensions (OSCTXT* pctxt, s1ap_UE_S1AP_ID_pair_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UE_S1AP_ID_pair_iE_Extensions (OSCTXT* pctxt, s1ap_UE_S1AP_ID_pair_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UE_S1AP_ID_pair_iE_Extensions 
   (const char* name, const s1ap_UE_S1AP_ID_pair_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_S1AP_ID_pair_iE_Extensions (const char* name, 
   s1ap_UE_S1AP_ID_pair_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_S1AP_ID_pair_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_S1AP_ID_pair_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UE_S1AP_ID_pair_iE_Extensions_element* 
   asn1Get_s1ap_UE_S1AP_ID_pair_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_UE_S1AP_ID_pair_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UE_S1AP_ID_pair_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UE_S1AP_ID_pair_iE_Extensions* pSrcValue, 
   s1ap_UE_S1AP_ID_pair_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UE_S1AP_ID_pair_iE_Extensions (
   s1ap_UE_S1AP_ID_pair_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UE_S1AP_ID_pair_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UE_S1AP_ID_pair_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_S1AP_ID_pair                                           */
/*                                                            */
/**************************************************************/
/*
UE-S1AP-ID-pair ::= SEQUENCE {
   mME-UE-S1AP-ID [0] MME-UE-S1AP-ID,
   eNB-UE-S1AP-ID [1] ENB-UE-S1AP-ID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UE-S1AP-ID-pair-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UE-S1AP-ID-pair-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UE-S1AP-ID-pair-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UE_S1AP_ID_pair {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MME_UE_S1AP_ID mME_UE_S1AP_ID;
   s1ap_ENB_UE_S1AP_ID eNB_UE_S1AP_ID;
   s1ap_UE_S1AP_ID_pair_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UE_S1AP_ID_pair;

EXTERN int asn1PE_s1ap_UE_S1AP_ID_pair (OSCTXT* pctxt, s1ap_UE_S1AP_ID_pair* pvalue);

EXTERN int asn1PD_s1ap_UE_S1AP_ID_pair (OSCTXT* pctxt, s1ap_UE_S1AP_ID_pair* pvalue);

EXTERN void asn1Print_s1ap_UE_S1AP_ID_pair 
   (const char* name, const s1ap_UE_S1AP_ID_pair* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_S1AP_ID_pair (const char* name, 
   s1ap_UE_S1AP_ID_pair* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_S1AP_ID_pair (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_S1AP_ID_pair* pvalue);

EXTERN void asn1Copy_s1ap_UE_S1AP_ID_pair (OSCTXT* pctxt, 
   const s1ap_UE_S1AP_ID_pair* pSrcValue, s1ap_UE_S1AP_ID_pair* pDstValue);

EXTERN int asn1Init_s1ap_UE_S1AP_ID_pair (s1ap_UE_S1AP_ID_pair* pvalue);

EXTERN void asn1Free_s1ap_UE_S1AP_ID_pair (OSCTXT *pctxt, 
   s1ap_UE_S1AP_ID_pair* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_S1AP_IDs                                               */
/*                                                            */
/**************************************************************/
/*
UE-S1AP-IDs ::= CHOICE {
   uE-S1AP-ID-pair [0] UE-S1AP-ID-pair,
   mME-UE-S1AP-ID [1] MME-UE-S1AP-ID,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_UE_S1AP_IDs_uE_S1AP_ID_pair 1
#define T_s1ap_UE_S1AP_IDs_mME_UE_S1AP_ID 2
#define T_s1ap_UE_S1AP_IDs_extElem1     3

typedef struct EXTERN s1ap_UE_S1AP_IDs {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_UE_S1AP_ID_pair *uE_S1AP_ID_pair;
      /* t = 2 */
      s1ap_MME_UE_S1AP_ID mME_UE_S1AP_ID;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_UE_S1AP_IDs;

EXTERN int asn1PE_s1ap_UE_S1AP_IDs (OSCTXT* pctxt, s1ap_UE_S1AP_IDs* pvalue);

EXTERN int asn1PD_s1ap_UE_S1AP_IDs (OSCTXT* pctxt, s1ap_UE_S1AP_IDs* pvalue);

EXTERN void asn1Print_s1ap_UE_S1AP_IDs 
   (const char* name, const s1ap_UE_S1AP_IDs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_S1AP_IDs (const char* name, s1ap_UE_S1AP_IDs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_S1AP_IDs (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_S1AP_IDs* pvalue);

EXTERN void asn1Copy_s1ap_UE_S1AP_IDs (OSCTXT* pctxt, 
   const s1ap_UE_S1AP_IDs* pSrcValue, s1ap_UE_S1AP_IDs* pDstValue);

EXTERN int asn1Init_s1ap_UE_S1AP_IDs (s1ap_UE_S1AP_IDs* pvalue);

EXTERN void asn1Free_s1ap_UE_S1AP_IDs (OSCTXT *pctxt, s1ap_UE_S1AP_IDs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEname                                                   */
/*                                                            */
/**************************************************************/
/*
MMEname ::= PrintableString (SIZE (1..150, ...))
*/
typedef const char* s1ap_MMEname;

EXTERN int asn1PE_s1ap_MMEname (OSCTXT* pctxt, s1ap_MMEname value);

EXTERN int asn1PD_s1ap_MMEname (OSCTXT* pctxt, s1ap_MMEname* pvalue);

EXTERN void asn1Print_s1ap_MMEname (const char* name, const s1ap_MMEname pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEname (const char* name, s1ap_MMEname pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEname (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEname pvalue);

EXTERN void asn1Copy_s1ap_MMEname (OSCTXT* pctxt, const s1ap_MMEname pSrcValue, 
   s1ap_MMEname* pDstValue);

EXTERN void asn1Free_s1ap_MMEname (OSCTXT *pctxt, s1ap_MMEname pvalue);

/**************************************************************/
/*                                                            */
/*  ServedPLMNs                                               */
/*                                                            */
/**************************************************************/
/*
ServedPLMNs ::= SEQUENCE (SIZE (1..maxnoofPLMNsPerMME)) OF PLMNidentity
*/
typedef struct EXTERN s1ap_ServedPLMNs {
   OSSIZE n;
   s1ap_PLMNidentity elem[32];
} s1ap_ServedPLMNs;

EXTERN int asn1PE_s1ap_ServedPLMNs (OSCTXT* pctxt, s1ap_ServedPLMNs* pvalue);

EXTERN int asn1PD_s1ap_ServedPLMNs (OSCTXT* pctxt, s1ap_ServedPLMNs* pvalue);

EXTERN void asn1Print_s1ap_ServedPLMNs 
   (const char* name, const s1ap_ServedPLMNs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedPLMNs (const char* name, s1ap_ServedPLMNs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedPLMNs (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedPLMNs* pvalue);

EXTERN void asn1Copy_s1ap_ServedPLMNs (OSCTXT* pctxt, 
   const s1ap_ServedPLMNs* pSrcValue, s1ap_ServedPLMNs* pDstValue);

EXTERN int asn1Init_s1ap_ServedPLMNs (s1ap_ServedPLMNs* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGroupIDs                                            */
/*                                                            */
/**************************************************************/
/*
ServedGroupIDs ::= SEQUENCE (SIZE (1..maxnoofGroupIDs)) OF MME-Group-ID
*/
/* List of s1ap_MME_Group_ID */
typedef OSRTDList s1ap_ServedGroupIDs;

EXTERN int asn1PE_s1ap_ServedGroupIDs (OSCTXT* pctxt, s1ap_ServedGroupIDs* pvalue);

EXTERN int asn1PD_s1ap_ServedGroupIDs (OSCTXT* pctxt, s1ap_ServedGroupIDs* pvalue);

EXTERN void asn1Print_s1ap_ServedGroupIDs 
   (const char* name, const s1ap_ServedGroupIDs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedGroupIDs (const char* name, 
   s1ap_ServedGroupIDs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedGroupIDs (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedGroupIDs* pvalue);

EXTERN void asn1Copy_s1ap_ServedGroupIDs (OSCTXT* pctxt, 
   const s1ap_ServedGroupIDs* pSrcValue, s1ap_ServedGroupIDs* pDstValue);

EXTERN int asn1Init_s1ap_ServedGroupIDs (s1ap_ServedGroupIDs* pvalue);

EXTERN void asn1Free_s1ap_ServedGroupIDs (OSCTXT *pctxt, s1ap_ServedGroupIDs* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedMMECs                                               */
/*                                                            */
/**************************************************************/
/*
ServedMMECs ::= SEQUENCE (SIZE (1..maxnoofMMECs)) OF MME-Code
*/
typedef struct EXTERN s1ap_ServedMMECs {
   OSSIZE n;
   s1ap_MME_Code elem[256];
} s1ap_ServedMMECs;

EXTERN int asn1PE_s1ap_ServedMMECs (OSCTXT* pctxt, s1ap_ServedMMECs* pvalue);

EXTERN int asn1PD_s1ap_ServedMMECs (OSCTXT* pctxt, s1ap_ServedMMECs* pvalue);

EXTERN void asn1Print_s1ap_ServedMMECs 
   (const char* name, const s1ap_ServedMMECs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedMMECs (const char* name, s1ap_ServedMMECs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedMMECs (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedMMECs* pvalue);

EXTERN void asn1Copy_s1ap_ServedMMECs (OSCTXT* pctxt, 
   const s1ap_ServedMMECs* pSrcValue, s1ap_ServedMMECs* pDstValue);

EXTERN int asn1Init_s1ap_ServedMMECs (s1ap_ServedMMECs* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUMMEIsItem_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServedGUMMEIsItem'
*/
typedef struct EXTERN s1ap_ServedGUMMEIsItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ServedGUMMEIsItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ServedGUMMEIsItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_ServedGUMMEIsItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ServedGUMMEIsItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_ServedGUMMEIsItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ServedGUMMEIsItem_iE_Extensions_element 
   (const char* name, const s1ap_ServedGUMMEIsItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedGUMMEIsItem_iE_Extensions_element (
   const char* name, s1ap_ServedGUMMEIsItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedGUMMEIsItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedGUMMEIsItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ServedGUMMEIsItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ServedGUMMEIsItem_iE_Extensions_element* pSrcValue, 
   s1ap_ServedGUMMEIsItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ServedGUMMEIsItem_iE_Extensions_element (
   s1ap_ServedGUMMEIsItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ServedGUMMEIsItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ServedGUMMEIsItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUMMEIsItem_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServedGUMMEIsItem'
*/
/* List of s1ap_ServedGUMMEIsItem_iE_Extensions_element */
typedef OSRTDList s1ap_ServedGUMMEIsItem_iE_Extensions;

EXTERN int asn1PE_s1ap_ServedGUMMEIsItem_iE_Extensions (OSCTXT* pctxt, s1ap_ServedGUMMEIsItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ServedGUMMEIsItem_iE_Extensions (OSCTXT* pctxt, s1ap_ServedGUMMEIsItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ServedGUMMEIsItem_iE_Extensions 
   (const char* name, const s1ap_ServedGUMMEIsItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedGUMMEIsItem_iE_Extensions (const char* name, 
   s1ap_ServedGUMMEIsItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedGUMMEIsItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedGUMMEIsItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ServedGUMMEIsItem_iE_Extensions_element* 
   asn1Get_s1ap_ServedGUMMEIsItem_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ServedGUMMEIsItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ServedGUMMEIsItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ServedGUMMEIsItem_iE_Extensions* pSrcValue, 
   s1ap_ServedGUMMEIsItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ServedGUMMEIsItem_iE_Extensions (
   s1ap_ServedGUMMEIsItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ServedGUMMEIsItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ServedGUMMEIsItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUMMEIsItem                                         */
/*                                                            */
/**************************************************************/
/*
ServedGUMMEIsItem ::= SEQUENCE {
   servedPLMNs [0] ServedPLMNs,
   servedGroupIDs [1] ServedGroupIDs,
   servedMMECs [2] ServedMMECs,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ServedGUMMEIsItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ServedGUMMEIsItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ServedGUMMEIsItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ServedGUMMEIsItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ServedPLMNs servedPLMNs;
   s1ap_ServedGroupIDs servedGroupIDs;
   s1ap_ServedMMECs servedMMECs;
   s1ap_ServedGUMMEIsItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ServedGUMMEIsItem;

EXTERN int asn1PE_s1ap_ServedGUMMEIsItem (OSCTXT* pctxt, s1ap_ServedGUMMEIsItem* pvalue);

EXTERN int asn1PD_s1ap_ServedGUMMEIsItem (OSCTXT* pctxt, s1ap_ServedGUMMEIsItem* pvalue);

EXTERN void asn1Print_s1ap_ServedGUMMEIsItem 
   (const char* name, const s1ap_ServedGUMMEIsItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedGUMMEIsItem (const char* name, 
   s1ap_ServedGUMMEIsItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedGUMMEIsItem (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedGUMMEIsItem* pvalue);

EXTERN void asn1Copy_s1ap_ServedGUMMEIsItem (OSCTXT* pctxt, 
   const s1ap_ServedGUMMEIsItem* pSrcValue, s1ap_ServedGUMMEIsItem* pDstValue);

EXTERN int asn1Init_s1ap_ServedGUMMEIsItem (s1ap_ServedGUMMEIsItem* pvalue);

EXTERN void asn1Free_s1ap_ServedGUMMEIsItem (OSCTXT *pctxt, 
   s1ap_ServedGUMMEIsItem* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUMMEIs                                             */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
ServedGUMMEIs ::= SEQUENCE (SIZE (1..maxnoofRATs)) OF ServedGUMMEIsItem
*/
/* List of s1ap_ServedGUMMEIsItem */
typedef OSRTDList s1ap_ServedGUMMEIs;

EXTERN int asn1PE_s1ap_ServedGUMMEIs (OSCTXT* pctxt, s1ap_ServedGUMMEIs* pvalue);

EXTERN int asn1PD_s1ap_ServedGUMMEIs (OSCTXT* pctxt, s1ap_ServedGUMMEIs* pvalue);

EXTERN void asn1Print_s1ap_ServedGUMMEIs 
   (const char* name, const s1ap_ServedGUMMEIs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedGUMMEIs (const char* name, 
   s1ap_ServedGUMMEIs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedGUMMEIs (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedGUMMEIs* pvalue);

EXTERN void asn1Copy_s1ap_ServedGUMMEIs (OSCTXT* pctxt, 
   const s1ap_ServedGUMMEIs* pSrcValue, s1ap_ServedGUMMEIs* pDstValue);

EXTERN int asn1Init_s1ap_ServedGUMMEIs (s1ap_ServedGUMMEIs* pvalue);

EXTERN void asn1Free_s1ap_ServedGUMMEIs (OSCTXT *pctxt, s1ap_ServedGUMMEIs* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeMMECapacity                                       */
/*                                                            */
/**************************************************************/
/*
RelativeMMECapacity ::= INTEGER (0..255)
*/
typedef OSUINT8 s1ap_RelativeMMECapacity;

EXTERN int asn1PE_s1ap_RelativeMMECapacity (OSCTXT* pctxt, s1ap_RelativeMMECapacity value);

EXTERN int asn1PD_s1ap_RelativeMMECapacity (OSCTXT* pctxt, s1ap_RelativeMMECapacity* pvalue);

EXTERN void asn1Print_s1ap_RelativeMMECapacity 
   (const char* name, const s1ap_RelativeMMECapacity* pvalue);

EXTERN int asn1PrtToStr_s1ap_RelativeMMECapacity (const char* name, 
   s1ap_RelativeMMECapacity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RelativeMMECapacity (OSCTXT *pctxt, 
   const char* name, const s1ap_RelativeMMECapacity* pvalue);

/**************************************************************/
/*                                                            */
/*  DCN_ID                                                    */
/*                                                            */
/**************************************************************/
/*
DCN-ID ::= INTEGER (0..65535)
*/
typedef OSUINT16 s1ap_DCN_ID;

EXTERN int asn1PE_s1ap_DCN_ID (OSCTXT* pctxt, s1ap_DCN_ID value);

EXTERN int asn1PD_s1ap_DCN_ID (OSCTXT* pctxt, s1ap_DCN_ID* pvalue);

EXTERN void asn1Print_s1ap_DCN_ID (const char* name, const s1ap_DCN_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_DCN_ID (const char* name, s1ap_DCN_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DCN_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_DCN_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedDCNsItem_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServedDCNsItem'
*/
typedef struct EXTERN s1ap_ServedDCNsItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ServedDCNsItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ServedDCNsItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_ServedDCNsItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ServedDCNsItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_ServedDCNsItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ServedDCNsItem_iE_Extensions_element 
   (const char* name, const s1ap_ServedDCNsItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedDCNsItem_iE_Extensions_element (const char* name, 
   s1ap_ServedDCNsItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedDCNsItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedDCNsItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ServedDCNsItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ServedDCNsItem_iE_Extensions_element* pSrcValue, 
   s1ap_ServedDCNsItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ServedDCNsItem_iE_Extensions_element (
   s1ap_ServedDCNsItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ServedDCNsItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ServedDCNsItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedDCNsItem_iE_Extensions                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServedDCNsItem'
*/
/* List of s1ap_ServedDCNsItem_iE_Extensions_element */
typedef OSRTDList s1ap_ServedDCNsItem_iE_Extensions;

EXTERN int asn1PE_s1ap_ServedDCNsItem_iE_Extensions (OSCTXT* pctxt, s1ap_ServedDCNsItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ServedDCNsItem_iE_Extensions (OSCTXT* pctxt, s1ap_ServedDCNsItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ServedDCNsItem_iE_Extensions 
   (const char* name, const s1ap_ServedDCNsItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedDCNsItem_iE_Extensions (const char* name, 
   s1ap_ServedDCNsItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedDCNsItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedDCNsItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ServedDCNsItem_iE_Extensions_element* 
   asn1Get_s1ap_ServedDCNsItem_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ServedDCNsItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ServedDCNsItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ServedDCNsItem_iE_Extensions* pSrcValue, 
   s1ap_ServedDCNsItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ServedDCNsItem_iE_Extensions (
   s1ap_ServedDCNsItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ServedDCNsItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ServedDCNsItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedDCNsItem                                            */
/*                                                            */
/**************************************************************/
/*
ServedDCNsItem ::= SEQUENCE {
   dCN-ID [0] DCN-ID,
   relativeDCNCapacity [1] RelativeMMECapacity,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ServedDCNsItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ServedDCNsItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ServedDCNsItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ServedDCNsItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_DCN_ID dCN_ID;
   s1ap_RelativeMMECapacity relativeDCNCapacity;
   s1ap_ServedDCNsItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ServedDCNsItem;

EXTERN int asn1PE_s1ap_ServedDCNsItem (OSCTXT* pctxt, s1ap_ServedDCNsItem* pvalue);

EXTERN int asn1PD_s1ap_ServedDCNsItem (OSCTXT* pctxt, s1ap_ServedDCNsItem* pvalue);

EXTERN void asn1Print_s1ap_ServedDCNsItem 
   (const char* name, const s1ap_ServedDCNsItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedDCNsItem (const char* name, 
   s1ap_ServedDCNsItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedDCNsItem (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedDCNsItem* pvalue);

EXTERN void asn1Copy_s1ap_ServedDCNsItem (OSCTXT* pctxt, 
   const s1ap_ServedDCNsItem* pSrcValue, s1ap_ServedDCNsItem* pDstValue);

EXTERN int asn1Init_s1ap_ServedDCNsItem (s1ap_ServedDCNsItem* pvalue);

EXTERN void asn1Free_s1ap_ServedDCNsItem (OSCTXT *pctxt, s1ap_ServedDCNsItem* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedDCNs                                                */
/*                                                            */
/**************************************************************/
/*
ServedDCNs ::= SEQUENCE (SIZE (0..maxnoofDCNs)) OF ServedDCNsItem
*/
/* List of s1ap_ServedDCNsItem */
typedef OSRTDList s1ap_ServedDCNs;

EXTERN int asn1PE_s1ap_ServedDCNs (OSCTXT* pctxt, s1ap_ServedDCNs* pvalue);

EXTERN int asn1PD_s1ap_ServedDCNs (OSCTXT* pctxt, s1ap_ServedDCNs* pvalue);

EXTERN void asn1Print_s1ap_ServedDCNs 
   (const char* name, const s1ap_ServedDCNs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ServedDCNs (const char* name, s1ap_ServedDCNs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ServedDCNs (OSCTXT *pctxt, 
   const char* name, const s1ap_ServedDCNs* pvalue);

EXTERN void asn1Copy_s1ap_ServedDCNs (OSCTXT* pctxt, 
   const s1ap_ServedDCNs* pSrcValue, s1ap_ServedDCNs* pDstValue);

EXTERN int asn1Init_s1ap_ServedDCNs (s1ap_ServedDCNs* pvalue);

EXTERN void asn1Free_s1ap_ServedDCNs (OSCTXT *pctxt, s1ap_ServedDCNs* pvalue);

/**************************************************************/
/*                                                            */
/*  RepetitionPeriod                                          */
/*                                                            */
/**************************************************************/
/*
RepetitionPeriod ::= INTEGER (0..4095)
*/
typedef OSUINT16 s1ap_RepetitionPeriod;

EXTERN int asn1PE_s1ap_RepetitionPeriod (OSCTXT* pctxt, s1ap_RepetitionPeriod value);

EXTERN int asn1PD_s1ap_RepetitionPeriod (OSCTXT* pctxt, s1ap_RepetitionPeriod* pvalue);

EXTERN void asn1Print_s1ap_RepetitionPeriod 
   (const char* name, const s1ap_RepetitionPeriod* pvalue);

EXTERN int asn1PrtToStr_s1ap_RepetitionPeriod (const char* name, 
   s1ap_RepetitionPeriod* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RepetitionPeriod (OSCTXT *pctxt, 
   const char* name, const s1ap_RepetitionPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtendedRepetitionPeriod                                  */
/*                                                            */
/**************************************************************/
/*
ExtendedRepetitionPeriod ::= INTEGER (4096..131071)
*/
typedef OSUINT32 s1ap_ExtendedRepetitionPeriod;

EXTERN int asn1PE_s1ap_ExtendedRepetitionPeriod (OSCTXT* pctxt, s1ap_ExtendedRepetitionPeriod value);

EXTERN int asn1PD_s1ap_ExtendedRepetitionPeriod (OSCTXT* pctxt, s1ap_ExtendedRepetitionPeriod* pvalue);

EXTERN void asn1Print_s1ap_ExtendedRepetitionPeriod 
   (const char* name, const s1ap_ExtendedRepetitionPeriod* pvalue);

EXTERN int asn1PrtToStr_s1ap_ExtendedRepetitionPeriod (const char* name, 
   s1ap_ExtendedRepetitionPeriod* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ExtendedRepetitionPeriod (OSCTXT *pctxt, 
   const char* name, const s1ap_ExtendedRepetitionPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  NumberofBroadcastRequest                                  */
/*                                                            */
/**************************************************************/
/*
NumberofBroadcastRequest ::= INTEGER (0..65535)
*/
typedef OSUINT16 s1ap_NumberofBroadcastRequest;

EXTERN int asn1PE_s1ap_NumberofBroadcastRequest (OSCTXT* pctxt, s1ap_NumberofBroadcastRequest value);

EXTERN int asn1PD_s1ap_NumberofBroadcastRequest (OSCTXT* pctxt, s1ap_NumberofBroadcastRequest* pvalue);

EXTERN void asn1Print_s1ap_NumberofBroadcastRequest 
   (const char* name, const s1ap_NumberofBroadcastRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_NumberofBroadcastRequest (const char* name, 
   s1ap_NumberofBroadcastRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NumberofBroadcastRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_NumberofBroadcastRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningType                                               */
/*                                                            */
/**************************************************************/
/*
WarningType ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN s1ap_WarningType {
   OSUINT32 numocts;
   OSOCTET data[2];
} s1ap_WarningType;

EXTERN int asn1PE_s1ap_WarningType (OSCTXT* pctxt, s1ap_WarningType* pvalue);

EXTERN int asn1PD_s1ap_WarningType (OSCTXT* pctxt, s1ap_WarningType* pvalue);

EXTERN void asn1Print_s1ap_WarningType 
   (const char* name, const s1ap_WarningType* pvalue);

EXTERN int asn1PrtToStr_s1ap_WarningType (const char* name, s1ap_WarningType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WarningType (OSCTXT *pctxt, 
   const char* name, const s1ap_WarningType* pvalue);

EXTERN void asn1Copy_s1ap_WarningType (OSCTXT* pctxt, 
   const s1ap_WarningType* pSrcValue, s1ap_WarningType* pDstValue);

EXTERN int asn1Init_s1ap_WarningType (s1ap_WarningType* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningSecurityInfo                                       */
/*                                                            */
/**************************************************************/
/*
WarningSecurityInfo ::= OCTET STRING (SIZE (50))
*/
typedef struct EXTERN s1ap_WarningSecurityInfo {
   OSUINT32 numocts;
   OSOCTET data[50];
} s1ap_WarningSecurityInfo;

EXTERN int asn1PE_s1ap_WarningSecurityInfo (OSCTXT* pctxt, s1ap_WarningSecurityInfo* pvalue);

EXTERN int asn1PD_s1ap_WarningSecurityInfo (OSCTXT* pctxt, s1ap_WarningSecurityInfo* pvalue);

EXTERN void asn1Print_s1ap_WarningSecurityInfo 
   (const char* name, const s1ap_WarningSecurityInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_WarningSecurityInfo (const char* name, 
   s1ap_WarningSecurityInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WarningSecurityInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_WarningSecurityInfo* pvalue);

EXTERN void asn1Copy_s1ap_WarningSecurityInfo (OSCTXT* pctxt, 
   const s1ap_WarningSecurityInfo* pSrcValue, s1ap_WarningSecurityInfo*
    pDstValue);

EXTERN int asn1Init_s1ap_WarningSecurityInfo (s1ap_WarningSecurityInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  DataCodingScheme                                          */
/*                                                            */
/**************************************************************/
/*
 D
DataCodingScheme ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 s1ap_DataCodingScheme;

EXTERN int asn1PE_s1ap_DataCodingScheme (OSCTXT* pctxt, s1ap_DataCodingScheme value);

EXTERN int asn1PD_s1ap_DataCodingScheme (OSCTXT* pctxt, s1ap_DataCodingScheme* pvalue);

EXTERN void asn1Print_s1ap_DataCodingScheme 
   (const char* name, const s1ap_DataCodingScheme* pvalue);

EXTERN int asn1PrtToStr_s1ap_DataCodingScheme (const char* name, 
   s1ap_DataCodingScheme* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DataCodingScheme (OSCTXT *pctxt, 
   const char* name, const s1ap_DataCodingScheme* pvalue);

EXTERN void asn1Copy_s1ap_DataCodingScheme (OSCTXT* pctxt, 
   const s1ap_DataCodingScheme* pSrcValue, s1ap_DataCodingScheme* pDstValue);

EXTERN int asn1Init_s1ap_DataCodingScheme (s1ap_DataCodingScheme* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningMessageContents                                    */
/*                                                            */
/**************************************************************/
/*
WarningMessageContents ::= OCTET STRING (SIZE (1..9600))
*/
typedef struct EXTERN s1ap_WarningMessageContents {
   OSUINT32 numocts;
   OSOCTET data[9600];
} s1ap_WarningMessageContents;

EXTERN int asn1PE_s1ap_WarningMessageContents (OSCTXT* pctxt, s1ap_WarningMessageContents* pvalue);

EXTERN int asn1PD_s1ap_WarningMessageContents (OSCTXT* pctxt, s1ap_WarningMessageContents* pvalue);

EXTERN void asn1Print_s1ap_WarningMessageContents 
   (const char* name, const s1ap_WarningMessageContents* pvalue);

EXTERN int asn1PrtToStr_s1ap_WarningMessageContents (const char* name, 
   s1ap_WarningMessageContents* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WarningMessageContents (OSCTXT *pctxt, 
   const char* name, const s1ap_WarningMessageContents* pvalue);

EXTERN void asn1Copy_s1ap_WarningMessageContents (OSCTXT* pctxt, 
   const s1ap_WarningMessageContents* pSrcValue, s1ap_WarningMessageContents*
    pDstValue);

EXTERN int asn1Init_s1ap_WarningMessageContents (s1ap_WarningMessageContents* pvalue);

/**************************************************************/
/*                                                            */
/*  ConcurrentWarningMessageIndicator                         */
/*                                                            */
/**************************************************************/
/*
ConcurrentWarningMessageIndicator ::= ENUMERATED { true(0) }
*/
typedef enum {
   s1ap_true__2 = 0
} s1ap_ConcurrentWarningMessageIndicator_Root;

typedef OSUINT32 s1ap_ConcurrentWarningMessageIndicator;

EXTERN int asn1PE_s1ap_ConcurrentWarningMessageIndicator (OSCTXT* pctxt, s1ap_ConcurrentWarningMessageIndicator value);

EXTERN int asn1PD_s1ap_ConcurrentWarningMessageIndicator (OSCTXT* pctxt, s1ap_ConcurrentWarningMessageIndicator* pvalue);

EXTERN void asn1Print_s1ap_ConcurrentWarningMessageIndicator 
   (const char* name, const s1ap_ConcurrentWarningMessageIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConcurrentWarningMessageIndicator (const char* name, 
   s1ap_ConcurrentWarningMessageIndicator* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConcurrentWarningMessageIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_ConcurrentWarningMessageIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_ConcurrentWarningMessageIndicator_ENUMTAB[];
#define s1ap_ConcurrentWarningMessageIndicator_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_ConcurrentWarningMessageIndicator_ToString (OSINT32 value);

EXTERN int s1ap_ConcurrentWarningMessageIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ConcurrentWarningMessageIndicator* pvalue);

EXTERN int s1ap_ConcurrentWarningMessageIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_ConcurrentWarningMessageIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningAreaCoordinates                                    */
/*                                                            */
/**************************************************************/
/*
 W
WarningAreaCoordinates ::= OCTET STRING (SIZE (1..1024))
*/
typedef struct EXTERN s1ap_WarningAreaCoordinates {
   OSUINT32 numocts;
   OSOCTET data[1024];
} s1ap_WarningAreaCoordinates;

EXTERN int asn1PE_s1ap_WarningAreaCoordinates (OSCTXT* pctxt, s1ap_WarningAreaCoordinates* pvalue);

EXTERN int asn1PD_s1ap_WarningAreaCoordinates (OSCTXT* pctxt, s1ap_WarningAreaCoordinates* pvalue);

EXTERN void asn1Print_s1ap_WarningAreaCoordinates 
   (const char* name, const s1ap_WarningAreaCoordinates* pvalue);

EXTERN int asn1PrtToStr_s1ap_WarningAreaCoordinates (const char* name, 
   s1ap_WarningAreaCoordinates* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WarningAreaCoordinates (OSCTXT *pctxt, 
   const char* name, const s1ap_WarningAreaCoordinates* pvalue);

EXTERN void asn1Copy_s1ap_WarningAreaCoordinates (OSCTXT* pctxt, 
   const s1ap_WarningAreaCoordinates* pSrcValue, s1ap_WarningAreaCoordinates*
    pDstValue);

EXTERN int asn1Init_s1ap_WarningAreaCoordinates (s1ap_WarningAreaCoordinates* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATType                                          */
/*                                                            */
/**************************************************************/
/*
SecondaryRATType ::= ENUMERATED { nR(0), ..., unlicensed(1) }
*/
typedef enum {
   s1ap_nR = 0
} s1ap_SecondaryRATType_Root;

typedef enum {
   s1ap_unlicensed = 1
} s1ap_SecondaryRATType_Ext;

typedef OSUINT32 s1ap_SecondaryRATType;

EXTERN int asn1PE_s1ap_SecondaryRATType (OSCTXT* pctxt, s1ap_SecondaryRATType value);

EXTERN int asn1PD_s1ap_SecondaryRATType (OSCTXT* pctxt, s1ap_SecondaryRATType* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATType 
   (const char* name, const s1ap_SecondaryRATType* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATType (const char* name, 
   s1ap_SecondaryRATType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATType (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATType* pvalue);

EXTERN extern const OSEnumItem s1ap_SecondaryRATType_ENUMTAB[];
#define s1ap_SecondaryRATType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_SecondaryRATType_ToString (OSINT32 value);

EXTERN int s1ap_SecondaryRATType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SecondaryRATType* pvalue);

EXTERN int s1ap_SecondaryRATType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_SecondaryRATType* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABUsageReportItem_startTimestamp                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABUsageReportItem'
*/
typedef struct EXTERN s1ap_E_RABUsageReportItem_startTimestamp {
   OSUINT32 numocts;
   OSOCTET data[4];
} s1ap_E_RABUsageReportItem_startTimestamp;

EXTERN int asn1PE_s1ap_E_RABUsageReportItem_startTimestamp (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_startTimestamp* pvalue);

EXTERN int asn1PD_s1ap_E_RABUsageReportItem_startTimestamp (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_startTimestamp* pvalue);

EXTERN void asn1Print_s1ap_E_RABUsageReportItem_startTimestamp 
   (const char* name, const s1ap_E_RABUsageReportItem_startTimestamp* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABUsageReportItem_startTimestamp (const char* name, 
   s1ap_E_RABUsageReportItem_startTimestamp* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABUsageReportItem_startTimestamp (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABUsageReportItem_startTimestamp* pvalue);

EXTERN void asn1Copy_s1ap_E_RABUsageReportItem_startTimestamp (OSCTXT* pctxt, 
   const s1ap_E_RABUsageReportItem_startTimestamp* pSrcValue, 
   s1ap_E_RABUsageReportItem_startTimestamp* pDstValue);

EXTERN int asn1Init_s1ap_E_RABUsageReportItem_startTimestamp (
   s1ap_E_RABUsageReportItem_startTimestamp* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABUsageReportItem_endTimestamp                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABUsageReportItem'
*/
typedef struct EXTERN s1ap_E_RABUsageReportItem_endTimestamp {
   OSUINT32 numocts;
   OSOCTET data[4];
} s1ap_E_RABUsageReportItem_endTimestamp;

EXTERN int asn1PE_s1ap_E_RABUsageReportItem_endTimestamp (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_endTimestamp* pvalue);

EXTERN int asn1PD_s1ap_E_RABUsageReportItem_endTimestamp (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_endTimestamp* pvalue);

EXTERN void asn1Print_s1ap_E_RABUsageReportItem_endTimestamp 
   (const char* name, const s1ap_E_RABUsageReportItem_endTimestamp* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABUsageReportItem_endTimestamp (const char* name, 
   s1ap_E_RABUsageReportItem_endTimestamp* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABUsageReportItem_endTimestamp (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABUsageReportItem_endTimestamp* pvalue);

EXTERN void asn1Copy_s1ap_E_RABUsageReportItem_endTimestamp (OSCTXT* pctxt, 
   const s1ap_E_RABUsageReportItem_endTimestamp* pSrcValue, 
   s1ap_E_RABUsageReportItem_endTimestamp* pDstValue);

EXTERN int asn1Init_s1ap_E_RABUsageReportItem_endTimestamp (
   s1ap_E_RABUsageReportItem_endTimestamp* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABUsageReportItem_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABUsageReportItem'
*/
typedef struct EXTERN s1ap_E_RABUsageReportItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABUsageReportItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABUsageReportItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABUsageReportItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABUsageReportItem_iE_Extensions_element 
   (const char* name, const s1ap_E_RABUsageReportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABUsageReportItem_iE_Extensions_element (
   const char* name, s1ap_E_RABUsageReportItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABUsageReportItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABUsageReportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABUsageReportItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABUsageReportItem_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABUsageReportItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABUsageReportItem_iE_Extensions_element (
   s1ap_E_RABUsageReportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABUsageReportItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABUsageReportItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABUsageReportItem_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABUsageReportItem'
*/
/* List of s1ap_E_RABUsageReportItem_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABUsageReportItem_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABUsageReportItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABUsageReportItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABUsageReportItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABUsageReportItem_iE_Extensions 
   (const char* name, const s1ap_E_RABUsageReportItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABUsageReportItem_iE_Extensions (const char* name, 
   s1ap_E_RABUsageReportItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABUsageReportItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABUsageReportItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABUsageReportItem_iE_Extensions_element* 
   asn1Get_s1ap_E_RABUsageReportItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABUsageReportItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABUsageReportItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABUsageReportItem_iE_Extensions* pSrcValue, 
   s1ap_E_RABUsageReportItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABUsageReportItem_iE_Extensions (
   s1ap_E_RABUsageReportItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABUsageReportItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABUsageReportItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABUsageReportItem                                      */
/*                                                            */
/**************************************************************/
/*
E-RABUsageReportItem ::= SEQUENCE {
   startTimestamp [0] OCTET STRING (SIZE (4)),
   endTimestamp [1] OCTET STRING (SIZE (4)),
   usageCountUL [2] INTEGER (0..18446744073709551615),
   usageCountDL [3] INTEGER (0..18446744073709551615),
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABUsageReportItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABUsageReportItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABUsageReportItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABUsageReportItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RABUsageReportItem_startTimestamp startTimestamp;
   s1ap_E_RABUsageReportItem_endTimestamp endTimestamp;
   OSUINT64 usageCountUL;
   OSUINT64 usageCountDL;
   s1ap_E_RABUsageReportItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABUsageReportItem;

EXTERN int asn1PE_s1ap_E_RABUsageReportItem (OSCTXT* pctxt, s1ap_E_RABUsageReportItem* pvalue);

EXTERN int asn1PD_s1ap_E_RABUsageReportItem (OSCTXT* pctxt, s1ap_E_RABUsageReportItem* pvalue);

EXTERN void asn1Print_s1ap_E_RABUsageReportItem 
   (const char* name, const s1ap_E_RABUsageReportItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABUsageReportItem (const char* name, 
   s1ap_E_RABUsageReportItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABUsageReportItem (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABUsageReportItem* pvalue);

EXTERN void asn1Copy_s1ap_E_RABUsageReportItem (OSCTXT* pctxt, 
   const s1ap_E_RABUsageReportItem* pSrcValue, s1ap_E_RABUsageReportItem*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABUsageReportItem (s1ap_E_RABUsageReportItem* pvalue);

EXTERN void asn1Free_s1ap_E_RABUsageReportItem (OSCTXT *pctxt, 
   s1ap_E_RABUsageReportItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABUsageReportList_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABUsageReportList'
*/
typedef struct EXTERN s1ap_E_RABUsageReportList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABUsageReportItemIEs_TVALUE t;

      /**
       * E-RABUsageReportItemIEs information objects
       */
      union {
         /**
          * id: id-E-RABUsageReportItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABUsageReportItem *_E_RABUsageReportItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABUsageReportList_element;

EXTERN int asn1PE_s1ap_E_RABUsageReportList_element (OSCTXT* pctxt, s1ap_E_RABUsageReportList_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABUsageReportList_element (OSCTXT* pctxt, s1ap_E_RABUsageReportList_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABUsageReportList_element 
   (const char* name, const s1ap_E_RABUsageReportList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABUsageReportList_element (const char* name, 
   s1ap_E_RABUsageReportList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABUsageReportList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABUsageReportList_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABUsageReportList_element (OSCTXT* pctxt, 
   const s1ap_E_RABUsageReportList_element* pSrcValue, 
   s1ap_E_RABUsageReportList_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABUsageReportList_element (
   s1ap_E_RABUsageReportList_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABUsageReportList_element (OSCTXT *pctxt, 
   s1ap_E_RABUsageReportList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABUsageReportList                                      */
/*                                                            */
/**************************************************************/
/*
E-RABUsageReportList ::= SEQUENCE (SIZE (1..maxnooftimeperiods)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABUsageReportItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABUsageReportItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABUsageReportItemIEs}{@id})
}
*/
/* List of s1ap_E_RABUsageReportList_element */
typedef OSRTDList s1ap_E_RABUsageReportList;

EXTERN int asn1PE_s1ap_E_RABUsageReportList (OSCTXT* pctxt, s1ap_E_RABUsageReportList* pvalue);

EXTERN int asn1PD_s1ap_E_RABUsageReportList (OSCTXT* pctxt, s1ap_E_RABUsageReportList* pvalue);

EXTERN void asn1Print_s1ap_E_RABUsageReportList 
   (const char* name, const s1ap_E_RABUsageReportList* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABUsageReportList (const char* name, 
   s1ap_E_RABUsageReportList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABUsageReportList (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABUsageReportList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABUsageReportList_element* 
   asn1Get_s1ap_E_RABUsageReportList (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABUsageReportList* plist);

EXTERN void asn1Copy_s1ap_E_RABUsageReportList (OSCTXT* pctxt, 
   const s1ap_E_RABUsageReportList* pSrcValue, s1ap_E_RABUsageReportList*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABUsageReportList (s1ap_E_RABUsageReportList* pvalue);

EXTERN void asn1Free_s1ap_E_RABUsageReportList (OSCTXT *pctxt, 
   s1ap_E_RABUsageReportList* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportItem_iE_Extensions_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReportItem'
*/
typedef struct EXTERN s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element 
   (const char* name, const s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element (
   const char* name, 
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pSrcValue, 
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element (
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportItem_iE_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReportItem'
*/
/* List of s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element */
typedef OSRTDList s1ap_SecondaryRATDataUsageReportItem_iE_Extensions;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions 
   (const char* name, const s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions (
   const char* name, 
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SecondaryRATDataUsageReportItem_iE_Extensions_element* 
   asn1Get_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pSrcValue, 
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions (
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReportItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportItem                           */
/*                                                            */
/**************************************************************/
/*
SecondaryRATDataUsageReportItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   secondaryRATType [1] SecondaryRATType,
   e-RABUsageReportList [2] E-RABUsageReportList,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SecondaryRATDataUsageReportItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SecondaryRATDataUsageReportItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SecondaryRATDataUsageReportItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_SecondaryRATDataUsageReportItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_SecondaryRATType secondaryRATType;
   s1ap_E_RABUsageReportList e_RABUsageReportList;
   s1ap_SecondaryRATDataUsageReportItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_SecondaryRATDataUsageReportItem;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReportItem (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportItem* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReportItem (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportItem* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReportItem 
   (const char* name, const s1ap_SecondaryRATDataUsageReportItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReportItem (const char* name, 
   s1ap_SecondaryRATDataUsageReportItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReportItem (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReportItem* pvalue);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReportItem (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReportItem* pSrcValue, 
   s1ap_SecondaryRATDataUsageReportItem* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReportItem (
   s1ap_SecondaryRATDataUsageReportItem* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReportItem (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReportItem* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportList_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReportList'
*/
typedef struct EXTERN s1ap_SecondaryRATDataUsageReportList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      SecondaryRATDataUsageReportItemIEs_TVALUE t;

      /**
       * SecondaryRATDataUsageReportItemIEs information objects
       */
      union {
         /**
          * id: id-SecondaryRATDataUsageReportItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_SecondaryRATDataUsageReportItem *_SecondaryRATDataUsageReportItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_SecondaryRATDataUsageReportList_element;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReportList_element (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportList_element* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReportList_element (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportList_element* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReportList_element 
   (const char* name, const s1ap_SecondaryRATDataUsageReportList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReportList_element (
   const char* name, s1ap_SecondaryRATDataUsageReportList_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReportList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReportList_element* pvalue);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReportList_element (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReportList_element* pSrcValue, 
   s1ap_SecondaryRATDataUsageReportList_element* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReportList_element (
   s1ap_SecondaryRATDataUsageReportList_element* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReportList_element (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReportList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportList                           */
/*                                                            */
/**************************************************************/
/*
SecondaryRATDataUsageReportList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({SecondaryRATDataUsageReportItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({SecondaryRATDataUsageReportItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({SecondaryRATDataUsageReportItemIEs}{@id})
}
*/
/* List of s1ap_SecondaryRATDataUsageReportList_element */
typedef OSRTDList s1ap_SecondaryRATDataUsageReportList;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReportList (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportList* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReportList (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReportList* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReportList 
   (const char* name, const s1ap_SecondaryRATDataUsageReportList* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReportList (const char* name, 
   s1ap_SecondaryRATDataUsageReportList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReportList (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReportList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SecondaryRATDataUsageReportList_element* 
   asn1Get_s1ap_SecondaryRATDataUsageReportList (s1ap_ProtocolIE_ID id, 
   s1ap_SecondaryRATDataUsageReportList* plist);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReportList (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReportList* pSrcValue, 
   s1ap_SecondaryRATDataUsageReportList* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReportList (
   s1ap_SecondaryRATDataUsageReportList* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReportList (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReportList* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellItem_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellItem'
*/
typedef struct EXTERN s1ap_RecommendedCellItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_RecommendedCellItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_RecommendedCellItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellItem_iE_Extensions_element 
   (const char* name, const s1ap_RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellItem_iE_Extensions_element (
   const char* name, s1ap_RecommendedCellItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedCellItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_RecommendedCellItem_iE_Extensions_element* pSrcValue, 
   s1ap_RecommendedCellItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellItem_iE_Extensions_element (
   s1ap_RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_RecommendedCellItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellItem_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellItem'
*/
/* List of s1ap_RecommendedCellItem_iE_Extensions_element */
typedef OSRTDList s1ap_RecommendedCellItem_iE_Extensions;

EXTERN int asn1PE_s1ap_RecommendedCellItem_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedCellItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellItem_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedCellItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellItem_iE_Extensions 
   (const char* name, const s1ap_RecommendedCellItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellItem_iE_Extensions (const char* name, 
   s1ap_RecommendedCellItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RecommendedCellItem_iE_Extensions_element* 
   asn1Get_s1ap_RecommendedCellItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_RecommendedCellItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_RecommendedCellItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_RecommendedCellItem_iE_Extensions* pSrcValue, 
   s1ap_RecommendedCellItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellItem_iE_Extensions (
   s1ap_RecommendedCellItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_RecommendedCellItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellItem                                       */
/*                                                            */
/**************************************************************/
/*
RecommendedCellItem ::= SEQUENCE {
   eUTRAN-CGI [0] EUTRAN-CGI,
   timeStayedInCell [1] INTEGER (0..4095) OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({RecommendedCellsForPagingItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({RecommendedCellsForPagingItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({RecommendedCellsForPagingItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_RecommendedCellItem {
   struct {
      unsigned timeStayedInCellPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eUTRAN_CGI;
   OSUINT16 timeStayedInCell;
   s1ap_RecommendedCellItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_RecommendedCellItem;

EXTERN int asn1PE_s1ap_RecommendedCellItem (OSCTXT* pctxt, s1ap_RecommendedCellItem* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellItem (OSCTXT* pctxt, s1ap_RecommendedCellItem* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellItem 
   (const char* name, const s1ap_RecommendedCellItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellItem (const char* name, 
   s1ap_RecommendedCellItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellItem (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellItem* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedCellItem (OSCTXT* pctxt, 
   const s1ap_RecommendedCellItem* pSrcValue, s1ap_RecommendedCellItem*
    pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellItem (s1ap_RecommendedCellItem* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellItem (OSCTXT *pctxt, 
   s1ap_RecommendedCellItem* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellList_element                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellList'
*/
typedef struct EXTERN s1ap_RecommendedCellList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      RecommendedCellItemIEs_TVALUE t;

      /**
       * RecommendedCellItemIEs information objects
       */
      union {
         /**
          * id: id-RecommendedCellItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_RecommendedCellItem *_RecommendedCellItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_RecommendedCellList_element;

EXTERN int asn1PE_s1ap_RecommendedCellList_element (OSCTXT* pctxt, s1ap_RecommendedCellList_element* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellList_element (OSCTXT* pctxt, s1ap_RecommendedCellList_element* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellList_element 
   (const char* name, const s1ap_RecommendedCellList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellList_element (const char* name, 
   s1ap_RecommendedCellList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellList_element* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedCellList_element (OSCTXT* pctxt, 
   const s1ap_RecommendedCellList_element* pSrcValue, 
   s1ap_RecommendedCellList_element* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellList_element (
   s1ap_RecommendedCellList_element* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellList_element (OSCTXT *pctxt, 
   s1ap_RecommendedCellList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellList                                       */
/*                                                            */
/**************************************************************/
/*
RecommendedCellList ::= SEQUENCE (SIZE (1..maxnoofRecommendedCells)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({RecommendedCellItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({RecommendedCellItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({RecommendedCellItemIEs}{@id})
}
*/
/* List of s1ap_RecommendedCellList_element */
typedef OSRTDList s1ap_RecommendedCellList;

EXTERN int asn1PE_s1ap_RecommendedCellList (OSCTXT* pctxt, s1ap_RecommendedCellList* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellList (OSCTXT* pctxt, s1ap_RecommendedCellList* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellList 
   (const char* name, const s1ap_RecommendedCellList* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellList (const char* name, 
   s1ap_RecommendedCellList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellList (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RecommendedCellList_element* 
   asn1Get_s1ap_RecommendedCellList (s1ap_ProtocolIE_ID id, 
   s1ap_RecommendedCellList* plist);

EXTERN void asn1Copy_s1ap_RecommendedCellList (OSCTXT* pctxt, 
   const s1ap_RecommendedCellList* pSrcValue, s1ap_RecommendedCellList*
    pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellList (s1ap_RecommendedCellList* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellList (OSCTXT *pctxt, 
   s1ap_RecommendedCellList* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellsForPaging_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellsForPaging'
*/
typedef struct EXTERN s1ap_RecommendedCellsForPaging_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_RecommendedCellsForPaging_iE_Extensions_element;

EXTERN int asn1PE_s1ap_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellsForPaging_iE_Extensions_element 
   (const char* name, const s1ap_RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellsForPaging_iE_Extensions_element (
   const char* name, 
   s1ap_RecommendedCellsForPaging_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_RecommendedCellsForPaging_iE_Extensions_element* pSrcValue, 
   s1ap_RecommendedCellsForPaging_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellsForPaging_iE_Extensions_element (
   s1ap_RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_RecommendedCellsForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellsForPaging_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellsForPaging'
*/
/* List of s1ap_RecommendedCellsForPaging_iE_Extensions_element */
typedef OSRTDList s1ap_RecommendedCellsForPaging_iE_Extensions;

EXTERN int asn1PE_s1ap_RecommendedCellsForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedCellsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellsForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedCellsForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellsForPaging_iE_Extensions 
   (const char* name, const s1ap_RecommendedCellsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellsForPaging_iE_Extensions (
   const char* name, s1ap_RecommendedCellsForPaging_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellsForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellsForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RecommendedCellsForPaging_iE_Extensions_element* 
   asn1Get_s1ap_RecommendedCellsForPaging_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_RecommendedCellsForPaging_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_RecommendedCellsForPaging_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_RecommendedCellsForPaging_iE_Extensions* pSrcValue, 
   s1ap_RecommendedCellsForPaging_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellsForPaging_iE_Extensions (
   s1ap_RecommendedCellsForPaging_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellsForPaging_iE_Extensions (OSCTXT *pctxt, 
   s1ap_RecommendedCellsForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellsForPaging                                 */
/*                                                            */
/**************************************************************/
/*
RecommendedCellsForPaging ::= SEQUENCE {
   recommendedCellList [0] RecommendedCellList,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({RecommendedCellsForPaging-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({RecommendedCellsForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({RecommendedCellsForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_RecommendedCellsForPaging {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_RecommendedCellList recommendedCellList;
   s1ap_RecommendedCellsForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_RecommendedCellsForPaging;

EXTERN int asn1PE_s1ap_RecommendedCellsForPaging (OSCTXT* pctxt, s1ap_RecommendedCellsForPaging* pvalue);

EXTERN int asn1PD_s1ap_RecommendedCellsForPaging (OSCTXT* pctxt, s1ap_RecommendedCellsForPaging* pvalue);

EXTERN void asn1Print_s1ap_RecommendedCellsForPaging 
   (const char* name, const s1ap_RecommendedCellsForPaging* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedCellsForPaging (const char* name, 
   s1ap_RecommendedCellsForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedCellsForPaging (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedCellsForPaging* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedCellsForPaging (OSCTXT* pctxt, 
   const s1ap_RecommendedCellsForPaging* pSrcValue, 
   s1ap_RecommendedCellsForPaging* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedCellsForPaging (
   s1ap_RecommendedCellsForPaging* pvalue);

EXTERN void asn1Free_s1ap_RecommendedCellsForPaging (OSCTXT *pctxt, 
   s1ap_RecommendedCellsForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEPagingTarget                                           */
/*                                                            */
/**************************************************************/
/*
MMEPagingTarget ::= CHOICE {
   global-ENB-ID [0] Global-ENB-ID,
   tAI [1] TAI,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_MMEPagingTarget_global_ENB_ID 1
#define T_s1ap_MMEPagingTarget_tAI      2
#define T_s1ap_MMEPagingTarget_extElem1 3

typedef struct EXTERN s1ap_MMEPagingTarget {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_Global_ENB_ID *global_ENB_ID;
      /* t = 2 */
      s1ap_TAI *tAI;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_MMEPagingTarget;

EXTERN int asn1PE_s1ap_MMEPagingTarget (OSCTXT* pctxt, s1ap_MMEPagingTarget* pvalue);

EXTERN int asn1PD_s1ap_MMEPagingTarget (OSCTXT* pctxt, s1ap_MMEPagingTarget* pvalue);

EXTERN void asn1Print_s1ap_MMEPagingTarget 
   (const char* name, const s1ap_MMEPagingTarget* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEPagingTarget (const char* name, 
   s1ap_MMEPagingTarget* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEPagingTarget (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEPagingTarget* pvalue);

EXTERN void asn1Copy_s1ap_MMEPagingTarget (OSCTXT* pctxt, 
   const s1ap_MMEPagingTarget* pSrcValue, s1ap_MMEPagingTarget* pDstValue);

EXTERN int asn1Init_s1ap_MMEPagingTarget (s1ap_MMEPagingTarget* pvalue);

EXTERN void asn1Free_s1ap_MMEPagingTarget (OSCTXT *pctxt, 
   s1ap_MMEPagingTarget* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBItem_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedENBItem'
*/
typedef struct EXTERN s1ap_RecommendedENBItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_RecommendedENBItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_RecommendedENBItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedENBItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedENBItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBItem_iE_Extensions_element 
   (const char* name, const s1ap_RecommendedENBItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBItem_iE_Extensions_element (
   const char* name, s1ap_RecommendedENBItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedENBItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_RecommendedENBItem_iE_Extensions_element* pSrcValue, 
   s1ap_RecommendedENBItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBItem_iE_Extensions_element (
   s1ap_RecommendedENBItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_RecommendedENBItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBItem_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedENBItem'
*/
/* List of s1ap_RecommendedENBItem_iE_Extensions_element */
typedef OSRTDList s1ap_RecommendedENBItem_iE_Extensions;

EXTERN int asn1PE_s1ap_RecommendedENBItem_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedENBItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBItem_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedENBItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBItem_iE_Extensions 
   (const char* name, const s1ap_RecommendedENBItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBItem_iE_Extensions (const char* name, 
   s1ap_RecommendedENBItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RecommendedENBItem_iE_Extensions_element* 
   asn1Get_s1ap_RecommendedENBItem_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_RecommendedENBItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_RecommendedENBItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_RecommendedENBItem_iE_Extensions* pSrcValue, 
   s1ap_RecommendedENBItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBItem_iE_Extensions (
   s1ap_RecommendedENBItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_RecommendedENBItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBItem                                        */
/*                                                            */
/**************************************************************/
/*
RecommendedENBItem ::= SEQUENCE {
   mMEPagingTarget [0] EXPLICIT MMEPagingTarget,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({RecommendedENBItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({RecommendedENBItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({RecommendedENBItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_RecommendedENBItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MMEPagingTarget mMEPagingTarget;
   s1ap_RecommendedENBItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_RecommendedENBItem;

EXTERN int asn1PE_s1ap_RecommendedENBItem (OSCTXT* pctxt, s1ap_RecommendedENBItem* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBItem (OSCTXT* pctxt, s1ap_RecommendedENBItem* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBItem 
   (const char* name, const s1ap_RecommendedENBItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBItem (const char* name, 
   s1ap_RecommendedENBItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBItem (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBItem* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedENBItem (OSCTXT* pctxt, 
   const s1ap_RecommendedENBItem* pSrcValue, s1ap_RecommendedENBItem*
    pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBItem (s1ap_RecommendedENBItem* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBItem (OSCTXT *pctxt, 
   s1ap_RecommendedENBItem* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBList_element                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedENBList'
*/
typedef struct EXTERN s1ap_RecommendedENBList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      RecommendedENBItemIEs_TVALUE t;

      /**
       * RecommendedENBItemIEs information objects
       */
      union {
         /**
          * id: id-RecommendedENBItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_RecommendedENBItem *_RecommendedENBItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_RecommendedENBList_element;

EXTERN int asn1PE_s1ap_RecommendedENBList_element (OSCTXT* pctxt, s1ap_RecommendedENBList_element* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBList_element (OSCTXT* pctxt, s1ap_RecommendedENBList_element* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBList_element 
   (const char* name, const s1ap_RecommendedENBList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBList_element (const char* name, 
   s1ap_RecommendedENBList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBList_element* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedENBList_element (OSCTXT* pctxt, 
   const s1ap_RecommendedENBList_element* pSrcValue, 
   s1ap_RecommendedENBList_element* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBList_element (
   s1ap_RecommendedENBList_element* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBList_element (OSCTXT *pctxt, 
   s1ap_RecommendedENBList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBList                                        */
/*                                                            */
/**************************************************************/
/*
RecommendedENBList ::= SEQUENCE (SIZE (1..maxnoofRecommendedENBs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({RecommendedENBItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({RecommendedENBItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({RecommendedENBItemIEs}{@id})
}
*/
/* List of s1ap_RecommendedENBList_element */
typedef OSRTDList s1ap_RecommendedENBList;

EXTERN int asn1PE_s1ap_RecommendedENBList (OSCTXT* pctxt, s1ap_RecommendedENBList* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBList (OSCTXT* pctxt, s1ap_RecommendedENBList* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBList 
   (const char* name, const s1ap_RecommendedENBList* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBList (const char* name, 
   s1ap_RecommendedENBList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBList (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RecommendedENBList_element* asn1Get_s1ap_RecommendedENBList 
   (s1ap_ProtocolIE_ID id, s1ap_RecommendedENBList* plist);

EXTERN void asn1Copy_s1ap_RecommendedENBList (OSCTXT* pctxt, 
   const s1ap_RecommendedENBList* pSrcValue, s1ap_RecommendedENBList*
    pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBList (s1ap_RecommendedENBList* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBList (OSCTXT *pctxt, 
   s1ap_RecommendedENBList* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBsForPaging_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedENBsForPaging'
*/
typedef struct EXTERN s1ap_RecommendedENBsForPaging_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_RecommendedENBsForPaging_iE_Extensions_element;

EXTERN int asn1PE_s1ap_RecommendedENBsForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedENBsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBsForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_RecommendedENBsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBsForPaging_iE_Extensions_element 
   (const char* name, const s1ap_RecommendedENBsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBsForPaging_iE_Extensions_element (
   const char* name, 
   s1ap_RecommendedENBsForPaging_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBsForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedENBsForPaging_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_RecommendedENBsForPaging_iE_Extensions_element* pSrcValue, 
   s1ap_RecommendedENBsForPaging_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBsForPaging_iE_Extensions_element (
   s1ap_RecommendedENBsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBsForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_RecommendedENBsForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBsForPaging_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedENBsForPaging'
*/
/* List of s1ap_RecommendedENBsForPaging_iE_Extensions_element */
typedef OSRTDList s1ap_RecommendedENBsForPaging_iE_Extensions;

EXTERN int asn1PE_s1ap_RecommendedENBsForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedENBsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBsForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_RecommendedENBsForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBsForPaging_iE_Extensions 
   (const char* name, const s1ap_RecommendedENBsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBsForPaging_iE_Extensions (
   const char* name, s1ap_RecommendedENBsForPaging_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBsForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBsForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RecommendedENBsForPaging_iE_Extensions_element* 
   asn1Get_s1ap_RecommendedENBsForPaging_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_RecommendedENBsForPaging_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_RecommendedENBsForPaging_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_RecommendedENBsForPaging_iE_Extensions* pSrcValue, 
   s1ap_RecommendedENBsForPaging_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBsForPaging_iE_Extensions (
   s1ap_RecommendedENBsForPaging_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBsForPaging_iE_Extensions (OSCTXT *pctxt, 
   s1ap_RecommendedENBsForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedENBsForPaging                                  */
/*                                                            */
/**************************************************************/
/*
RecommendedENBsForPaging ::= SEQUENCE {
   recommendedENBList [0] RecommendedENBList,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({RecommendedENBsForPaging-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({RecommendedENBsForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({RecommendedENBsForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_RecommendedENBsForPaging {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_RecommendedENBList recommendedENBList;
   s1ap_RecommendedENBsForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_RecommendedENBsForPaging;

EXTERN int asn1PE_s1ap_RecommendedENBsForPaging (OSCTXT* pctxt, s1ap_RecommendedENBsForPaging* pvalue);

EXTERN int asn1PD_s1ap_RecommendedENBsForPaging (OSCTXT* pctxt, s1ap_RecommendedENBsForPaging* pvalue);

EXTERN void asn1Print_s1ap_RecommendedENBsForPaging 
   (const char* name, const s1ap_RecommendedENBsForPaging* pvalue);

EXTERN int asn1PrtToStr_s1ap_RecommendedENBsForPaging (const char* name, 
   s1ap_RecommendedENBsForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RecommendedENBsForPaging (OSCTXT *pctxt, 
   const char* name, const s1ap_RecommendedENBsForPaging* pvalue);

EXTERN void asn1Copy_s1ap_RecommendedENBsForPaging (OSCTXT* pctxt, 
   const s1ap_RecommendedENBsForPaging* pSrcValue, 
   s1ap_RecommendedENBsForPaging* pDstValue);

EXTERN int asn1Init_s1ap_RecommendedENBsForPaging (
   s1ap_RecommendedENBsForPaging* pvalue);

EXTERN void asn1Free_s1ap_RecommendedENBsForPaging (OSCTXT *pctxt, 
   s1ap_RecommendedENBsForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationOnRecommendedCellsAndENBsForPaging_iE_Extensi  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InformationOnRecommendedCellsAndENBsForPaging'
*/
typedef struct EXTERN s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element;

EXTERN int asn1PE_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element 
   (const char* name, const s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element (
   const char* name, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pSrcValue, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element*
    pDstValue);

EXTERN int asn1Init_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element (
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationOnRecommendedCellsAndENBsForPaging_iE_Extensi  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InformationOnRecommendedCellsAndENBsForPaging'
*/
/* List of s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element */
typedef OSRTDList s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions;

EXTERN int asn1PE_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions 
   (const char* name, const s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions (
   const char* name, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions_element* 
   asn1Get_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pSrcValue, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions (
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions (OSCTXT *pctxt, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationOnRecommendedCellsAndENBsForPaging             */
/*                                                            */
/**************************************************************/
/*
InformationOnRecommendedCellsAndENBsForPaging ::= SEQUENCE {
   recommendedCellsForPaging [0] RecommendedCellsForPaging,
   recommendENBsForPaging [1] RecommendedENBsForPaging,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({InformationOnRecommendedCellsAndENBsForPaging-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({InformationOnRecommendedCellsAndENBsForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({InformationOnRecommendedCellsAndENBsForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_InformationOnRecommendedCellsAndENBsForPaging {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_RecommendedCellsForPaging recommendedCellsForPaging;
   s1ap_RecommendedENBsForPaging recommendENBsForPaging;
   s1ap_InformationOnRecommendedCellsAndENBsForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_InformationOnRecommendedCellsAndENBsForPaging;

EXTERN int asn1PE_s1ap_InformationOnRecommendedCellsAndENBsForPaging (OSCTXT* pctxt, s1ap_InformationOnRecommendedCellsAndENBsForPaging* pvalue);

EXTERN int asn1PD_s1ap_InformationOnRecommendedCellsAndENBsForPaging (OSCTXT* pctxt, s1ap_InformationOnRecommendedCellsAndENBsForPaging* pvalue);

EXTERN void asn1Print_s1ap_InformationOnRecommendedCellsAndENBsForPaging 
   (const char* name, const s1ap_InformationOnRecommendedCellsAndENBsForPaging* pvalue);

EXTERN int asn1PrtToStr_s1ap_InformationOnRecommendedCellsAndENBsForPaging (
   const char* name, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InformationOnRecommendedCellsAndENBsForPaging (OSCTXT *pctxt, 
   const char* name, const s1ap_InformationOnRecommendedCellsAndENBsForPaging* pvalue);

EXTERN void asn1Copy_s1ap_InformationOnRecommendedCellsAndENBsForPaging (OSCTXT* pctxt, 
   const s1ap_InformationOnRecommendedCellsAndENBsForPaging* pSrcValue, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging* pDstValue);

EXTERN int asn1Init_s1ap_InformationOnRecommendedCellsAndENBsForPaging (
   s1ap_InformationOnRecommendedCellsAndENBsForPaging* pvalue);

EXTERN void asn1Free_s1ap_InformationOnRecommendedCellsAndENBsForPaging (OSCTXT *pctxt, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  CELevel                                                   */
/*                                                            */
/**************************************************************/
/*
 Coverage Enhancement level encoded according to TS 36.331 [16] 
CELevel ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_CELevel;

EXTERN int asn1PE_s1ap_CELevel (OSCTXT* pctxt, s1ap_CELevel value);

EXTERN int asn1PD_s1ap_CELevel (OSCTXT* pctxt, s1ap_CELevel* pvalue);

EXTERN void asn1Print_s1ap_CELevel (const char* name, const s1ap_CELevel* pvalue);

EXTERN int asn1PrtToStr_s1ap_CELevel (const char* name, s1ap_CELevel* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CELevel (OSCTXT *pctxt, 
   const char* name, const s1ap_CELevel* pvalue);

EXTERN void asn1Copy_s1ap_CELevel (OSCTXT* pctxt, const s1ap_CELevel* pSrcValue, 
   s1ap_CELevel* pDstValue);

EXTERN int asn1Init_s1ap_CELevel (s1ap_CELevel* pvalue);

EXTERN void asn1Free_s1ap_CELevel (OSCTXT *pctxt, s1ap_CELevel* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_el  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIdentifierAndCELevelForCECapableUEs'
*/
typedef struct EXTERN s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element 
   (const char* name, const s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element (
   const char* name, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pSrcValue, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element*
    pDstValue);

EXTERN int asn1Init_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element (
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIdentifierAndCELevelForCECapableUEs_iE_Extensions     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIdentifierAndCELevelForCECapableUEs'
*/
/* List of s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element */
typedef OSRTDList s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions;

EXTERN int asn1PE_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions (OSCTXT* pctxt, s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions (OSCTXT* pctxt, s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions 
   (const char* name, const s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions (
   const char* name, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions_element* 
   asn1Get_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pSrcValue, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions (
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIdentifierAndCELevelForCECapableUEs                   */
/*                                                            */
/**************************************************************/
/*
CellIdentifierAndCELevelForCECapableUEs ::= SEQUENCE {
   global-Cell-ID [0] EUTRAN-CGI,
   cELevel [1] CELevel,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CellIdentifierAndCELevelForCECapableUEs-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CellIdentifierAndCELevelForCECapableUEs-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CellIdentifierAndCELevelForCECapableUEs-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CellIdentifierAndCELevelForCECapableUEs {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI global_Cell_ID;
   s1ap_CELevel cELevel;
   s1ap_CellIdentifierAndCELevelForCECapableUEs_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CellIdentifierAndCELevelForCECapableUEs;

EXTERN int asn1PE_s1ap_CellIdentifierAndCELevelForCECapableUEs (OSCTXT* pctxt, s1ap_CellIdentifierAndCELevelForCECapableUEs* pvalue);

EXTERN int asn1PD_s1ap_CellIdentifierAndCELevelForCECapableUEs (OSCTXT* pctxt, s1ap_CellIdentifierAndCELevelForCECapableUEs* pvalue);

EXTERN void asn1Print_s1ap_CellIdentifierAndCELevelForCECapableUEs 
   (const char* name, const s1ap_CellIdentifierAndCELevelForCECapableUEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellIdentifierAndCELevelForCECapableUEs (
   const char* name, s1ap_CellIdentifierAndCELevelForCECapableUEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellIdentifierAndCELevelForCECapableUEs (OSCTXT *pctxt, 
   const char* name, const s1ap_CellIdentifierAndCELevelForCECapableUEs* pvalue);

EXTERN void asn1Copy_s1ap_CellIdentifierAndCELevelForCECapableUEs (OSCTXT* pctxt, 
   const s1ap_CellIdentifierAndCELevelForCECapableUEs* pSrcValue, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs* pDstValue);

EXTERN int asn1Init_s1ap_CellIdentifierAndCELevelForCECapableUEs (
   s1ap_CellIdentifierAndCELevelForCECapableUEs* pvalue);

EXTERN void asn1Free_s1ap_CellIdentifierAndCELevelForCECapableUEs (OSCTXT *pctxt, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformation_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformation'
*/
typedef struct EXTERN s1ap_UserLocationInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_UserLocationInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UserLocationInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_UserLocationInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UserLocationInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_UserLocationInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UserLocationInformation_iE_Extensions_element 
   (const char* name, const s1ap_UserLocationInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UserLocationInformation_iE_Extensions_element (
   const char* name, 
   s1ap_UserLocationInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UserLocationInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UserLocationInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_UserLocationInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UserLocationInformation_iE_Extensions_element* pSrcValue, 
   s1ap_UserLocationInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UserLocationInformation_iE_Extensions_element (
   s1ap_UserLocationInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_UserLocationInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_UserLocationInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformation_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformation'
*/
/* List of s1ap_UserLocationInformation_iE_Extensions_element */
typedef OSRTDList s1ap_UserLocationInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_UserLocationInformation_iE_Extensions (OSCTXT* pctxt, s1ap_UserLocationInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UserLocationInformation_iE_Extensions (OSCTXT* pctxt, s1ap_UserLocationInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UserLocationInformation_iE_Extensions 
   (const char* name, const s1ap_UserLocationInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UserLocationInformation_iE_Extensions (const char* name, 
   s1ap_UserLocationInformation_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UserLocationInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UserLocationInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UserLocationInformation_iE_Extensions_element* 
   asn1Get_s1ap_UserLocationInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_UserLocationInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UserLocationInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UserLocationInformation_iE_Extensions* pSrcValue, 
   s1ap_UserLocationInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UserLocationInformation_iE_Extensions (
   s1ap_UserLocationInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UserLocationInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UserLocationInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformation                                   */
/*                                                            */
/**************************************************************/
/*
UserLocationInformation ::= SEQUENCE {
   eutran-cgi [0] EUTRAN-CGI,
   tai [1] TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UserLocationInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UserLocationInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UserLocationInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UserLocationInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eutran_cgi;
   s1ap_TAI tai;
   s1ap_UserLocationInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UserLocationInformation;

EXTERN int asn1PE_s1ap_UserLocationInformation (OSCTXT* pctxt, s1ap_UserLocationInformation* pvalue);

EXTERN int asn1PD_s1ap_UserLocationInformation (OSCTXT* pctxt, s1ap_UserLocationInformation* pvalue);

EXTERN void asn1Print_s1ap_UserLocationInformation 
   (const char* name, const s1ap_UserLocationInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_UserLocationInformation (const char* name, 
   s1ap_UserLocationInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UserLocationInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_UserLocationInformation* pvalue);

EXTERN void asn1Copy_s1ap_UserLocationInformation (OSCTXT* pctxt, 
   const s1ap_UserLocationInformation* pSrcValue, s1ap_UserLocationInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_UserLocationInformation (
   s1ap_UserLocationInformation* pvalue);

EXTERN void asn1Free_s1ap_UserLocationInformation (OSCTXT *pctxt, 
   s1ap_UserLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  UEIdentityIndexValue                                      */
/*                                                            */
/**************************************************************/
/*
UEIdentityIndexValue ::= BIT STRING  (SIZE (10))
*/
typedef ASN1BitStr32 s1ap_UEIdentityIndexValue;

EXTERN int asn1PE_s1ap_UEIdentityIndexValue (OSCTXT* pctxt, s1ap_UEIdentityIndexValue value);

EXTERN int asn1PD_s1ap_UEIdentityIndexValue (OSCTXT* pctxt, s1ap_UEIdentityIndexValue* pvalue);

EXTERN void asn1Print_s1ap_UEIdentityIndexValue 
   (const char* name, const s1ap_UEIdentityIndexValue* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEIdentityIndexValue (const char* name, 
   s1ap_UEIdentityIndexValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEIdentityIndexValue (OSCTXT *pctxt, 
   const char* name, const s1ap_UEIdentityIndexValue* pvalue);

EXTERN void asn1Copy_s1ap_UEIdentityIndexValue (OSCTXT* pctxt, 
   const s1ap_UEIdentityIndexValue* pSrcValue, s1ap_UEIdentityIndexValue*
    pDstValue);

EXTERN int asn1Init_s1ap_UEIdentityIndexValue (s1ap_UEIdentityIndexValue* pvalue);

/**************************************************************/
/*                                                            */
/*  M_TMSI                                                    */
/*                                                            */
/**************************************************************/
/*
M-TMSI ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN s1ap_M_TMSI {
   OSUINT32 numocts;
   OSOCTET data[4];
} s1ap_M_TMSI;

EXTERN int asn1PE_s1ap_M_TMSI (OSCTXT* pctxt, s1ap_M_TMSI* pvalue);

EXTERN int asn1PD_s1ap_M_TMSI (OSCTXT* pctxt, s1ap_M_TMSI* pvalue);

EXTERN void asn1Print_s1ap_M_TMSI (const char* name, const s1ap_M_TMSI* pvalue);

EXTERN int asn1PrtToStr_s1ap_M_TMSI (const char* name, s1ap_M_TMSI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_M_TMSI (OSCTXT *pctxt, 
   const char* name, const s1ap_M_TMSI* pvalue);

EXTERN void asn1Copy_s1ap_M_TMSI (OSCTXT* pctxt, const s1ap_M_TMSI* pSrcValue, 
   s1ap_M_TMSI* pDstValue);

EXTERN int asn1Init_s1ap_M_TMSI (s1ap_M_TMSI* pvalue);

/**************************************************************/
/*                                                            */
/*  S_TMSI_iE_Extensions_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S-TMSI'
*/
typedef struct EXTERN s1ap_S_TMSI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_S_TMSI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_S_TMSI_iE_Extensions_element (OSCTXT* pctxt, s1ap_S_TMSI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_S_TMSI_iE_Extensions_element (OSCTXT* pctxt, s1ap_S_TMSI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_S_TMSI_iE_Extensions_element 
   (const char* name, const s1ap_S_TMSI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_S_TMSI_iE_Extensions_element (const char* name, 
   s1ap_S_TMSI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S_TMSI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_S_TMSI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_S_TMSI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_S_TMSI_iE_Extensions_element* pSrcValue, 
   s1ap_S_TMSI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_S_TMSI_iE_Extensions_element (
   s1ap_S_TMSI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_S_TMSI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_S_TMSI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  S_TMSI_iE_Extensions                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S-TMSI'
*/
/* List of s1ap_S_TMSI_iE_Extensions_element */
typedef OSRTDList s1ap_S_TMSI_iE_Extensions;

EXTERN int asn1PE_s1ap_S_TMSI_iE_Extensions (OSCTXT* pctxt, s1ap_S_TMSI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_S_TMSI_iE_Extensions (OSCTXT* pctxt, s1ap_S_TMSI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_S_TMSI_iE_Extensions 
   (const char* name, const s1ap_S_TMSI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_S_TMSI_iE_Extensions (const char* name, 
   s1ap_S_TMSI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S_TMSI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_S_TMSI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_S_TMSI_iE_Extensions_element* 
   asn1Get_s1ap_S_TMSI_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_S_TMSI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_S_TMSI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_S_TMSI_iE_Extensions* pSrcValue, s1ap_S_TMSI_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_S_TMSI_iE_Extensions (s1ap_S_TMSI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_S_TMSI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_S_TMSI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  S_TMSI                                                    */
/*                                                            */
/**************************************************************/
/*
S-TMSI ::= SEQUENCE {
   mMEC [0] MME-Code,
   m-TMSI [1] M-TMSI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({S-TMSI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({S-TMSI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({S-TMSI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_S_TMSI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MME_Code mMEC;
   s1ap_M_TMSI m_TMSI;
   s1ap_S_TMSI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_S_TMSI;

EXTERN int asn1PE_s1ap_S_TMSI (OSCTXT* pctxt, s1ap_S_TMSI* pvalue);

EXTERN int asn1PD_s1ap_S_TMSI (OSCTXT* pctxt, s1ap_S_TMSI* pvalue);

EXTERN void asn1Print_s1ap_S_TMSI (const char* name, const s1ap_S_TMSI* pvalue);

EXTERN int asn1PrtToStr_s1ap_S_TMSI (const char* name, s1ap_S_TMSI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S_TMSI (OSCTXT *pctxt, 
   const char* name, const s1ap_S_TMSI* pvalue);

EXTERN void asn1Copy_s1ap_S_TMSI (OSCTXT* pctxt, const s1ap_S_TMSI* pSrcValue, 
   s1ap_S_TMSI* pDstValue);

EXTERN int asn1Init_s1ap_S_TMSI (s1ap_S_TMSI* pvalue);

EXTERN void asn1Free_s1ap_S_TMSI (OSCTXT *pctxt, s1ap_S_TMSI* pvalue);

/**************************************************************/
/*                                                            */
/*  IMSI                                                      */
/*                                                            */
/**************************************************************/
/*
IMSI ::= OCTET STRING (SIZE (3..8))
*/
typedef struct EXTERN s1ap_IMSI {
   OSUINT32 numocts;
   OSOCTET data[8];
} s1ap_IMSI;

EXTERN int asn1PE_s1ap_IMSI (OSCTXT* pctxt, s1ap_IMSI* pvalue);

EXTERN int asn1PD_s1ap_IMSI (OSCTXT* pctxt, s1ap_IMSI* pvalue);

EXTERN void asn1Print_s1ap_IMSI (const char* name, const s1ap_IMSI* pvalue);

EXTERN int asn1PrtToStr_s1ap_IMSI (const char* name, s1ap_IMSI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_IMSI (OSCTXT *pctxt, 
   const char* name, const s1ap_IMSI* pvalue);

EXTERN void asn1Copy_s1ap_IMSI (OSCTXT* pctxt, const s1ap_IMSI* pSrcValue, s1ap_IMSI*
    pDstValue);

EXTERN int asn1Init_s1ap_IMSI (s1ap_IMSI* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPagingID                                                */
/*                                                            */
/**************************************************************/
/*
 This IE is a transparent container and shall be encoded as the VisitedCellInfoList field contained in the UEInformationResponse message as defined in TS 36.331 [16]
UEPagingID ::= CHOICE {
   s-TMSI [0] S-TMSI,
   iMSI [1] IMSI,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_UEPagingID_s_TMSI        1
#define T_s1ap_UEPagingID_iMSI          2
#define T_s1ap_UEPagingID_extElem1      3

typedef struct EXTERN s1ap_UEPagingID {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_S_TMSI *s_TMSI;
      /* t = 2 */
      s1ap_IMSI *iMSI;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_UEPagingID;

EXTERN int asn1PE_s1ap_UEPagingID (OSCTXT* pctxt, s1ap_UEPagingID* pvalue);

EXTERN int asn1PD_s1ap_UEPagingID (OSCTXT* pctxt, s1ap_UEPagingID* pvalue);

EXTERN void asn1Print_s1ap_UEPagingID 
   (const char* name, const s1ap_UEPagingID* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEPagingID (const char* name, s1ap_UEPagingID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEPagingID (OSCTXT *pctxt, 
   const char* name, const s1ap_UEPagingID* pvalue);

EXTERN void asn1Copy_s1ap_UEPagingID (OSCTXT* pctxt, 
   const s1ap_UEPagingID* pSrcValue, s1ap_UEPagingID* pDstValue);

EXTERN int asn1Init_s1ap_UEPagingID (s1ap_UEPagingID* pvalue);

EXTERN void asn1Free_s1ap_UEPagingID (OSCTXT *pctxt, s1ap_UEPagingID* pvalue);

/**************************************************************/
/*                                                            */
/*  CNDomain                                                  */
/*                                                            */
/**************************************************************/
/*
CNDomain ::= ENUMERATED { ps(0), cs(1) }
*/
typedef enum {
   s1ap_ps = 0,
   s1ap_cs = 1
} s1ap_CNDomain_Root;

typedef OSUINT32 s1ap_CNDomain;

EXTERN int asn1PE_s1ap_CNDomain (OSCTXT* pctxt, s1ap_CNDomain value);

EXTERN int asn1PD_s1ap_CNDomain (OSCTXT* pctxt, s1ap_CNDomain* pvalue);

EXTERN void asn1Print_s1ap_CNDomain (const char* name, const s1ap_CNDomain* pvalue);

EXTERN int asn1PrtToStr_s1ap_CNDomain (const char* name, s1ap_CNDomain* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CNDomain (OSCTXT *pctxt, 
   const char* name, const s1ap_CNDomain* pvalue);

EXTERN extern const OSEnumItem s1ap_CNDomain_ENUMTAB[];
#define s1ap_CNDomain_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_CNDomain_ToString (OSINT32 value);

EXTERN int s1ap_CNDomain_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CNDomain* pvalue);

EXTERN int s1ap_CNDomain_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CNDomain* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingPriority                                            */
/*                                                            */
/**************************************************************/
/*
PagingPriority ::= ENUMERATED { priolevel1(0), priolevel2(1), priolevel3(2), priolevel4(3), priolevel5(4), priolevel6(5), priolevel7(6), priolevel8(7), ... }
*/
typedef enum {
   s1ap_priolevel1 = 0,
   s1ap_priolevel2 = 1,
   s1ap_priolevel3 = 2,
   s1ap_priolevel4 = 3,
   s1ap_priolevel5 = 4,
   s1ap_priolevel6 = 5,
   s1ap_priolevel7 = 6,
   s1ap_priolevel8 = 7
} s1ap_PagingPriority_Root;

typedef OSUINT32 s1ap_PagingPriority;

EXTERN int asn1PE_s1ap_PagingPriority (OSCTXT* pctxt, s1ap_PagingPriority value);

EXTERN int asn1PD_s1ap_PagingPriority (OSCTXT* pctxt, s1ap_PagingPriority* pvalue);

EXTERN void asn1Print_s1ap_PagingPriority 
   (const char* name, const s1ap_PagingPriority* pvalue);

EXTERN int asn1PrtToStr_s1ap_PagingPriority (const char* name, 
   s1ap_PagingPriority* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PagingPriority (OSCTXT *pctxt, 
   const char* name, const s1ap_PagingPriority* pvalue);

EXTERN extern const OSEnumItem s1ap_PagingPriority_ENUMTAB[];
#define s1ap_PagingPriority_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* s1ap_PagingPriority_ToString (OSINT32 value);

EXTERN int s1ap_PagingPriority_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_PagingPriority* pvalue);

EXTERN int s1ap_PagingPriority_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_PagingPriority* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityForPaging                                */
/*                                                            */
/**************************************************************/
/*
UERadioCapabilityForPaging ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_UERadioCapabilityForPaging;

EXTERN int asn1PE_s1ap_UERadioCapabilityForPaging (OSCTXT* pctxt, s1ap_UERadioCapabilityForPaging value);

EXTERN int asn1PD_s1ap_UERadioCapabilityForPaging (OSCTXT* pctxt, s1ap_UERadioCapabilityForPaging* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapabilityForPaging 
   (const char* name, const s1ap_UERadioCapabilityForPaging* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapabilityForPaging (const char* name, 
   s1ap_UERadioCapabilityForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapabilityForPaging (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapabilityForPaging* pvalue);

EXTERN void asn1Copy_s1ap_UERadioCapabilityForPaging (OSCTXT* pctxt, 
   const s1ap_UERadioCapabilityForPaging* pSrcValue, 
   s1ap_UERadioCapabilityForPaging* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapabilityForPaging (
   s1ap_UERadioCapabilityForPaging* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapabilityForPaging (OSCTXT *pctxt, 
   s1ap_UERadioCapabilityForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForRecommendedCells_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForRecommendedCells'
*/
typedef struct EXTERN s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element;

EXTERN int asn1PE_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT* pctxt, s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT* pctxt, s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element 
   (const char* name, const s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element (
   const char* name, 
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pSrcValue, 
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element (
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForRecommendedCells_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForRecommendedCells'
*/
/* List of s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element */
typedef OSRTDList s1ap_AssistanceDataForRecommendedCells_iE_Extensions;

EXTERN int asn1PE_s1ap_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT* pctxt, s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT* pctxt, s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForRecommendedCells_iE_Extensions 
   (const char* name, const s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForRecommendedCells_iE_Extensions (
   const char* name, 
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_AssistanceDataForRecommendedCells_iE_Extensions_element* 
   asn1Get_s1ap_AssistanceDataForRecommendedCells_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pSrcValue, 
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForRecommendedCells_iE_Extensions (
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT *pctxt, 
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForRecommendedCells                         */
/*                                                            */
/**************************************************************/
/*
AssistanceDataForRecommendedCells ::= SEQUENCE {
   recommendedCellsForPaging [0] RecommendedCellsForPaging,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({AssistanceDataForRecommendedCells-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({AssistanceDataForRecommendedCells-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({AssistanceDataForRecommendedCells-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_AssistanceDataForRecommendedCells {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_RecommendedCellsForPaging recommendedCellsForPaging;
   s1ap_AssistanceDataForRecommendedCells_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_AssistanceDataForRecommendedCells;

EXTERN int asn1PE_s1ap_AssistanceDataForRecommendedCells (OSCTXT* pctxt, s1ap_AssistanceDataForRecommendedCells* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForRecommendedCells (OSCTXT* pctxt, s1ap_AssistanceDataForRecommendedCells* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForRecommendedCells 
   (const char* name, const s1ap_AssistanceDataForRecommendedCells* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForRecommendedCells (const char* name, 
   s1ap_AssistanceDataForRecommendedCells* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForRecommendedCells (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForRecommendedCells* pvalue);

EXTERN void asn1Copy_s1ap_AssistanceDataForRecommendedCells (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForRecommendedCells* pSrcValue, 
   s1ap_AssistanceDataForRecommendedCells* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForRecommendedCells (
   s1ap_AssistanceDataForRecommendedCells* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForRecommendedCells (OSCTXT *pctxt, 
   s1ap_AssistanceDataForRecommendedCells* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForCECapableUEs_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForCECapableUEs'
*/
typedef struct EXTERN s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element;

EXTERN int asn1PE_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element (OSCTXT* pctxt, s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element (OSCTXT* pctxt, s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element 
   (const char* name, const s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element (
   const char* name, 
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pSrcValue, 
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element (
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForCECapableUEs_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForCECapableUEs'
*/
/* List of s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element */
typedef OSRTDList s1ap_AssistanceDataForCECapableUEs_iE_Extensions;

EXTERN int asn1PE_s1ap_AssistanceDataForCECapableUEs_iE_Extensions (OSCTXT* pctxt, s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForCECapableUEs_iE_Extensions (OSCTXT* pctxt, s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForCECapableUEs_iE_Extensions 
   (const char* name, const s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForCECapableUEs_iE_Extensions (
   const char* name, s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForCECapableUEs_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_AssistanceDataForCECapableUEs_iE_Extensions_element* 
   asn1Get_s1ap_AssistanceDataForCECapableUEs_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_AssistanceDataForCECapableUEs_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pSrcValue, 
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForCECapableUEs_iE_Extensions (
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForCECapableUEs_iE_Extensions (OSCTXT *pctxt, 
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForCECapableUEs                             */
/*                                                            */
/**************************************************************/
/*
AssistanceDataForCECapableUEs ::= SEQUENCE {
   cellIdentifierAndCELevelForCECapableUEs [0] CellIdentifierAndCELevelForCECapableUEs,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({InformationForCECapableUEs-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({InformationForCECapableUEs-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({InformationForCECapableUEs-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_AssistanceDataForCECapableUEs {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_CellIdentifierAndCELevelForCECapableUEs cellIdentifierAndCELevelForCECapableUEs;
   s1ap_AssistanceDataForCECapableUEs_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_AssistanceDataForCECapableUEs;

EXTERN int asn1PE_s1ap_AssistanceDataForCECapableUEs (OSCTXT* pctxt, s1ap_AssistanceDataForCECapableUEs* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForCECapableUEs (OSCTXT* pctxt, s1ap_AssistanceDataForCECapableUEs* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForCECapableUEs 
   (const char* name, const s1ap_AssistanceDataForCECapableUEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForCECapableUEs (const char* name, 
   s1ap_AssistanceDataForCECapableUEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForCECapableUEs (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForCECapableUEs* pvalue);

EXTERN void asn1Copy_s1ap_AssistanceDataForCECapableUEs (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForCECapableUEs* pSrcValue, 
   s1ap_AssistanceDataForCECapableUEs* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForCECapableUEs (
   s1ap_AssistanceDataForCECapableUEs* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForCECapableUEs (OSCTXT *pctxt, 
   s1ap_AssistanceDataForCECapableUEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingAttemptCount                                        */
/*                                                            */
/**************************************************************/
/*
PagingAttemptCount ::= INTEGER (1..16, ...)
*/
typedef OSUINT32 s1ap_PagingAttemptCount;

EXTERN int asn1PE_s1ap_PagingAttemptCount (OSCTXT* pctxt, s1ap_PagingAttemptCount value);

EXTERN int asn1PD_s1ap_PagingAttemptCount (OSCTXT* pctxt, s1ap_PagingAttemptCount* pvalue);

EXTERN void asn1Print_s1ap_PagingAttemptCount 
   (const char* name, const s1ap_PagingAttemptCount* pvalue);

EXTERN int asn1PrtToStr_s1ap_PagingAttemptCount (const char* name, 
   s1ap_PagingAttemptCount* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PagingAttemptCount (OSCTXT *pctxt, 
   const char* name, const s1ap_PagingAttemptCount* pvalue);

/**************************************************************/
/*                                                            */
/*  IntendedNumberOfPagingAttempts                            */
/*                                                            */
/**************************************************************/
/*
IntendedNumberOfPagingAttempts ::= INTEGER (1..16, ...)
*/
typedef OSUINT32 s1ap_IntendedNumberOfPagingAttempts;

EXTERN int asn1PE_s1ap_IntendedNumberOfPagingAttempts (OSCTXT* pctxt, s1ap_IntendedNumberOfPagingAttempts value);

EXTERN int asn1PD_s1ap_IntendedNumberOfPagingAttempts (OSCTXT* pctxt, s1ap_IntendedNumberOfPagingAttempts* pvalue);

EXTERN void asn1Print_s1ap_IntendedNumberOfPagingAttempts 
   (const char* name, const s1ap_IntendedNumberOfPagingAttempts* pvalue);

EXTERN int asn1PrtToStr_s1ap_IntendedNumberOfPagingAttempts (const char* name, 
   s1ap_IntendedNumberOfPagingAttempts* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_IntendedNumberOfPagingAttempts (OSCTXT *pctxt, 
   const char* name, const s1ap_IntendedNumberOfPagingAttempts* pvalue);

/**************************************************************/
/*                                                            */
/*  NextPagingAreaScope                                       */
/*                                                            */
/**************************************************************/
/*
NextPagingAreaScope ::= ENUMERATED { same(0), changed(1), ... }
*/
typedef enum {
   s1ap_same = 0,
   s1ap_changed = 1
} s1ap_NextPagingAreaScope_Root;

typedef OSUINT32 s1ap_NextPagingAreaScope;

EXTERN int asn1PE_s1ap_NextPagingAreaScope (OSCTXT* pctxt, s1ap_NextPagingAreaScope value);

EXTERN int asn1PD_s1ap_NextPagingAreaScope (OSCTXT* pctxt, s1ap_NextPagingAreaScope* pvalue);

EXTERN void asn1Print_s1ap_NextPagingAreaScope 
   (const char* name, const s1ap_NextPagingAreaScope* pvalue);

EXTERN int asn1PrtToStr_s1ap_NextPagingAreaScope (const char* name, 
   s1ap_NextPagingAreaScope* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NextPagingAreaScope (OSCTXT *pctxt, 
   const char* name, const s1ap_NextPagingAreaScope* pvalue);

EXTERN extern const OSEnumItem s1ap_NextPagingAreaScope_ENUMTAB[];
#define s1ap_NextPagingAreaScope_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_NextPagingAreaScope_ToString (OSINT32 value);

EXTERN int s1ap_NextPagingAreaScope_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NextPagingAreaScope* pvalue);

EXTERN int s1ap_NextPagingAreaScope_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_NextPagingAreaScope* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  PagingAttemptInformation_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PagingAttemptInformation'
*/
typedef struct EXTERN s1ap_PagingAttemptInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_PagingAttemptInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_PagingAttemptInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_PagingAttemptInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_PagingAttemptInformation_iE_Extensions_element 
   (const char* name, const s1ap_PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PagingAttemptInformation_iE_Extensions_element (
   const char* name, 
   s1ap_PagingAttemptInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PagingAttemptInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_PagingAttemptInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_PagingAttemptInformation_iE_Extensions_element* pSrcValue, 
   s1ap_PagingAttemptInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_PagingAttemptInformation_iE_Extensions_element (
   s1ap_PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_PagingAttemptInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_PagingAttemptInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingAttemptInformation_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PagingAttemptInformation'
*/
/* List of s1ap_PagingAttemptInformation_iE_Extensions_element */
typedef OSRTDList s1ap_PagingAttemptInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_PagingAttemptInformation_iE_Extensions (OSCTXT* pctxt, s1ap_PagingAttemptInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_PagingAttemptInformation_iE_Extensions (OSCTXT* pctxt, s1ap_PagingAttemptInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_PagingAttemptInformation_iE_Extensions 
   (const char* name, const s1ap_PagingAttemptInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_PagingAttemptInformation_iE_Extensions (
   const char* name, s1ap_PagingAttemptInformation_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PagingAttemptInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_PagingAttemptInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PagingAttemptInformation_iE_Extensions_element* 
   asn1Get_s1ap_PagingAttemptInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_PagingAttemptInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_PagingAttemptInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_PagingAttemptInformation_iE_Extensions* pSrcValue, 
   s1ap_PagingAttemptInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_PagingAttemptInformation_iE_Extensions (
   s1ap_PagingAttemptInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_PagingAttemptInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_PagingAttemptInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingAttemptInformation                                  */
/*                                                            */
/**************************************************************/
/*
PagingAttemptInformation ::= SEQUENCE {
   pagingAttemptCount [0] PagingAttemptCount,
   intendedNumberOfPagingAttempts [1] IntendedNumberOfPagingAttempts,
   nextPagingAreaScope [2] NextPagingAreaScope OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({PagingAttemptInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({PagingAttemptInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({PagingAttemptInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_PagingAttemptInformation {
   struct {
      unsigned nextPagingAreaScopePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PagingAttemptCount pagingAttemptCount;
   s1ap_IntendedNumberOfPagingAttempts intendedNumberOfPagingAttempts;
   s1ap_NextPagingAreaScope nextPagingAreaScope;
   s1ap_PagingAttemptInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_PagingAttemptInformation;

EXTERN int asn1PE_s1ap_PagingAttemptInformation (OSCTXT* pctxt, s1ap_PagingAttemptInformation* pvalue);

EXTERN int asn1PD_s1ap_PagingAttemptInformation (OSCTXT* pctxt, s1ap_PagingAttemptInformation* pvalue);

EXTERN void asn1Print_s1ap_PagingAttemptInformation 
   (const char* name, const s1ap_PagingAttemptInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_PagingAttemptInformation (const char* name, 
   s1ap_PagingAttemptInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PagingAttemptInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_PagingAttemptInformation* pvalue);

EXTERN void asn1Copy_s1ap_PagingAttemptInformation (OSCTXT* pctxt, 
   const s1ap_PagingAttemptInformation* pSrcValue, 
   s1ap_PagingAttemptInformation* pDstValue);

EXTERN int asn1Init_s1ap_PagingAttemptInformation (
   s1ap_PagingAttemptInformation* pvalue);

EXTERN void asn1Free_s1ap_PagingAttemptInformation (OSCTXT *pctxt, 
   s1ap_PagingAttemptInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForPaging_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForPaging'
*/
typedef struct EXTERN s1ap_AssistanceDataForPaging_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_AssistanceDataForPaging_iE_Extensions_element;

EXTERN int asn1PE_s1ap_AssistanceDataForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForPaging_iE_Extensions_element (OSCTXT* pctxt, s1ap_AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForPaging_iE_Extensions_element 
   (const char* name, const s1ap_AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForPaging_iE_Extensions_element (
   const char* name, 
   s1ap_AssistanceDataForPaging_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_AssistanceDataForPaging_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForPaging_iE_Extensions_element* pSrcValue, 
   s1ap_AssistanceDataForPaging_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForPaging_iE_Extensions_element (
   s1ap_AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_AssistanceDataForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForPaging_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForPaging'
*/
/* List of s1ap_AssistanceDataForPaging_iE_Extensions_element */
typedef OSRTDList s1ap_AssistanceDataForPaging_iE_Extensions;

EXTERN int asn1PE_s1ap_AssistanceDataForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_AssistanceDataForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForPaging_iE_Extensions (OSCTXT* pctxt, s1ap_AssistanceDataForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForPaging_iE_Extensions 
   (const char* name, const s1ap_AssistanceDataForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForPaging_iE_Extensions (const char* name, 
   s1ap_AssistanceDataForPaging_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_AssistanceDataForPaging_iE_Extensions_element* 
   asn1Get_s1ap_AssistanceDataForPaging_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_AssistanceDataForPaging_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_AssistanceDataForPaging_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForPaging_iE_Extensions* pSrcValue, 
   s1ap_AssistanceDataForPaging_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForPaging_iE_Extensions (
   s1ap_AssistanceDataForPaging_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForPaging_iE_Extensions (OSCTXT *pctxt, 
   s1ap_AssistanceDataForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForPaging                                   */
/*                                                            */
/**************************************************************/
/*
AssistanceDataForPaging ::= SEQUENCE {
   assistanceDataForRecommendedCells [0] AssistanceDataForRecommendedCells OPTIONAL,
   assistanceDataForCECapableUEs [1] AssistanceDataForCECapableUEs OPTIONAL,
   pagingAttemptInformation [2] PagingAttemptInformation OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({AssistanceDataForPaging-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({AssistanceDataForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({AssistanceDataForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_AssistanceDataForPaging {
   struct {
      unsigned assistanceDataForRecommendedCellsPresent : 1;
      unsigned assistanceDataForCECapableUEsPresent : 1;
      unsigned pagingAttemptInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_AssistanceDataForRecommendedCells assistanceDataForRecommendedCells;
   s1ap_AssistanceDataForCECapableUEs assistanceDataForCECapableUEs;
   s1ap_PagingAttemptInformation pagingAttemptInformation;
   s1ap_AssistanceDataForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_AssistanceDataForPaging;

EXTERN int asn1PE_s1ap_AssistanceDataForPaging (OSCTXT* pctxt, s1ap_AssistanceDataForPaging* pvalue);

EXTERN int asn1PD_s1ap_AssistanceDataForPaging (OSCTXT* pctxt, s1ap_AssistanceDataForPaging* pvalue);

EXTERN void asn1Print_s1ap_AssistanceDataForPaging 
   (const char* name, const s1ap_AssistanceDataForPaging* pvalue);

EXTERN int asn1PrtToStr_s1ap_AssistanceDataForPaging (const char* name, 
   s1ap_AssistanceDataForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_AssistanceDataForPaging (OSCTXT *pctxt, 
   const char* name, const s1ap_AssistanceDataForPaging* pvalue);

EXTERN void asn1Copy_s1ap_AssistanceDataForPaging (OSCTXT* pctxt, 
   const s1ap_AssistanceDataForPaging* pSrcValue, s1ap_AssistanceDataForPaging*
    pDstValue);

EXTERN int asn1Init_s1ap_AssistanceDataForPaging (
   s1ap_AssistanceDataForPaging* pvalue);

EXTERN void asn1Free_s1ap_AssistanceDataForPaging (OSCTXT *pctxt, 
   s1ap_AssistanceDataForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_eDRX_Cycle                                         */
/*                                                            */
/**************************************************************/
/*
Paging-eDRX-Cycle ::= ENUMERATED { hfhalf(0), hf1(1), hf2(2), hf4(3), hf6(4), hf8(5), hf10(6), hf12(7), hf14(8), hf16(9), hf32(10), hf64(11), hf128(12), hf256(13), ... }
*/
typedef enum {
   s1ap_hfhalf = 0,
   s1ap_hf1 = 1,
   s1ap_hf2_1 = 2,
   s1ap_hf4_1 = 3,
   s1ap_hf6_1 = 4,
   s1ap_hf8_1 = 5,
   s1ap_hf10_1 = 6,
   s1ap_hf12_1 = 7,
   s1ap_hf14_1 = 8,
   s1ap_hf16_1 = 9,
   s1ap_hf32_1 = 10,
   s1ap_hf64_1 = 11,
   s1ap_hf128_1 = 12,
   s1ap_hf256_1 = 13
} s1ap_Paging_eDRX_Cycle_Root;

typedef OSUINT32 s1ap_Paging_eDRX_Cycle;

EXTERN int asn1PE_s1ap_Paging_eDRX_Cycle (OSCTXT* pctxt, s1ap_Paging_eDRX_Cycle value);

EXTERN int asn1PD_s1ap_Paging_eDRX_Cycle (OSCTXT* pctxt, s1ap_Paging_eDRX_Cycle* pvalue);

EXTERN void asn1Print_s1ap_Paging_eDRX_Cycle 
   (const char* name, const s1ap_Paging_eDRX_Cycle* pvalue);

EXTERN int asn1PrtToStr_s1ap_Paging_eDRX_Cycle (const char* name, 
   s1ap_Paging_eDRX_Cycle* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Paging_eDRX_Cycle (OSCTXT *pctxt, 
   const char* name, const s1ap_Paging_eDRX_Cycle* pvalue);

EXTERN extern const OSEnumItem s1ap_Paging_eDRX_Cycle_ENUMTAB[];
#define s1ap_Paging_eDRX_Cycle_ENUMTABSIZE 14

EXTERN const OSUTF8CHAR* s1ap_Paging_eDRX_Cycle_ToString (OSINT32 value);

EXTERN int s1ap_Paging_eDRX_Cycle_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Paging_eDRX_Cycle* pvalue);

EXTERN int s1ap_Paging_eDRX_Cycle_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Paging_eDRX_Cycle* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingTimeWindow                                          */
/*                                                            */
/**************************************************************/
/*
PagingTimeWindow ::= ENUMERATED { s1(0), s2(1), s3(2), s4(3), s5(4), s6(5), s7(6), s8(7), s9(8), s10(9), s11(10), s12(11), s13(12), s14(13), s15(14), s16(15), ... }
*/
typedef enum {
   s1ap_s1_1 = 0,
   s1ap_s2_1 = 1,
   s1ap_s3_1 = 2,
   s1ap_s4_1 = 3,
   s1ap_s5_1 = 4,
   s1ap_s6_1 = 5,
   s1ap_s7_1 = 6,
   s1ap_s8_1 = 7,
   s1ap_s9_1 = 8,
   s1ap_s10_1 = 9,
   s1ap_s11_1 = 10,
   s1ap_s12_1 = 11,
   s1ap_s13_1 = 12,
   s1ap_s14_1 = 13,
   s1ap_s15_1 = 14,
   s1ap_s16_1 = 15
} s1ap_PagingTimeWindow_Root;

typedef OSUINT32 s1ap_PagingTimeWindow;

EXTERN int asn1PE_s1ap_PagingTimeWindow (OSCTXT* pctxt, s1ap_PagingTimeWindow value);

EXTERN int asn1PD_s1ap_PagingTimeWindow (OSCTXT* pctxt, s1ap_PagingTimeWindow* pvalue);

EXTERN void asn1Print_s1ap_PagingTimeWindow 
   (const char* name, const s1ap_PagingTimeWindow* pvalue);

EXTERN int asn1PrtToStr_s1ap_PagingTimeWindow (const char* name, 
   s1ap_PagingTimeWindow* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PagingTimeWindow (OSCTXT *pctxt, 
   const char* name, const s1ap_PagingTimeWindow* pvalue);

EXTERN extern const OSEnumItem s1ap_PagingTimeWindow_ENUMTAB[];
#define s1ap_PagingTimeWindow_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* s1ap_PagingTimeWindow_ToString (OSINT32 value);

EXTERN int s1ap_PagingTimeWindow_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_PagingTimeWindow* pvalue);

EXTERN int s1ap_PagingTimeWindow_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_PagingTimeWindow* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_eDRXInformation_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Paging-eDRXInformation'
*/
typedef struct EXTERN s1ap_Paging_eDRXInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_Paging_eDRXInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Paging_eDRXInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Paging_eDRXInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Paging_eDRXInformation_iE_Extensions_element 
   (const char* name, const s1ap_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Paging_eDRXInformation_iE_Extensions_element (
   const char* name, 
   s1ap_Paging_eDRXInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Paging_eDRXInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_Paging_eDRXInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Paging_eDRXInformation_iE_Extensions_element* pSrcValue, 
   s1ap_Paging_eDRXInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_Paging_eDRXInformation_iE_Extensions_element (
   s1ap_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Paging_eDRXInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Paging_eDRXInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_eDRXInformation_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Paging-eDRXInformation'
*/
/* List of s1ap_Paging_eDRXInformation_iE_Extensions_element */
typedef OSRTDList s1ap_Paging_eDRXInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_Paging_eDRXInformation_iE_Extensions (OSCTXT* pctxt, s1ap_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Paging_eDRXInformation_iE_Extensions (OSCTXT* pctxt, s1ap_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Paging_eDRXInformation_iE_Extensions 
   (const char* name, const s1ap_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Paging_eDRXInformation_iE_Extensions (const char* name, 
   s1ap_Paging_eDRXInformation_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Paging_eDRXInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Paging_eDRXInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Paging_eDRXInformation_iE_Extensions_element* 
   asn1Get_s1ap_Paging_eDRXInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_Paging_eDRXInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Paging_eDRXInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Paging_eDRXInformation_iE_Extensions* pSrcValue, 
   s1ap_Paging_eDRXInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Paging_eDRXInformation_iE_Extensions (
   s1ap_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Paging_eDRXInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Paging_eDRXInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_eDRXInformation                                    */
/*                                                            */
/**************************************************************/
/*
Paging-eDRXInformation ::= SEQUENCE {
   paging-eDRX-Cycle [0] Paging-eDRX-Cycle,
   pagingTimeWindow [1] PagingTimeWindow OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Paging-eDRXInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Paging-eDRXInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Paging-eDRXInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Paging_eDRXInformation {
   struct {
      unsigned pagingTimeWindowPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Paging_eDRX_Cycle paging_eDRX_Cycle;
   s1ap_PagingTimeWindow pagingTimeWindow;
   s1ap_Paging_eDRXInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Paging_eDRXInformation;

EXTERN int asn1PE_s1ap_Paging_eDRXInformation (OSCTXT* pctxt, s1ap_Paging_eDRXInformation* pvalue);

EXTERN int asn1PD_s1ap_Paging_eDRXInformation (OSCTXT* pctxt, s1ap_Paging_eDRXInformation* pvalue);

EXTERN void asn1Print_s1ap_Paging_eDRXInformation 
   (const char* name, const s1ap_Paging_eDRXInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_Paging_eDRXInformation (const char* name, 
   s1ap_Paging_eDRXInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Paging_eDRXInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_Paging_eDRXInformation* pvalue);

EXTERN void asn1Copy_s1ap_Paging_eDRXInformation (OSCTXT* pctxt, 
   const s1ap_Paging_eDRXInformation* pSrcValue, s1ap_Paging_eDRXInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_Paging_eDRXInformation (s1ap_Paging_eDRXInformation* pvalue);

EXTERN void asn1Free_s1ap_Paging_eDRXInformation (OSCTXT *pctxt, 
   s1ap_Paging_eDRXInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  Extended_UEIdentityIndexValue                             */
/*                                                            */
/**************************************************************/
/*
Extended-UEIdentityIndexValue ::= BIT STRING  (SIZE (14))
*/
typedef ASN1BitStr32 s1ap_Extended_UEIdentityIndexValue;

EXTERN int asn1PE_s1ap_Extended_UEIdentityIndexValue (OSCTXT* pctxt, s1ap_Extended_UEIdentityIndexValue value);

EXTERN int asn1PD_s1ap_Extended_UEIdentityIndexValue (OSCTXT* pctxt, s1ap_Extended_UEIdentityIndexValue* pvalue);

EXTERN void asn1Print_s1ap_Extended_UEIdentityIndexValue 
   (const char* name, const s1ap_Extended_UEIdentityIndexValue* pvalue);

EXTERN int asn1PrtToStr_s1ap_Extended_UEIdentityIndexValue (const char* name, 
   s1ap_Extended_UEIdentityIndexValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Extended_UEIdentityIndexValue (OSCTXT *pctxt, 
   const char* name, const s1ap_Extended_UEIdentityIndexValue* pvalue);

EXTERN void asn1Copy_s1ap_Extended_UEIdentityIndexValue (OSCTXT* pctxt, 
   const s1ap_Extended_UEIdentityIndexValue* pSrcValue, 
   s1ap_Extended_UEIdentityIndexValue* pDstValue);

EXTERN int asn1Init_s1ap_Extended_UEIdentityIndexValue (
   s1ap_Extended_UEIdentityIndexValue* pvalue);

/**************************************************************/
/*                                                            */
/*  NB_IoT_Paging_eDRX_Cycle                                  */
/*                                                            */
/**************************************************************/
/*
NB-IoT-Paging-eDRX-Cycle ::= ENUMERATED { hf2(0), hf4(1), hf6(2), hf8(3), hf10(4), hf12(5), hf14(6), hf16(7), hf32(8), hf64(9), hf128(10), hf256(11), hf512(12), hf1024(13), ... }
*/
typedef enum {
   s1ap_hf2 = 0,
   s1ap_hf4 = 1,
   s1ap_hf6 = 2,
   s1ap_hf8 = 3,
   s1ap_hf10 = 4,
   s1ap_hf12 = 5,
   s1ap_hf14 = 6,
   s1ap_hf16 = 7,
   s1ap_hf32 = 8,
   s1ap_hf64 = 9,
   s1ap_hf128 = 10,
   s1ap_hf256 = 11,
   s1ap_hf512 = 12,
   s1ap_hf1024 = 13
} s1ap_NB_IoT_Paging_eDRX_Cycle_Root;

typedef OSUINT32 s1ap_NB_IoT_Paging_eDRX_Cycle;

EXTERN int asn1PE_s1ap_NB_IoT_Paging_eDRX_Cycle (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRX_Cycle value);

EXTERN int asn1PD_s1ap_NB_IoT_Paging_eDRX_Cycle (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRX_Cycle* pvalue);

EXTERN void asn1Print_s1ap_NB_IoT_Paging_eDRX_Cycle 
   (const char* name, const s1ap_NB_IoT_Paging_eDRX_Cycle* pvalue);

EXTERN int asn1PrtToStr_s1ap_NB_IoT_Paging_eDRX_Cycle (const char* name, 
   s1ap_NB_IoT_Paging_eDRX_Cycle* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NB_IoT_Paging_eDRX_Cycle (OSCTXT *pctxt, 
   const char* name, const s1ap_NB_IoT_Paging_eDRX_Cycle* pvalue);

EXTERN extern const OSEnumItem s1ap_NB_IoT_Paging_eDRX_Cycle_ENUMTAB[];
#define s1ap_NB_IoT_Paging_eDRX_Cycle_ENUMTABSIZE 14

EXTERN const OSUTF8CHAR* s1ap_NB_IoT_Paging_eDRX_Cycle_ToString (OSINT32 value);

EXTERN int s1ap_NB_IoT_Paging_eDRX_Cycle_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NB_IoT_Paging_eDRX_Cycle* pvalue);

EXTERN int s1ap_NB_IoT_Paging_eDRX_Cycle_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_NB_IoT_Paging_eDRX_Cycle* pvalue);

/**************************************************************/
/*                                                            */
/*  NB_IoT_PagingTimeWindow                                   */
/*                                                            */
/**************************************************************/
/*
NB-IoT-PagingTimeWindow ::= ENUMERATED { s1(0), s2(1), s3(2), s4(3), s5(4), s6(5), s7(6), s8(7), s9(8), s10(9), s11(10), s12(11), s13(12), s14(13), s15(14), s16(15), ... }
*/
typedef enum {
   s1ap_s1 = 0,
   s1ap_s2 = 1,
   s1ap_s3 = 2,
   s1ap_s4 = 3,
   s1ap_s5 = 4,
   s1ap_s6 = 5,
   s1ap_s7 = 6,
   s1ap_s8 = 7,
   s1ap_s9 = 8,
   s1ap_s10 = 9,
   s1ap_s11 = 10,
   s1ap_s12 = 11,
   s1ap_s13 = 12,
   s1ap_s14 = 13,
   s1ap_s15 = 14,
   s1ap_s16 = 15
} s1ap_NB_IoT_PagingTimeWindow_Root;

typedef OSUINT32 s1ap_NB_IoT_PagingTimeWindow;

EXTERN int asn1PE_s1ap_NB_IoT_PagingTimeWindow (OSCTXT* pctxt, s1ap_NB_IoT_PagingTimeWindow value);

EXTERN int asn1PD_s1ap_NB_IoT_PagingTimeWindow (OSCTXT* pctxt, s1ap_NB_IoT_PagingTimeWindow* pvalue);

EXTERN void asn1Print_s1ap_NB_IoT_PagingTimeWindow 
   (const char* name, const s1ap_NB_IoT_PagingTimeWindow* pvalue);

EXTERN int asn1PrtToStr_s1ap_NB_IoT_PagingTimeWindow (const char* name, 
   s1ap_NB_IoT_PagingTimeWindow* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NB_IoT_PagingTimeWindow (OSCTXT *pctxt, 
   const char* name, const s1ap_NB_IoT_PagingTimeWindow* pvalue);

EXTERN extern const OSEnumItem s1ap_NB_IoT_PagingTimeWindow_ENUMTAB[];
#define s1ap_NB_IoT_PagingTimeWindow_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* s1ap_NB_IoT_PagingTimeWindow_ToString (OSINT32 value);

EXTERN int s1ap_NB_IoT_PagingTimeWindow_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NB_IoT_PagingTimeWindow* pvalue);

EXTERN int s1ap_NB_IoT_PagingTimeWindow_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_NB_IoT_PagingTimeWindow* pvalue);

/**************************************************************/
/*                                                            */
/*  NB_IoT_Paging_eDRXInformation_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NB-IoT-Paging-eDRXInformation'
*/
typedef struct EXTERN s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element 
   (const char* name, const s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element (
   const char* name, 
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pSrcValue, 
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element (
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NB_IoT_Paging_eDRXInformation_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NB-IoT-Paging-eDRXInformation'
*/
/* List of s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element */
typedef OSRTDList s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions 
   (const char* name, const s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions (
   const char* name, s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions_element* 
   asn1Get_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pSrcValue, 
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions (
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NB_IoT_Paging_eDRXInformation                             */
/*                                                            */
/**************************************************************/
/*
NB-IoT-Paging-eDRXInformation ::= SEQUENCE {
   nB-IoT-paging-eDRX-Cycle [0] NB-IoT-Paging-eDRX-Cycle,
   nB-IoT-pagingTimeWindow [1] NB-IoT-PagingTimeWindow OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({NB-IoT-Paging-eDRXInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({NB-IoT-Paging-eDRXInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({NB-IoT-Paging-eDRXInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_NB_IoT_Paging_eDRXInformation {
   struct {
      unsigned nB_IoT_pagingTimeWindowPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_NB_IoT_Paging_eDRX_Cycle nB_IoT_paging_eDRX_Cycle;
   s1ap_NB_IoT_PagingTimeWindow nB_IoT_pagingTimeWindow;
   s1ap_NB_IoT_Paging_eDRXInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_NB_IoT_Paging_eDRXInformation;

EXTERN int asn1PE_s1ap_NB_IoT_Paging_eDRXInformation (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRXInformation* pvalue);

EXTERN int asn1PD_s1ap_NB_IoT_Paging_eDRXInformation (OSCTXT* pctxt, s1ap_NB_IoT_Paging_eDRXInformation* pvalue);

EXTERN void asn1Print_s1ap_NB_IoT_Paging_eDRXInformation 
   (const char* name, const s1ap_NB_IoT_Paging_eDRXInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_NB_IoT_Paging_eDRXInformation (const char* name, 
   s1ap_NB_IoT_Paging_eDRXInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NB_IoT_Paging_eDRXInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_NB_IoT_Paging_eDRXInformation* pvalue);

EXTERN void asn1Copy_s1ap_NB_IoT_Paging_eDRXInformation (OSCTXT* pctxt, 
   const s1ap_NB_IoT_Paging_eDRXInformation* pSrcValue, 
   s1ap_NB_IoT_Paging_eDRXInformation* pDstValue);

EXTERN int asn1Init_s1ap_NB_IoT_Paging_eDRXInformation (
   s1ap_NB_IoT_Paging_eDRXInformation* pvalue);

EXTERN void asn1Free_s1ap_NB_IoT_Paging_eDRXInformation (OSCTXT *pctxt, 
   s1ap_NB_IoT_Paging_eDRXInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  NB_IoT_UEIdentityIndexValue                               */
/*                                                            */
/**************************************************************/
/*
NB-IoT-UEIdentityIndexValue ::= BIT STRING  (SIZE (12))
*/
typedef ASN1BitStr32 s1ap_NB_IoT_UEIdentityIndexValue;

EXTERN int asn1PE_s1ap_NB_IoT_UEIdentityIndexValue (OSCTXT* pctxt, s1ap_NB_IoT_UEIdentityIndexValue value);

EXTERN int asn1PD_s1ap_NB_IoT_UEIdentityIndexValue (OSCTXT* pctxt, s1ap_NB_IoT_UEIdentityIndexValue* pvalue);

EXTERN void asn1Print_s1ap_NB_IoT_UEIdentityIndexValue 
   (const char* name, const s1ap_NB_IoT_UEIdentityIndexValue* pvalue);

EXTERN int asn1PrtToStr_s1ap_NB_IoT_UEIdentityIndexValue (const char* name, 
   s1ap_NB_IoT_UEIdentityIndexValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NB_IoT_UEIdentityIndexValue (OSCTXT *pctxt, 
   const char* name, const s1ap_NB_IoT_UEIdentityIndexValue* pvalue);

EXTERN void asn1Copy_s1ap_NB_IoT_UEIdentityIndexValue (OSCTXT* pctxt, 
   const s1ap_NB_IoT_UEIdentityIndexValue* pSrcValue, 
   s1ap_NB_IoT_UEIdentityIndexValue* pDstValue);

EXTERN int asn1Init_s1ap_NB_IoT_UEIdentityIndexValue (
   s1ap_NB_IoT_UEIdentityIndexValue* pvalue);

/**************************************************************/
/*                                                            */
/*  DLNASPDUDeliveryAckRequest                                */
/*                                                            */
/**************************************************************/
/*
DLNASPDUDeliveryAckRequest ::= ENUMERATED { requested(0), ... }
*/
typedef enum {
   s1ap_requested = 0
} s1ap_DLNASPDUDeliveryAckRequest_Root;

typedef OSUINT32 s1ap_DLNASPDUDeliveryAckRequest;

EXTERN int asn1PE_s1ap_DLNASPDUDeliveryAckRequest (OSCTXT* pctxt, s1ap_DLNASPDUDeliveryAckRequest value);

EXTERN int asn1PD_s1ap_DLNASPDUDeliveryAckRequest (OSCTXT* pctxt, s1ap_DLNASPDUDeliveryAckRequest* pvalue);

EXTERN void asn1Print_s1ap_DLNASPDUDeliveryAckRequest 
   (const char* name, const s1ap_DLNASPDUDeliveryAckRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_DLNASPDUDeliveryAckRequest (const char* name, 
   s1ap_DLNASPDUDeliveryAckRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DLNASPDUDeliveryAckRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_DLNASPDUDeliveryAckRequest* pvalue);

EXTERN extern const OSEnumItem s1ap_DLNASPDUDeliveryAckRequest_ENUMTAB[];
#define s1ap_DLNASPDUDeliveryAckRequest_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_DLNASPDUDeliveryAckRequest_ToString (OSINT32 value);

EXTERN int s1ap_DLNASPDUDeliveryAckRequest_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_DLNASPDUDeliveryAckRequest* pvalue);

EXTERN int s1ap_DLNASPDUDeliveryAckRequest_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_DLNASPDUDeliveryAckRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UECapabilityInfoRequest                                   */
/*                                                            */
/**************************************************************/
/*
UECapabilityInfoRequest ::= ENUMERATED { requested(0), ... }
*/
typedef enum {
   s1ap_requested_2 = 0
} s1ap_UECapabilityInfoRequest_Root;

typedef OSUINT32 s1ap_UECapabilityInfoRequest;

EXTERN int asn1PE_s1ap_UECapabilityInfoRequest (OSCTXT* pctxt, s1ap_UECapabilityInfoRequest value);

EXTERN int asn1PD_s1ap_UECapabilityInfoRequest (OSCTXT* pctxt, s1ap_UECapabilityInfoRequest* pvalue);

EXTERN void asn1Print_s1ap_UECapabilityInfoRequest 
   (const char* name, const s1ap_UECapabilityInfoRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_UECapabilityInfoRequest (const char* name, 
   s1ap_UECapabilityInfoRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UECapabilityInfoRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_UECapabilityInfoRequest* pvalue);

EXTERN extern const OSEnumItem s1ap_UECapabilityInfoRequest_ENUMTAB[];
#define s1ap_UECapabilityInfoRequest_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_UECapabilityInfoRequest_ToString (OSINT32 value);

EXTERN int s1ap_UECapabilityInfoRequest_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_UECapabilityInfoRequest* pvalue);

EXTERN int s1ap_UECapabilityInfoRequest_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_UECapabilityInfoRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  EndIndication                                             */
/*                                                            */
/**************************************************************/
/*
EndIndication ::= ENUMERATED { no-further-data(0), further-data-exists(1), ... }
*/
typedef enum {
   s1ap_no_further_data = 0,
   s1ap_further_data_exists = 1
} s1ap_EndIndication_Root;

typedef OSUINT32 s1ap_EndIndication;

EXTERN int asn1PE_s1ap_EndIndication (OSCTXT* pctxt, s1ap_EndIndication value);

EXTERN int asn1PD_s1ap_EndIndication (OSCTXT* pctxt, s1ap_EndIndication* pvalue);

EXTERN void asn1Print_s1ap_EndIndication 
   (const char* name, const s1ap_EndIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_EndIndication (const char* name, 
   s1ap_EndIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EndIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_EndIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_EndIndication_ENUMTAB[];
#define s1ap_EndIndication_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_EndIndication_ToString (OSINT32 value);

EXTERN int s1ap_EndIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_EndIndication* pvalue);

EXTERN int s1ap_EndIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_EndIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  RelayNode_Indicator                                       */
/*                                                            */
/**************************************************************/
/*
RelayNode-Indicator ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   s1ap_true__8 = 0
} s1ap_RelayNode_Indicator_Root;

typedef OSUINT32 s1ap_RelayNode_Indicator;

EXTERN int asn1PE_s1ap_RelayNode_Indicator (OSCTXT* pctxt, s1ap_RelayNode_Indicator value);

EXTERN int asn1PD_s1ap_RelayNode_Indicator (OSCTXT* pctxt, s1ap_RelayNode_Indicator* pvalue);

EXTERN void asn1Print_s1ap_RelayNode_Indicator 
   (const char* name, const s1ap_RelayNode_Indicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_RelayNode_Indicator (const char* name, 
   s1ap_RelayNode_Indicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RelayNode_Indicator (OSCTXT *pctxt, 
   const char* name, const s1ap_RelayNode_Indicator* pvalue);

EXTERN extern const OSEnumItem s1ap_RelayNode_Indicator_ENUMTAB[];
#define s1ap_RelayNode_Indicator_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_RelayNode_Indicator_ToString (OSINT32 value);

EXTERN int s1ap_RelayNode_Indicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_RelayNode_Indicator* pvalue);

EXTERN int s1ap_RelayNode_Indicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_RelayNode_Indicator* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  GUMMEIType                                                */
/*                                                            */
/**************************************************************/
/*
GUMMEIType ::= ENUMERATED { native(0), mapped(1), ..., mappedFrom5G(2) }
*/
typedef enum {
   s1ap_native_ = 0,
   s1ap_mapped = 1
} s1ap_GUMMEIType_Root;

typedef enum {
   s1ap_mappedFrom5G = 2
} s1ap_GUMMEIType_Ext;

typedef OSUINT32 s1ap_GUMMEIType;

EXTERN int asn1PE_s1ap_GUMMEIType (OSCTXT* pctxt, s1ap_GUMMEIType value);

EXTERN int asn1PD_s1ap_GUMMEIType (OSCTXT* pctxt, s1ap_GUMMEIType* pvalue);

EXTERN void asn1Print_s1ap_GUMMEIType 
   (const char* name, const s1ap_GUMMEIType* pvalue);

EXTERN int asn1PrtToStr_s1ap_GUMMEIType (const char* name, s1ap_GUMMEIType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GUMMEIType (OSCTXT *pctxt, 
   const char* name, const s1ap_GUMMEIType* pvalue);

EXTERN extern const OSEnumItem s1ap_GUMMEIType_ENUMTAB[];
#define s1ap_GUMMEIType_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_GUMMEIType_ToString (OSINT32 value);

EXTERN int s1ap_GUMMEIType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_GUMMEIType* pvalue);

EXTERN int s1ap_GUMMEIType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_GUMMEIType* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_Usage_Type                                             */
/*                                                            */
/**************************************************************/
/*
UE-Usage-Type ::= INTEGER (0..255)
*/
typedef OSUINT8 s1ap_UE_Usage_Type;

EXTERN int asn1PE_s1ap_UE_Usage_Type (OSCTXT* pctxt, s1ap_UE_Usage_Type value);

EXTERN int asn1PD_s1ap_UE_Usage_Type (OSCTXT* pctxt, s1ap_UE_Usage_Type* pvalue);

EXTERN void asn1Print_s1ap_UE_Usage_Type 
   (const char* name, const s1ap_UE_Usage_Type* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_Usage_Type (const char* name, 
   s1ap_UE_Usage_Type* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_Usage_Type (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_Usage_Type* pvalue);

/**************************************************************/
/*                                                            */
/*  CE_mode_B_SupportIndicator                                */
/*                                                            */
/**************************************************************/
/*
CE-mode-B-SupportIndicator ::= ENUMERATED { supported(0), ... }
*/
typedef enum {
   s1ap_supported = 0
} s1ap_CE_mode_B_SupportIndicator_Root;

typedef OSUINT32 s1ap_CE_mode_B_SupportIndicator;

EXTERN int asn1PE_s1ap_CE_mode_B_SupportIndicator (OSCTXT* pctxt, s1ap_CE_mode_B_SupportIndicator value);

EXTERN int asn1PD_s1ap_CE_mode_B_SupportIndicator (OSCTXT* pctxt, s1ap_CE_mode_B_SupportIndicator* pvalue);

EXTERN void asn1Print_s1ap_CE_mode_B_SupportIndicator 
   (const char* name, const s1ap_CE_mode_B_SupportIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_CE_mode_B_SupportIndicator (const char* name, 
   s1ap_CE_mode_B_SupportIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CE_mode_B_SupportIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_CE_mode_B_SupportIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_CE_mode_B_SupportIndicator_ENUMTAB[];
#define s1ap_CE_mode_B_SupportIndicator_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_CE_mode_B_SupportIndicator_ToString (OSINT32 value);

EXTERN int s1ap_CE_mode_B_SupportIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CE_mode_B_SupportIndicator* pvalue);

EXTERN int s1ap_CE_mode_B_SupportIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_CE_mode_B_SupportIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  Coverage_Level                                            */
/*                                                            */
/**************************************************************/
/*
Coverage-Level ::= ENUMERATED { extendedcoverage(0), ... }
*/
typedef enum {
   s1ap_extendedcoverage = 0
} s1ap_Coverage_Level_Root;

typedef OSUINT32 s1ap_Coverage_Level;

EXTERN int asn1PE_s1ap_Coverage_Level (OSCTXT* pctxt, s1ap_Coverage_Level value);

EXTERN int asn1PD_s1ap_Coverage_Level (OSCTXT* pctxt, s1ap_Coverage_Level* pvalue);

EXTERN void asn1Print_s1ap_Coverage_Level 
   (const char* name, const s1ap_Coverage_Level* pvalue);

EXTERN int asn1PrtToStr_s1ap_Coverage_Level (const char* name, 
   s1ap_Coverage_Level* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Coverage_Level (OSCTXT *pctxt, 
   const char* name, const s1ap_Coverage_Level* pvalue);

EXTERN extern const OSEnumItem s1ap_Coverage_Level_ENUMTAB[];
#define s1ap_Coverage_Level_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_Coverage_Level_ToString (OSINT32 value);

EXTERN int s1ap_Coverage_Level_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Coverage_Level* pvalue);

EXTERN int s1ap_Coverage_Level_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Coverage_Level* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_Application_Layer_Measurement_Capability               */
/*                                                            */
/**************************************************************/
/*
UE-Application-Layer-Measurement-Capability ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 s1ap_UE_Application_Layer_Measurement_Capability;

EXTERN int asn1PE_s1ap_UE_Application_Layer_Measurement_Capability (OSCTXT* pctxt, s1ap_UE_Application_Layer_Measurement_Capability value);

EXTERN int asn1PD_s1ap_UE_Application_Layer_Measurement_Capability (OSCTXT* pctxt, s1ap_UE_Application_Layer_Measurement_Capability* pvalue);

EXTERN void asn1Print_s1ap_UE_Application_Layer_Measurement_Capability 
   (const char* name, const s1ap_UE_Application_Layer_Measurement_Capability* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_Application_Layer_Measurement_Capability (
   const char* name, s1ap_UE_Application_Layer_Measurement_Capability* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_Application_Layer_Measurement_Capability (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_Application_Layer_Measurement_Capability* pvalue);

EXTERN void asn1Copy_s1ap_UE_Application_Layer_Measurement_Capability (OSCTXT* pctxt, 
   const s1ap_UE_Application_Layer_Measurement_Capability* pSrcValue, 
   s1ap_UE_Application_Layer_Measurement_Capability* pDstValue);

EXTERN int asn1Init_s1ap_UE_Application_Layer_Measurement_Capability (
   s1ap_UE_Application_Layer_Measurement_Capability* pvalue);

/**************************************************************/
/*                                                            */
/*  EDT_Session                                               */
/*                                                            */
/**************************************************************/
/*
EDT-Session ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   s1ap_true__3 = 0
} s1ap_EDT_Session_Root;

typedef OSUINT32 s1ap_EDT_Session;

EXTERN int asn1PE_s1ap_EDT_Session (OSCTXT* pctxt, s1ap_EDT_Session value);

EXTERN int asn1PD_s1ap_EDT_Session (OSCTXT* pctxt, s1ap_EDT_Session* pvalue);

EXTERN void asn1Print_s1ap_EDT_Session 
   (const char* name, const s1ap_EDT_Session* pvalue);

EXTERN int asn1PrtToStr_s1ap_EDT_Session (const char* name, s1ap_EDT_Session* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EDT_Session (OSCTXT *pctxt, 
   const char* name, const s1ap_EDT_Session* pvalue);

EXTERN extern const OSEnumItem s1ap_EDT_Session_ENUMTAB[];
#define s1ap_EDT_Session_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_EDT_Session_ToString (OSINT32 value);

EXTERN int s1ap_EDT_Session_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_EDT_Session* pvalue);

EXTERN int s1ap_EDT_Session_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_EDT_Session* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeOfError                                               */
/*                                                            */
/**************************************************************/
/*
TypeOfError ::= ENUMERATED { not-understood(0), missing(1), ... }
*/
typedef enum {
   s1ap_not_understood = 0,
   s1ap_missing = 1
} s1ap_TypeOfError_Root;

typedef OSUINT32 s1ap_TypeOfError;

EXTERN int asn1PE_s1ap_TypeOfError (OSCTXT* pctxt, s1ap_TypeOfError value);

EXTERN int asn1PD_s1ap_TypeOfError (OSCTXT* pctxt, s1ap_TypeOfError* pvalue);

EXTERN void asn1Print_s1ap_TypeOfError 
   (const char* name, const s1ap_TypeOfError* pvalue);

EXTERN int asn1PrtToStr_s1ap_TypeOfError (const char* name, s1ap_TypeOfError* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TypeOfError (OSCTXT *pctxt, 
   const char* name, const s1ap_TypeOfError* pvalue);

EXTERN extern const OSEnumItem s1ap_TypeOfError_ENUMTAB[];
#define s1ap_TypeOfError_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_TypeOfError_ToString (OSINT32 value);

EXTERN int s1ap_TypeOfError_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_TypeOfError* pvalue);

EXTERN int s1ap_TypeOfError_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_TypeOfError* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics-IE-Item'
*/
typedef struct EXTERN s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element 
   (const char* name, const s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element (
   const char* name, 
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element (
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics-IE-Item'
*/
/* List of s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions 
   (const char* name, const s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions (
   const char* name, 
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions_element* 
   asn1Get_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pSrcValue, 
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions (
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_Item                            */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics-IE-Item ::= SEQUENCE {
   iECriticality [0] Criticality,
   iE-ID [1] ProtocolIE-ID,
   typeOfError [2] TypeOfError,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CriticalityDiagnostics-IE-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CriticalityDiagnostics-IE-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CriticalityDiagnostics-IE-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CriticalityDiagnostics_IE_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Criticality iECriticality;
   s1ap_ProtocolIE_ID iE_ID;
   s1ap_TypeOfError typeOfError;
   s1ap_CriticalityDiagnostics_IE_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CriticalityDiagnostics_IE_Item;

EXTERN int asn1PE_s1ap_CriticalityDiagnostics_IE_Item (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_Item* pvalue);

EXTERN int asn1PD_s1ap_CriticalityDiagnostics_IE_Item (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_Item* pvalue);

EXTERN void asn1Print_s1ap_CriticalityDiagnostics_IE_Item 
   (const char* name, const s1ap_CriticalityDiagnostics_IE_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CriticalityDiagnostics_IE_Item (const char* name, 
   s1ap_CriticalityDiagnostics_IE_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CriticalityDiagnostics_IE_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CriticalityDiagnostics_IE_Item* pvalue);

EXTERN void asn1Copy_s1ap_CriticalityDiagnostics_IE_Item (OSCTXT* pctxt, 
   const s1ap_CriticalityDiagnostics_IE_Item* pSrcValue, 
   s1ap_CriticalityDiagnostics_IE_Item* pDstValue);

EXTERN int asn1Init_s1ap_CriticalityDiagnostics_IE_Item (
   s1ap_CriticalityDiagnostics_IE_Item* pvalue);

EXTERN void asn1Free_s1ap_CriticalityDiagnostics_IE_Item (OSCTXT *pctxt, 
   s1ap_CriticalityDiagnostics_IE_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List                            */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics-IE-List ::= SEQUENCE (SIZE (1..maxnoofErrors)) OF CriticalityDiagnostics-IE-Item
*/
/* List of s1ap_CriticalityDiagnostics_IE_Item */
typedef OSRTDList s1ap_CriticalityDiagnostics_IE_List;

EXTERN int asn1PE_s1ap_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PD_s1ap_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Print_s1ap_CriticalityDiagnostics_IE_List 
   (const char* name, const s1ap_CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PrtToStr_s1ap_CriticalityDiagnostics_IE_List (const char* name, 
   s1ap_CriticalityDiagnostics_IE_List* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CriticalityDiagnostics_IE_List (OSCTXT *pctxt, 
   const char* name, const s1ap_CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Copy_s1ap_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, 
   const s1ap_CriticalityDiagnostics_IE_List* pSrcValue, 
   s1ap_CriticalityDiagnostics_IE_List* pDstValue);

EXTERN int asn1Init_s1ap_CriticalityDiagnostics_IE_List (
   s1ap_CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Free_s1ap_CriticalityDiagnostics_IE_List (OSCTXT *pctxt, 
   s1ap_CriticalityDiagnostics_IE_List* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics'
*/
typedef struct EXTERN s1ap_CriticalityDiagnostics_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CriticalityDiagnostics_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CriticalityDiagnostics_iE_Extensions_element 
   (const char* name, const s1ap_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CriticalityDiagnostics_iE_Extensions_element (
   const char* name, 
   s1ap_CriticalityDiagnostics_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CriticalityDiagnostics_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CriticalityDiagnostics_iE_Extensions_element* pSrcValue, 
   s1ap_CriticalityDiagnostics_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CriticalityDiagnostics_iE_Extensions_element (
   s1ap_CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CriticalityDiagnostics_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CriticalityDiagnostics_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics'
*/
/* List of s1ap_CriticalityDiagnostics_iE_Extensions_element */
typedef OSRTDList s1ap_CriticalityDiagnostics_iE_Extensions;

EXTERN int asn1PE_s1ap_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, s1ap_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CriticalityDiagnostics_iE_Extensions 
   (const char* name, const s1ap_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CriticalityDiagnostics_iE_Extensions (const char* name, 
   s1ap_CriticalityDiagnostics_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CriticalityDiagnostics_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CriticalityDiagnostics_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CriticalityDiagnostics_iE_Extensions_element* 
   asn1Get_s1ap_CriticalityDiagnostics_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CriticalityDiagnostics_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CriticalityDiagnostics_iE_Extensions* pSrcValue, 
   s1ap_CriticalityDiagnostics_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CriticalityDiagnostics_iE_Extensions (
   s1ap_CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CriticalityDiagnostics_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CriticalityDiagnostics_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics                                    */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics ::= SEQUENCE {
   procedureCode [0] ProcedureCode OPTIONAL,
   triggeringMessage [1] TriggeringMessage OPTIONAL,
   procedureCriticality [2] Criticality OPTIONAL,
   iEsCriticalityDiagnostics [3] CriticalityDiagnostics-IE-List OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CriticalityDiagnostics-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CriticalityDiagnostics-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CriticalityDiagnostics-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CriticalityDiagnostics {
   struct {
      unsigned procedureCodePresent : 1;
      unsigned triggeringMessagePresent : 1;
      unsigned procedureCriticalityPresent : 1;
      unsigned iEsCriticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ProcedureCode procedureCode;
   s1ap_TriggeringMessage triggeringMessage;
   s1ap_Criticality procedureCriticality;
   s1ap_CriticalityDiagnostics_IE_List iEsCriticalityDiagnostics;
   s1ap_CriticalityDiagnostics_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CriticalityDiagnostics;

EXTERN int asn1PE_s1ap_CriticalityDiagnostics (OSCTXT* pctxt, s1ap_CriticalityDiagnostics* pvalue);

EXTERN int asn1PD_s1ap_CriticalityDiagnostics (OSCTXT* pctxt, s1ap_CriticalityDiagnostics* pvalue);

EXTERN void asn1Print_s1ap_CriticalityDiagnostics 
   (const char* name, const s1ap_CriticalityDiagnostics* pvalue);

EXTERN int asn1PrtToStr_s1ap_CriticalityDiagnostics (const char* name, 
   s1ap_CriticalityDiagnostics* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CriticalityDiagnostics (OSCTXT *pctxt, 
   const char* name, const s1ap_CriticalityDiagnostics* pvalue);

EXTERN void asn1Copy_s1ap_CriticalityDiagnostics (OSCTXT* pctxt, 
   const s1ap_CriticalityDiagnostics* pSrcValue, s1ap_CriticalityDiagnostics*
    pDstValue);

EXTERN int asn1Init_s1ap_CriticalityDiagnostics (s1ap_CriticalityDiagnostics* pvalue);

EXTERN void asn1Free_s1ap_CriticalityDiagnostics (OSCTXT *pctxt, 
   s1ap_CriticalityDiagnostics* pvalue);

/**************************************************************/
/*                                                            */
/*  GWContextReleaseIndication                                */
/*                                                            */
/**************************************************************/
/*
GWContextReleaseIndication ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   s1ap_true__4 = 0
} s1ap_GWContextReleaseIndication_Root;

typedef OSUINT32 s1ap_GWContextReleaseIndication;

EXTERN int asn1PE_s1ap_GWContextReleaseIndication (OSCTXT* pctxt, s1ap_GWContextReleaseIndication value);

EXTERN int asn1PD_s1ap_GWContextReleaseIndication (OSCTXT* pctxt, s1ap_GWContextReleaseIndication* pvalue);

EXTERN void asn1Print_s1ap_GWContextReleaseIndication 
   (const char* name, const s1ap_GWContextReleaseIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_GWContextReleaseIndication (const char* name, 
   s1ap_GWContextReleaseIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GWContextReleaseIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_GWContextReleaseIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_GWContextReleaseIndication_ENUMTAB[];
#define s1ap_GWContextReleaseIndication_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_GWContextReleaseIndication_ToString (OSINT32 value);

EXTERN int s1ap_GWContextReleaseIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_GWContextReleaseIndication* pvalue);

EXTERN int s1ap_GWContextReleaseIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_GWContextReleaseIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000HOStatus                                          */
/*                                                            */
/**************************************************************/
/*
Cdma2000HOStatus ::= ENUMERATED { hOSuccess(0), hOFailure(1), ... }
*/
typedef enum {
   s1ap_hOSuccess = 0,
   s1ap_hOFailure = 1
} s1ap_Cdma2000HOStatus_Root;

typedef OSUINT32 s1ap_Cdma2000HOStatus;

EXTERN int asn1PE_s1ap_Cdma2000HOStatus (OSCTXT* pctxt, s1ap_Cdma2000HOStatus value);

EXTERN int asn1PD_s1ap_Cdma2000HOStatus (OSCTXT* pctxt, s1ap_Cdma2000HOStatus* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000HOStatus 
   (const char* name, const s1ap_Cdma2000HOStatus* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000HOStatus (const char* name, 
   s1ap_Cdma2000HOStatus* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000HOStatus (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000HOStatus* pvalue);

EXTERN extern const OSEnumItem s1ap_Cdma2000HOStatus_ENUMTAB[];
#define s1ap_Cdma2000HOStatus_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_Cdma2000HOStatus_ToString (OSINT32 value);

EXTERN int s1ap_Cdma2000HOStatus_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Cdma2000HOStatus* pvalue);

EXTERN int s1ap_Cdma2000HOStatus_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Cdma2000HOStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000RATType                                           */
/*                                                            */
/**************************************************************/
/*
Cdma2000RATType ::= ENUMERATED { hRPD(0), onexRTT(1), ... }
*/
typedef enum {
   s1ap_hRPD = 0,
   s1ap_onexRTT = 1
} s1ap_Cdma2000RATType_Root;

typedef OSUINT32 s1ap_Cdma2000RATType;

EXTERN int asn1PE_s1ap_Cdma2000RATType (OSCTXT* pctxt, s1ap_Cdma2000RATType value);

EXTERN int asn1PD_s1ap_Cdma2000RATType (OSCTXT* pctxt, s1ap_Cdma2000RATType* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000RATType 
   (const char* name, const s1ap_Cdma2000RATType* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000RATType (const char* name, 
   s1ap_Cdma2000RATType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000RATType (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000RATType* pvalue);

EXTERN extern const OSEnumItem s1ap_Cdma2000RATType_ENUMTAB[];
#define s1ap_Cdma2000RATType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_Cdma2000RATType_ToString (OSINT32 value);

EXTERN int s1ap_Cdma2000RATType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Cdma2000RATType* pvalue);

EXTERN int s1ap_Cdma2000RATType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Cdma2000RATType* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000PDU                                               */
/*                                                            */
/**************************************************************/
/*
Cdma2000PDU ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Cdma2000PDU;

EXTERN int asn1PE_s1ap_Cdma2000PDU (OSCTXT* pctxt, s1ap_Cdma2000PDU value);

EXTERN int asn1PD_s1ap_Cdma2000PDU (OSCTXT* pctxt, s1ap_Cdma2000PDU* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000PDU 
   (const char* name, const s1ap_Cdma2000PDU* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000PDU (const char* name, s1ap_Cdma2000PDU* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000PDU (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000PDU* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000PDU (OSCTXT* pctxt, 
   const s1ap_Cdma2000PDU* pSrcValue, s1ap_Cdma2000PDU* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000PDU (s1ap_Cdma2000PDU* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000PDU (OSCTXT *pctxt, s1ap_Cdma2000PDU* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000SectorID                                          */
/*                                                            */
/**************************************************************/
/*
Cdma2000SectorID ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Cdma2000SectorID;

EXTERN int asn1PE_s1ap_Cdma2000SectorID (OSCTXT* pctxt, s1ap_Cdma2000SectorID value);

EXTERN int asn1PD_s1ap_Cdma2000SectorID (OSCTXT* pctxt, s1ap_Cdma2000SectorID* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000SectorID 
   (const char* name, const s1ap_Cdma2000SectorID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000SectorID (const char* name, 
   s1ap_Cdma2000SectorID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000SectorID (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000SectorID* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000SectorID (OSCTXT* pctxt, 
   const s1ap_Cdma2000SectorID* pSrcValue, s1ap_Cdma2000SectorID* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000SectorID (s1ap_Cdma2000SectorID* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000SectorID (OSCTXT *pctxt, 
   s1ap_Cdma2000SectorID* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000HORequiredIndication                              */
/*                                                            */
/**************************************************************/
/*
Cdma2000HORequiredIndication ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   s1ap_true__1 = 0
} s1ap_Cdma2000HORequiredIndication_Root;

typedef OSUINT32 s1ap_Cdma2000HORequiredIndication;

EXTERN int asn1PE_s1ap_Cdma2000HORequiredIndication (OSCTXT* pctxt, s1ap_Cdma2000HORequiredIndication value);

EXTERN int asn1PD_s1ap_Cdma2000HORequiredIndication (OSCTXT* pctxt, s1ap_Cdma2000HORequiredIndication* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000HORequiredIndication 
   (const char* name, const s1ap_Cdma2000HORequiredIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000HORequiredIndication (const char* name, 
   s1ap_Cdma2000HORequiredIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000HORequiredIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000HORequiredIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_Cdma2000HORequiredIndication_ENUMTAB[];
#define s1ap_Cdma2000HORequiredIndication_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_Cdma2000HORequiredIndication_ToString (OSINT32 value);

EXTERN int s1ap_Cdma2000HORequiredIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Cdma2000HORequiredIndication* pvalue);

EXTERN int s1ap_Cdma2000HORequiredIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_Cdma2000HORequiredIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000OneXMEID                                          */
/*                                                            */
/**************************************************************/
/*
Cdma2000OneXMEID ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Cdma2000OneXMEID;

EXTERN int asn1PE_s1ap_Cdma2000OneXMEID (OSCTXT* pctxt, s1ap_Cdma2000OneXMEID value);

EXTERN int asn1PD_s1ap_Cdma2000OneXMEID (OSCTXT* pctxt, s1ap_Cdma2000OneXMEID* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000OneXMEID 
   (const char* name, const s1ap_Cdma2000OneXMEID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000OneXMEID (const char* name, 
   s1ap_Cdma2000OneXMEID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000OneXMEID (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000OneXMEID* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000OneXMEID (OSCTXT* pctxt, 
   const s1ap_Cdma2000OneXMEID* pSrcValue, s1ap_Cdma2000OneXMEID* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000OneXMEID (s1ap_Cdma2000OneXMEID* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000OneXMEID (OSCTXT *pctxt, 
   s1ap_Cdma2000OneXMEID* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000OneXMSI                                           */
/*                                                            */
/**************************************************************/
/*
Cdma2000OneXMSI ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Cdma2000OneXMSI;

EXTERN int asn1PE_s1ap_Cdma2000OneXMSI (OSCTXT* pctxt, s1ap_Cdma2000OneXMSI value);

EXTERN int asn1PD_s1ap_Cdma2000OneXMSI (OSCTXT* pctxt, s1ap_Cdma2000OneXMSI* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000OneXMSI 
   (const char* name, const s1ap_Cdma2000OneXMSI* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000OneXMSI (const char* name, 
   s1ap_Cdma2000OneXMSI* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000OneXMSI (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000OneXMSI* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000OneXMSI (OSCTXT* pctxt, 
   const s1ap_Cdma2000OneXMSI* pSrcValue, s1ap_Cdma2000OneXMSI* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000OneXMSI (s1ap_Cdma2000OneXMSI* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000OneXMSI (OSCTXT *pctxt, 
   s1ap_Cdma2000OneXMSI* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000OneXPilot                                         */
/*                                                            */
/**************************************************************/
/*
Cdma2000OneXPilot ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Cdma2000OneXPilot;

EXTERN int asn1PE_s1ap_Cdma2000OneXPilot (OSCTXT* pctxt, s1ap_Cdma2000OneXPilot value);

EXTERN int asn1PD_s1ap_Cdma2000OneXPilot (OSCTXT* pctxt, s1ap_Cdma2000OneXPilot* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000OneXPilot 
   (const char* name, const s1ap_Cdma2000OneXPilot* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000OneXPilot (const char* name, 
   s1ap_Cdma2000OneXPilot* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000OneXPilot (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000OneXPilot* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000OneXPilot (OSCTXT* pctxt, 
   const s1ap_Cdma2000OneXPilot* pSrcValue, s1ap_Cdma2000OneXPilot* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000OneXPilot (s1ap_Cdma2000OneXPilot* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000OneXPilot (OSCTXT *pctxt, 
   s1ap_Cdma2000OneXPilot* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000OneXSRVCCInfo_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Cdma2000OneXSRVCCInfo'
*/
typedef struct EXTERN s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element 
   (const char* name, const s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element (
   const char* name, s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pSrcValue, 
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element (
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000OneXSRVCCInfo_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Cdma2000OneXSRVCCInfo'
*/
/* List of s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element */
typedef OSRTDList s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions;

EXTERN int asn1PE_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions (OSCTXT* pctxt, s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions (OSCTXT* pctxt, s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions 
   (const char* name, const s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions (const char* name, 
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions_element* 
   asn1Get_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pSrcValue, 
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions (
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000OneXSRVCCInfo                                     */
/*                                                            */
/**************************************************************/
/*
Cdma2000OneXSRVCCInfo ::= SEQUENCE {
   cdma2000OneXMEID [0] Cdma2000OneXMEID,
   cdma2000OneXMSI [1] Cdma2000OneXMSI,
   cdma2000OneXPilot [2] Cdma2000OneXPilot,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Cdma2000OneXSRVCCInfo-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Cdma2000OneXSRVCCInfo-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Cdma2000OneXSRVCCInfo-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Cdma2000OneXSRVCCInfo {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Cdma2000OneXMEID cdma2000OneXMEID;
   s1ap_Cdma2000OneXMSI cdma2000OneXMSI;
   s1ap_Cdma2000OneXPilot cdma2000OneXPilot;
   s1ap_Cdma2000OneXSRVCCInfo_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Cdma2000OneXSRVCCInfo;

EXTERN int asn1PE_s1ap_Cdma2000OneXSRVCCInfo (OSCTXT* pctxt, s1ap_Cdma2000OneXSRVCCInfo* pvalue);

EXTERN int asn1PD_s1ap_Cdma2000OneXSRVCCInfo (OSCTXT* pctxt, s1ap_Cdma2000OneXSRVCCInfo* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000OneXSRVCCInfo 
   (const char* name, const s1ap_Cdma2000OneXSRVCCInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000OneXSRVCCInfo (const char* name, 
   s1ap_Cdma2000OneXSRVCCInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000OneXSRVCCInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000OneXSRVCCInfo* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000OneXSRVCCInfo (OSCTXT* pctxt, 
   const s1ap_Cdma2000OneXSRVCCInfo* pSrcValue, s1ap_Cdma2000OneXSRVCCInfo*
    pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000OneXSRVCCInfo (s1ap_Cdma2000OneXSRVCCInfo* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000OneXSRVCCInfo (OSCTXT *pctxt, 
   s1ap_Cdma2000OneXSRVCCInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  Cdma2000OneXRAND                                          */
/*                                                            */
/**************************************************************/
/*
Cdma2000OneXRAND ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Cdma2000OneXRAND;

EXTERN int asn1PE_s1ap_Cdma2000OneXRAND (OSCTXT* pctxt, s1ap_Cdma2000OneXRAND value);

EXTERN int asn1PD_s1ap_Cdma2000OneXRAND (OSCTXT* pctxt, s1ap_Cdma2000OneXRAND* pvalue);

EXTERN void asn1Print_s1ap_Cdma2000OneXRAND 
   (const char* name, const s1ap_Cdma2000OneXRAND* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cdma2000OneXRAND (const char* name, 
   s1ap_Cdma2000OneXRAND* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cdma2000OneXRAND (OSCTXT *pctxt, 
   const char* name, const s1ap_Cdma2000OneXRAND* pvalue);

EXTERN void asn1Copy_s1ap_Cdma2000OneXRAND (OSCTXT* pctxt, 
   const s1ap_Cdma2000OneXRAND* pSrcValue, s1ap_Cdma2000OneXRAND* pDstValue);

EXTERN int asn1Init_s1ap_Cdma2000OneXRAND (s1ap_Cdma2000OneXRAND* pvalue);

EXTERN void asn1Free_s1ap_Cdma2000OneXRAND (OSCTXT *pctxt, 
   s1ap_Cdma2000OneXRAND* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRANRoundTripDelayEstimationInfo                        */
/*                                                            */
/**************************************************************/
/*
EUTRANRoundTripDelayEstimationInfo ::= INTEGER (0..2047)
*/
typedef OSUINT16 s1ap_EUTRANRoundTripDelayEstimationInfo;

EXTERN int asn1PE_s1ap_EUTRANRoundTripDelayEstimationInfo (OSCTXT* pctxt, s1ap_EUTRANRoundTripDelayEstimationInfo value);

EXTERN int asn1PD_s1ap_EUTRANRoundTripDelayEstimationInfo (OSCTXT* pctxt, s1ap_EUTRANRoundTripDelayEstimationInfo* pvalue);

EXTERN void asn1Print_s1ap_EUTRANRoundTripDelayEstimationInfo 
   (const char* name, const s1ap_EUTRANRoundTripDelayEstimationInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_EUTRANRoundTripDelayEstimationInfo (const char* name, 
   s1ap_EUTRANRoundTripDelayEstimationInfo* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EUTRANRoundTripDelayEstimationInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_EUTRANRoundTripDelayEstimationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  LTE_M_Indication                                          */
/*                                                            */
/**************************************************************/
/*
LTE-M-Indication ::= ENUMERATED { lte-m(0), ... }
*/
typedef enum {
   s1ap_lte_m = 0
} s1ap_LTE_M_Indication_Root;

typedef OSUINT32 s1ap_LTE_M_Indication;

EXTERN int asn1PE_s1ap_LTE_M_Indication (OSCTXT* pctxt, s1ap_LTE_M_Indication value);

EXTERN int asn1PD_s1ap_LTE_M_Indication (OSCTXT* pctxt, s1ap_LTE_M_Indication* pvalue);

EXTERN void asn1Print_s1ap_LTE_M_Indication 
   (const char* name, const s1ap_LTE_M_Indication* pvalue);

EXTERN int asn1PrtToStr_s1ap_LTE_M_Indication (const char* name, 
   s1ap_LTE_M_Indication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LTE_M_Indication (OSCTXT *pctxt, 
   const char* name, const s1ap_LTE_M_Indication* pvalue);

EXTERN extern const OSEnumItem s1ap_LTE_M_Indication_ENUMTAB[];
#define s1ap_LTE_M_Indication_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_LTE_M_Indication_ToString (OSINT32 value);

EXTERN int s1ap_LTE_M_Indication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_LTE_M_Indication* pvalue);

EXTERN int s1ap_LTE_M_Indication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_LTE_M_Indication* pvalue);

/**************************************************************/
/*                                                            */
/*  PDCP_SN                                                   */
/*                                                            */
/**************************************************************/
/*
PDCP-SN ::= INTEGER (0..4095)
*/
typedef OSUINT16 s1ap_PDCP_SN;

EXTERN int asn1PE_s1ap_PDCP_SN (OSCTXT* pctxt, s1ap_PDCP_SN value);

EXTERN int asn1PD_s1ap_PDCP_SN (OSCTXT* pctxt, s1ap_PDCP_SN* pvalue);

EXTERN void asn1Print_s1ap_PDCP_SN (const char* name, const s1ap_PDCP_SN* pvalue);

EXTERN int asn1PrtToStr_s1ap_PDCP_SN (const char* name, s1ap_PDCP_SN* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PDCP_SN (OSCTXT *pctxt, 
   const char* name, const s1ap_PDCP_SN* pvalue);

/**************************************************************/
/*                                                            */
/*  HFN                                                       */
/*                                                            */
/**************************************************************/
/*
HFN ::= INTEGER (0..1048575)
*/
typedef OSUINT32 s1ap_HFN;

EXTERN int asn1PE_s1ap_HFN (OSCTXT* pctxt, s1ap_HFN value);

EXTERN int asn1PD_s1ap_HFN (OSCTXT* pctxt, s1ap_HFN* pvalue);

EXTERN void asn1Print_s1ap_HFN (const char* name, const s1ap_HFN* pvalue);

EXTERN int asn1PrtToStr_s1ap_HFN (const char* name, s1ap_HFN* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HFN (OSCTXT *pctxt, 
   const char* name, const s1ap_HFN* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTvalue_iE_Extensions_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTvalue'
*/
typedef struct EXTERN s1ap_COUNTvalue_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_COUNTvalue_iE_Extensions_element;

EXTERN int asn1PE_s1ap_COUNTvalue_iE_Extensions_element (OSCTXT* pctxt, s1ap_COUNTvalue_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_COUNTvalue_iE_Extensions_element (OSCTXT* pctxt, s1ap_COUNTvalue_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_COUNTvalue_iE_Extensions_element 
   (const char* name, const s1ap_COUNTvalue_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTvalue_iE_Extensions_element (const char* name, 
   s1ap_COUNTvalue_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTvalue_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTvalue_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_COUNTvalue_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_COUNTvalue_iE_Extensions_element* pSrcValue, 
   s1ap_COUNTvalue_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_COUNTvalue_iE_Extensions_element (
   s1ap_COUNTvalue_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_COUNTvalue_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_COUNTvalue_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTvalue_iE_Extensions                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTvalue'
*/
/* List of s1ap_COUNTvalue_iE_Extensions_element */
typedef OSRTDList s1ap_COUNTvalue_iE_Extensions;

EXTERN int asn1PE_s1ap_COUNTvalue_iE_Extensions (OSCTXT* pctxt, s1ap_COUNTvalue_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_COUNTvalue_iE_Extensions (OSCTXT* pctxt, s1ap_COUNTvalue_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_COUNTvalue_iE_Extensions 
   (const char* name, const s1ap_COUNTvalue_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTvalue_iE_Extensions (const char* name, 
   s1ap_COUNTvalue_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTvalue_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTvalue_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_COUNTvalue_iE_Extensions_element* 
   asn1Get_s1ap_COUNTvalue_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_COUNTvalue_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_COUNTvalue_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_COUNTvalue_iE_Extensions* pSrcValue, 
   s1ap_COUNTvalue_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_COUNTvalue_iE_Extensions (
   s1ap_COUNTvalue_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_COUNTvalue_iE_Extensions (OSCTXT *pctxt, 
   s1ap_COUNTvalue_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTvalue                                                */
/*                                                            */
/**************************************************************/
/*
COUNTvalue ::= SEQUENCE {
   pDCP-SN [0] PDCP-SN,
   hFN [1] HFN,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({COUNTvalue-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({COUNTvalue-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({COUNTvalue-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_COUNTvalue {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PDCP_SN pDCP_SN;
   s1ap_HFN hFN;
   s1ap_COUNTvalue_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_COUNTvalue;

EXTERN int asn1PE_s1ap_COUNTvalue (OSCTXT* pctxt, s1ap_COUNTvalue* pvalue);

EXTERN int asn1PD_s1ap_COUNTvalue (OSCTXT* pctxt, s1ap_COUNTvalue* pvalue);

EXTERN void asn1Print_s1ap_COUNTvalue 
   (const char* name, const s1ap_COUNTvalue* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTvalue (const char* name, s1ap_COUNTvalue* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTvalue (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTvalue* pvalue);

EXTERN void asn1Copy_s1ap_COUNTvalue (OSCTXT* pctxt, 
   const s1ap_COUNTvalue* pSrcValue, s1ap_COUNTvalue* pDstValue);

EXTERN int asn1Init_s1ap_COUNTvalue (s1ap_COUNTvalue* pvalue);

EXTERN void asn1Free_s1ap_COUNTvalue (OSCTXT *pctxt, s1ap_COUNTvalue* pvalue);

/**************************************************************/
/*                                                            */
/*  ReceiveStatusofULPDCPSDUs                                 */
/*                                                            */
/**************************************************************/
/*
 R
ReceiveStatusofULPDCPSDUs ::= BIT STRING  (SIZE (4096))
*/
typedef struct s1ap_ReceiveStatusofULPDCPSDUs {
   OSUINT32 numbits;
   OSOCTET data[512];
} s1ap_ReceiveStatusofULPDCPSDUs;

EXTERN int asn1PE_s1ap_ReceiveStatusofULPDCPSDUs (OSCTXT* pctxt, s1ap_ReceiveStatusofULPDCPSDUs* pvalue);

EXTERN int asn1PD_s1ap_ReceiveStatusofULPDCPSDUs (OSCTXT* pctxt, s1ap_ReceiveStatusofULPDCPSDUs* pvalue);

EXTERN void asn1Print_s1ap_ReceiveStatusofULPDCPSDUs 
   (const char* name, const s1ap_ReceiveStatusofULPDCPSDUs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReceiveStatusofULPDCPSDUs (const char* name, 
   s1ap_ReceiveStatusofULPDCPSDUs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReceiveStatusofULPDCPSDUs (OSCTXT *pctxt, 
   const char* name, const s1ap_ReceiveStatusofULPDCPSDUs* pvalue);

EXTERN void asn1Copy_s1ap_ReceiveStatusofULPDCPSDUs (OSCTXT* pctxt, 
   const s1ap_ReceiveStatusofULPDCPSDUs* pSrcValue, 
   s1ap_ReceiveStatusofULPDCPSDUs* pDstValue);

EXTERN int asn1Init_s1ap_ReceiveStatusofULPDCPSDUs (
   s1ap_ReceiveStatusofULPDCPSDUs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDCP_SNExtended                                           */
/*                                                            */
/**************************************************************/
/*
PDCP-SNExtended ::= INTEGER (0..32767)
*/
typedef OSUINT16 s1ap_PDCP_SNExtended;

EXTERN int asn1PE_s1ap_PDCP_SNExtended (OSCTXT* pctxt, s1ap_PDCP_SNExtended value);

EXTERN int asn1PD_s1ap_PDCP_SNExtended (OSCTXT* pctxt, s1ap_PDCP_SNExtended* pvalue);

EXTERN void asn1Print_s1ap_PDCP_SNExtended 
   (const char* name, const s1ap_PDCP_SNExtended* pvalue);

EXTERN int asn1PrtToStr_s1ap_PDCP_SNExtended (const char* name, 
   s1ap_PDCP_SNExtended* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PDCP_SNExtended (OSCTXT *pctxt, 
   const char* name, const s1ap_PDCP_SNExtended* pvalue);

/**************************************************************/
/*                                                            */
/*  HFNModified                                               */
/*                                                            */
/**************************************************************/
/*
HFNModified ::= INTEGER (0..131071)
*/
typedef OSUINT32 s1ap_HFNModified;

EXTERN int asn1PE_s1ap_HFNModified (OSCTXT* pctxt, s1ap_HFNModified value);

EXTERN int asn1PD_s1ap_HFNModified (OSCTXT* pctxt, s1ap_HFNModified* pvalue);

EXTERN void asn1Print_s1ap_HFNModified 
   (const char* name, const s1ap_HFNModified* pvalue);

EXTERN int asn1PrtToStr_s1ap_HFNModified (const char* name, s1ap_HFNModified* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HFNModified (OSCTXT *pctxt, 
   const char* name, const s1ap_HFNModified* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueExtended_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTValueExtended'
*/
typedef struct EXTERN s1ap_COUNTValueExtended_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_COUNTValueExtended_iE_Extensions_element;

EXTERN int asn1PE_s1ap_COUNTValueExtended_iE_Extensions_element (OSCTXT* pctxt, s1ap_COUNTValueExtended_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_COUNTValueExtended_iE_Extensions_element (OSCTXT* pctxt, s1ap_COUNTValueExtended_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_COUNTValueExtended_iE_Extensions_element 
   (const char* name, const s1ap_COUNTValueExtended_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTValueExtended_iE_Extensions_element (
   const char* name, s1ap_COUNTValueExtended_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTValueExtended_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTValueExtended_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_COUNTValueExtended_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_COUNTValueExtended_iE_Extensions_element* pSrcValue, 
   s1ap_COUNTValueExtended_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_COUNTValueExtended_iE_Extensions_element (
   s1ap_COUNTValueExtended_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_COUNTValueExtended_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_COUNTValueExtended_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueExtended_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTValueExtended'
*/
/* List of s1ap_COUNTValueExtended_iE_Extensions_element */
typedef OSRTDList s1ap_COUNTValueExtended_iE_Extensions;

EXTERN int asn1PE_s1ap_COUNTValueExtended_iE_Extensions (OSCTXT* pctxt, s1ap_COUNTValueExtended_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_COUNTValueExtended_iE_Extensions (OSCTXT* pctxt, s1ap_COUNTValueExtended_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_COUNTValueExtended_iE_Extensions 
   (const char* name, const s1ap_COUNTValueExtended_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTValueExtended_iE_Extensions (const char* name, 
   s1ap_COUNTValueExtended_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTValueExtended_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTValueExtended_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_COUNTValueExtended_iE_Extensions_element* 
   asn1Get_s1ap_COUNTValueExtended_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_COUNTValueExtended_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_COUNTValueExtended_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_COUNTValueExtended_iE_Extensions* pSrcValue, 
   s1ap_COUNTValueExtended_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_COUNTValueExtended_iE_Extensions (
   s1ap_COUNTValueExtended_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_COUNTValueExtended_iE_Extensions (OSCTXT *pctxt, 
   s1ap_COUNTValueExtended_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueExtended                                        */
/*                                                            */
/**************************************************************/
/*
COUNTValueExtended ::= SEQUENCE {
   pDCP-SNExtended [0] PDCP-SNExtended,
   hFNModified [1] HFNModified,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({COUNTValueExtended-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({COUNTValueExtended-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({COUNTValueExtended-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_COUNTValueExtended {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PDCP_SNExtended pDCP_SNExtended;
   s1ap_HFNModified hFNModified;
   s1ap_COUNTValueExtended_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_COUNTValueExtended;

EXTERN int asn1PE_s1ap_COUNTValueExtended (OSCTXT* pctxt, s1ap_COUNTValueExtended* pvalue);

EXTERN int asn1PD_s1ap_COUNTValueExtended (OSCTXT* pctxt, s1ap_COUNTValueExtended* pvalue);

EXTERN void asn1Print_s1ap_COUNTValueExtended 
   (const char* name, const s1ap_COUNTValueExtended* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTValueExtended (const char* name, 
   s1ap_COUNTValueExtended* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTValueExtended (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTValueExtended* pvalue);

EXTERN void asn1Copy_s1ap_COUNTValueExtended (OSCTXT* pctxt, 
   const s1ap_COUNTValueExtended* pSrcValue, s1ap_COUNTValueExtended*
    pDstValue);

EXTERN int asn1Init_s1ap_COUNTValueExtended (s1ap_COUNTValueExtended* pvalue);

EXTERN void asn1Free_s1ap_COUNTValueExtended (OSCTXT *pctxt, 
   s1ap_COUNTValueExtended* pvalue);

/**************************************************************/
/*                                                            */
/*  ReceiveStatusOfULPDCPSDUsExtended                         */
/*                                                            */
/**************************************************************/
/*
ReceiveStatusOfULPDCPSDUsExtended ::= BIT STRING  (SIZE (1..16384))
*/
typedef struct s1ap_ReceiveStatusOfULPDCPSDUsExtended {
   OSUINT32 numbits;
   OSOCTET data[2048];
} s1ap_ReceiveStatusOfULPDCPSDUsExtended;

EXTERN int asn1PE_s1ap_ReceiveStatusOfULPDCPSDUsExtended (OSCTXT* pctxt, s1ap_ReceiveStatusOfULPDCPSDUsExtended* pvalue);

EXTERN int asn1PD_s1ap_ReceiveStatusOfULPDCPSDUsExtended (OSCTXT* pctxt, s1ap_ReceiveStatusOfULPDCPSDUsExtended* pvalue);

EXTERN void asn1Print_s1ap_ReceiveStatusOfULPDCPSDUsExtended 
   (const char* name, const s1ap_ReceiveStatusOfULPDCPSDUsExtended* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReceiveStatusOfULPDCPSDUsExtended (const char* name, 
   s1ap_ReceiveStatusOfULPDCPSDUsExtended* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReceiveStatusOfULPDCPSDUsExtended (OSCTXT *pctxt, 
   const char* name, const s1ap_ReceiveStatusOfULPDCPSDUsExtended* pvalue);

EXTERN void asn1Copy_s1ap_ReceiveStatusOfULPDCPSDUsExtended (OSCTXT* pctxt, 
   const s1ap_ReceiveStatusOfULPDCPSDUsExtended* pSrcValue, 
   s1ap_ReceiveStatusOfULPDCPSDUsExtended* pDstValue);

EXTERN int asn1Init_s1ap_ReceiveStatusOfULPDCPSDUsExtended (
   s1ap_ReceiveStatusOfULPDCPSDUsExtended* pvalue);

/**************************************************************/
/*                                                            */
/*  PDCP_SNlength18                                           */
/*                                                            */
/**************************************************************/
/*
PDCP-SNlength18 ::= INTEGER (0..262143)
*/
typedef OSUINT32 s1ap_PDCP_SNlength18;

EXTERN int asn1PE_s1ap_PDCP_SNlength18 (OSCTXT* pctxt, s1ap_PDCP_SNlength18 value);

EXTERN int asn1PD_s1ap_PDCP_SNlength18 (OSCTXT* pctxt, s1ap_PDCP_SNlength18* pvalue);

EXTERN void asn1Print_s1ap_PDCP_SNlength18 
   (const char* name, const s1ap_PDCP_SNlength18* pvalue);

EXTERN int asn1PrtToStr_s1ap_PDCP_SNlength18 (const char* name, 
   s1ap_PDCP_SNlength18* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PDCP_SNlength18 (OSCTXT *pctxt, 
   const char* name, const s1ap_PDCP_SNlength18* pvalue);

/**************************************************************/
/*                                                            */
/*  HFNforPDCP_SNlength18                                     */
/*                                                            */
/**************************************************************/
/*
HFNforPDCP-SNlength18 ::= INTEGER (0..16383)
*/
typedef OSUINT16 s1ap_HFNforPDCP_SNlength18;

EXTERN int asn1PE_s1ap_HFNforPDCP_SNlength18 (OSCTXT* pctxt, s1ap_HFNforPDCP_SNlength18 value);

EXTERN int asn1PD_s1ap_HFNforPDCP_SNlength18 (OSCTXT* pctxt, s1ap_HFNforPDCP_SNlength18* pvalue);

EXTERN void asn1Print_s1ap_HFNforPDCP_SNlength18 
   (const char* name, const s1ap_HFNforPDCP_SNlength18* pvalue);

EXTERN int asn1PrtToStr_s1ap_HFNforPDCP_SNlength18 (const char* name, 
   s1ap_HFNforPDCP_SNlength18* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HFNforPDCP_SNlength18 (OSCTXT *pctxt, 
   const char* name, const s1ap_HFNforPDCP_SNlength18* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTvaluePDCP_SNlength18_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTvaluePDCP-SNlength18'
*/
typedef struct EXTERN s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element;

EXTERN int asn1PE_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element (OSCTXT* pctxt, s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element (OSCTXT* pctxt, s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element 
   (const char* name, const s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element (
   const char* name, 
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pSrcValue, 
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element (
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTvaluePDCP_SNlength18_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTvaluePDCP-SNlength18'
*/
/* List of s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element */
typedef OSRTDList s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions;

EXTERN int asn1PE_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions (OSCTXT* pctxt, s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions (OSCTXT* pctxt, s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions 
   (const char* name, const s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions (
   const char* name, s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions_element* 
   asn1Get_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pSrcValue, 
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions (
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions (OSCTXT *pctxt, 
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTvaluePDCP_SNlength18                                 */
/*                                                            */
/**************************************************************/
/*
COUNTvaluePDCP-SNlength18 ::= SEQUENCE {
   pDCP-SNlength18 [0] PDCP-SNlength18,
   hFNforPDCP-SNlength18 [1] HFNforPDCP-SNlength18,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({COUNTvaluePDCP-SNlength18-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({COUNTvaluePDCP-SNlength18-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({COUNTvaluePDCP-SNlength18-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_COUNTvaluePDCP_SNlength18 {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PDCP_SNlength18 pDCP_SNlength18;
   s1ap_HFNforPDCP_SNlength18 hFNforPDCP_SNlength18;
   s1ap_COUNTvaluePDCP_SNlength18_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_COUNTvaluePDCP_SNlength18;

EXTERN int asn1PE_s1ap_COUNTvaluePDCP_SNlength18 (OSCTXT* pctxt, s1ap_COUNTvaluePDCP_SNlength18* pvalue);

EXTERN int asn1PD_s1ap_COUNTvaluePDCP_SNlength18 (OSCTXT* pctxt, s1ap_COUNTvaluePDCP_SNlength18* pvalue);

EXTERN void asn1Print_s1ap_COUNTvaluePDCP_SNlength18 
   (const char* name, const s1ap_COUNTvaluePDCP_SNlength18* pvalue);

EXTERN int asn1PrtToStr_s1ap_COUNTvaluePDCP_SNlength18 (const char* name, 
   s1ap_COUNTvaluePDCP_SNlength18* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_COUNTvaluePDCP_SNlength18 (OSCTXT *pctxt, 
   const char* name, const s1ap_COUNTvaluePDCP_SNlength18* pvalue);

EXTERN void asn1Copy_s1ap_COUNTvaluePDCP_SNlength18 (OSCTXT* pctxt, 
   const s1ap_COUNTvaluePDCP_SNlength18* pSrcValue, 
   s1ap_COUNTvaluePDCP_SNlength18* pDstValue);

EXTERN int asn1Init_s1ap_COUNTvaluePDCP_SNlength18 (
   s1ap_COUNTvaluePDCP_SNlength18* pvalue);

EXTERN void asn1Free_s1ap_COUNTvaluePDCP_SNlength18 (OSCTXT *pctxt, 
   s1ap_COUNTvaluePDCP_SNlength18* pvalue);

/**************************************************************/
/*                                                            */
/*  ReceiveStatusOfULPDCPSDUsPDCP_SNlength18                  */
/*                                                            */
/**************************************************************/
/*
ReceiveStatusOfULPDCPSDUsPDCP-SNlength18 ::= BIT STRING  (SIZE (1..131072))
*/
typedef ASN1DynBitStr s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18;

EXTERN int asn1PE_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 (OSCTXT* pctxt, s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 value);

EXTERN int asn1PD_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 (OSCTXT* pctxt, s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pvalue);

EXTERN void asn1Print_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 
   (const char* name, const s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 (
   const char* name, s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 (OSCTXT *pctxt, 
   const char* name, const s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pvalue);

EXTERN void asn1Copy_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 (OSCTXT* pctxt, 
   const s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pSrcValue, 
   s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pDstValue);

EXTERN int asn1Init_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 (
   s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pvalue);

EXTERN void asn1Free_s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 (OSCTXT *pctxt, 
   s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18* pvalue);

/**************************************************************/
/*                                                            */
/*  Bearers_SubjectToStatusTransfer_Item_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Bearers-SubjectToStatusTransfer-Item'
*/
typedef struct EXTERN s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      Bearers_SubjectToStatusTransfer_ItemExtIEs_TVALUE t;

      /**
       * Bearers-SubjectToStatusTransfer-ItemExtIEs information objects
       */
      union {
         /**
          * id: id-ULCOUNTValueExtended
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_COUNTValueExtended *_Bearers_SubjectToStatusTransfer_ItemExtIEs_1;
         /**
          * id: id-DLCOUNTValueExtended
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_COUNTValueExtended *_Bearers_SubjectToStatusTransfer_ItemExtIEs_2;
         /**
          * id: id-ReceiveStatusOfULPDCPSDUsExtended
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ReceiveStatusOfULPDCPSDUsExtended *_Bearers_SubjectToStatusTransfer_ItemExtIEs_3;
         /**
          * id: id-ULCOUNTValuePDCP-SNlength18
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_COUNTvaluePDCP_SNlength18 *_Bearers_SubjectToStatusTransfer_ItemExtIEs_4;
         /**
          * id: id-DLCOUNTValuePDCP-SNlength18
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_COUNTvaluePDCP_SNlength18 *_Bearers_SubjectToStatusTransfer_ItemExtIEs_5;
         /**
          * id: id-ReceiveStatusOfULPDCPSDUsPDCP-SNlength18
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 *_Bearers_SubjectToStatusTransfer_ItemExtIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element 
   (const char* name, const s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element (
   const char* name, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element_Bearers_SubjectToStatusTransfer_ItemExtIEs_1
   (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pElem
   , s1ap_COUNTValueExtended *pvalue);

EXTERN void asn1SetTC_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element_Bearers_SubjectToStatusTransfer_ItemExtIEs_2
   (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pElem
   , s1ap_COUNTValueExtended *pvalue);

EXTERN void asn1SetTC_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element_Bearers_SubjectToStatusTransfer_ItemExtIEs_3
   (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pElem
   , s1ap_ReceiveStatusOfULPDCPSDUsExtended *pvalue);

EXTERN void asn1SetTC_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element_Bearers_SubjectToStatusTransfer_ItemExtIEs_4
   (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pElem
   , s1ap_COUNTvaluePDCP_SNlength18 *pvalue);

EXTERN void asn1SetTC_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element_Bearers_SubjectToStatusTransfer_ItemExtIEs_5
   (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pElem
   , s1ap_COUNTvaluePDCP_SNlength18 *pvalue);

EXTERN void asn1SetTC_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element_Bearers_SubjectToStatusTransfer_ItemExtIEs_6
   (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pElem
   , s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 *pvalue);

EXTERN void asn1Copy_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pSrcValue, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element (
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Bearers_SubjectToStatusTransfer_Item_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Bearers-SubjectToStatusTransfer-Item'
*/
/* List of s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element */
typedef OSRTDList s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions 
   (const char* name, const s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions (
   const char* name, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pvalue);

/* Append IE with value type s1ap_COUNTValueExtended to list */
struct s1ap_COUNTValueExtended ;
EXTERN int asn1Append_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_1
      (OSCTXT* pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* plist, struct 
   s1ap_COUNTValueExtended *pvalue);

/* Append IE with value type s1ap_COUNTValueExtended to list */
struct s1ap_COUNTValueExtended ;
EXTERN int asn1Append_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_2
      (OSCTXT* pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* plist, struct 
   s1ap_COUNTValueExtended *pvalue);

/* Append IE with value type s1ap_ReceiveStatusOfULPDCPSDUsExtended to list */
struct s1ap_ReceiveStatusOfULPDCPSDUsExtended ;
EXTERN int asn1Append_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_3
      (OSCTXT* pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* plist, struct 
   s1ap_ReceiveStatusOfULPDCPSDUsExtended *pvalue);

/* Append IE with value type s1ap_COUNTvaluePDCP_SNlength18 to list */
struct s1ap_COUNTvaluePDCP_SNlength18 ;
EXTERN int asn1Append_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_4
      (OSCTXT* pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* plist, struct 
   s1ap_COUNTvaluePDCP_SNlength18 *pvalue);

/* Append IE with value type s1ap_COUNTvaluePDCP_SNlength18 to list */
struct s1ap_COUNTvaluePDCP_SNlength18 ;
EXTERN int asn1Append_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_5
      (OSCTXT* pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* plist, struct 
   s1ap_COUNTvaluePDCP_SNlength18 *pvalue);

/* Append IE with value type s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 to list */
EXTERN int asn1Append_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_6
      (OSCTXT* pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* plist, 
   s1ap_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions_element* 
   asn1Get_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pSrcValue, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions (
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Bearers_SubjectToStatusTransfer_Item                      */
/*                                                            */
/**************************************************************/
/*
Bearers-SubjectToStatusTransfer-Item ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   uL-COUNTvalue [1] COUNTvalue,
   dL-COUNTvalue [2] COUNTvalue,
   receiveStatusofULPDCPSDUs [3] ReceiveStatusofULPDCPSDUs OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Bearers-SubjectToStatusTransfer-ItemExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Bearers-SubjectToStatusTransfer-ItemExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Bearers-SubjectToStatusTransfer-ItemExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Bearers_SubjectToStatusTransfer_Item {
   struct {
      unsigned receiveStatusofULPDCPSDUsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_COUNTvalue uL_COUNTvalue;
   s1ap_COUNTvalue dL_COUNTvalue;
   s1ap_ReceiveStatusofULPDCPSDUs receiveStatusofULPDCPSDUs;
   s1ap_Bearers_SubjectToStatusTransfer_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Bearers_SubjectToStatusTransfer_Item;

EXTERN int asn1PE_s1ap_Bearers_SubjectToStatusTransfer_Item (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item* pvalue);

EXTERN int asn1PD_s1ap_Bearers_SubjectToStatusTransfer_Item (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransfer_Item* pvalue);

EXTERN void asn1Print_s1ap_Bearers_SubjectToStatusTransfer_Item 
   (const char* name, const s1ap_Bearers_SubjectToStatusTransfer_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_Bearers_SubjectToStatusTransfer_Item (const char* name, 
   s1ap_Bearers_SubjectToStatusTransfer_Item* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Bearers_SubjectToStatusTransfer_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_Bearers_SubjectToStatusTransfer_Item* pvalue);

EXTERN void asn1Copy_s1ap_Bearers_SubjectToStatusTransfer_Item (OSCTXT* pctxt, 
   const s1ap_Bearers_SubjectToStatusTransfer_Item* pSrcValue, 
   s1ap_Bearers_SubjectToStatusTransfer_Item* pDstValue);

EXTERN int asn1Init_s1ap_Bearers_SubjectToStatusTransfer_Item (
   s1ap_Bearers_SubjectToStatusTransfer_Item* pvalue);

EXTERN void asn1Free_s1ap_Bearers_SubjectToStatusTransfer_Item (OSCTXT *pctxt, 
   s1ap_Bearers_SubjectToStatusTransfer_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  Bearers_SubjectToStatusTransferList_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Bearers-SubjectToStatusTransferList'
*/
typedef struct EXTERN s1ap_Bearers_SubjectToStatusTransferList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      Bearers_SubjectToStatusTransfer_ItemIEs_TVALUE t;

      /**
       * Bearers-SubjectToStatusTransfer-ItemIEs information objects
       */
      union {
         /**
          * id: id-Bearers-SubjectToStatusTransfer-Item
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Bearers_SubjectToStatusTransfer_Item *_Bearers_SubjectToStatusTransfer_ItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_Bearers_SubjectToStatusTransferList_element;

EXTERN int asn1PE_s1ap_Bearers_SubjectToStatusTransferList_element (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransferList_element* pvalue);

EXTERN int asn1PD_s1ap_Bearers_SubjectToStatusTransferList_element (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransferList_element* pvalue);

EXTERN void asn1Print_s1ap_Bearers_SubjectToStatusTransferList_element 
   (const char* name, const s1ap_Bearers_SubjectToStatusTransferList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Bearers_SubjectToStatusTransferList_element (
   const char* name, s1ap_Bearers_SubjectToStatusTransferList_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Bearers_SubjectToStatusTransferList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Bearers_SubjectToStatusTransferList_element* pvalue);

EXTERN void asn1Copy_s1ap_Bearers_SubjectToStatusTransferList_element (OSCTXT* pctxt, 
   const s1ap_Bearers_SubjectToStatusTransferList_element* pSrcValue, 
   s1ap_Bearers_SubjectToStatusTransferList_element* pDstValue);

EXTERN int asn1Init_s1ap_Bearers_SubjectToStatusTransferList_element (
   s1ap_Bearers_SubjectToStatusTransferList_element* pvalue);

EXTERN void asn1Free_s1ap_Bearers_SubjectToStatusTransferList_element (OSCTXT *pctxt, 
   s1ap_Bearers_SubjectToStatusTransferList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Bearers_SubjectToStatusTransferList                       */
/*                                                            */
/**************************************************************/
/*
 B
Bearers-SubjectToStatusTransferList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({Bearers-SubjectToStatusTransfer-ItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({Bearers-SubjectToStatusTransfer-ItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({Bearers-SubjectToStatusTransfer-ItemIEs}{@id})
}
*/
/* List of s1ap_Bearers_SubjectToStatusTransferList_element */
typedef OSRTDList s1ap_Bearers_SubjectToStatusTransferList;

EXTERN int asn1PE_s1ap_Bearers_SubjectToStatusTransferList (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransferList* pvalue);

EXTERN int asn1PD_s1ap_Bearers_SubjectToStatusTransferList (OSCTXT* pctxt, s1ap_Bearers_SubjectToStatusTransferList* pvalue);

EXTERN void asn1Print_s1ap_Bearers_SubjectToStatusTransferList 
   (const char* name, const s1ap_Bearers_SubjectToStatusTransferList* pvalue);

EXTERN int asn1PrtToStr_s1ap_Bearers_SubjectToStatusTransferList (const char* name, 
   s1ap_Bearers_SubjectToStatusTransferList* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Bearers_SubjectToStatusTransferList (OSCTXT *pctxt, 
   const char* name, const s1ap_Bearers_SubjectToStatusTransferList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Bearers_SubjectToStatusTransferList_element* 
   asn1Get_s1ap_Bearers_SubjectToStatusTransferList (s1ap_ProtocolIE_ID id, 
   s1ap_Bearers_SubjectToStatusTransferList* plist);

EXTERN void asn1Copy_s1ap_Bearers_SubjectToStatusTransferList (OSCTXT* pctxt, 
   const s1ap_Bearers_SubjectToStatusTransferList* pSrcValue, 
   s1ap_Bearers_SubjectToStatusTransferList* pDstValue);

EXTERN int asn1Init_s1ap_Bearers_SubjectToStatusTransferList (
   s1ap_Bearers_SubjectToStatusTransferList* pvalue);

EXTERN void asn1Free_s1ap_Bearers_SubjectToStatusTransferList (OSCTXT *pctxt, 
   s1ap_Bearers_SubjectToStatusTransferList* pvalue);

/**************************************************************/
/*                                                            */
/*  ENB_StatusTransfer_TransparentContainer_iE_Extensions_el  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENB-StatusTransfer-TransparentContainer'
*/
typedef struct EXTERN s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element 
   (const char* name, const s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element (
   const char* name, 
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pSrcValue, 
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element*
    pDstValue);

EXTERN int asn1Init_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element (
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENB_StatusTransfer_TransparentContainer_iE_Extensions     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENB-StatusTransfer-TransparentContainer'
*/
/* List of s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element */
typedef OSRTDList s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions (OSCTXT* pctxt, s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions (OSCTXT* pctxt, s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions 
   (const char* name, const s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions (
   const char* name, 
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions_element* 
   asn1Get_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pSrcValue, 
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions (
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ENB_StatusTransfer_TransparentContainer                   */
/*                                                            */
/**************************************************************/
/*
ENB-StatusTransfer-TransparentContainer ::= SEQUENCE {
   bearers-SubjectToStatusTransferList [0] Bearers-SubjectToStatusTransferList,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ENB-StatusTransfer-TransparentContainer-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ENB-StatusTransfer-TransparentContainer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ENB-StatusTransfer-TransparentContainer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ENB_StatusTransfer_TransparentContainer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Bearers_SubjectToStatusTransferList bearers_SubjectToStatusTransferList;
   s1ap_ENB_StatusTransfer_TransparentContainer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ENB_StatusTransfer_TransparentContainer;

EXTERN int asn1PE_s1ap_ENB_StatusTransfer_TransparentContainer (OSCTXT* pctxt, s1ap_ENB_StatusTransfer_TransparentContainer* pvalue);

EXTERN int asn1PD_s1ap_ENB_StatusTransfer_TransparentContainer (OSCTXT* pctxt, s1ap_ENB_StatusTransfer_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_ENB_StatusTransfer_TransparentContainer 
   (const char* name, const s1ap_ENB_StatusTransfer_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENB_StatusTransfer_TransparentContainer (
   const char* name, s1ap_ENB_StatusTransfer_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENB_StatusTransfer_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_ENB_StatusTransfer_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_ENB_StatusTransfer_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_ENB_StatusTransfer_TransparentContainer* pSrcValue, 
   s1ap_ENB_StatusTransfer_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_ENB_StatusTransfer_TransparentContainer (
   s1ap_ENB_StatusTransfer_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_ENB_StatusTransfer_TransparentContainer (OSCTXT *pctxt, 
   s1ap_ENB_StatusTransfer_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivacyIndicator                                          */
/*                                                            */
/**************************************************************/
/*
PrivacyIndicator ::= ENUMERATED { immediate-MDT(0), logged-MDT(1), ... }
*/
typedef enum {
   s1ap_immediate_MDT = 0,
   s1ap_logged_MDT = 1
} s1ap_PrivacyIndicator_Root;

typedef OSUINT32 s1ap_PrivacyIndicator;

EXTERN int asn1PE_s1ap_PrivacyIndicator (OSCTXT* pctxt, s1ap_PrivacyIndicator value);

EXTERN int asn1PD_s1ap_PrivacyIndicator (OSCTXT* pctxt, s1ap_PrivacyIndicator* pvalue);

EXTERN void asn1Print_s1ap_PrivacyIndicator 
   (const char* name, const s1ap_PrivacyIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_PrivacyIndicator (const char* name, 
   s1ap_PrivacyIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PrivacyIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_PrivacyIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_PrivacyIndicator_ENUMTAB[];
#define s1ap_PrivacyIndicator_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_PrivacyIndicator_ToString (OSINT32 value);

EXTERN int s1ap_PrivacyIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_PrivacyIndicator* pvalue);

EXTERN int s1ap_PrivacyIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_PrivacyIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  NRCellIdentity                                            */
/*                                                            */
/**************************************************************/
/*
NRCellIdentity ::= BIT STRING  (SIZE (36))
*/
typedef struct s1ap_NRCellIdentity {
   OSUINT32 numbits;
   OSOCTET data[5];
} s1ap_NRCellIdentity;

EXTERN int asn1PE_s1ap_NRCellIdentity (OSCTXT* pctxt, s1ap_NRCellIdentity* pvalue);

EXTERN int asn1PD_s1ap_NRCellIdentity (OSCTXT* pctxt, s1ap_NRCellIdentity* pvalue);

EXTERN void asn1Print_s1ap_NRCellIdentity 
   (const char* name, const s1ap_NRCellIdentity* pvalue);

EXTERN int asn1PrtToStr_s1ap_NRCellIdentity (const char* name, 
   s1ap_NRCellIdentity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NRCellIdentity (OSCTXT *pctxt, 
   const char* name, const s1ap_NRCellIdentity* pvalue);

EXTERN void asn1Copy_s1ap_NRCellIdentity (OSCTXT* pctxt, 
   const s1ap_NRCellIdentity* pSrcValue, s1ap_NRCellIdentity* pDstValue);

EXTERN int asn1Init_s1ap_NRCellIdentity (s1ap_NRCellIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGI_iE_Extensions_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NR-CGI'
*/
typedef struct EXTERN s1ap_NR_CGI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_NR_CGI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_NR_CGI_iE_Extensions_element (OSCTXT* pctxt, s1ap_NR_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_NR_CGI_iE_Extensions_element (OSCTXT* pctxt, s1ap_NR_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_NR_CGI_iE_Extensions_element 
   (const char* name, const s1ap_NR_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_NR_CGI_iE_Extensions_element (const char* name, 
   s1ap_NR_CGI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NR_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_NR_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_NR_CGI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_NR_CGI_iE_Extensions_element* pSrcValue, 
   s1ap_NR_CGI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_NR_CGI_iE_Extensions_element (
   s1ap_NR_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_NR_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_NR_CGI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGI_iE_Extensions                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NR-CGI'
*/
/* List of s1ap_NR_CGI_iE_Extensions_element */
typedef OSRTDList s1ap_NR_CGI_iE_Extensions;

EXTERN int asn1PE_s1ap_NR_CGI_iE_Extensions (OSCTXT* pctxt, s1ap_NR_CGI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_NR_CGI_iE_Extensions (OSCTXT* pctxt, s1ap_NR_CGI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_NR_CGI_iE_Extensions 
   (const char* name, const s1ap_NR_CGI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_NR_CGI_iE_Extensions (const char* name, 
   s1ap_NR_CGI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NR_CGI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_NR_CGI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_NR_CGI_iE_Extensions_element* 
   asn1Get_s1ap_NR_CGI_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_NR_CGI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_NR_CGI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_NR_CGI_iE_Extensions* pSrcValue, s1ap_NR_CGI_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_NR_CGI_iE_Extensions (s1ap_NR_CGI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_NR_CGI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_NR_CGI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGI                                                    */
/*                                                            */
/**************************************************************/
/*
NR-CGI ::= SEQUENCE {
   pLMNIdentity [0] PLMNidentity,
   nRCellIdentity [1] NRCellIdentity,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({NR-CGI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({NR-CGI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({NR-CGI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_NR_CGI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNIdentity;
   s1ap_NRCellIdentity nRCellIdentity;
   s1ap_NR_CGI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_NR_CGI;

EXTERN int asn1PE_s1ap_NR_CGI (OSCTXT* pctxt, s1ap_NR_CGI* pvalue);

EXTERN int asn1PD_s1ap_NR_CGI (OSCTXT* pctxt, s1ap_NR_CGI* pvalue);

EXTERN void asn1Print_s1ap_NR_CGI (const char* name, const s1ap_NR_CGI* pvalue);

EXTERN int asn1PrtToStr_s1ap_NR_CGI (const char* name, s1ap_NR_CGI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NR_CGI (OSCTXT *pctxt, 
   const char* name, const s1ap_NR_CGI* pvalue);

EXTERN void asn1Copy_s1ap_NR_CGI (OSCTXT* pctxt, const s1ap_NR_CGI* pSrcValue, 
   s1ap_NR_CGI* pDstValue);

EXTERN int asn1Init_s1ap_NR_CGI (s1ap_NR_CGI* pvalue);

EXTERN void asn1Free_s1ap_NR_CGI (OSCTXT *pctxt, s1ap_NR_CGI* pvalue);

/**************************************************************/
/*                                                            */
/*  PSCellInformation_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PSCellInformation'
*/
typedef struct EXTERN s1ap_PSCellInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_PSCellInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_PSCellInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_PSCellInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_PSCellInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_PSCellInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_PSCellInformation_iE_Extensions_element 
   (const char* name, const s1ap_PSCellInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PSCellInformation_iE_Extensions_element (
   const char* name, s1ap_PSCellInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PSCellInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PSCellInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_PSCellInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_PSCellInformation_iE_Extensions_element* pSrcValue, 
   s1ap_PSCellInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_PSCellInformation_iE_Extensions_element (
   s1ap_PSCellInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_PSCellInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_PSCellInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PSCellInformation_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PSCellInformation'
*/
/* List of s1ap_PSCellInformation_iE_Extensions_element */
typedef OSRTDList s1ap_PSCellInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_PSCellInformation_iE_Extensions (OSCTXT* pctxt, s1ap_PSCellInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_PSCellInformation_iE_Extensions (OSCTXT* pctxt, s1ap_PSCellInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_PSCellInformation_iE_Extensions 
   (const char* name, const s1ap_PSCellInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_PSCellInformation_iE_Extensions (const char* name, 
   s1ap_PSCellInformation_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PSCellInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_PSCellInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PSCellInformation_iE_Extensions_element* 
   asn1Get_s1ap_PSCellInformation_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_PSCellInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_PSCellInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_PSCellInformation_iE_Extensions* pSrcValue, 
   s1ap_PSCellInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_PSCellInformation_iE_Extensions (
   s1ap_PSCellInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_PSCellInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_PSCellInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PSCellInformation                                         */
/*                                                            */
/**************************************************************/
/*
PSCellInformation ::= SEQUENCE {
   nCGI [0] NR-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({PSCellInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({PSCellInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({PSCellInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_PSCellInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_NR_CGI nCGI;
   s1ap_PSCellInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_PSCellInformation;

EXTERN int asn1PE_s1ap_PSCellInformation (OSCTXT* pctxt, s1ap_PSCellInformation* pvalue);

EXTERN int asn1PD_s1ap_PSCellInformation (OSCTXT* pctxt, s1ap_PSCellInformation* pvalue);

EXTERN void asn1Print_s1ap_PSCellInformation 
   (const char* name, const s1ap_PSCellInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_PSCellInformation (const char* name, 
   s1ap_PSCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PSCellInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_PSCellInformation* pvalue);

EXTERN void asn1Copy_s1ap_PSCellInformation (OSCTXT* pctxt, 
   const s1ap_PSCellInformation* pSrcValue, s1ap_PSCellInformation* pDstValue);

EXTERN int asn1Init_s1ap_PSCellInformation (s1ap_PSCellInformation* pvalue);

EXTERN void asn1Free_s1ap_PSCellInformation (OSCTXT *pctxt, 
   s1ap_PSCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadAction                                            */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
OverloadAction ::= ENUMERATED { reject-non-emergency-mo-dt(0), reject-rrc-cr-signalling(1), permit-emergency-sessions-and-mobile-terminated-services-only(2), ..., permit-high-priority-sessions-and-mobile-terminated-services-only(3), reject-delay-tolerant-access(4), permit-high-priority-sessions-and-exception-reporting-and-mobile-terminated-services-only(5), not-accept-mo-data-or-delay-tolerant-access-from-CP-CIoT(6) }
*/
typedef enum {
   s1ap_reject_non_emergency_mo_dt = 0,
   s1ap_reject_rrc_cr_signalling = 1,
   s1ap_permit_emergency_sessions_and_mobile_terminated_services_only = 2
} s1ap_OverloadAction_Root;

typedef enum {
   s1ap_permit_high_priority_sessions_and_mobile_terminated_services_only = 3,
   s1ap_reject_delay_tolerant_access = 4,
   s1ap_permit_high_priority_sessions_and_exception_reporting_and_mobile_terminated_services_only = 5,
   s1ap_not_accept_mo_data_or_delay_tolerant_access_from_CP_CIoT = 6
} s1ap_OverloadAction_Ext;

typedef OSUINT32 s1ap_OverloadAction;

EXTERN int asn1PE_s1ap_OverloadAction (OSCTXT* pctxt, s1ap_OverloadAction value);

EXTERN int asn1PD_s1ap_OverloadAction (OSCTXT* pctxt, s1ap_OverloadAction* pvalue);

EXTERN void asn1Print_s1ap_OverloadAction 
   (const char* name, const s1ap_OverloadAction* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadAction (const char* name, 
   s1ap_OverloadAction* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadAction (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadAction* pvalue);

EXTERN extern const OSEnumItem s1ap_OverloadAction_ENUMTAB[];
#define s1ap_OverloadAction_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* s1ap_OverloadAction_ToString (OSINT32 value);

EXTERN int s1ap_OverloadAction_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_OverloadAction* pvalue);

EXTERN int s1ap_OverloadAction_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_OverloadAction* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadResponse                                          */
/*                                                            */
/**************************************************************/
/*
OverloadResponse ::= CHOICE {
   overloadAction [0] OverloadAction,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_OverloadResponse_overloadAction 1
#define T_s1ap_OverloadResponse_extElem1 2

typedef struct EXTERN s1ap_OverloadResponse {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_OverloadAction overloadAction;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_OverloadResponse;

EXTERN int asn1PE_s1ap_OverloadResponse (OSCTXT* pctxt, s1ap_OverloadResponse* pvalue);

EXTERN int asn1PD_s1ap_OverloadResponse (OSCTXT* pctxt, s1ap_OverloadResponse* pvalue);

EXTERN void asn1Print_s1ap_OverloadResponse 
   (const char* name, const s1ap_OverloadResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadResponse (const char* name, 
   s1ap_OverloadResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadResponse* pvalue);

EXTERN void asn1Copy_s1ap_OverloadResponse (OSCTXT* pctxt, 
   const s1ap_OverloadResponse* pSrcValue, s1ap_OverloadResponse* pDstValue);

EXTERN int asn1Init_s1ap_OverloadResponse (s1ap_OverloadResponse* pvalue);

EXTERN void asn1Free_s1ap_OverloadResponse (OSCTXT *pctxt, 
   s1ap_OverloadResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  GUMMEIList                                                */
/*                                                            */
/**************************************************************/
/*
GUMMEIList ::= SEQUENCE (SIZE (1..maxnoofMMECs)) OF GUMMEI
*/
/* List of s1ap_GUMMEI */
typedef OSRTDList s1ap_GUMMEIList;

EXTERN int asn1PE_s1ap_GUMMEIList (OSCTXT* pctxt, s1ap_GUMMEIList* pvalue);

EXTERN int asn1PD_s1ap_GUMMEIList (OSCTXT* pctxt, s1ap_GUMMEIList* pvalue);

EXTERN void asn1Print_s1ap_GUMMEIList 
   (const char* name, const s1ap_GUMMEIList* pvalue);

EXTERN int asn1PrtToStr_s1ap_GUMMEIList (const char* name, s1ap_GUMMEIList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GUMMEIList (OSCTXT *pctxt, 
   const char* name, const s1ap_GUMMEIList* pvalue);

EXTERN void asn1Copy_s1ap_GUMMEIList (OSCTXT* pctxt, 
   const s1ap_GUMMEIList* pSrcValue, s1ap_GUMMEIList* pDstValue);

EXTERN int asn1Init_s1ap_GUMMEIList (s1ap_GUMMEIList* pvalue);

EXTERN void asn1Free_s1ap_GUMMEIList (OSCTXT *pctxt, s1ap_GUMMEIList* pvalue);

/**************************************************************/
/*                                                            */
/*  TrafficLoadReductionIndication                            */
/*                                                            */
/**************************************************************/
/*
TrafficLoadReductionIndication ::= INTEGER (1..99)
*/
typedef OSUINT8 s1ap_TrafficLoadReductionIndication;

EXTERN int asn1PE_s1ap_TrafficLoadReductionIndication (OSCTXT* pctxt, s1ap_TrafficLoadReductionIndication value);

EXTERN int asn1PD_s1ap_TrafficLoadReductionIndication (OSCTXT* pctxt, s1ap_TrafficLoadReductionIndication* pvalue);

EXTERN void asn1Print_s1ap_TrafficLoadReductionIndication 
   (const char* name, const s1ap_TrafficLoadReductionIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_TrafficLoadReductionIndication (const char* name, 
   s1ap_TrafficLoadReductionIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TrafficLoadReductionIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_TrafficLoadReductionIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  RIMInformation                                            */
/*                                                            */
/**************************************************************/
/*
RIMInformation ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_RIMInformation;

EXTERN int asn1PE_s1ap_RIMInformation (OSCTXT* pctxt, s1ap_RIMInformation value);

EXTERN int asn1PD_s1ap_RIMInformation (OSCTXT* pctxt, s1ap_RIMInformation* pvalue);

EXTERN void asn1Print_s1ap_RIMInformation 
   (const char* name, const s1ap_RIMInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_RIMInformation (const char* name, 
   s1ap_RIMInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RIMInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_RIMInformation* pvalue);

EXTERN void asn1Copy_s1ap_RIMInformation (OSCTXT* pctxt, 
   const s1ap_RIMInformation* pSrcValue, s1ap_RIMInformation* pDstValue);

EXTERN int asn1Init_s1ap_RIMInformation (s1ap_RIMInformation* pvalue);

EXTERN void asn1Free_s1ap_RIMInformation (OSCTXT *pctxt, s1ap_RIMInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  GERAN_Cell_ID_iE_Extensions_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GERAN-Cell-ID'
*/
typedef struct EXTERN s1ap_GERAN_Cell_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_GERAN_Cell_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_GERAN_Cell_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_GERAN_Cell_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_GERAN_Cell_ID_iE_Extensions_element 
   (const char* name, const s1ap_GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_GERAN_Cell_ID_iE_Extensions_element (const char* name, 
   s1ap_GERAN_Cell_ID_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GERAN_Cell_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_GERAN_Cell_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_GERAN_Cell_ID_iE_Extensions_element* pSrcValue, 
   s1ap_GERAN_Cell_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_GERAN_Cell_ID_iE_Extensions_element (
   s1ap_GERAN_Cell_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_GERAN_Cell_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_GERAN_Cell_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GERAN_Cell_ID_iE_Extensions                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GERAN-Cell-ID'
*/
/* List of s1ap_GERAN_Cell_ID_iE_Extensions_element */
typedef OSRTDList s1ap_GERAN_Cell_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_GERAN_Cell_ID_iE_Extensions (OSCTXT* pctxt, s1ap_GERAN_Cell_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_GERAN_Cell_ID_iE_Extensions (OSCTXT* pctxt, s1ap_GERAN_Cell_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_GERAN_Cell_ID_iE_Extensions 
   (const char* name, const s1ap_GERAN_Cell_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_GERAN_Cell_ID_iE_Extensions (const char* name, 
   s1ap_GERAN_Cell_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GERAN_Cell_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_GERAN_Cell_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_GERAN_Cell_ID_iE_Extensions_element* 
   asn1Get_s1ap_GERAN_Cell_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_GERAN_Cell_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_GERAN_Cell_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_GERAN_Cell_ID_iE_Extensions* pSrcValue, 
   s1ap_GERAN_Cell_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_GERAN_Cell_ID_iE_Extensions (
   s1ap_GERAN_Cell_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_GERAN_Cell_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_GERAN_Cell_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GERAN_Cell_ID                                             */
/*                                                            */
/**************************************************************/
/*
GERAN-Cell-ID ::= SEQUENCE {
   lAI [0] LAI,
   rAC [1] RAC,
   cI [2] CI,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({GERAN-Cell-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({GERAN-Cell-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({GERAN-Cell-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_GERAN_Cell_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_LAI lAI;
   s1ap_RAC rAC;
   s1ap_CI cI;
   s1ap_GERAN_Cell_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_GERAN_Cell_ID;

EXTERN int asn1PE_s1ap_GERAN_Cell_ID (OSCTXT* pctxt, s1ap_GERAN_Cell_ID* pvalue);

EXTERN int asn1PD_s1ap_GERAN_Cell_ID (OSCTXT* pctxt, s1ap_GERAN_Cell_ID* pvalue);

EXTERN void asn1Print_s1ap_GERAN_Cell_ID 
   (const char* name, const s1ap_GERAN_Cell_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_GERAN_Cell_ID (const char* name, 
   s1ap_GERAN_Cell_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_GERAN_Cell_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_GERAN_Cell_ID* pvalue);

EXTERN void asn1Copy_s1ap_GERAN_Cell_ID (OSCTXT* pctxt, 
   const s1ap_GERAN_Cell_ID* pSrcValue, s1ap_GERAN_Cell_ID* pDstValue);

EXTERN int asn1Init_s1ap_GERAN_Cell_ID (s1ap_GERAN_Cell_ID* pvalue);

EXTERN void asn1Free_s1ap_GERAN_Cell_ID (OSCTXT *pctxt, s1ap_GERAN_Cell_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  RIMRoutingAddress_eHRPD_Sector_ID                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RIMRoutingAddress'
*/
typedef struct EXTERN s1ap_RIMRoutingAddress_eHRPD_Sector_ID {
   OSUINT32 numocts;
   OSOCTET data[16];
} s1ap_RIMRoutingAddress_eHRPD_Sector_ID;

EXTERN int asn1PE_s1ap_RIMRoutingAddress_eHRPD_Sector_ID (OSCTXT* pctxt, s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pvalue);

EXTERN int asn1PD_s1ap_RIMRoutingAddress_eHRPD_Sector_ID (OSCTXT* pctxt, s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pvalue);

EXTERN void asn1Print_s1ap_RIMRoutingAddress_eHRPD_Sector_ID 
   (const char* name, const s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_RIMRoutingAddress_eHRPD_Sector_ID (const char* name, 
   s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RIMRoutingAddress_eHRPD_Sector_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pvalue);

EXTERN void asn1Copy_s1ap_RIMRoutingAddress_eHRPD_Sector_ID (OSCTXT* pctxt, 
   const s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pSrcValue, 
   s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pDstValue);

EXTERN int asn1Init_s1ap_RIMRoutingAddress_eHRPD_Sector_ID (
   s1ap_RIMRoutingAddress_eHRPD_Sector_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  RIMRoutingAddress                                         */
/*                                                            */
/**************************************************************/
/*
RIMRoutingAddress ::= CHOICE {
   gERAN-Cell-ID [0] GERAN-Cell-ID,
   ...,
   targetRNC-ID [1] TargetRNC-ID,
   eHRPD-Sector-ID [2] OCTET STRING (SIZE (16))
}
*/
/* Choice tag constants */

#define T_s1ap_RIMRoutingAddress_gERAN_Cell_ID 1
#define T_s1ap_RIMRoutingAddress_targetRNC_ID 2
#define T_s1ap_RIMRoutingAddress_eHRPD_Sector_ID 3
#define T_s1ap_RIMRoutingAddress_extElem1 4

typedef struct EXTERN s1ap_RIMRoutingAddress {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_GERAN_Cell_ID *gERAN_Cell_ID;
      /* t = 2 */
      s1ap_TargetRNC_ID *targetRNC_ID;
      /* t = 3 */
      s1ap_RIMRoutingAddress_eHRPD_Sector_ID *eHRPD_Sector_ID;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_RIMRoutingAddress;

EXTERN int asn1PE_s1ap_RIMRoutingAddress (OSCTXT* pctxt, s1ap_RIMRoutingAddress* pvalue);

EXTERN int asn1PD_s1ap_RIMRoutingAddress (OSCTXT* pctxt, s1ap_RIMRoutingAddress* pvalue);

EXTERN void asn1Print_s1ap_RIMRoutingAddress 
   (const char* name, const s1ap_RIMRoutingAddress* pvalue);

EXTERN int asn1PrtToStr_s1ap_RIMRoutingAddress (const char* name, 
   s1ap_RIMRoutingAddress* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RIMRoutingAddress (OSCTXT *pctxt, 
   const char* name, const s1ap_RIMRoutingAddress* pvalue);

EXTERN void asn1Copy_s1ap_RIMRoutingAddress (OSCTXT* pctxt, 
   const s1ap_RIMRoutingAddress* pSrcValue, s1ap_RIMRoutingAddress* pDstValue);

EXTERN int asn1Init_s1ap_RIMRoutingAddress (s1ap_RIMRoutingAddress* pvalue);

EXTERN void asn1Free_s1ap_RIMRoutingAddress (OSCTXT *pctxt, 
   s1ap_RIMRoutingAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  RIMTransfer_iE_Extensions_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RIMTransfer'
*/
typedef struct EXTERN s1ap_RIMTransfer_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_RIMTransfer_iE_Extensions_element;

EXTERN int asn1PE_s1ap_RIMTransfer_iE_Extensions_element (OSCTXT* pctxt, s1ap_RIMTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_RIMTransfer_iE_Extensions_element (OSCTXT* pctxt, s1ap_RIMTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_RIMTransfer_iE_Extensions_element 
   (const char* name, const s1ap_RIMTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RIMTransfer_iE_Extensions_element (const char* name, 
   s1ap_RIMTransfer_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RIMTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RIMTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_RIMTransfer_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_RIMTransfer_iE_Extensions_element* pSrcValue, 
   s1ap_RIMTransfer_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_RIMTransfer_iE_Extensions_element (
   s1ap_RIMTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_RIMTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_RIMTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RIMTransfer_iE_Extensions                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RIMTransfer'
*/
/* List of s1ap_RIMTransfer_iE_Extensions_element */
typedef OSRTDList s1ap_RIMTransfer_iE_Extensions;

EXTERN int asn1PE_s1ap_RIMTransfer_iE_Extensions (OSCTXT* pctxt, s1ap_RIMTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_RIMTransfer_iE_Extensions (OSCTXT* pctxt, s1ap_RIMTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_RIMTransfer_iE_Extensions 
   (const char* name, const s1ap_RIMTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_RIMTransfer_iE_Extensions (const char* name, 
   s1ap_RIMTransfer_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RIMTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_RIMTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RIMTransfer_iE_Extensions_element* 
   asn1Get_s1ap_RIMTransfer_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_RIMTransfer_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_RIMTransfer_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_RIMTransfer_iE_Extensions* pSrcValue, 
   s1ap_RIMTransfer_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_RIMTransfer_iE_Extensions (
   s1ap_RIMTransfer_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_RIMTransfer_iE_Extensions (OSCTXT *pctxt, 
   s1ap_RIMTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RIMTransfer                                               */
/*                                                            */
/**************************************************************/
/*
RIMTransfer ::= SEQUENCE {
   rIMInformation [0] RIMInformation,
   rIMRoutingAddress [1] EXPLICIT RIMRoutingAddress OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({RIMTransfer-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({RIMTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({RIMTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_RIMTransfer {
   struct {
      unsigned rIMRoutingAddressPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_RIMInformation rIMInformation;
   s1ap_RIMRoutingAddress rIMRoutingAddress;
   s1ap_RIMTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_RIMTransfer;

EXTERN int asn1PE_s1ap_RIMTransfer (OSCTXT* pctxt, s1ap_RIMTransfer* pvalue);

EXTERN int asn1PD_s1ap_RIMTransfer (OSCTXT* pctxt, s1ap_RIMTransfer* pvalue);

EXTERN void asn1Print_s1ap_RIMTransfer 
   (const char* name, const s1ap_RIMTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_RIMTransfer (const char* name, s1ap_RIMTransfer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RIMTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_RIMTransfer* pvalue);

EXTERN void asn1Copy_s1ap_RIMTransfer (OSCTXT* pctxt, 
   const s1ap_RIMTransfer* pSrcValue, s1ap_RIMTransfer* pDstValue);

EXTERN int asn1Init_s1ap_RIMTransfer (s1ap_RIMTransfer* pvalue);

EXTERN void asn1Free_s1ap_RIMTransfer (OSCTXT *pctxt, s1ap_RIMTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceeNB_ID_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceeNB-ID'
*/
typedef struct EXTERN s1ap_SourceeNB_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_SourceeNB_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SourceeNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_SourceeNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SourceeNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_SourceeNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SourceeNB_ID_iE_Extensions_element 
   (const char* name, const s1ap_SourceeNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceeNB_ID_iE_Extensions_element (const char* name, 
   s1ap_SourceeNB_ID_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceeNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceeNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_SourceeNB_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SourceeNB_ID_iE_Extensions_element* pSrcValue, 
   s1ap_SourceeNB_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_SourceeNB_ID_iE_Extensions_element (
   s1ap_SourceeNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_SourceeNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_SourceeNB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceeNB_ID_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceeNB-ID'
*/
/* List of s1ap_SourceeNB_ID_iE_Extensions_element */
typedef OSRTDList s1ap_SourceeNB_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_SourceeNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_SourceeNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SourceeNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_SourceeNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SourceeNB_ID_iE_Extensions 
   (const char* name, const s1ap_SourceeNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceeNB_ID_iE_Extensions (const char* name, 
   s1ap_SourceeNB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceeNB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceeNB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SourceeNB_ID_iE_Extensions_element* 
   asn1Get_s1ap_SourceeNB_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_SourceeNB_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SourceeNB_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SourceeNB_ID_iE_Extensions* pSrcValue, 
   s1ap_SourceeNB_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SourceeNB_ID_iE_Extensions (
   s1ap_SourceeNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SourceeNB_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SourceeNB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceeNB_ID                                              */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
SourceeNB-ID ::= SEQUENCE {
   global-ENB-ID [0] Global-ENB-ID,
   selected-TAI [1] TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SourceeNB-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SourceeNB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SourceeNB-ID-ExtIEs}{@id})
   } OPTIONAL
}
*/
typedef struct EXTERN s1ap_SourceeNB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Global_ENB_ID global_ENB_ID;
   s1ap_TAI selected_TAI;
   s1ap_SourceeNB_ID_iE_Extensions iE_Extensions;
} s1ap_SourceeNB_ID;

EXTERN int asn1PE_s1ap_SourceeNB_ID (OSCTXT* pctxt, s1ap_SourceeNB_ID* pvalue);

EXTERN int asn1PD_s1ap_SourceeNB_ID (OSCTXT* pctxt, s1ap_SourceeNB_ID* pvalue);

EXTERN void asn1Print_s1ap_SourceeNB_ID 
   (const char* name, const s1ap_SourceeNB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceeNB_ID (const char* name, 
   s1ap_SourceeNB_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceeNB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceeNB_ID* pvalue);

EXTERN void asn1Copy_s1ap_SourceeNB_ID (OSCTXT* pctxt, 
   const s1ap_SourceeNB_ID* pSrcValue, s1ap_SourceeNB_ID* pDstValue);

EXTERN int asn1Init_s1ap_SourceeNB_ID (s1ap_SourceeNB_ID* pvalue);

EXTERN void asn1Free_s1ap_SourceeNB_ID (OSCTXT *pctxt, s1ap_SourceeNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationRequest                                     */
/*                                                            */
/**************************************************************/
/*
SONInformationRequest ::= ENUMERATED { x2TNL-Configuration-Info(0), ..., time-Synchronisation-Info(1), activate-Muting(2), deactivate-Muting(3) }
*/
typedef enum {
   s1ap_x2TNL_Configuration_Info = 0
} s1ap_SONInformationRequest_Root;

typedef enum {
   s1ap_time_Synchronisation_Info = 1,
   s1ap_activate_Muting = 2,
   s1ap_deactivate_Muting = 3
} s1ap_SONInformationRequest_Ext;

typedef OSUINT32 s1ap_SONInformationRequest;

EXTERN int asn1PE_s1ap_SONInformationRequest (OSCTXT* pctxt, s1ap_SONInformationRequest value);

EXTERN int asn1PD_s1ap_SONInformationRequest (OSCTXT* pctxt, s1ap_SONInformationRequest* pvalue);

EXTERN void asn1Print_s1ap_SONInformationRequest 
   (const char* name, const s1ap_SONInformationRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONInformationRequest (const char* name, 
   s1ap_SONInformationRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONInformationRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_SONInformationRequest* pvalue);

EXTERN extern const OSEnumItem s1ap_SONInformationRequest_ENUMTAB[];
#define s1ap_SONInformationRequest_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* s1ap_SONInformationRequest_ToString (OSINT32 value);

EXTERN int s1ap_SONInformationRequest_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SONInformationRequest* pvalue);

EXTERN int s1ap_SONInformationRequest_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_SONInformationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBX2TLAs                                                 */
/*                                                            */
/**************************************************************/
/*
ENBX2TLAs ::= SEQUENCE (SIZE (1..maxnoofeNBX2TLAs)) OF TransportLayerAddress
*/
typedef struct EXTERN s1ap_ENBX2TLAs {
   OSSIZE n;
   s1ap_TransportLayerAddress elem[2];
} s1ap_ENBX2TLAs;

EXTERN int asn1PE_s1ap_ENBX2TLAs (OSCTXT* pctxt, s1ap_ENBX2TLAs* pvalue);

EXTERN int asn1PD_s1ap_ENBX2TLAs (OSCTXT* pctxt, s1ap_ENBX2TLAs* pvalue);

EXTERN void asn1Print_s1ap_ENBX2TLAs (const char* name, const s1ap_ENBX2TLAs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBX2TLAs (const char* name, s1ap_ENBX2TLAs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBX2TLAs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBX2TLAs* pvalue);

EXTERN void asn1Copy_s1ap_ENBX2TLAs (OSCTXT* pctxt, const s1ap_ENBX2TLAs* pSrcValue, 
   s1ap_ENBX2TLAs* pDstValue);

EXTERN int asn1Init_s1ap_ENBX2TLAs (s1ap_ENBX2TLAs* pvalue);

EXTERN void asn1Free_s1ap_ENBX2TLAs (OSCTXT *pctxt, s1ap_ENBX2TLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBX2GTPTLAs                                              */
/*                                                            */
/**************************************************************/
/*
ENBX2GTPTLAs ::= SEQUENCE (SIZE (1..maxnoofeNBX2GTPTLAs)) OF TransportLayerAddress
*/
typedef struct EXTERN s1ap_ENBX2GTPTLAs {
   OSSIZE n;
   s1ap_TransportLayerAddress elem[16];
} s1ap_ENBX2GTPTLAs;

EXTERN int asn1PE_s1ap_ENBX2GTPTLAs (OSCTXT* pctxt, s1ap_ENBX2GTPTLAs* pvalue);

EXTERN int asn1PD_s1ap_ENBX2GTPTLAs (OSCTXT* pctxt, s1ap_ENBX2GTPTLAs* pvalue);

EXTERN void asn1Print_s1ap_ENBX2GTPTLAs 
   (const char* name, const s1ap_ENBX2GTPTLAs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBX2GTPTLAs (const char* name, 
   s1ap_ENBX2GTPTLAs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBX2GTPTLAs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBX2GTPTLAs* pvalue);

EXTERN void asn1Copy_s1ap_ENBX2GTPTLAs (OSCTXT* pctxt, 
   const s1ap_ENBX2GTPTLAs* pSrcValue, s1ap_ENBX2GTPTLAs* pDstValue);

EXTERN int asn1Init_s1ap_ENBX2GTPTLAs (s1ap_ENBX2GTPTLAs* pvalue);

EXTERN void asn1Free_s1ap_ENBX2GTPTLAs (OSCTXT *pctxt, s1ap_ENBX2GTPTLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBX2ExtTLA_iE_Extensions_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBX2ExtTLA'
*/
typedef struct EXTERN s1ap_ENBX2ExtTLA_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ENBX2ExtTLA_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ENBX2ExtTLA_iE_Extensions_element (OSCTXT* pctxt, s1ap_ENBX2ExtTLA_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ENBX2ExtTLA_iE_Extensions_element (OSCTXT* pctxt, s1ap_ENBX2ExtTLA_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ENBX2ExtTLA_iE_Extensions_element 
   (const char* name, const s1ap_ENBX2ExtTLA_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBX2ExtTLA_iE_Extensions_element (const char* name, 
   s1ap_ENBX2ExtTLA_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBX2ExtTLA_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBX2ExtTLA_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ENBX2ExtTLA_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ENBX2ExtTLA_iE_Extensions_element* pSrcValue, 
   s1ap_ENBX2ExtTLA_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBX2ExtTLA_iE_Extensions_element (
   s1ap_ENBX2ExtTLA_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ENBX2ExtTLA_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ENBX2ExtTLA_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBX2ExtTLA_iE_Extensions                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBX2ExtTLA'
*/
/* List of s1ap_ENBX2ExtTLA_iE_Extensions_element */
typedef OSRTDList s1ap_ENBX2ExtTLA_iE_Extensions;

EXTERN int asn1PE_s1ap_ENBX2ExtTLA_iE_Extensions (OSCTXT* pctxt, s1ap_ENBX2ExtTLA_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ENBX2ExtTLA_iE_Extensions (OSCTXT* pctxt, s1ap_ENBX2ExtTLA_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ENBX2ExtTLA_iE_Extensions 
   (const char* name, const s1ap_ENBX2ExtTLA_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBX2ExtTLA_iE_Extensions (const char* name, 
   s1ap_ENBX2ExtTLA_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBX2ExtTLA_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBX2ExtTLA_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBX2ExtTLA_iE_Extensions_element* 
   asn1Get_s1ap_ENBX2ExtTLA_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_ENBX2ExtTLA_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ENBX2ExtTLA_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ENBX2ExtTLA_iE_Extensions* pSrcValue, 
   s1ap_ENBX2ExtTLA_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ENBX2ExtTLA_iE_Extensions (
   s1ap_ENBX2ExtTLA_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ENBX2ExtTLA_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ENBX2ExtTLA_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBX2ExtTLA                                               */
/*                                                            */
/**************************************************************/
/*
ENBX2ExtTLA ::= SEQUENCE {
   iPsecTLA [0] TransportLayerAddress OPTIONAL,
   gTPTLAa [1] ENBX2GTPTLAs OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ENBX2ExtTLA-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ENBX2ExtTLA-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ENBX2ExtTLA-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ENBX2ExtTLA {
   struct {
      unsigned iPsecTLAPresent : 1;
      unsigned gTPTLAaPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TransportLayerAddress iPsecTLA;
   s1ap_ENBX2GTPTLAs gTPTLAa;
   s1ap_ENBX2ExtTLA_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ENBX2ExtTLA;

EXTERN int asn1PE_s1ap_ENBX2ExtTLA (OSCTXT* pctxt, s1ap_ENBX2ExtTLA* pvalue);

EXTERN int asn1PD_s1ap_ENBX2ExtTLA (OSCTXT* pctxt, s1ap_ENBX2ExtTLA* pvalue);

EXTERN void asn1Print_s1ap_ENBX2ExtTLA 
   (const char* name, const s1ap_ENBX2ExtTLA* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBX2ExtTLA (const char* name, s1ap_ENBX2ExtTLA* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBX2ExtTLA (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBX2ExtTLA* pvalue);

EXTERN void asn1Copy_s1ap_ENBX2ExtTLA (OSCTXT* pctxt, 
   const s1ap_ENBX2ExtTLA* pSrcValue, s1ap_ENBX2ExtTLA* pDstValue);

EXTERN int asn1Init_s1ap_ENBX2ExtTLA (s1ap_ENBX2ExtTLA* pvalue);

EXTERN void asn1Free_s1ap_ENBX2ExtTLA (OSCTXT *pctxt, s1ap_ENBX2ExtTLA* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBX2ExtTLAs                                              */
/*                                                            */
/**************************************************************/
/*
ENBX2ExtTLAs ::= SEQUENCE (SIZE (1..maxnoofeNBX2ExtTLAs)) OF ENBX2ExtTLA
*/
/* List of s1ap_ENBX2ExtTLA */
typedef OSRTDList s1ap_ENBX2ExtTLAs;

EXTERN int asn1PE_s1ap_ENBX2ExtTLAs (OSCTXT* pctxt, s1ap_ENBX2ExtTLAs* pvalue);

EXTERN int asn1PD_s1ap_ENBX2ExtTLAs (OSCTXT* pctxt, s1ap_ENBX2ExtTLAs* pvalue);

EXTERN void asn1Print_s1ap_ENBX2ExtTLAs 
   (const char* name, const s1ap_ENBX2ExtTLAs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBX2ExtTLAs (const char* name, 
   s1ap_ENBX2ExtTLAs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBX2ExtTLAs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBX2ExtTLAs* pvalue);

EXTERN void asn1Copy_s1ap_ENBX2ExtTLAs (OSCTXT* pctxt, 
   const s1ap_ENBX2ExtTLAs* pSrcValue, s1ap_ENBX2ExtTLAs* pDstValue);

EXTERN int asn1Init_s1ap_ENBX2ExtTLAs (s1ap_ENBX2ExtTLAs* pvalue);

EXTERN void asn1Free_s1ap_ENBX2ExtTLAs (OSCTXT *pctxt, s1ap_ENBX2ExtTLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBIndirectX2TransportLayerAddresses                      */
/*                                                            */
/**************************************************************/
/*
ENBIndirectX2TransportLayerAddresses ::= SEQUENCE (SIZE (1..maxnoofeNBX2TLAs)) OF TransportLayerAddress
*/
typedef struct EXTERN s1ap_ENBIndirectX2TransportLayerAddresses {
   OSSIZE n;
   s1ap_TransportLayerAddress elem[2];
} s1ap_ENBIndirectX2TransportLayerAddresses;

EXTERN int asn1PE_s1ap_ENBIndirectX2TransportLayerAddresses (OSCTXT* pctxt, s1ap_ENBIndirectX2TransportLayerAddresses* pvalue);

EXTERN int asn1PD_s1ap_ENBIndirectX2TransportLayerAddresses (OSCTXT* pctxt, s1ap_ENBIndirectX2TransportLayerAddresses* pvalue);

EXTERN void asn1Print_s1ap_ENBIndirectX2TransportLayerAddresses 
   (const char* name, const s1ap_ENBIndirectX2TransportLayerAddresses* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBIndirectX2TransportLayerAddresses (const char* name, 
   s1ap_ENBIndirectX2TransportLayerAddresses* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBIndirectX2TransportLayerAddresses (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBIndirectX2TransportLayerAddresses* pvalue);

EXTERN void asn1Copy_s1ap_ENBIndirectX2TransportLayerAddresses (OSCTXT* pctxt, 
   const s1ap_ENBIndirectX2TransportLayerAddresses* pSrcValue, 
   s1ap_ENBIndirectX2TransportLayerAddresses* pDstValue);

EXTERN int asn1Init_s1ap_ENBIndirectX2TransportLayerAddresses (
   s1ap_ENBIndirectX2TransportLayerAddresses* pvalue);

EXTERN void asn1Free_s1ap_ENBIndirectX2TransportLayerAddresses (OSCTXT *pctxt, 
   s1ap_ENBIndirectX2TransportLayerAddresses* pvalue);

/**************************************************************/
/*                                                            */
/*  X2TNLConfigurationInfo_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'X2TNLConfigurationInfo'
*/
typedef struct EXTERN s1ap_X2TNLConfigurationInfo_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      X2TNLConfigurationInfo_ExtIEs_TVALUE t;

      /**
       * X2TNLConfigurationInfo-ExtIEs information objects
       */
      union {
         /**
          * id: id-eNBX2ExtendedTransportLayerAddresses
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ENBX2ExtTLAs *_X2TNLConfigurationInfo_ExtIEs_1;
         /**
          * id: id-eNBIndirectX2TransportLayerAddresses
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ENBIndirectX2TransportLayerAddresses *_X2TNLConfigurationInfo_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_X2TNLConfigurationInfo_iE_Extensions_element;

EXTERN int asn1PE_s1ap_X2TNLConfigurationInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_X2TNLConfigurationInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_X2TNLConfigurationInfo_iE_Extensions_element 
   (const char* name, const s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_X2TNLConfigurationInfo_iE_Extensions_element (
   const char* name, 
   s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_X2TNLConfigurationInfo_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_X2TNLConfigurationInfo_iE_Extensions_element_X2TNLConfigurationInfo_ExtIEs_1
   (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pElem, 
   s1ap_ENBX2ExtTLAs *pvalue);

EXTERN void asn1SetTC_s1ap_X2TNLConfigurationInfo_iE_Extensions_element_X2TNLConfigurationInfo_ExtIEs_2
   (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pElem, 
   s1ap_ENBIndirectX2TransportLayerAddresses *pvalue);

EXTERN void asn1Copy_s1ap_X2TNLConfigurationInfo_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pSrcValue, 
   s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_X2TNLConfigurationInfo_iE_Extensions_element (
   s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_X2TNLConfigurationInfo_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_X2TNLConfigurationInfo_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  X2TNLConfigurationInfo_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'X2TNLConfigurationInfo'
*/
/* List of s1ap_X2TNLConfigurationInfo_iE_Extensions_element */
typedef OSRTDList s1ap_X2TNLConfigurationInfo_iE_Extensions;

EXTERN int asn1PE_s1ap_X2TNLConfigurationInfo_iE_Extensions (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_X2TNLConfigurationInfo_iE_Extensions (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_X2TNLConfigurationInfo_iE_Extensions 
   (const char* name, const s1ap_X2TNLConfigurationInfo_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_X2TNLConfigurationInfo_iE_Extensions (const char* name, 
   s1ap_X2TNLConfigurationInfo_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_X2TNLConfigurationInfo_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_X2TNLConfigurationInfo_iE_Extensions* pvalue);

/* Append IE with value type s1ap_ENBX2ExtTLAs to list */
EXTERN int asn1Append_s1ap_X2TNLConfigurationInfo_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions* plist, 
   s1ap_ENBX2ExtTLAs *pvalue);

/* Append IE with value type s1ap_ENBIndirectX2TransportLayerAddresses to list */
struct s1ap_ENBIndirectX2TransportLayerAddresses ;
EXTERN int asn1Append_s1ap_X2TNLConfigurationInfo_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo_iE_Extensions* plist, struct 
   s1ap_ENBIndirectX2TransportLayerAddresses *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_X2TNLConfigurationInfo_iE_Extensions_element* 
   asn1Get_s1ap_X2TNLConfigurationInfo_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_X2TNLConfigurationInfo_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_X2TNLConfigurationInfo_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_X2TNLConfigurationInfo_iE_Extensions* pSrcValue, 
   s1ap_X2TNLConfigurationInfo_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_X2TNLConfigurationInfo_iE_Extensions (
   s1ap_X2TNLConfigurationInfo_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_X2TNLConfigurationInfo_iE_Extensions (OSCTXT *pctxt, 
   s1ap_X2TNLConfigurationInfo_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  X2TNLConfigurationInfo                                    */
/*                                                            */
/**************************************************************/
/*
 X
X2TNLConfigurationInfo ::= SEQUENCE {
   eNBX2TransportLayerAddresses [0] ENBX2TLAs,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({X2TNLConfigurationInfo-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({X2TNLConfigurationInfo-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({X2TNLConfigurationInfo-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_X2TNLConfigurationInfo {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ENBX2TLAs eNBX2TransportLayerAddresses;
   s1ap_X2TNLConfigurationInfo_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_X2TNLConfigurationInfo;

EXTERN int asn1PE_s1ap_X2TNLConfigurationInfo (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo* pvalue);

EXTERN int asn1PD_s1ap_X2TNLConfigurationInfo (OSCTXT* pctxt, s1ap_X2TNLConfigurationInfo* pvalue);

EXTERN void asn1Print_s1ap_X2TNLConfigurationInfo 
   (const char* name, const s1ap_X2TNLConfigurationInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_X2TNLConfigurationInfo (const char* name, 
   s1ap_X2TNLConfigurationInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_X2TNLConfigurationInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_X2TNLConfigurationInfo* pvalue);

EXTERN void asn1Copy_s1ap_X2TNLConfigurationInfo (OSCTXT* pctxt, 
   const s1ap_X2TNLConfigurationInfo* pSrcValue, s1ap_X2TNLConfigurationInfo*
    pDstValue);

EXTERN int asn1Init_s1ap_X2TNLConfigurationInfo (s1ap_X2TNLConfigurationInfo* pvalue);

EXTERN void asn1Free_s1ap_X2TNLConfigurationInfo (OSCTXT *pctxt, 
   s1ap_X2TNLConfigurationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  StratumLevel                                              */
/*                                                            */
/**************************************************************/
/*
StratumLevel ::= INTEGER (0..3, ...)
*/
typedef OSUINT32 s1ap_StratumLevel;

EXTERN int asn1PE_s1ap_StratumLevel (OSCTXT* pctxt, s1ap_StratumLevel value);

EXTERN int asn1PD_s1ap_StratumLevel (OSCTXT* pctxt, s1ap_StratumLevel* pvalue);

EXTERN void asn1Print_s1ap_StratumLevel 
   (const char* name, const s1ap_StratumLevel* pvalue);

EXTERN int asn1PrtToStr_s1ap_StratumLevel (const char* name, 
   s1ap_StratumLevel* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_StratumLevel (OSCTXT *pctxt, 
   const char* name, const s1ap_StratumLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  SynchronisationStatus                                     */
/*                                                            */
/**************************************************************/
/*
SynchronisationStatus ::= ENUMERATED { synchronous(0), asynchronous(1), ... }
*/
typedef enum {
   s1ap_synchronous = 0,
   s1ap_asynchronous = 1
} s1ap_SynchronisationStatus_Root;

typedef OSUINT32 s1ap_SynchronisationStatus;

EXTERN int asn1PE_s1ap_SynchronisationStatus (OSCTXT* pctxt, s1ap_SynchronisationStatus value);

EXTERN int asn1PD_s1ap_SynchronisationStatus (OSCTXT* pctxt, s1ap_SynchronisationStatus* pvalue);

EXTERN void asn1Print_s1ap_SynchronisationStatus 
   (const char* name, const s1ap_SynchronisationStatus* pvalue);

EXTERN int asn1PrtToStr_s1ap_SynchronisationStatus (const char* name, 
   s1ap_SynchronisationStatus* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SynchronisationStatus (OSCTXT *pctxt, 
   const char* name, const s1ap_SynchronisationStatus* pvalue);

EXTERN extern const OSEnumItem s1ap_SynchronisationStatus_ENUMTAB[];
#define s1ap_SynchronisationStatus_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_SynchronisationStatus_ToString (OSINT32 value);

EXTERN int s1ap_SynchronisationStatus_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SynchronisationStatus* pvalue);

EXTERN int s1ap_SynchronisationStatus_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_SynchronisationStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  MutingAvailabilityIndication                              */
/*                                                            */
/**************************************************************/
/*
MutingAvailabilityIndication ::= ENUMERATED { available(0), unavailable(1), ... }
*/
typedef enum {
   s1ap_available = 0,
   s1ap_unavailable = 1
} s1ap_MutingAvailabilityIndication_Root;

typedef OSUINT32 s1ap_MutingAvailabilityIndication;

EXTERN int asn1PE_s1ap_MutingAvailabilityIndication (OSCTXT* pctxt, s1ap_MutingAvailabilityIndication value);

EXTERN int asn1PD_s1ap_MutingAvailabilityIndication (OSCTXT* pctxt, s1ap_MutingAvailabilityIndication* pvalue);

EXTERN void asn1Print_s1ap_MutingAvailabilityIndication 
   (const char* name, const s1ap_MutingAvailabilityIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_MutingAvailabilityIndication (const char* name, 
   s1ap_MutingAvailabilityIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MutingAvailabilityIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_MutingAvailabilityIndication* pvalue);

EXTERN extern const OSEnumItem s1ap_MutingAvailabilityIndication_ENUMTAB[];
#define s1ap_MutingAvailabilityIndication_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_MutingAvailabilityIndication_ToString (OSINT32 value);

EXTERN int s1ap_MutingAvailabilityIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_MutingAvailabilityIndication* pvalue);

EXTERN int s1ap_MutingAvailabilityIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_MutingAvailabilityIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeSynchronisationInfo_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TimeSynchronisationInfo'
*/
typedef struct EXTERN s1ap_TimeSynchronisationInfo_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      TimeSynchronisationInfo_ExtIEs_TVALUE t;

      /**
       * TimeSynchronisationInfo-ExtIEs information objects
       */
      union {
         /**
          * id: id-Muting-Availability-Indication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MutingAvailabilityIndication _TimeSynchronisationInfo_ExtIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_TimeSynchronisationInfo_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TimeSynchronisationInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_TimeSynchronisationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TimeSynchronisationInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_TimeSynchronisationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TimeSynchronisationInfo_iE_Extensions_element 
   (const char* name, const s1ap_TimeSynchronisationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TimeSynchronisationInfo_iE_Extensions_element (
   const char* name, 
   s1ap_TimeSynchronisationInfo_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TimeSynchronisationInfo_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TimeSynchronisationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TimeSynchronisationInfo_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TimeSynchronisationInfo_iE_Extensions_element* pSrcValue, 
   s1ap_TimeSynchronisationInfo_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TimeSynchronisationInfo_iE_Extensions_element (
   s1ap_TimeSynchronisationInfo_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeSynchronisationInfo_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TimeSynchronisationInfo'
*/
/* List of s1ap_TimeSynchronisationInfo_iE_Extensions_element */
typedef OSRTDList s1ap_TimeSynchronisationInfo_iE_Extensions;

EXTERN int asn1PE_s1ap_TimeSynchronisationInfo_iE_Extensions (OSCTXT* pctxt, s1ap_TimeSynchronisationInfo_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TimeSynchronisationInfo_iE_Extensions (OSCTXT* pctxt, s1ap_TimeSynchronisationInfo_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TimeSynchronisationInfo_iE_Extensions 
   (const char* name, const s1ap_TimeSynchronisationInfo_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TimeSynchronisationInfo_iE_Extensions (const char* name, 
   s1ap_TimeSynchronisationInfo_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TimeSynchronisationInfo_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TimeSynchronisationInfo_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TimeSynchronisationInfo_iE_Extensions_element* 
   asn1Get_s1ap_TimeSynchronisationInfo_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_TimeSynchronisationInfo_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TimeSynchronisationInfo_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TimeSynchronisationInfo_iE_Extensions* pSrcValue, 
   s1ap_TimeSynchronisationInfo_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TimeSynchronisationInfo_iE_Extensions (
   s1ap_TimeSynchronisationInfo_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TimeSynchronisationInfo_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TimeSynchronisationInfo_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeSynchronisationInfo                                   */
/*                                                            */
/**************************************************************/
/*
TimeSynchronisationInfo ::= SEQUENCE {
   stratumLevel [0] StratumLevel,
   synchronisationStatus [1] SynchronisationStatus,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TimeSynchronisationInfo-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TimeSynchronisationInfo-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TimeSynchronisationInfo-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TimeSynchronisationInfo {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_StratumLevel stratumLevel;
   s1ap_SynchronisationStatus synchronisationStatus;
   s1ap_TimeSynchronisationInfo_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TimeSynchronisationInfo;

EXTERN int asn1PE_s1ap_TimeSynchronisationInfo (OSCTXT* pctxt, s1ap_TimeSynchronisationInfo* pvalue);

EXTERN int asn1PD_s1ap_TimeSynchronisationInfo (OSCTXT* pctxt, s1ap_TimeSynchronisationInfo* pvalue);

EXTERN void asn1Print_s1ap_TimeSynchronisationInfo 
   (const char* name, const s1ap_TimeSynchronisationInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_TimeSynchronisationInfo (const char* name, 
   s1ap_TimeSynchronisationInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TimeSynchronisationInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_TimeSynchronisationInfo* pvalue);

EXTERN void asn1Copy_s1ap_TimeSynchronisationInfo (OSCTXT* pctxt, 
   const s1ap_TimeSynchronisationInfo* pSrcValue, s1ap_TimeSynchronisationInfo*
    pDstValue);

EXTERN int asn1Init_s1ap_TimeSynchronisationInfo (
   s1ap_TimeSynchronisationInfo* pvalue);

EXTERN void asn1Free_s1ap_TimeSynchronisationInfo (OSCTXT *pctxt, 
   s1ap_TimeSynchronisationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  MutingPatternInformation_muting_pattern_period            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MutingPatternInformation'
*/
typedef enum {
   s1ap_ms0 = 0,
   s1ap_ms1280_2 = 1,
   s1ap_ms2560_2 = 2,
   s1ap_ms5120_5 = 3,
   s1ap_ms10240_5 = 4
} s1ap_MutingPatternInformation_muting_pattern_period_Root;

typedef OSUINT32 s1ap_MutingPatternInformation_muting_pattern_period;

EXTERN int asn1PE_s1ap_MutingPatternInformation_muting_pattern_period (OSCTXT* pctxt, s1ap_MutingPatternInformation_muting_pattern_period value);

EXTERN int asn1PD_s1ap_MutingPatternInformation_muting_pattern_period (OSCTXT* pctxt, s1ap_MutingPatternInformation_muting_pattern_period* pvalue);

EXTERN void asn1Print_s1ap_MutingPatternInformation_muting_pattern_period 
   (const char* name, const s1ap_MutingPatternInformation_muting_pattern_period* pvalue);

EXTERN int asn1PrtToStr_s1ap_MutingPatternInformation_muting_pattern_period (
   const char* name, 
   s1ap_MutingPatternInformation_muting_pattern_period* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MutingPatternInformation_muting_pattern_period (OSCTXT *pctxt, 
   const char* name, const s1ap_MutingPatternInformation_muting_pattern_period* pvalue);

EXTERN extern const OSEnumItem s1ap_MutingPatternInformation_muting_pattern_period_ENUMTAB[];
#define s1ap_MutingPatternInformation_muting_pattern_period_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* s1ap_MutingPatternInformation_muting_pattern_period_ToString (OSINT32 value);

EXTERN 
   int s1ap_MutingPatternInformation_muting_pattern_period_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_MutingPatternInformation_muting_pattern_period* pvalue);

EXTERN 
   int s1ap_MutingPatternInformation_muting_pattern_period_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_MutingPatternInformation_muting_pattern_period* pvalue);

/**************************************************************/
/*                                                            */
/*  MutingPatternInformation_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MutingPatternInformation'
*/
typedef struct EXTERN s1ap_MutingPatternInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_MutingPatternInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_MutingPatternInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_MutingPatternInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_MutingPatternInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_MutingPatternInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_MutingPatternInformation_iE_Extensions_element 
   (const char* name, const s1ap_MutingPatternInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MutingPatternInformation_iE_Extensions_element (
   const char* name, 
   s1ap_MutingPatternInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MutingPatternInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MutingPatternInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_MutingPatternInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_MutingPatternInformation_iE_Extensions_element* pSrcValue, 
   s1ap_MutingPatternInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_MutingPatternInformation_iE_Extensions_element (
   s1ap_MutingPatternInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_MutingPatternInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_MutingPatternInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MutingPatternInformation_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MutingPatternInformation'
*/
/* List of s1ap_MutingPatternInformation_iE_Extensions_element */
typedef OSRTDList s1ap_MutingPatternInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_MutingPatternInformation_iE_Extensions (OSCTXT* pctxt, s1ap_MutingPatternInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_MutingPatternInformation_iE_Extensions (OSCTXT* pctxt, s1ap_MutingPatternInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_MutingPatternInformation_iE_Extensions 
   (const char* name, const s1ap_MutingPatternInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_MutingPatternInformation_iE_Extensions (
   const char* name, s1ap_MutingPatternInformation_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MutingPatternInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_MutingPatternInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MutingPatternInformation_iE_Extensions_element* 
   asn1Get_s1ap_MutingPatternInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_MutingPatternInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_MutingPatternInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_MutingPatternInformation_iE_Extensions* pSrcValue, 
   s1ap_MutingPatternInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_MutingPatternInformation_iE_Extensions (
   s1ap_MutingPatternInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_MutingPatternInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_MutingPatternInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  MutingPatternInformation                                  */
/*                                                            */
/**************************************************************/
/*
MutingPatternInformation ::= SEQUENCE {
   muting-pattern-period [0] ENUMERATED { ms0(0), ms1280(1), ms2560(2), ms5120(3), ms10240(4), ... },
   muting-pattern-offset [1] INTEGER (0..10239, ...) OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({MutingPatternInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({MutingPatternInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({MutingPatternInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_MutingPatternInformation {
   struct {
      unsigned muting_pattern_offsetPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_MutingPatternInformation_muting_pattern_period muting_pattern_period;
   OSUINT32 muting_pattern_offset;
   s1ap_MutingPatternInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_MutingPatternInformation;

EXTERN int asn1PE_s1ap_MutingPatternInformation (OSCTXT* pctxt, s1ap_MutingPatternInformation* pvalue);

EXTERN int asn1PD_s1ap_MutingPatternInformation (OSCTXT* pctxt, s1ap_MutingPatternInformation* pvalue);

EXTERN void asn1Print_s1ap_MutingPatternInformation 
   (const char* name, const s1ap_MutingPatternInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_MutingPatternInformation (const char* name, 
   s1ap_MutingPatternInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MutingPatternInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_MutingPatternInformation* pvalue);

EXTERN void asn1Copy_s1ap_MutingPatternInformation (OSCTXT* pctxt, 
   const s1ap_MutingPatternInformation* pSrcValue, 
   s1ap_MutingPatternInformation* pDstValue);

EXTERN int asn1Init_s1ap_MutingPatternInformation (
   s1ap_MutingPatternInformation* pvalue);

EXTERN void asn1Free_s1ap_MutingPatternInformation (OSCTXT *pctxt, 
   s1ap_MutingPatternInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationReply_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONInformationReply'
*/
typedef struct EXTERN s1ap_SONInformationReply_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      SONInformationReply_ExtIEs_TVALUE t;

      /**
       * SONInformationReply-ExtIEs information objects
       */
      union {
         /**
          * id: id-Time-Synchronisation-Info
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TimeSynchronisationInfo *_SONInformationReply_ExtIEs_1;
         /**
          * id: id-Muting-Pattern-Information
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MutingPatternInformation *_SONInformationReply_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_SONInformationReply_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SONInformationReply_iE_Extensions_element (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SONInformationReply_iE_Extensions_element (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SONInformationReply_iE_Extensions_element 
   (const char* name, const s1ap_SONInformationReply_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONInformationReply_iE_Extensions_element (
   const char* name, s1ap_SONInformationReply_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONInformationReply_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SONInformationReply_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_SONInformationReply_iE_Extensions_element_SONInformationReply_ExtIEs_1
   (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions_element* pElem, 
   s1ap_TimeSynchronisationInfo *pvalue);

EXTERN void asn1SetTC_s1ap_SONInformationReply_iE_Extensions_element_SONInformationReply_ExtIEs_2
   (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions_element* pElem, 
   s1ap_MutingPatternInformation *pvalue);

EXTERN void asn1Copy_s1ap_SONInformationReply_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SONInformationReply_iE_Extensions_element* pSrcValue, 
   s1ap_SONInformationReply_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_SONInformationReply_iE_Extensions_element (
   s1ap_SONInformationReply_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_SONInformationReply_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_SONInformationReply_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationReply_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONInformationReply'
*/
/* List of s1ap_SONInformationReply_iE_Extensions_element */
typedef OSRTDList s1ap_SONInformationReply_iE_Extensions;

EXTERN int asn1PE_s1ap_SONInformationReply_iE_Extensions (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SONInformationReply_iE_Extensions (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SONInformationReply_iE_Extensions 
   (const char* name, const s1ap_SONInformationReply_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONInformationReply_iE_Extensions (const char* name, 
   s1ap_SONInformationReply_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONInformationReply_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SONInformationReply_iE_Extensions* pvalue);

/* Append IE with value type s1ap_TimeSynchronisationInfo to list */
struct s1ap_TimeSynchronisationInfo ;
EXTERN int asn1Append_s1ap_SONInformationReply_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions* plist, struct 
   s1ap_TimeSynchronisationInfo *pvalue);

/* Append IE with value type s1ap_MutingPatternInformation to list */
struct s1ap_MutingPatternInformation ;
EXTERN int asn1Append_s1ap_SONInformationReply_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_SONInformationReply_iE_Extensions* plist, struct 
   s1ap_MutingPatternInformation *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SONInformationReply_iE_Extensions_element* 
   asn1Get_s1ap_SONInformationReply_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_SONInformationReply_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SONInformationReply_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SONInformationReply_iE_Extensions* pSrcValue, 
   s1ap_SONInformationReply_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SONInformationReply_iE_Extensions (
   s1ap_SONInformationReply_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SONInformationReply_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SONInformationReply_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationReply                                       */
/*                                                            */
/**************************************************************/
/*
SONInformationReply ::= SEQUENCE {
   x2TNLConfigurationInfo [0] X2TNLConfigurationInfo OPTIONAL,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SONInformationReply-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SONInformationReply-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SONInformationReply-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_SONInformationReply {
   struct {
      unsigned x2TNLConfigurationInfoPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_X2TNLConfigurationInfo x2TNLConfigurationInfo;
   s1ap_SONInformationReply_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_SONInformationReply;

EXTERN int asn1PE_s1ap_SONInformationReply (OSCTXT* pctxt, s1ap_SONInformationReply* pvalue);

EXTERN int asn1PD_s1ap_SONInformationReply (OSCTXT* pctxt, s1ap_SONInformationReply* pvalue);

EXTERN void asn1Print_s1ap_SONInformationReply 
   (const char* name, const s1ap_SONInformationReply* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONInformationReply (const char* name, 
   s1ap_SONInformationReply* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONInformationReply (OSCTXT *pctxt, 
   const char* name, const s1ap_SONInformationReply* pvalue);

EXTERN void asn1Copy_s1ap_SONInformationReply (OSCTXT* pctxt, 
   const s1ap_SONInformationReply* pSrcValue, s1ap_SONInformationReply*
    pDstValue);

EXTERN int asn1Init_s1ap_SONInformationReply (s1ap_SONInformationReply* pvalue);

EXTERN void asn1Free_s1ap_SONInformationReply (OSCTXT *pctxt, 
   s1ap_SONInformationReply* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_RLF_Report_Container                                   */
/*                                                            */
/**************************************************************/
/*
UE-RLF-Report-Container ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_UE_RLF_Report_Container;

EXTERN int asn1PE_s1ap_UE_RLF_Report_Container (OSCTXT* pctxt, s1ap_UE_RLF_Report_Container value);

EXTERN int asn1PD_s1ap_UE_RLF_Report_Container (OSCTXT* pctxt, s1ap_UE_RLF_Report_Container* pvalue);

EXTERN void asn1Print_s1ap_UE_RLF_Report_Container 
   (const char* name, const s1ap_UE_RLF_Report_Container* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_RLF_Report_Container (const char* name, 
   s1ap_UE_RLF_Report_Container* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_RLF_Report_Container (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_RLF_Report_Container* pvalue);

EXTERN void asn1Copy_s1ap_UE_RLF_Report_Container (OSCTXT* pctxt, 
   const s1ap_UE_RLF_Report_Container* pSrcValue, s1ap_UE_RLF_Report_Container*
    pDstValue);

EXTERN int asn1Init_s1ap_UE_RLF_Report_Container (
   s1ap_UE_RLF_Report_Container* pvalue);

EXTERN void asn1Free_s1ap_UE_RLF_Report_Container (OSCTXT *pctxt, 
   s1ap_UE_RLF_Report_Container* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_RLF_Report_Container_for_extended_bands                */
/*                                                            */
/**************************************************************/
/*
 This IE is a transparent container and shall be encoded as the rlf-Report-r9 field contained in the UEInformationResponse message as defined in TS 36.331 [16]
UE-RLF-Report-Container-for-extended-bands ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_UE_RLF_Report_Container_for_extended_bands;

EXTERN int asn1PE_s1ap_UE_RLF_Report_Container_for_extended_bands (OSCTXT* pctxt, s1ap_UE_RLF_Report_Container_for_extended_bands value);

EXTERN int asn1PD_s1ap_UE_RLF_Report_Container_for_extended_bands (OSCTXT* pctxt, s1ap_UE_RLF_Report_Container_for_extended_bands* pvalue);

EXTERN void asn1Print_s1ap_UE_RLF_Report_Container_for_extended_bands 
   (const char* name, const s1ap_UE_RLF_Report_Container_for_extended_bands* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_RLF_Report_Container_for_extended_bands (
   const char* name, s1ap_UE_RLF_Report_Container_for_extended_bands* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_RLF_Report_Container_for_extended_bands (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_RLF_Report_Container_for_extended_bands* pvalue);

EXTERN void asn1Copy_s1ap_UE_RLF_Report_Container_for_extended_bands (OSCTXT* pctxt, 
   const s1ap_UE_RLF_Report_Container_for_extended_bands* pSrcValue, 
   s1ap_UE_RLF_Report_Container_for_extended_bands* pDstValue);

EXTERN int asn1Init_s1ap_UE_RLF_Report_Container_for_extended_bands (
   s1ap_UE_RLF_Report_Container_for_extended_bands* pvalue);

EXTERN void asn1Free_s1ap_UE_RLF_Report_Container_for_extended_bands (OSCTXT *pctxt, 
   s1ap_UE_RLF_Report_Container_for_extended_bands* pvalue);

/**************************************************************/
/*                                                            */
/*  RLFReportInformation_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RLFReportInformation'
*/
typedef struct EXTERN s1ap_RLFReportInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_RLFReportInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_RLFReportInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_RLFReportInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_RLFReportInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_RLFReportInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_RLFReportInformation_iE_Extensions_element 
   (const char* name, const s1ap_RLFReportInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RLFReportInformation_iE_Extensions_element (
   const char* name, s1ap_RLFReportInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RLFReportInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RLFReportInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_RLFReportInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_RLFReportInformation_iE_Extensions_element* pSrcValue, 
   s1ap_RLFReportInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_RLFReportInformation_iE_Extensions_element (
   s1ap_RLFReportInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_RLFReportInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_RLFReportInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RLFReportInformation_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RLFReportInformation'
*/
/* List of s1ap_RLFReportInformation_iE_Extensions_element */
typedef OSRTDList s1ap_RLFReportInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_RLFReportInformation_iE_Extensions (OSCTXT* pctxt, s1ap_RLFReportInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_RLFReportInformation_iE_Extensions (OSCTXT* pctxt, s1ap_RLFReportInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_RLFReportInformation_iE_Extensions 
   (const char* name, const s1ap_RLFReportInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_RLFReportInformation_iE_Extensions (const char* name, 
   s1ap_RLFReportInformation_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RLFReportInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_RLFReportInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RLFReportInformation_iE_Extensions_element* 
   asn1Get_s1ap_RLFReportInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_RLFReportInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_RLFReportInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_RLFReportInformation_iE_Extensions* pSrcValue, 
   s1ap_RLFReportInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_RLFReportInformation_iE_Extensions (
   s1ap_RLFReportInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_RLFReportInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_RLFReportInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RLFReportInformation                                      */
/*                                                            */
/**************************************************************/
/*
RLFReportInformation ::= SEQUENCE {
   uE-RLF-Report-Container [0] UE-RLF-Report-Container,
   uE-RLF-Report-Container-for-extended-bands [1] UE-RLF-Report-Container-for-extended-bands OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({RLFReportInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({RLFReportInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({RLFReportInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_RLFReportInformation {
   struct {
      unsigned uE_RLF_Report_Container_for_extended_bandsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_UE_RLF_Report_Container uE_RLF_Report_Container;
   s1ap_UE_RLF_Report_Container_for_extended_bands uE_RLF_Report_Container_for_extended_bands;
   s1ap_RLFReportInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_RLFReportInformation;

EXTERN int asn1PE_s1ap_RLFReportInformation (OSCTXT* pctxt, s1ap_RLFReportInformation* pvalue);

EXTERN int asn1PD_s1ap_RLFReportInformation (OSCTXT* pctxt, s1ap_RLFReportInformation* pvalue);

EXTERN void asn1Print_s1ap_RLFReportInformation 
   (const char* name, const s1ap_RLFReportInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_RLFReportInformation (const char* name, 
   s1ap_RLFReportInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RLFReportInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_RLFReportInformation* pvalue);

EXTERN void asn1Copy_s1ap_RLFReportInformation (OSCTXT* pctxt, 
   const s1ap_RLFReportInformation* pSrcValue, s1ap_RLFReportInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_RLFReportInformation (s1ap_RLFReportInformation* pvalue);

EXTERN void asn1Free_s1ap_RLFReportInformation (OSCTXT *pctxt, 
   s1ap_RLFReportInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationReport                                      */
/*                                                            */
/**************************************************************/
/*
SONInformationReport ::= CHOICE {
   rLFReportInformation [0] RLFReportInformation,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_SONInformationReport_rLFReportInformation 1
#define T_s1ap_SONInformationReport_extElem1 2

typedef struct EXTERN s1ap_SONInformationReport {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_RLFReportInformation *rLFReportInformation;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_SONInformationReport;

EXTERN int asn1PE_s1ap_SONInformationReport (OSCTXT* pctxt, s1ap_SONInformationReport* pvalue);

EXTERN int asn1PD_s1ap_SONInformationReport (OSCTXT* pctxt, s1ap_SONInformationReport* pvalue);

EXTERN void asn1Print_s1ap_SONInformationReport 
   (const char* name, const s1ap_SONInformationReport* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONInformationReport (const char* name, 
   s1ap_SONInformationReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONInformationReport (OSCTXT *pctxt, 
   const char* name, const s1ap_SONInformationReport* pvalue);

EXTERN void asn1Copy_s1ap_SONInformationReport (OSCTXT* pctxt, 
   const s1ap_SONInformationReport* pSrcValue, s1ap_SONInformationReport*
    pDstValue);

EXTERN int asn1Init_s1ap_SONInformationReport (s1ap_SONInformationReport* pvalue);

EXTERN void asn1Free_s1ap_SONInformationReport (OSCTXT *pctxt, 
   s1ap_SONInformationReport* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformation_Extension                                  */
/*                                                            */
/**************************************************************/
/*
SONInformation-Extension ::= SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({SONInformation-ExtensionIE}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({SONInformation-ExtensionIE}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({SONInformation-ExtensionIE}{@id})
}
*/
typedef struct EXTERN s1ap_SONInformation_Extension {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   s1ap_SONInformationReport  value;
} s1ap_SONInformation_Extension;

EXTERN int asn1PE_s1ap_SONInformation_Extension (OSCTXT* pctxt, s1ap_SONInformation_Extension* pvalue);

EXTERN int asn1PD_s1ap_SONInformation_Extension (OSCTXT* pctxt, s1ap_SONInformation_Extension* pvalue);

EXTERN void asn1Print_s1ap_SONInformation_Extension 
   (const char* name, const s1ap_SONInformation_Extension* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONInformation_Extension (const char* name, 
   s1ap_SONInformation_Extension* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONInformation_Extension (OSCTXT *pctxt, 
   const char* name, const s1ap_SONInformation_Extension* pvalue);

EXTERN void asn1Copy_s1ap_SONInformation_Extension (OSCTXT* pctxt, 
   const s1ap_SONInformation_Extension* pSrcValue, 
   s1ap_SONInformation_Extension* pDstValue);

EXTERN int asn1Init_s1ap_SONInformation_Extension (
   s1ap_SONInformation_Extension* pvalue);

EXTERN void asn1Free_s1ap_SONInformation_Extension (OSCTXT *pctxt, 
   s1ap_SONInformation_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformation                                            */
/*                                                            */
/**************************************************************/
/*
SONInformation ::= CHOICE {
   sONInformationRequest [0] SONInformationRequest,
   sONInformationReply [1] SONInformationReply,
   ...,
   sONInformation-Extension [2] SONInformation-Extension
}
*/
/* Choice tag constants */

#define T_s1ap_SONInformation_sONInformationRequest 1
#define T_s1ap_SONInformation_sONInformationReply 2
#define T_s1ap_SONInformation_sONInformation_Extension 3
#define T_s1ap_SONInformation_extElem1  4

typedef struct EXTERN s1ap_SONInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_SONInformationRequest sONInformationRequest;
      /* t = 2 */
      s1ap_SONInformationReply *sONInformationReply;
      /* t = 3 */
      s1ap_SONInformation_Extension *sONInformation_Extension;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_SONInformation;

EXTERN int asn1PE_s1ap_SONInformation (OSCTXT* pctxt, s1ap_SONInformation* pvalue);

EXTERN int asn1PD_s1ap_SONInformation (OSCTXT* pctxt, s1ap_SONInformation* pvalue);

EXTERN void asn1Print_s1ap_SONInformation 
   (const char* name, const s1ap_SONInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONInformation (const char* name, 
   s1ap_SONInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_SONInformation* pvalue);

EXTERN void asn1Copy_s1ap_SONInformation (OSCTXT* pctxt, 
   const s1ap_SONInformation* pSrcValue, s1ap_SONInformation* pDstValue);

EXTERN int asn1Init_s1ap_SONInformation (s1ap_SONInformation* pvalue);

EXTERN void asn1Free_s1ap_SONInformation (OSCTXT *pctxt, s1ap_SONInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  ListeningSubframePattern_pattern_period                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ListeningSubframePattern'
*/
typedef enum {
   s1ap_ms1280 = 0,
   s1ap_ms2560 = 1,
   s1ap_ms5120 = 2,
   s1ap_ms10240 = 3
} s1ap_ListeningSubframePattern_pattern_period_Root;

typedef OSUINT32 s1ap_ListeningSubframePattern_pattern_period;

EXTERN int asn1PE_s1ap_ListeningSubframePattern_pattern_period (OSCTXT* pctxt, s1ap_ListeningSubframePattern_pattern_period value);

EXTERN int asn1PD_s1ap_ListeningSubframePattern_pattern_period (OSCTXT* pctxt, s1ap_ListeningSubframePattern_pattern_period* pvalue);

EXTERN void asn1Print_s1ap_ListeningSubframePattern_pattern_period 
   (const char* name, const s1ap_ListeningSubframePattern_pattern_period* pvalue);

EXTERN int asn1PrtToStr_s1ap_ListeningSubframePattern_pattern_period (
   const char* name, s1ap_ListeningSubframePattern_pattern_period* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ListeningSubframePattern_pattern_period (OSCTXT *pctxt, 
   const char* name, const s1ap_ListeningSubframePattern_pattern_period* pvalue);

EXTERN extern const OSEnumItem s1ap_ListeningSubframePattern_pattern_period_ENUMTAB[];
#define s1ap_ListeningSubframePattern_pattern_period_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* s1ap_ListeningSubframePattern_pattern_period_ToString (OSINT32 value);

EXTERN int s1ap_ListeningSubframePattern_pattern_period_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      s1ap_ListeningSubframePattern_pattern_period* pvalue);

EXTERN 
   int s1ap_ListeningSubframePattern_pattern_period_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_ListeningSubframePattern_pattern_period* pvalue);

/**************************************************************/
/*                                                            */
/*  ListeningSubframePattern_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ListeningSubframePattern'
*/
typedef struct EXTERN s1ap_ListeningSubframePattern_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_ListeningSubframePattern_iE_Extensions_element;

EXTERN int asn1PE_s1ap_ListeningSubframePattern_iE_Extensions_element (OSCTXT* pctxt, s1ap_ListeningSubframePattern_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_ListeningSubframePattern_iE_Extensions_element (OSCTXT* pctxt, s1ap_ListeningSubframePattern_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_ListeningSubframePattern_iE_Extensions_element 
   (const char* name, const s1ap_ListeningSubframePattern_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ListeningSubframePattern_iE_Extensions_element (
   const char* name, 
   s1ap_ListeningSubframePattern_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ListeningSubframePattern_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ListeningSubframePattern_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_ListeningSubframePattern_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_ListeningSubframePattern_iE_Extensions_element* pSrcValue, 
   s1ap_ListeningSubframePattern_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_ListeningSubframePattern_iE_Extensions_element (
   s1ap_ListeningSubframePattern_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_ListeningSubframePattern_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_ListeningSubframePattern_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ListeningSubframePattern_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ListeningSubframePattern'
*/
/* List of s1ap_ListeningSubframePattern_iE_Extensions_element */
typedef OSRTDList s1ap_ListeningSubframePattern_iE_Extensions;

EXTERN int asn1PE_s1ap_ListeningSubframePattern_iE_Extensions (OSCTXT* pctxt, s1ap_ListeningSubframePattern_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_ListeningSubframePattern_iE_Extensions (OSCTXT* pctxt, s1ap_ListeningSubframePattern_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_ListeningSubframePattern_iE_Extensions 
   (const char* name, const s1ap_ListeningSubframePattern_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_ListeningSubframePattern_iE_Extensions (
   const char* name, s1ap_ListeningSubframePattern_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ListeningSubframePattern_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_ListeningSubframePattern_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ListeningSubframePattern_iE_Extensions_element* 
   asn1Get_s1ap_ListeningSubframePattern_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_ListeningSubframePattern_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_ListeningSubframePattern_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_ListeningSubframePattern_iE_Extensions* pSrcValue, 
   s1ap_ListeningSubframePattern_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_ListeningSubframePattern_iE_Extensions (
   s1ap_ListeningSubframePattern_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_ListeningSubframePattern_iE_Extensions (OSCTXT *pctxt, 
   s1ap_ListeningSubframePattern_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ListeningSubframePattern                                  */
/*                                                            */
/**************************************************************/
/*
ListeningSubframePattern ::= SEQUENCE {
   pattern-period [0] ENUMERATED { ms1280(0), ms2560(1), ms5120(2), ms10240(3), ... },
   pattern-offset [1] INTEGER (0..10239, ...),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({ListeningSubframePattern-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({ListeningSubframePattern-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({ListeningSubframePattern-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_ListeningSubframePattern {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_ListeningSubframePattern_pattern_period pattern_period;
   OSUINT32 pattern_offset;
   s1ap_ListeningSubframePattern_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_ListeningSubframePattern;

EXTERN int asn1PE_s1ap_ListeningSubframePattern (OSCTXT* pctxt, s1ap_ListeningSubframePattern* pvalue);

EXTERN int asn1PD_s1ap_ListeningSubframePattern (OSCTXT* pctxt, s1ap_ListeningSubframePattern* pvalue);

EXTERN void asn1Print_s1ap_ListeningSubframePattern 
   (const char* name, const s1ap_ListeningSubframePattern* pvalue);

EXTERN int asn1PrtToStr_s1ap_ListeningSubframePattern (const char* name, 
   s1ap_ListeningSubframePattern* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ListeningSubframePattern (OSCTXT *pctxt, 
   const char* name, const s1ap_ListeningSubframePattern* pvalue);

EXTERN void asn1Copy_s1ap_ListeningSubframePattern (OSCTXT* pctxt, 
   const s1ap_ListeningSubframePattern* pSrcValue, 
   s1ap_ListeningSubframePattern* pDstValue);

EXTERN int asn1Init_s1ap_ListeningSubframePattern (
   s1ap_ListeningSubframePattern* pvalue);

EXTERN void asn1Free_s1ap_ListeningSubframePattern (OSCTXT *pctxt, 
   s1ap_ListeningSubframePattern* pvalue);

/**************************************************************/
/*                                                            */
/*  ECGI_List                                                 */
/*                                                            */
/**************************************************************/
/*
ECGI-List ::= SEQUENCE (SIZE (1..maxnoofCellsineNB)) OF EUTRAN-CGI
*/
/* List of s1ap_EUTRAN_CGI */
typedef OSRTDList s1ap_ECGI_List;

EXTERN int asn1PE_s1ap_ECGI_List (OSCTXT* pctxt, s1ap_ECGI_List* pvalue);

EXTERN int asn1PD_s1ap_ECGI_List (OSCTXT* pctxt, s1ap_ECGI_List* pvalue);

EXTERN void asn1Print_s1ap_ECGI_List (const char* name, const s1ap_ECGI_List* pvalue);

EXTERN int asn1PrtToStr_s1ap_ECGI_List (const char* name, s1ap_ECGI_List* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ECGI_List (OSCTXT *pctxt, 
   const char* name, const s1ap_ECGI_List* pvalue);

EXTERN void asn1Copy_s1ap_ECGI_List (OSCTXT* pctxt, const s1ap_ECGI_List* pSrcValue, 
   s1ap_ECGI_List* pDstValue);

EXTERN int asn1Init_s1ap_ECGI_List (s1ap_ECGI_List* pvalue);

EXTERN void asn1Free_s1ap_ECGI_List (OSCTXT *pctxt, s1ap_ECGI_List* pvalue);

/**************************************************************/
/*                                                            */
/*  SynchronisationInformation_iE_Extensions_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SynchronisationInformation'
*/
typedef struct EXTERN s1ap_SynchronisationInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_SynchronisationInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SynchronisationInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_SynchronisationInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SynchronisationInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_SynchronisationInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SynchronisationInformation_iE_Extensions_element 
   (const char* name, const s1ap_SynchronisationInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SynchronisationInformation_iE_Extensions_element (
   const char* name, 
   s1ap_SynchronisationInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SynchronisationInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SynchronisationInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_SynchronisationInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SynchronisationInformation_iE_Extensions_element* pSrcValue, 
   s1ap_SynchronisationInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_SynchronisationInformation_iE_Extensions_element (
   s1ap_SynchronisationInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_SynchronisationInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_SynchronisationInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SynchronisationInformation_iE_Extensions                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SynchronisationInformation'
*/
/* List of s1ap_SynchronisationInformation_iE_Extensions_element */
typedef OSRTDList s1ap_SynchronisationInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_SynchronisationInformation_iE_Extensions (OSCTXT* pctxt, s1ap_SynchronisationInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SynchronisationInformation_iE_Extensions (OSCTXT* pctxt, s1ap_SynchronisationInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SynchronisationInformation_iE_Extensions 
   (const char* name, const s1ap_SynchronisationInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SynchronisationInformation_iE_Extensions (
   const char* name, s1ap_SynchronisationInformation_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SynchronisationInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SynchronisationInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SynchronisationInformation_iE_Extensions_element* 
   asn1Get_s1ap_SynchronisationInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_SynchronisationInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SynchronisationInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SynchronisationInformation_iE_Extensions* pSrcValue, 
   s1ap_SynchronisationInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SynchronisationInformation_iE_Extensions (
   s1ap_SynchronisationInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SynchronisationInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SynchronisationInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SynchronisationInformation                                */
/*                                                            */
/**************************************************************/
/*
SynchronisationInformation ::= SEQUENCE {
   sourceStratumLevel [0] StratumLevel OPTIONAL,
   listeningSubframePattern [1] ListeningSubframePattern OPTIONAL,
   aggressoreCGI-List [2] ECGI-List OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SynchronisationInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SynchronisationInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SynchronisationInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_SynchronisationInformation {
   struct {
      unsigned sourceStratumLevelPresent : 1;
      unsigned listeningSubframePatternPresent : 1;
      unsigned aggressoreCGI_ListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_StratumLevel sourceStratumLevel;
   s1ap_ListeningSubframePattern listeningSubframePattern;
   s1ap_ECGI_List aggressoreCGI_List;
   s1ap_SynchronisationInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_SynchronisationInformation;

EXTERN int asn1PE_s1ap_SynchronisationInformation (OSCTXT* pctxt, s1ap_SynchronisationInformation* pvalue);

EXTERN int asn1PD_s1ap_SynchronisationInformation (OSCTXT* pctxt, s1ap_SynchronisationInformation* pvalue);

EXTERN void asn1Print_s1ap_SynchronisationInformation 
   (const char* name, const s1ap_SynchronisationInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_SynchronisationInformation (const char* name, 
   s1ap_SynchronisationInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SynchronisationInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_SynchronisationInformation* pvalue);

EXTERN void asn1Copy_s1ap_SynchronisationInformation (OSCTXT* pctxt, 
   const s1ap_SynchronisationInformation* pSrcValue, 
   s1ap_SynchronisationInformation* pDstValue);

EXTERN int asn1Init_s1ap_SynchronisationInformation (
   s1ap_SynchronisationInformation* pvalue);

EXTERN void asn1Free_s1ap_SynchronisationInformation (OSCTXT *pctxt, 
   s1ap_SynchronisationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SONConfigurationTransfer_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONConfigurationTransfer'
*/
typedef struct EXTERN s1ap_SONConfigurationTransfer_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      SONConfigurationTransfer_ExtIEs_TVALUE t;

      /**
       * SONConfigurationTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-x2TNLConfigurationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_X2TNLConfigurationInfo *_SONConfigurationTransfer_ExtIEs_1;
         /**
          * id: id-Synchronisation-Information
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_SynchronisationInformation *_SONConfigurationTransfer_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_SONConfigurationTransfer_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SONConfigurationTransfer_iE_Extensions_element 
   (const char* name, const s1ap_SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONConfigurationTransfer_iE_Extensions_element (
   const char* name, 
   s1ap_SONConfigurationTransfer_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONConfigurationTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_SONConfigurationTransfer_iE_Extensions_element_SONConfigurationTransfer_ExtIEs_1
   (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions_element* pElem, 
   s1ap_X2TNLConfigurationInfo *pvalue);

EXTERN void asn1SetTC_s1ap_SONConfigurationTransfer_iE_Extensions_element_SONConfigurationTransfer_ExtIEs_2
   (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions_element* pElem, 
   s1ap_SynchronisationInformation *pvalue);

EXTERN void asn1Copy_s1ap_SONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SONConfigurationTransfer_iE_Extensions_element* pSrcValue, 
   s1ap_SONConfigurationTransfer_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_SONConfigurationTransfer_iE_Extensions_element (
   s1ap_SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_SONConfigurationTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_SONConfigurationTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SONConfigurationTransfer_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONConfigurationTransfer'
*/
/* List of s1ap_SONConfigurationTransfer_iE_Extensions_element */
typedef OSRTDList s1ap_SONConfigurationTransfer_iE_Extensions;

EXTERN int asn1PE_s1ap_SONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SONConfigurationTransfer_iE_Extensions 
   (const char* name, const s1ap_SONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONConfigurationTransfer_iE_Extensions (
   const char* name, s1ap_SONConfigurationTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONConfigurationTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SONConfigurationTransfer_iE_Extensions* pvalue);

/* Append IE with value type s1ap_X2TNLConfigurationInfo to list */
struct s1ap_X2TNLConfigurationInfo ;
EXTERN int asn1Append_s1ap_SONConfigurationTransfer_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions* plist, 
   struct s1ap_X2TNLConfigurationInfo *pvalue);

/* Append IE with value type s1ap_SynchronisationInformation to list */
struct s1ap_SynchronisationInformation ;
EXTERN int asn1Append_s1ap_SONConfigurationTransfer_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_SONConfigurationTransfer_iE_Extensions* plist, 
   struct s1ap_SynchronisationInformation *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SONConfigurationTransfer_iE_Extensions_element* 
   asn1Get_s1ap_SONConfigurationTransfer_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_SONConfigurationTransfer_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SONConfigurationTransfer_iE_Extensions* pSrcValue, 
   s1ap_SONConfigurationTransfer_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SONConfigurationTransfer_iE_Extensions (
   s1ap_SONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SONConfigurationTransfer_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SONConfigurationTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SONConfigurationTransfer                                  */
/*                                                            */
/**************************************************************/
/*
SONConfigurationTransfer ::= SEQUENCE {
   targeteNB-ID [0] TargeteNB-ID,
   sourceeNB-ID [1] SourceeNB-ID,
   sONInformation [2] EXPLICIT SONInformation,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SONConfigurationTransfer-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SONConfigurationTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SONConfigurationTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_SONConfigurationTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TargeteNB_ID targeteNB_ID;
   s1ap_SourceeNB_ID sourceeNB_ID;
   s1ap_SONInformation sONInformation;
   s1ap_SONConfigurationTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_SONConfigurationTransfer;

EXTERN int asn1PE_s1ap_SONConfigurationTransfer (OSCTXT* pctxt, s1ap_SONConfigurationTransfer* pvalue);

EXTERN int asn1PD_s1ap_SONConfigurationTransfer (OSCTXT* pctxt, s1ap_SONConfigurationTransfer* pvalue);

EXTERN void asn1Print_s1ap_SONConfigurationTransfer 
   (const char* name, const s1ap_SONConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONConfigurationTransfer (const char* name, 
   s1ap_SONConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_SONConfigurationTransfer* pvalue);

EXTERN void asn1Copy_s1ap_SONConfigurationTransfer (OSCTXT* pctxt, 
   const s1ap_SONConfigurationTransfer* pSrcValue, 
   s1ap_SONConfigurationTransfer* pDstValue);

EXTERN int asn1Init_s1ap_SONConfigurationTransfer (
   s1ap_SONConfigurationTransfer* pvalue);

EXTERN void asn1Free_s1ap_SONConfigurationTransfer (OSCTXT *pctxt, 
   s1ap_SONConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONeNBIdentification_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCSONeNBIdentification'
*/
typedef struct EXTERN s1ap_EN_DCSONeNBIdentification_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EN_DCSONeNBIdentification_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element 
   (const char* name, const s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element (
   const char* name, 
   s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pSrcValue, 
   s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element (
   s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONeNBIdentification_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONeNBIdentification_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCSONeNBIdentification'
*/
/* List of s1ap_EN_DCSONeNBIdentification_iE_Extensions_element */
typedef OSRTDList s1ap_EN_DCSONeNBIdentification_iE_Extensions;

EXTERN int asn1PE_s1ap_EN_DCSONeNBIdentification_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCSONeNBIdentification_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONeNBIdentification_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCSONeNBIdentification_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONeNBIdentification_iE_Extensions 
   (const char* name, const s1ap_EN_DCSONeNBIdentification_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONeNBIdentification_iE_Extensions (
   const char* name, s1ap_EN_DCSONeNBIdentification_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONeNBIdentification_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONeNBIdentification_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EN_DCSONeNBIdentification_iE_Extensions_element* 
   asn1Get_s1ap_EN_DCSONeNBIdentification_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_EN_DCSONeNBIdentification_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EN_DCSONeNBIdentification_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EN_DCSONeNBIdentification_iE_Extensions* pSrcValue, 
   s1ap_EN_DCSONeNBIdentification_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONeNBIdentification_iE_Extensions (
   s1ap_EN_DCSONeNBIdentification_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONeNBIdentification_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EN_DCSONeNBIdentification_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONeNBIdentification                                 */
/*                                                            */
/**************************************************************/
/*
EN-DCSONeNBIdentification ::= SEQUENCE {
   globaleNBID [0] Global-ENB-ID,
   selectedTAI [1] TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EN-DCSONeNBIdentification-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EN-DCSONeNBIdentification-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EN-DCSONeNBIdentification-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EN_DCSONeNBIdentification {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Global_ENB_ID globaleNBID;
   s1ap_TAI selectedTAI;
   s1ap_EN_DCSONeNBIdentification_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EN_DCSONeNBIdentification;

EXTERN int asn1PE_s1ap_EN_DCSONeNBIdentification (OSCTXT* pctxt, s1ap_EN_DCSONeNBIdentification* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONeNBIdentification (OSCTXT* pctxt, s1ap_EN_DCSONeNBIdentification* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONeNBIdentification 
   (const char* name, const s1ap_EN_DCSONeNBIdentification* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONeNBIdentification (const char* name, 
   s1ap_EN_DCSONeNBIdentification* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONeNBIdentification (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONeNBIdentification* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCSONeNBIdentification (OSCTXT* pctxt, 
   const s1ap_EN_DCSONeNBIdentification* pSrcValue, 
   s1ap_EN_DCSONeNBIdentification* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONeNBIdentification (
   s1ap_EN_DCSONeNBIdentification* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONeNBIdentification (OSCTXT *pctxt, 
   s1ap_EN_DCSONeNBIdentification* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_en_gNB_ID_iE_Extensions_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Global-en-gNB-ID'
*/
typedef struct EXTERN s1ap_Global_en_gNB_ID_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_Global_en_gNB_ID_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Global_en_gNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_Global_en_gNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Global_en_gNB_ID_iE_Extensions_element (OSCTXT* pctxt, s1ap_Global_en_gNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Global_en_gNB_ID_iE_Extensions_element 
   (const char* name, const s1ap_Global_en_gNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_en_gNB_ID_iE_Extensions_element (
   const char* name, s1ap_Global_en_gNB_ID_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_en_gNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_en_gNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_Global_en_gNB_ID_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Global_en_gNB_ID_iE_Extensions_element* pSrcValue, 
   s1ap_Global_en_gNB_ID_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_Global_en_gNB_ID_iE_Extensions_element (
   s1ap_Global_en_gNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Global_en_gNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Global_en_gNB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_en_gNB_ID_iE_Extensions                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Global-en-gNB-ID'
*/
/* List of s1ap_Global_en_gNB_ID_iE_Extensions_element */
typedef OSRTDList s1ap_Global_en_gNB_ID_iE_Extensions;

EXTERN int asn1PE_s1ap_Global_en_gNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_Global_en_gNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Global_en_gNB_ID_iE_Extensions (OSCTXT* pctxt, s1ap_Global_en_gNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Global_en_gNB_ID_iE_Extensions 
   (const char* name, const s1ap_Global_en_gNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_en_gNB_ID_iE_Extensions (const char* name, 
   s1ap_Global_en_gNB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_en_gNB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_en_gNB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Global_en_gNB_ID_iE_Extensions_element* 
   asn1Get_s1ap_Global_en_gNB_ID_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_Global_en_gNB_ID_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Global_en_gNB_ID_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Global_en_gNB_ID_iE_Extensions* pSrcValue, 
   s1ap_Global_en_gNB_ID_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Global_en_gNB_ID_iE_Extensions (
   s1ap_Global_en_gNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Global_en_gNB_ID_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Global_en_gNB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Global_en_gNB_ID                                          */
/*                                                            */
/**************************************************************/
/*
Global-en-gNB-ID ::= SEQUENCE {
   pLMNidentity [0] PLMNidentity,
   en-gNB-ID [1] En-gNB-ID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Global-en-gNB-ID-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Global-en-gNB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Global-en-gNB-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Global_en_gNB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_En_gNB_ID en_gNB_ID;
   s1ap_Global_en_gNB_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Global_en_gNB_ID;

EXTERN int asn1PE_s1ap_Global_en_gNB_ID (OSCTXT* pctxt, s1ap_Global_en_gNB_ID* pvalue);

EXTERN int asn1PD_s1ap_Global_en_gNB_ID (OSCTXT* pctxt, s1ap_Global_en_gNB_ID* pvalue);

EXTERN void asn1Print_s1ap_Global_en_gNB_ID 
   (const char* name, const s1ap_Global_en_gNB_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Global_en_gNB_ID (const char* name, 
   s1ap_Global_en_gNB_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Global_en_gNB_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_Global_en_gNB_ID* pvalue);

EXTERN void asn1Copy_s1ap_Global_en_gNB_ID (OSCTXT* pctxt, 
   const s1ap_Global_en_gNB_ID* pSrcValue, s1ap_Global_en_gNB_ID* pDstValue);

EXTERN int asn1Init_s1ap_Global_en_gNB_ID (s1ap_Global_en_gNB_ID* pvalue);

EXTERN void asn1Free_s1ap_Global_en_gNB_ID (OSCTXT *pctxt, 
   s1ap_Global_en_gNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONengNBIdentification_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCSONengNBIdentification'
*/
typedef struct EXTERN s1ap_EN_DCSONengNBIdentification_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EN_DCSONengNBIdentification_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element 
   (const char* name, const s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element (
   const char* name, 
   s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pSrcValue, 
   s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element (
   s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONengNBIdentification_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONengNBIdentification_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCSONengNBIdentification'
*/
/* List of s1ap_EN_DCSONengNBIdentification_iE_Extensions_element */
typedef OSRTDList s1ap_EN_DCSONengNBIdentification_iE_Extensions;

EXTERN int asn1PE_s1ap_EN_DCSONengNBIdentification_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCSONengNBIdentification_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONengNBIdentification_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCSONengNBIdentification_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONengNBIdentification_iE_Extensions 
   (const char* name, const s1ap_EN_DCSONengNBIdentification_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONengNBIdentification_iE_Extensions (
   const char* name, s1ap_EN_DCSONengNBIdentification_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONengNBIdentification_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONengNBIdentification_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EN_DCSONengNBIdentification_iE_Extensions_element* 
   asn1Get_s1ap_EN_DCSONengNBIdentification_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_EN_DCSONengNBIdentification_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EN_DCSONengNBIdentification_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EN_DCSONengNBIdentification_iE_Extensions* pSrcValue, 
   s1ap_EN_DCSONengNBIdentification_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONengNBIdentification_iE_Extensions (
   s1ap_EN_DCSONengNBIdentification_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONengNBIdentification_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EN_DCSONengNBIdentification_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONengNBIdentification                               */
/*                                                            */
/**************************************************************/
/*
EN-DCSONengNBIdentification ::= SEQUENCE {
   globalengNBID [0] Global-en-gNB-ID,
   selectedTAI [1] TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EN-DCSONengNBIdentification-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EN-DCSONengNBIdentification-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EN-DCSONengNBIdentification-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EN_DCSONengNBIdentification {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Global_en_gNB_ID globalengNBID;
   s1ap_TAI selectedTAI;
   s1ap_EN_DCSONengNBIdentification_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EN_DCSONengNBIdentification;

EXTERN int asn1PE_s1ap_EN_DCSONengNBIdentification (OSCTXT* pctxt, s1ap_EN_DCSONengNBIdentification* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONengNBIdentification (OSCTXT* pctxt, s1ap_EN_DCSONengNBIdentification* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONengNBIdentification 
   (const char* name, const s1ap_EN_DCSONengNBIdentification* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONengNBIdentification (const char* name, 
   s1ap_EN_DCSONengNBIdentification* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONengNBIdentification (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONengNBIdentification* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCSONengNBIdentification (OSCTXT* pctxt, 
   const s1ap_EN_DCSONengNBIdentification* pSrcValue, 
   s1ap_EN_DCSONengNBIdentification* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONengNBIdentification (
   s1ap_EN_DCSONengNBIdentification* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONengNBIdentification (OSCTXT *pctxt, 
   s1ap_EN_DCSONengNBIdentification* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCTransferTypeRequest_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCTransferTypeRequest'
*/
typedef struct EXTERN s1ap_EN_DCTransferTypeRequest_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EN_DCTransferTypeRequest_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element 
   (const char* name, const s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element (
   const char* name, 
   s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pSrcValue, 
   s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element (
   s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EN_DCTransferTypeRequest_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCTransferTypeRequest_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCTransferTypeRequest'
*/
/* List of s1ap_EN_DCTransferTypeRequest_iE_Extensions_element */
typedef OSRTDList s1ap_EN_DCTransferTypeRequest_iE_Extensions;

EXTERN int asn1PE_s1ap_EN_DCTransferTypeRequest_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCTransferTypeRequest_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EN_DCTransferTypeRequest_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCTransferTypeRequest_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EN_DCTransferTypeRequest_iE_Extensions 
   (const char* name, const s1ap_EN_DCTransferTypeRequest_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCTransferTypeRequest_iE_Extensions (
   const char* name, s1ap_EN_DCTransferTypeRequest_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCTransferTypeRequest_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCTransferTypeRequest_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EN_DCTransferTypeRequest_iE_Extensions_element* 
   asn1Get_s1ap_EN_DCTransferTypeRequest_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_EN_DCTransferTypeRequest_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EN_DCTransferTypeRequest_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EN_DCTransferTypeRequest_iE_Extensions* pSrcValue, 
   s1ap_EN_DCTransferTypeRequest_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCTransferTypeRequest_iE_Extensions (
   s1ap_EN_DCTransferTypeRequest_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EN_DCTransferTypeRequest_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EN_DCTransferTypeRequest_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCTransferTypeRequest                                  */
/*                                                            */
/**************************************************************/
/*
EN-DCTransferTypeRequest ::= SEQUENCE {
   sourceeNB [0] EN-DCSONeNBIdentification,
   targetengNB [1] EN-DCSONengNBIdentification,
   targeteNB [2] EN-DCSONeNBIdentification OPTIONAL,
   associatedTAI [3] TAI OPTIONAL,
   broadcast5GSTAI [4] FiveGSTAI OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EN-DCTransferTypeRequest-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EN-DCTransferTypeRequest-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EN-DCTransferTypeRequest-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EN_DCTransferTypeRequest {
   struct {
      unsigned targeteNBPresent : 1;
      unsigned associatedTAIPresent : 1;
      unsigned broadcast5GSTAIPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EN_DCSONeNBIdentification sourceeNB;
   s1ap_EN_DCSONengNBIdentification targetengNB;
   s1ap_EN_DCSONeNBIdentification targeteNB;
   s1ap_TAI associatedTAI;
   s1ap_FiveGSTAI broadcast5GSTAI;
   s1ap_EN_DCTransferTypeRequest_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EN_DCTransferTypeRequest;

EXTERN int asn1PE_s1ap_EN_DCTransferTypeRequest (OSCTXT* pctxt, s1ap_EN_DCTransferTypeRequest* pvalue);

EXTERN int asn1PD_s1ap_EN_DCTransferTypeRequest (OSCTXT* pctxt, s1ap_EN_DCTransferTypeRequest* pvalue);

EXTERN void asn1Print_s1ap_EN_DCTransferTypeRequest 
   (const char* name, const s1ap_EN_DCTransferTypeRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCTransferTypeRequest (const char* name, 
   s1ap_EN_DCTransferTypeRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCTransferTypeRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCTransferTypeRequest* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCTransferTypeRequest (OSCTXT* pctxt, 
   const s1ap_EN_DCTransferTypeRequest* pSrcValue, 
   s1ap_EN_DCTransferTypeRequest* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCTransferTypeRequest (
   s1ap_EN_DCTransferTypeRequest* pvalue);

EXTERN void asn1Free_s1ap_EN_DCTransferTypeRequest (OSCTXT *pctxt, 
   s1ap_EN_DCTransferTypeRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCTransferTypeReply_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCTransferTypeReply'
*/
typedef struct EXTERN s1ap_EN_DCTransferTypeReply_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EN_DCTransferTypeReply_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EN_DCTransferTypeReply_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EN_DCTransferTypeReply_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EN_DCTransferTypeReply_iE_Extensions_element 
   (const char* name, const s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCTransferTypeReply_iE_Extensions_element (
   const char* name, 
   s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCTransferTypeReply_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCTransferTypeReply_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pSrcValue, 
   s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCTransferTypeReply_iE_Extensions_element (
   s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EN_DCTransferTypeReply_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EN_DCTransferTypeReply_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCTransferTypeReply_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCTransferTypeReply'
*/
/* List of s1ap_EN_DCTransferTypeReply_iE_Extensions_element */
typedef OSRTDList s1ap_EN_DCTransferTypeReply_iE_Extensions;

EXTERN int asn1PE_s1ap_EN_DCTransferTypeReply_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCTransferTypeReply_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EN_DCTransferTypeReply_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCTransferTypeReply_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EN_DCTransferTypeReply_iE_Extensions 
   (const char* name, const s1ap_EN_DCTransferTypeReply_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCTransferTypeReply_iE_Extensions (const char* name, 
   s1ap_EN_DCTransferTypeReply_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCTransferTypeReply_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCTransferTypeReply_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EN_DCTransferTypeReply_iE_Extensions_element* 
   asn1Get_s1ap_EN_DCTransferTypeReply_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_EN_DCTransferTypeReply_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EN_DCTransferTypeReply_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EN_DCTransferTypeReply_iE_Extensions* pSrcValue, 
   s1ap_EN_DCTransferTypeReply_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCTransferTypeReply_iE_Extensions (
   s1ap_EN_DCTransferTypeReply_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EN_DCTransferTypeReply_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EN_DCTransferTypeReply_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCTransferTypeReply                                    */
/*                                                            */
/**************************************************************/
/*
EN-DCTransferTypeReply ::= SEQUENCE {
   sourceengNB [0] EN-DCSONengNBIdentification,
   targeteNB [1] EN-DCSONeNBIdentification,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EN-DCTransferTypeReply-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EN-DCTransferTypeReply-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EN-DCTransferTypeReply-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EN_DCTransferTypeReply {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EN_DCSONengNBIdentification sourceengNB;
   s1ap_EN_DCSONeNBIdentification targeteNB;
   s1ap_EN_DCTransferTypeReply_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EN_DCTransferTypeReply;

EXTERN int asn1PE_s1ap_EN_DCTransferTypeReply (OSCTXT* pctxt, s1ap_EN_DCTransferTypeReply* pvalue);

EXTERN int asn1PD_s1ap_EN_DCTransferTypeReply (OSCTXT* pctxt, s1ap_EN_DCTransferTypeReply* pvalue);

EXTERN void asn1Print_s1ap_EN_DCTransferTypeReply 
   (const char* name, const s1ap_EN_DCTransferTypeReply* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCTransferTypeReply (const char* name, 
   s1ap_EN_DCTransferTypeReply* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCTransferTypeReply (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCTransferTypeReply* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCTransferTypeReply (OSCTXT* pctxt, 
   const s1ap_EN_DCTransferTypeReply* pSrcValue, s1ap_EN_DCTransferTypeReply*
    pDstValue);

EXTERN int asn1Init_s1ap_EN_DCTransferTypeReply (s1ap_EN_DCTransferTypeReply* pvalue);

EXTERN void asn1Free_s1ap_EN_DCTransferTypeReply (OSCTXT *pctxt, 
   s1ap_EN_DCTransferTypeReply* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONTransferType                                      */
/*                                                            */
/**************************************************************/
/*
EN-DCSONTransferType ::= CHOICE {
   request [0] EN-DCTransferTypeRequest,
   reply [1] EN-DCTransferTypeReply,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_EN_DCSONTransferType_request 1
#define T_s1ap_EN_DCSONTransferType_reply 2
#define T_s1ap_EN_DCSONTransferType_extElem1 3

typedef struct EXTERN s1ap_EN_DCSONTransferType {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_EN_DCTransferTypeRequest *request;
      /* t = 2 */
      s1ap_EN_DCTransferTypeReply *reply;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_EN_DCSONTransferType;

EXTERN int asn1PE_s1ap_EN_DCSONTransferType (OSCTXT* pctxt, s1ap_EN_DCSONTransferType* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONTransferType (OSCTXT* pctxt, s1ap_EN_DCSONTransferType* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONTransferType 
   (const char* name, const s1ap_EN_DCSONTransferType* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONTransferType (const char* name, 
   s1ap_EN_DCSONTransferType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONTransferType (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONTransferType* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCSONTransferType (OSCTXT* pctxt, 
   const s1ap_EN_DCSONTransferType* pSrcValue, s1ap_EN_DCSONTransferType*
    pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONTransferType (s1ap_EN_DCSONTransferType* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONTransferType (OSCTXT *pctxt, 
   s1ap_EN_DCSONTransferType* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONConfigurationTransfer_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCSONConfigurationTransfer'
*/
typedef struct EXTERN s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element 
   (const char* name, const s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element (
   const char* name, 
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pSrcValue, 
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element (
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONConfigurationTransfer_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EN-DCSONConfigurationTransfer'
*/
/* List of s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element */
typedef OSRTDList s1ap_EN_DCSONConfigurationTransfer_iE_Extensions;

EXTERN int asn1PE_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions 
   (const char* name, const s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions (
   const char* name, s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EN_DCSONConfigurationTransfer_iE_Extensions_element* 
   asn1Get_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pSrcValue, 
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions (
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONConfigurationTransfer_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EN_DCSONConfigurationTransfer                             */
/*                                                            */
/**************************************************************/
/*
EN-DCSONConfigurationTransfer ::= SEQUENCE {
   transfertype [0] EXPLICIT EN-DCSONTransferType,
   sONInformation [1] EXPLICIT SONInformation,
   x2TNLConfigInfo [2] X2TNLConfigurationInfo OPTIONAL,
--This IE shall be present if the SON Information IE contains the SON Information Request IE and the SON Information Request IE is set to X2TNL Configuration Info 
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EN-DCSONConfigurationTransfer-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EN-DCSONConfigurationTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EN-DCSONConfigurationTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EN_DCSONConfigurationTransfer {
   struct {
      unsigned x2TNLConfigInfoPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EN_DCSONTransferType transfertype;
   s1ap_SONInformation sONInformation;
   s1ap_X2TNLConfigurationInfo x2TNLConfigInfo;
   s1ap_EN_DCSONConfigurationTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EN_DCSONConfigurationTransfer;

EXTERN int asn1PE_s1ap_EN_DCSONConfigurationTransfer (OSCTXT* pctxt, s1ap_EN_DCSONConfigurationTransfer* pvalue);

EXTERN int asn1PD_s1ap_EN_DCSONConfigurationTransfer (OSCTXT* pctxt, s1ap_EN_DCSONConfigurationTransfer* pvalue);

EXTERN void asn1Print_s1ap_EN_DCSONConfigurationTransfer 
   (const char* name, const s1ap_EN_DCSONConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_EN_DCSONConfigurationTransfer (const char* name, 
   s1ap_EN_DCSONConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EN_DCSONConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_EN_DCSONConfigurationTransfer* pvalue);

EXTERN void asn1Copy_s1ap_EN_DCSONConfigurationTransfer (OSCTXT* pctxt, 
   const s1ap_EN_DCSONConfigurationTransfer* pSrcValue, 
   s1ap_EN_DCSONConfigurationTransfer* pDstValue);

EXTERN int asn1Init_s1ap_EN_DCSONConfigurationTransfer (
   s1ap_EN_DCSONConfigurationTransfer* pvalue);

EXTERN void asn1Free_s1ap_EN_DCSONConfigurationTransfer (OSCTXT *pctxt, 
   s1ap_EN_DCSONConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  Routing_ID                                                */
/*                                                            */
/**************************************************************/
/*
Routing-ID ::= INTEGER (0..255)
*/
typedef OSUINT8 s1ap_Routing_ID;

EXTERN int asn1PE_s1ap_Routing_ID (OSCTXT* pctxt, s1ap_Routing_ID value);

EXTERN int asn1PD_s1ap_Routing_ID (OSCTXT* pctxt, s1ap_Routing_ID* pvalue);

EXTERN void asn1Print_s1ap_Routing_ID 
   (const char* name, const s1ap_Routing_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_Routing_ID (const char* name, s1ap_Routing_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Routing_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_Routing_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  LPPa_PDU                                                  */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
LPPa-PDU ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_LPPa_PDU;

EXTERN int asn1PE_s1ap_LPPa_PDU (OSCTXT* pctxt, s1ap_LPPa_PDU value);

EXTERN int asn1PD_s1ap_LPPa_PDU (OSCTXT* pctxt, s1ap_LPPa_PDU* pvalue);

EXTERN void asn1Print_s1ap_LPPa_PDU (const char* name, const s1ap_LPPa_PDU* pvalue);

EXTERN int asn1PrtToStr_s1ap_LPPa_PDU (const char* name, s1ap_LPPa_PDU* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LPPa_PDU (OSCTXT *pctxt, 
   const char* name, const s1ap_LPPa_PDU* pvalue);

EXTERN void asn1Copy_s1ap_LPPa_PDU (OSCTXT* pctxt, const s1ap_LPPa_PDU* pSrcValue, 
   s1ap_LPPa_PDU* pDstValue);

EXTERN int asn1Init_s1ap_LPPa_PDU (s1ap_LPPa_PDU* pvalue);

EXTERN void asn1Free_s1ap_LPPa_PDU (OSCTXT *pctxt, s1ap_LPPa_PDU* pvalue);

/**************************************************************/
/*                                                            */
/*  ECGIListForRestart                                        */
/*                                                            */
/**************************************************************/
/*
ECGIListForRestart ::= SEQUENCE (SIZE (1..maxnoofCellsforRestart)) OF EUTRAN-CGI
*/
/* List of s1ap_EUTRAN_CGI */
typedef OSRTDList s1ap_ECGIListForRestart;

EXTERN int asn1PE_s1ap_ECGIListForRestart (OSCTXT* pctxt, s1ap_ECGIListForRestart* pvalue);

EXTERN int asn1PD_s1ap_ECGIListForRestart (OSCTXT* pctxt, s1ap_ECGIListForRestart* pvalue);

EXTERN void asn1Print_s1ap_ECGIListForRestart 
   (const char* name, const s1ap_ECGIListForRestart* pvalue);

EXTERN int asn1PrtToStr_s1ap_ECGIListForRestart (const char* name, 
   s1ap_ECGIListForRestart* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ECGIListForRestart (OSCTXT *pctxt, 
   const char* name, const s1ap_ECGIListForRestart* pvalue);

EXTERN void asn1Copy_s1ap_ECGIListForRestart (OSCTXT* pctxt, 
   const s1ap_ECGIListForRestart* pSrcValue, s1ap_ECGIListForRestart*
    pDstValue);

EXTERN int asn1Init_s1ap_ECGIListForRestart (s1ap_ECGIListForRestart* pvalue);

EXTERN void asn1Free_s1ap_ECGIListForRestart (OSCTXT *pctxt, 
   s1ap_ECGIListForRestart* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForRestart                                         */
/*                                                            */
/**************************************************************/
/*
TAIListForRestart ::= SEQUENCE (SIZE (1..maxnoofRestartTAIs)) OF TAI
*/
/* List of s1ap_TAI */
typedef OSRTDList s1ap_TAIListForRestart;

EXTERN int asn1PE_s1ap_TAIListForRestart (OSCTXT* pctxt, s1ap_TAIListForRestart* pvalue);

EXTERN int asn1PD_s1ap_TAIListForRestart (OSCTXT* pctxt, s1ap_TAIListForRestart* pvalue);

EXTERN void asn1Print_s1ap_TAIListForRestart 
   (const char* name, const s1ap_TAIListForRestart* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIListForRestart (const char* name, 
   s1ap_TAIListForRestart* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIListForRestart (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIListForRestart* pvalue);

EXTERN void asn1Copy_s1ap_TAIListForRestart (OSCTXT* pctxt, 
   const s1ap_TAIListForRestart* pSrcValue, s1ap_TAIListForRestart* pDstValue);

EXTERN int asn1Init_s1ap_TAIListForRestart (s1ap_TAIListForRestart* pvalue);

EXTERN void asn1Free_s1ap_TAIListForRestart (OSCTXT *pctxt, 
   s1ap_TAIListForRestart* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDListForRestart                             */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDListForRestart ::= SEQUENCE (SIZE (1..maxnoofRestartEmergencyAreaIDs)) OF EmergencyAreaID
*/
typedef struct EXTERN s1ap_EmergencyAreaIDListForRestart {
   OSSIZE n;
   s1ap_EmergencyAreaID elem[256];
} s1ap_EmergencyAreaIDListForRestart;

EXTERN int asn1PE_s1ap_EmergencyAreaIDListForRestart (OSCTXT* pctxt, s1ap_EmergencyAreaIDListForRestart* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaIDListForRestart (OSCTXT* pctxt, s1ap_EmergencyAreaIDListForRestart* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaIDListForRestart 
   (const char* name, const s1ap_EmergencyAreaIDListForRestart* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaIDListForRestart (const char* name, 
   s1ap_EmergencyAreaIDListForRestart* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaIDListForRestart (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaIDListForRestart* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaIDListForRestart (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaIDListForRestart* pSrcValue, 
   s1ap_EmergencyAreaIDListForRestart* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaIDListForRestart (
   s1ap_EmergencyAreaIDListForRestart* pvalue);

/**************************************************************/
/*                                                            */
/*  Additional_GUTI_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Additional-GUTI'
*/
typedef struct EXTERN s1ap_Additional_GUTI_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_Additional_GUTI_iE_Extensions_element;

EXTERN int asn1PE_s1ap_Additional_GUTI_iE_Extensions_element (OSCTXT* pctxt, s1ap_Additional_GUTI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_Additional_GUTI_iE_Extensions_element (OSCTXT* pctxt, s1ap_Additional_GUTI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_Additional_GUTI_iE_Extensions_element 
   (const char* name, const s1ap_Additional_GUTI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Additional_GUTI_iE_Extensions_element (const char* name, 
   s1ap_Additional_GUTI_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Additional_GUTI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Additional_GUTI_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_Additional_GUTI_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_Additional_GUTI_iE_Extensions_element* pSrcValue, 
   s1ap_Additional_GUTI_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_Additional_GUTI_iE_Extensions_element (
   s1ap_Additional_GUTI_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_Additional_GUTI_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_Additional_GUTI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Additional_GUTI_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Additional-GUTI'
*/
/* List of s1ap_Additional_GUTI_iE_Extensions_element */
typedef OSRTDList s1ap_Additional_GUTI_iE_Extensions;

EXTERN int asn1PE_s1ap_Additional_GUTI_iE_Extensions (OSCTXT* pctxt, s1ap_Additional_GUTI_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_Additional_GUTI_iE_Extensions (OSCTXT* pctxt, s1ap_Additional_GUTI_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_Additional_GUTI_iE_Extensions 
   (const char* name, const s1ap_Additional_GUTI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_Additional_GUTI_iE_Extensions (const char* name, 
   s1ap_Additional_GUTI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Additional_GUTI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_Additional_GUTI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Additional_GUTI_iE_Extensions_element* 
   asn1Get_s1ap_Additional_GUTI_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_Additional_GUTI_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_Additional_GUTI_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_Additional_GUTI_iE_Extensions* pSrcValue, 
   s1ap_Additional_GUTI_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_Additional_GUTI_iE_Extensions (
   s1ap_Additional_GUTI_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_Additional_GUTI_iE_Extensions (OSCTXT *pctxt, 
   s1ap_Additional_GUTI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Additional_GUTI                                           */
/*                                                            */
/**************************************************************/
/*
 A
Additional-GUTI ::= SEQUENCE {
   gUMMEI [0] GUMMEI,
   m-TMSI [1] M-TMSI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({Additional-GUTI-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({Additional-GUTI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({Additional-GUTI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_Additional_GUTI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_GUMMEI gUMMEI;
   s1ap_M_TMSI m_TMSI;
   s1ap_Additional_GUTI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_Additional_GUTI;

EXTERN int asn1PE_s1ap_Additional_GUTI (OSCTXT* pctxt, s1ap_Additional_GUTI* pvalue);

EXTERN int asn1PD_s1ap_Additional_GUTI (OSCTXT* pctxt, s1ap_Additional_GUTI* pvalue);

EXTERN void asn1Print_s1ap_Additional_GUTI 
   (const char* name, const s1ap_Additional_GUTI* pvalue);

EXTERN int asn1PrtToStr_s1ap_Additional_GUTI (const char* name, 
   s1ap_Additional_GUTI* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Additional_GUTI (OSCTXT *pctxt, 
   const char* name, const s1ap_Additional_GUTI* pvalue);

EXTERN void asn1Copy_s1ap_Additional_GUTI (OSCTXT* pctxt, 
   const s1ap_Additional_GUTI* pSrcValue, s1ap_Additional_GUTI* pDstValue);

EXTERN int asn1Init_s1ap_Additional_GUTI (s1ap_Additional_GUTI* pvalue);

EXTERN void asn1Free_s1ap_Additional_GUTI (OSCTXT *pctxt, 
   s1ap_Additional_GUTI* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSfailedECGIList                                         */
/*                                                            */
/**************************************************************/
/*
PWSfailedECGIList ::= SEQUENCE (SIZE (1..maxnoofCellsineNB)) OF EUTRAN-CGI
*/
/* List of s1ap_EUTRAN_CGI */
typedef OSRTDList s1ap_PWSfailedECGIList;

EXTERN int asn1PE_s1ap_PWSfailedECGIList (OSCTXT* pctxt, s1ap_PWSfailedECGIList* pvalue);

EXTERN int asn1PD_s1ap_PWSfailedECGIList (OSCTXT* pctxt, s1ap_PWSfailedECGIList* pvalue);

EXTERN void asn1Print_s1ap_PWSfailedECGIList 
   (const char* name, const s1ap_PWSfailedECGIList* pvalue);

EXTERN int asn1PrtToStr_s1ap_PWSfailedECGIList (const char* name, 
   s1ap_PWSfailedECGIList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PWSfailedECGIList (OSCTXT *pctxt, 
   const char* name, const s1ap_PWSfailedECGIList* pvalue);

EXTERN void asn1Copy_s1ap_PWSfailedECGIList (OSCTXT* pctxt, 
   const s1ap_PWSfailedECGIList* pSrcValue, s1ap_PWSfailedECGIList* pDstValue);

EXTERN int asn1Init_s1ap_PWSfailedECGIList (s1ap_PWSfailedECGIList* pvalue);

EXTERN void asn1Free_s1ap_PWSfailedECGIList (OSCTXT *pctxt, 
   s1ap_PWSfailedECGIList* pvalue);

/**************************************************************/
/*                                                            */
/*  DL_NAS_MAC                                                */
/*                                                            */
/**************************************************************/
/*
DL-NAS-MAC ::= BIT STRING  (SIZE (16))
*/
typedef ASN1BitStr32 s1ap_DL_NAS_MAC;

EXTERN int asn1PE_s1ap_DL_NAS_MAC (OSCTXT* pctxt, s1ap_DL_NAS_MAC value);

EXTERN int asn1PD_s1ap_DL_NAS_MAC (OSCTXT* pctxt, s1ap_DL_NAS_MAC* pvalue);

EXTERN void asn1Print_s1ap_DL_NAS_MAC 
   (const char* name, const s1ap_DL_NAS_MAC* pvalue);

EXTERN int asn1PrtToStr_s1ap_DL_NAS_MAC (const char* name, s1ap_DL_NAS_MAC* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DL_NAS_MAC (OSCTXT *pctxt, 
   const char* name, const s1ap_DL_NAS_MAC* pvalue);

EXTERN void asn1Copy_s1ap_DL_NAS_MAC (OSCTXT* pctxt, 
   const s1ap_DL_NAS_MAC* pSrcValue, s1ap_DL_NAS_MAC* pDstValue);

EXTERN int asn1Init_s1ap_DL_NAS_MAC (s1ap_DL_NAS_MAC* pvalue);

/**************************************************************/
/*                                                            */
/*  DL_CP_SecurityInformation_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DL-CP-SecurityInformation'
*/
typedef struct EXTERN s1ap_DL_CP_SecurityInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_DL_CP_SecurityInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_DL_CP_SecurityInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_DL_CP_SecurityInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_DL_CP_SecurityInformation_iE_Extensions_element 
   (const char* name, const s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_DL_CP_SecurityInformation_iE_Extensions_element (
   const char* name, 
   s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DL_CP_SecurityInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_DL_CP_SecurityInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pSrcValue, 
   s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_DL_CP_SecurityInformation_iE_Extensions_element (
   s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_DL_CP_SecurityInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_DL_CP_SecurityInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DL_CP_SecurityInformation_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DL-CP-SecurityInformation'
*/
/* List of s1ap_DL_CP_SecurityInformation_iE_Extensions_element */
typedef OSRTDList s1ap_DL_CP_SecurityInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_DL_CP_SecurityInformation_iE_Extensions (OSCTXT* pctxt, s1ap_DL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_DL_CP_SecurityInformation_iE_Extensions (OSCTXT* pctxt, s1ap_DL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_DL_CP_SecurityInformation_iE_Extensions 
   (const char* name, const s1ap_DL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_DL_CP_SecurityInformation_iE_Extensions (
   const char* name, s1ap_DL_CP_SecurityInformation_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DL_CP_SecurityInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_DL_CP_SecurityInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_DL_CP_SecurityInformation_iE_Extensions_element* 
   asn1Get_s1ap_DL_CP_SecurityInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_DL_CP_SecurityInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_DL_CP_SecurityInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_DL_CP_SecurityInformation_iE_Extensions* pSrcValue, 
   s1ap_DL_CP_SecurityInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_DL_CP_SecurityInformation_iE_Extensions (
   s1ap_DL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_DL_CP_SecurityInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_DL_CP_SecurityInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  DL_CP_SecurityInformation                                 */
/*                                                            */
/**************************************************************/
/*
DL-CP-SecurityInformation ::= SEQUENCE {
   dl-NAS-MAC [0] DL-NAS-MAC,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({DL-CP-SecurityInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({DL-CP-SecurityInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({DL-CP-SecurityInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_DL_CP_SecurityInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_DL_NAS_MAC dl_NAS_MAC;
   s1ap_DL_CP_SecurityInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_DL_CP_SecurityInformation;

EXTERN int asn1PE_s1ap_DL_CP_SecurityInformation (OSCTXT* pctxt, s1ap_DL_CP_SecurityInformation* pvalue);

EXTERN int asn1PD_s1ap_DL_CP_SecurityInformation (OSCTXT* pctxt, s1ap_DL_CP_SecurityInformation* pvalue);

EXTERN void asn1Print_s1ap_DL_CP_SecurityInformation 
   (const char* name, const s1ap_DL_CP_SecurityInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_DL_CP_SecurityInformation (const char* name, 
   s1ap_DL_CP_SecurityInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DL_CP_SecurityInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_DL_CP_SecurityInformation* pvalue);

EXTERN void asn1Copy_s1ap_DL_CP_SecurityInformation (OSCTXT* pctxt, 
   const s1ap_DL_CP_SecurityInformation* pSrcValue, 
   s1ap_DL_CP_SecurityInformation* pDstValue);

EXTERN int asn1Init_s1ap_DL_CP_SecurityInformation (
   s1ap_DL_CP_SecurityInformation* pvalue);

EXTERN void asn1Free_s1ap_DL_CP_SecurityInformation (OSCTXT *pctxt, 
   s1ap_DL_CP_SecurityInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_NAS_MAC                                                */
/*                                                            */
/**************************************************************/
/*
UL-NAS-MAC ::= BIT STRING  (SIZE (16))
*/
typedef ASN1BitStr32 s1ap_UL_NAS_MAC;

EXTERN int asn1PE_s1ap_UL_NAS_MAC (OSCTXT* pctxt, s1ap_UL_NAS_MAC value);

EXTERN int asn1PD_s1ap_UL_NAS_MAC (OSCTXT* pctxt, s1ap_UL_NAS_MAC* pvalue);

EXTERN void asn1Print_s1ap_UL_NAS_MAC 
   (const char* name, const s1ap_UL_NAS_MAC* pvalue);

EXTERN int asn1PrtToStr_s1ap_UL_NAS_MAC (const char* name, s1ap_UL_NAS_MAC* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UL_NAS_MAC (OSCTXT *pctxt, 
   const char* name, const s1ap_UL_NAS_MAC* pvalue);

EXTERN void asn1Copy_s1ap_UL_NAS_MAC (OSCTXT* pctxt, 
   const s1ap_UL_NAS_MAC* pSrcValue, s1ap_UL_NAS_MAC* pDstValue);

EXTERN int asn1Init_s1ap_UL_NAS_MAC (s1ap_UL_NAS_MAC* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_NAS_Count                                              */
/*                                                            */
/**************************************************************/
/*
UL-NAS-Count ::= BIT STRING  (SIZE (5))
*/
typedef ASN1BitStr32 s1ap_UL_NAS_Count;

EXTERN int asn1PE_s1ap_UL_NAS_Count (OSCTXT* pctxt, s1ap_UL_NAS_Count value);

EXTERN int asn1PD_s1ap_UL_NAS_Count (OSCTXT* pctxt, s1ap_UL_NAS_Count* pvalue);

EXTERN void asn1Print_s1ap_UL_NAS_Count 
   (const char* name, const s1ap_UL_NAS_Count* pvalue);

EXTERN int asn1PrtToStr_s1ap_UL_NAS_Count (const char* name, 
   s1ap_UL_NAS_Count* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UL_NAS_Count (OSCTXT *pctxt, 
   const char* name, const s1ap_UL_NAS_Count* pvalue);

EXTERN void asn1Copy_s1ap_UL_NAS_Count (OSCTXT* pctxt, 
   const s1ap_UL_NAS_Count* pSrcValue, s1ap_UL_NAS_Count* pDstValue);

EXTERN int asn1Init_s1ap_UL_NAS_Count (s1ap_UL_NAS_Count* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_CP_SecurityInformation_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UL-CP-SecurityInformation'
*/
typedef struct EXTERN s1ap_UL_CP_SecurityInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_UL_CP_SecurityInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_UL_CP_SecurityInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_UL_CP_SecurityInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_UL_CP_SecurityInformation_iE_Extensions_element 
   (const char* name, const s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UL_CP_SecurityInformation_iE_Extensions_element (
   const char* name, 
   s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UL_CP_SecurityInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_UL_CP_SecurityInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pSrcValue, 
   s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_UL_CP_SecurityInformation_iE_Extensions_element (
   s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_UL_CP_SecurityInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_UL_CP_SecurityInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_CP_SecurityInformation_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UL-CP-SecurityInformation'
*/
/* List of s1ap_UL_CP_SecurityInformation_iE_Extensions_element */
typedef OSRTDList s1ap_UL_CP_SecurityInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_UL_CP_SecurityInformation_iE_Extensions (OSCTXT* pctxt, s1ap_UL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_UL_CP_SecurityInformation_iE_Extensions (OSCTXT* pctxt, s1ap_UL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_UL_CP_SecurityInformation_iE_Extensions 
   (const char* name, const s1ap_UL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_UL_CP_SecurityInformation_iE_Extensions (
   const char* name, s1ap_UL_CP_SecurityInformation_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UL_CP_SecurityInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_UL_CP_SecurityInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UL_CP_SecurityInformation_iE_Extensions_element* 
   asn1Get_s1ap_UL_CP_SecurityInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_UL_CP_SecurityInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_UL_CP_SecurityInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_UL_CP_SecurityInformation_iE_Extensions* pSrcValue, 
   s1ap_UL_CP_SecurityInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_UL_CP_SecurityInformation_iE_Extensions (
   s1ap_UL_CP_SecurityInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_UL_CP_SecurityInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_UL_CP_SecurityInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_CP_SecurityInformation                                 */
/*                                                            */
/**************************************************************/
/*
UL-CP-SecurityInformation ::= SEQUENCE {
   ul-NAS-MAC [0] UL-NAS-MAC,
   ul-NAS-Count [1] UL-NAS-Count,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({UL-CP-SecurityInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({UL-CP-SecurityInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({UL-CP-SecurityInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_UL_CP_SecurityInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_UL_NAS_MAC ul_NAS_MAC;
   s1ap_UL_NAS_Count ul_NAS_Count;
   s1ap_UL_CP_SecurityInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_UL_CP_SecurityInformation;

EXTERN int asn1PE_s1ap_UL_CP_SecurityInformation (OSCTXT* pctxt, s1ap_UL_CP_SecurityInformation* pvalue);

EXTERN int asn1PD_s1ap_UL_CP_SecurityInformation (OSCTXT* pctxt, s1ap_UL_CP_SecurityInformation* pvalue);

EXTERN void asn1Print_s1ap_UL_CP_SecurityInformation 
   (const char* name, const s1ap_UL_CP_SecurityInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_UL_CP_SecurityInformation (const char* name, 
   s1ap_UL_CP_SecurityInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UL_CP_SecurityInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_UL_CP_SecurityInformation* pvalue);

EXTERN void asn1Copy_s1ap_UL_CP_SecurityInformation (OSCTXT* pctxt, 
   const s1ap_UL_CP_SecurityInformation* pSrcValue, 
   s1ap_UL_CP_SecurityInformation* pDstValue);

EXTERN int asn1Init_s1ap_UL_CP_SecurityInformation (
   s1ap_UL_CP_SecurityInformation* pvalue);

EXTERN void asn1Free_s1ap_UL_CP_SecurityInformation (OSCTXT *pctxt, 
   s1ap_UL_CP_SecurityInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFlag                                              */
/*                                                            */
/**************************************************************/
/*
 H
HandoverFlag ::= ENUMERATED { handoverPreparation(0), ... }
*/
typedef enum {
   s1ap_handoverPreparation = 0
} s1ap_HandoverFlag_Root;

typedef OSUINT32 s1ap_HandoverFlag;

EXTERN int asn1PE_s1ap_HandoverFlag (OSCTXT* pctxt, s1ap_HandoverFlag value);

EXTERN int asn1PD_s1ap_HandoverFlag (OSCTXT* pctxt, s1ap_HandoverFlag* pvalue);

EXTERN void asn1Print_s1ap_HandoverFlag 
   (const char* name, const s1ap_HandoverFlag* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverFlag (const char* name, 
   s1ap_HandoverFlag* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverFlag (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverFlag* pvalue);

EXTERN extern const OSEnumItem s1ap_HandoverFlag_ENUMTAB[];
#define s1ap_HandoverFlag_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_HandoverFlag_ToString (OSINT32 value);

EXTERN int s1ap_HandoverFlag_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_HandoverFlag* pvalue);

EXTERN int s1ap_HandoverFlag_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_HandoverFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  NASSecurityParametersfromE_UTRAN                          */
/*                                                            */
/**************************************************************/
/*
NASSecurityParametersfromE-UTRAN ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_NASSecurityParametersfromE_UTRAN;

EXTERN int asn1PE_s1ap_NASSecurityParametersfromE_UTRAN (OSCTXT* pctxt, s1ap_NASSecurityParametersfromE_UTRAN value);

EXTERN int asn1PD_s1ap_NASSecurityParametersfromE_UTRAN (OSCTXT* pctxt, s1ap_NASSecurityParametersfromE_UTRAN* pvalue);

EXTERN void asn1Print_s1ap_NASSecurityParametersfromE_UTRAN 
   (const char* name, const s1ap_NASSecurityParametersfromE_UTRAN* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASSecurityParametersfromE_UTRAN (const char* name, 
   s1ap_NASSecurityParametersfromE_UTRAN* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASSecurityParametersfromE_UTRAN (OSCTXT *pctxt, 
   const char* name, const s1ap_NASSecurityParametersfromE_UTRAN* pvalue);

EXTERN void asn1Copy_s1ap_NASSecurityParametersfromE_UTRAN (OSCTXT* pctxt, 
   const s1ap_NASSecurityParametersfromE_UTRAN* pSrcValue, 
   s1ap_NASSecurityParametersfromE_UTRAN* pDstValue);

EXTERN int asn1Init_s1ap_NASSecurityParametersfromE_UTRAN (
   s1ap_NASSecurityParametersfromE_UTRAN* pvalue);

EXTERN void asn1Free_s1ap_NASSecurityParametersfromE_UTRAN (OSCTXT *pctxt, 
   s1ap_NASSecurityParametersfromE_UTRAN* pvalue);

/**************************************************************/
/*                                                            */
/*  Target_ToSource_TransparentContainer                      */
/*                                                            */
/**************************************************************/
/*
Target-ToSource-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_Target_ToSource_TransparentContainer;

EXTERN int asn1PE_s1ap_Target_ToSource_TransparentContainer (OSCTXT* pctxt, s1ap_Target_ToSource_TransparentContainer value);

EXTERN int asn1PD_s1ap_Target_ToSource_TransparentContainer (OSCTXT* pctxt, s1ap_Target_ToSource_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_Target_ToSource_TransparentContainer 
   (const char* name, const s1ap_Target_ToSource_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_Target_ToSource_TransparentContainer (const char* name, 
   s1ap_Target_ToSource_TransparentContainer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Target_ToSource_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_Target_ToSource_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_Target_ToSource_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_Target_ToSource_TransparentContainer* pSrcValue, 
   s1ap_Target_ToSource_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_Target_ToSource_TransparentContainer (
   s1ap_Target_ToSource_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_Target_ToSource_TransparentContainer (OSCTXT *pctxt, 
   s1ap_Target_ToSource_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  NumberOfBroadcasts                                        */
/*                                                            */
/**************************************************************/
/*
NumberOfBroadcasts ::= INTEGER (0..65535)
*/
typedef OSUINT16 s1ap_NumberOfBroadcasts;

EXTERN int asn1PE_s1ap_NumberOfBroadcasts (OSCTXT* pctxt, s1ap_NumberOfBroadcasts value);

EXTERN int asn1PD_s1ap_NumberOfBroadcasts (OSCTXT* pctxt, s1ap_NumberOfBroadcasts* pvalue);

EXTERN void asn1Print_s1ap_NumberOfBroadcasts 
   (const char* name, const s1ap_NumberOfBroadcasts* pvalue);

EXTERN int asn1PrtToStr_s1ap_NumberOfBroadcasts (const char* name, 
   s1ap_NumberOfBroadcasts* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NumberOfBroadcasts (OSCTXT *pctxt, 
   const char* name, const s1ap_NumberOfBroadcasts* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Cancelled_Item_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellID-Cancelled-Item'
*/
typedef struct EXTERN s1ap_CellID_Cancelled_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CellID_Cancelled_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CellID_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CellID_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CellID_Cancelled_Item_iE_Extensions_element 
   (const char* name, const s1ap_CellID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Cancelled_Item_iE_Extensions_element (
   const char* name, s1ap_CellID_Cancelled_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Cancelled_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CellID_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CellID_Cancelled_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CellID_Cancelled_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CellID_Cancelled_Item_iE_Extensions_element (
   s1ap_CellID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CellID_Cancelled_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CellID_Cancelled_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Cancelled_Item_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellID-Cancelled-Item'
*/
/* List of s1ap_CellID_Cancelled_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CellID_Cancelled_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CellID_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CellID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CellID_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CellID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CellID_Cancelled_Item_iE_Extensions 
   (const char* name, const s1ap_CellID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Cancelled_Item_iE_Extensions (const char* name, 
   s1ap_CellID_Cancelled_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Cancelled_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Cancelled_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CellID_Cancelled_Item_iE_Extensions_element* 
   asn1Get_s1ap_CellID_Cancelled_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CellID_Cancelled_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CellID_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CellID_Cancelled_Item_iE_Extensions* pSrcValue, 
   s1ap_CellID_Cancelled_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CellID_Cancelled_Item_iE_Extensions (
   s1ap_CellID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CellID_Cancelled_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CellID_Cancelled_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Cancelled_Item                                     */
/*                                                            */
/**************************************************************/
/*
CellID-Cancelled-Item ::= SEQUENCE {
   eCGI [0] EUTRAN-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CellID-Cancelled-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CellID-Cancelled-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CellID-Cancelled-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CellID_Cancelled_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eCGI;
   s1ap_NumberOfBroadcasts numberOfBroadcasts;
   s1ap_CellID_Cancelled_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CellID_Cancelled_Item;

EXTERN int asn1PE_s1ap_CellID_Cancelled_Item (OSCTXT* pctxt, s1ap_CellID_Cancelled_Item* pvalue);

EXTERN int asn1PD_s1ap_CellID_Cancelled_Item (OSCTXT* pctxt, s1ap_CellID_Cancelled_Item* pvalue);

EXTERN void asn1Print_s1ap_CellID_Cancelled_Item 
   (const char* name, const s1ap_CellID_Cancelled_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Cancelled_Item (const char* name, 
   s1ap_CellID_Cancelled_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Cancelled_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Cancelled_Item* pvalue);

EXTERN void asn1Copy_s1ap_CellID_Cancelled_Item (OSCTXT* pctxt, 
   const s1ap_CellID_Cancelled_Item* pSrcValue, s1ap_CellID_Cancelled_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_CellID_Cancelled_Item (s1ap_CellID_Cancelled_Item* pvalue);

EXTERN void asn1Free_s1ap_CellID_Cancelled_Item (OSCTXT *pctxt, 
   s1ap_CellID_Cancelled_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Cancelled                                          */
/*                                                            */
/**************************************************************/
/*
CellID-Cancelled ::= SEQUENCE (SIZE (1..maxnoofCellID)) OF CellID-Cancelled-Item
*/
/* List of s1ap_CellID_Cancelled_Item */
typedef OSRTDList s1ap_CellID_Cancelled;

EXTERN int asn1PE_s1ap_CellID_Cancelled (OSCTXT* pctxt, s1ap_CellID_Cancelled* pvalue);

EXTERN int asn1PD_s1ap_CellID_Cancelled (OSCTXT* pctxt, s1ap_CellID_Cancelled* pvalue);

EXTERN void asn1Print_s1ap_CellID_Cancelled 
   (const char* name, const s1ap_CellID_Cancelled* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Cancelled (const char* name, 
   s1ap_CellID_Cancelled* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Cancelled (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Cancelled* pvalue);

EXTERN void asn1Copy_s1ap_CellID_Cancelled (OSCTXT* pctxt, 
   const s1ap_CellID_Cancelled* pSrcValue, s1ap_CellID_Cancelled* pDstValue);

EXTERN int asn1Init_s1ap_CellID_Cancelled (s1ap_CellID_Cancelled* pvalue);

EXTERN void asn1Free_s1ap_CellID_Cancelled (OSCTXT *pctxt, 
   s1ap_CellID_Cancelled* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinTAI_Item_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellinTAI-Item'
*/
typedef struct EXTERN s1ap_CancelledCellinTAI_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CancelledCellinTAI_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CancelledCellinTAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinTAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinTAI_Item_iE_Extensions_element 
   (const char* name, const s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinTAI_Item_iE_Extensions_element (
   const char* name, 
   s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinTAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CancelledCellinTAI_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinTAI_Item_iE_Extensions_element (
   s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinTAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CancelledCellinTAI_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinTAI_Item_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellinTAI-Item'
*/
/* List of s1ap_CancelledCellinTAI_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CancelledCellinTAI_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CancelledCellinTAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CancelledCellinTAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinTAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CancelledCellinTAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinTAI_Item_iE_Extensions 
   (const char* name, const s1ap_CancelledCellinTAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinTAI_Item_iE_Extensions (const char* name, 
   s1ap_CancelledCellinTAI_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinTAI_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinTAI_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CancelledCellinTAI_Item_iE_Extensions_element* 
   asn1Get_s1ap_CancelledCellinTAI_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CancelledCellinTAI_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CancelledCellinTAI_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CancelledCellinTAI_Item_iE_Extensions* pSrcValue, 
   s1ap_CancelledCellinTAI_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinTAI_Item_iE_Extensions (
   s1ap_CancelledCellinTAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinTAI_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CancelledCellinTAI_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinTAI_Item                                   */
/*                                                            */
/**************************************************************/
/*
CancelledCellinTAI-Item ::= SEQUENCE {
   eCGI [0] EUTRAN-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CancelledCellinTAI-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CancelledCellinTAI-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CancelledCellinTAI-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CancelledCellinTAI_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eCGI;
   s1ap_NumberOfBroadcasts numberOfBroadcasts;
   s1ap_CancelledCellinTAI_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CancelledCellinTAI_Item;

EXTERN int asn1PE_s1ap_CancelledCellinTAI_Item (OSCTXT* pctxt, s1ap_CancelledCellinTAI_Item* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinTAI_Item (OSCTXT* pctxt, s1ap_CancelledCellinTAI_Item* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinTAI_Item 
   (const char* name, const s1ap_CancelledCellinTAI_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinTAI_Item (const char* name, 
   s1ap_CancelledCellinTAI_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinTAI_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinTAI_Item* pvalue);

EXTERN void asn1Copy_s1ap_CancelledCellinTAI_Item (OSCTXT* pctxt, 
   const s1ap_CancelledCellinTAI_Item* pSrcValue, s1ap_CancelledCellinTAI_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinTAI_Item (
   s1ap_CancelledCellinTAI_Item* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinTAI_Item (OSCTXT *pctxt, 
   s1ap_CancelledCellinTAI_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinTAI                                        */
/*                                                            */
/**************************************************************/
/*
CancelledCellinTAI ::= SEQUENCE (SIZE (1..maxnoofCellinTAI)) OF CancelledCellinTAI-Item
*/
/* List of s1ap_CancelledCellinTAI_Item */
typedef OSRTDList s1ap_CancelledCellinTAI;

EXTERN int asn1PE_s1ap_CancelledCellinTAI (OSCTXT* pctxt, s1ap_CancelledCellinTAI* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinTAI (OSCTXT* pctxt, s1ap_CancelledCellinTAI* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinTAI 
   (const char* name, const s1ap_CancelledCellinTAI* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinTAI (const char* name, 
   s1ap_CancelledCellinTAI* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinTAI (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinTAI* pvalue);

EXTERN void asn1Copy_s1ap_CancelledCellinTAI (OSCTXT* pctxt, 
   const s1ap_CancelledCellinTAI* pSrcValue, s1ap_CancelledCellinTAI*
    pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinTAI (s1ap_CancelledCellinTAI* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinTAI (OSCTXT *pctxt, 
   s1ap_CancelledCellinTAI* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Cancelled_Item_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI-Cancelled-Item'
*/
typedef struct EXTERN s1ap_TAI_Cancelled_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TAI_Cancelled_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TAI_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAI_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TAI_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAI_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TAI_Cancelled_Item_iE_Extensions_element 
   (const char* name, const s1ap_TAI_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Cancelled_Item_iE_Extensions_element (
   const char* name, s1ap_TAI_Cancelled_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Cancelled_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TAI_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TAI_Cancelled_Item_iE_Extensions_element* pSrcValue, 
   s1ap_TAI_Cancelled_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TAI_Cancelled_Item_iE_Extensions_element (
   s1ap_TAI_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TAI_Cancelled_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TAI_Cancelled_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Cancelled_Item_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI-Cancelled-Item'
*/
/* List of s1ap_TAI_Cancelled_Item_iE_Extensions_element */
typedef OSRTDList s1ap_TAI_Cancelled_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_TAI_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, s1ap_TAI_Cancelled_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TAI_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, s1ap_TAI_Cancelled_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TAI_Cancelled_Item_iE_Extensions 
   (const char* name, const s1ap_TAI_Cancelled_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Cancelled_Item_iE_Extensions (const char* name, 
   s1ap_TAI_Cancelled_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Cancelled_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Cancelled_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TAI_Cancelled_Item_iE_Extensions_element* 
   asn1Get_s1ap_TAI_Cancelled_Item_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TAI_Cancelled_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TAI_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TAI_Cancelled_Item_iE_Extensions* pSrcValue, 
   s1ap_TAI_Cancelled_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TAI_Cancelled_Item_iE_Extensions (
   s1ap_TAI_Cancelled_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TAI_Cancelled_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TAI_Cancelled_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Cancelled_Item                                        */
/*                                                            */
/**************************************************************/
/*
TAI-Cancelled-Item ::= SEQUENCE {
   tAI [0] TAI,
   cancelledCellinTAI [1] CancelledCellinTAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TAI-Cancelled-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TAI-Cancelled-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TAI-Cancelled-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TAI_Cancelled_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAI tAI;
   s1ap_CancelledCellinTAI cancelledCellinTAI;
   s1ap_TAI_Cancelled_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TAI_Cancelled_Item;

EXTERN int asn1PE_s1ap_TAI_Cancelled_Item (OSCTXT* pctxt, s1ap_TAI_Cancelled_Item* pvalue);

EXTERN int asn1PD_s1ap_TAI_Cancelled_Item (OSCTXT* pctxt, s1ap_TAI_Cancelled_Item* pvalue);

EXTERN void asn1Print_s1ap_TAI_Cancelled_Item 
   (const char* name, const s1ap_TAI_Cancelled_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Cancelled_Item (const char* name, 
   s1ap_TAI_Cancelled_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Cancelled_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Cancelled_Item* pvalue);

EXTERN void asn1Copy_s1ap_TAI_Cancelled_Item (OSCTXT* pctxt, 
   const s1ap_TAI_Cancelled_Item* pSrcValue, s1ap_TAI_Cancelled_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_TAI_Cancelled_Item (s1ap_TAI_Cancelled_Item* pvalue);

EXTERN void asn1Free_s1ap_TAI_Cancelled_Item (OSCTXT *pctxt, 
   s1ap_TAI_Cancelled_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Cancelled                                             */
/*                                                            */
/**************************************************************/
/*
TAI-Cancelled ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAI-Cancelled-Item
*/
/* List of s1ap_TAI_Cancelled_Item */
typedef OSRTDList s1ap_TAI_Cancelled;

EXTERN int asn1PE_s1ap_TAI_Cancelled (OSCTXT* pctxt, s1ap_TAI_Cancelled* pvalue);

EXTERN int asn1PD_s1ap_TAI_Cancelled (OSCTXT* pctxt, s1ap_TAI_Cancelled* pvalue);

EXTERN void asn1Print_s1ap_TAI_Cancelled 
   (const char* name, const s1ap_TAI_Cancelled* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Cancelled (const char* name, 
   s1ap_TAI_Cancelled* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Cancelled (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Cancelled* pvalue);

EXTERN void asn1Copy_s1ap_TAI_Cancelled (OSCTXT* pctxt, 
   const s1ap_TAI_Cancelled* pSrcValue, s1ap_TAI_Cancelled* pDstValue);

EXTERN int asn1Init_s1ap_TAI_Cancelled (s1ap_TAI_Cancelled* pvalue);

EXTERN void asn1Free_s1ap_TAI_Cancelled (OSCTXT *pctxt, s1ap_TAI_Cancelled* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinEAI_Item_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellinEAI-Item'
*/
typedef struct EXTERN s1ap_CancelledCellinEAI_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CancelledCellinEAI_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CancelledCellinEAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinEAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinEAI_Item_iE_Extensions_element 
   (const char* name, const s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinEAI_Item_iE_Extensions_element (
   const char* name, 
   s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinEAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CancelledCellinEAI_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinEAI_Item_iE_Extensions_element (
   s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinEAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CancelledCellinEAI_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinEAI_Item_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellinEAI-Item'
*/
/* List of s1ap_CancelledCellinEAI_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CancelledCellinEAI_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CancelledCellinEAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CancelledCellinEAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinEAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CancelledCellinEAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinEAI_Item_iE_Extensions 
   (const char* name, const s1ap_CancelledCellinEAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinEAI_Item_iE_Extensions (const char* name, 
   s1ap_CancelledCellinEAI_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinEAI_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinEAI_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CancelledCellinEAI_Item_iE_Extensions_element* 
   asn1Get_s1ap_CancelledCellinEAI_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CancelledCellinEAI_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CancelledCellinEAI_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CancelledCellinEAI_Item_iE_Extensions* pSrcValue, 
   s1ap_CancelledCellinEAI_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinEAI_Item_iE_Extensions (
   s1ap_CancelledCellinEAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinEAI_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CancelledCellinEAI_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinEAI_Item                                   */
/*                                                            */
/**************************************************************/
/*
CancelledCellinEAI-Item ::= SEQUENCE {
   eCGI [0] EUTRAN-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CancelledCellinEAI-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CancelledCellinEAI-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CancelledCellinEAI-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CancelledCellinEAI_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eCGI;
   s1ap_NumberOfBroadcasts numberOfBroadcasts;
   s1ap_CancelledCellinEAI_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CancelledCellinEAI_Item;

EXTERN int asn1PE_s1ap_CancelledCellinEAI_Item (OSCTXT* pctxt, s1ap_CancelledCellinEAI_Item* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinEAI_Item (OSCTXT* pctxt, s1ap_CancelledCellinEAI_Item* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinEAI_Item 
   (const char* name, const s1ap_CancelledCellinEAI_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinEAI_Item (const char* name, 
   s1ap_CancelledCellinEAI_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinEAI_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinEAI_Item* pvalue);

EXTERN void asn1Copy_s1ap_CancelledCellinEAI_Item (OSCTXT* pctxt, 
   const s1ap_CancelledCellinEAI_Item* pSrcValue, s1ap_CancelledCellinEAI_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinEAI_Item (
   s1ap_CancelledCellinEAI_Item* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinEAI_Item (OSCTXT *pctxt, 
   s1ap_CancelledCellinEAI_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellinEAI                                        */
/*                                                            */
/**************************************************************/
/*
 C
CancelledCellinEAI ::= SEQUENCE (SIZE (1..maxnoofCellinEAI)) OF CancelledCellinEAI-Item
*/
/* List of s1ap_CancelledCellinEAI_Item */
typedef OSRTDList s1ap_CancelledCellinEAI;

EXTERN int asn1PE_s1ap_CancelledCellinEAI (OSCTXT* pctxt, s1ap_CancelledCellinEAI* pvalue);

EXTERN int asn1PD_s1ap_CancelledCellinEAI (OSCTXT* pctxt, s1ap_CancelledCellinEAI* pvalue);

EXTERN void asn1Print_s1ap_CancelledCellinEAI 
   (const char* name, const s1ap_CancelledCellinEAI* pvalue);

EXTERN int asn1PrtToStr_s1ap_CancelledCellinEAI (const char* name, 
   s1ap_CancelledCellinEAI* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CancelledCellinEAI (OSCTXT *pctxt, 
   const char* name, const s1ap_CancelledCellinEAI* pvalue);

EXTERN void asn1Copy_s1ap_CancelledCellinEAI (OSCTXT* pctxt, 
   const s1ap_CancelledCellinEAI* pSrcValue, s1ap_CancelledCellinEAI*
    pDstValue);

EXTERN int asn1Init_s1ap_CancelledCellinEAI (s1ap_CancelledCellinEAI* pvalue);

EXTERN void asn1Free_s1ap_CancelledCellinEAI (OSCTXT *pctxt, 
   s1ap_CancelledCellinEAI* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Cancelled_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaID-Cancelled-Item'
*/
typedef struct EXTERN s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element 
   (const char* name, const s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element (
   const char* name, 
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pSrcValue, 
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element (
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Cancelled_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaID-Cancelled-Item'
*/
/* List of s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element */
typedef OSRTDList s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions 
   (const char* name, const s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions (
   const char* name, 
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions_element* 
   asn1Get_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pSrcValue, 
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions (
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Cancelled_Item                            */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaID-Cancelled-Item ::= SEQUENCE {
   emergencyAreaID [0] EmergencyAreaID,
   cancelledCellinEAI [1] CancelledCellinEAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EmergencyAreaID-Cancelled-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EmergencyAreaID-Cancelled-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EmergencyAreaID-Cancelled-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EmergencyAreaID_Cancelled_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EmergencyAreaID emergencyAreaID;
   s1ap_CancelledCellinEAI cancelledCellinEAI;
   s1ap_EmergencyAreaID_Cancelled_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EmergencyAreaID_Cancelled_Item;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Cancelled_Item (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled_Item* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Cancelled_Item (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled_Item* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Cancelled_Item 
   (const char* name, const s1ap_EmergencyAreaID_Cancelled_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Cancelled_Item (const char* name, 
   s1ap_EmergencyAreaID_Cancelled_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Cancelled_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Cancelled_Item* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Cancelled_Item (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Cancelled_Item* pSrcValue, 
   s1ap_EmergencyAreaID_Cancelled_Item* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Cancelled_Item (
   s1ap_EmergencyAreaID_Cancelled_Item* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Cancelled_Item (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Cancelled_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Cancelled                                 */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaID-Cancelled ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaID-Cancelled-Item
*/
/* List of s1ap_EmergencyAreaID_Cancelled_Item */
typedef OSRTDList s1ap_EmergencyAreaID_Cancelled;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Cancelled (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Cancelled (OSCTXT* pctxt, s1ap_EmergencyAreaID_Cancelled* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Cancelled 
   (const char* name, const s1ap_EmergencyAreaID_Cancelled* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Cancelled (const char* name, 
   s1ap_EmergencyAreaID_Cancelled* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Cancelled (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Cancelled* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Cancelled (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Cancelled* pSrcValue, 
   s1ap_EmergencyAreaID_Cancelled* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Cancelled (
   s1ap_EmergencyAreaID_Cancelled* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Cancelled (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Cancelled* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastCancelledAreaList                                */
/*                                                            */
/**************************************************************/
/*
BroadcastCancelledAreaList ::= CHOICE {
   cellID-Cancelled [0] CellID-Cancelled,
   tAI-Cancelled [1] TAI-Cancelled,
   emergencyAreaID-Cancelled [2] EmergencyAreaID-Cancelled,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_BroadcastCancelledAreaList_cellID_Cancelled 1
#define T_s1ap_BroadcastCancelledAreaList_tAI_Cancelled 2
#define T_s1ap_BroadcastCancelledAreaList_emergencyAreaID_Cancelled 3
#define T_s1ap_BroadcastCancelledAreaList_extElem1 4

typedef struct EXTERN s1ap_BroadcastCancelledAreaList {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_CellID_Cancelled *cellID_Cancelled;
      /* t = 2 */
      s1ap_TAI_Cancelled *tAI_Cancelled;
      /* t = 3 */
      s1ap_EmergencyAreaID_Cancelled *emergencyAreaID_Cancelled;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_BroadcastCancelledAreaList;

EXTERN int asn1PE_s1ap_BroadcastCancelledAreaList (OSCTXT* pctxt, s1ap_BroadcastCancelledAreaList* pvalue);

EXTERN int asn1PD_s1ap_BroadcastCancelledAreaList (OSCTXT* pctxt, s1ap_BroadcastCancelledAreaList* pvalue);

EXTERN void asn1Print_s1ap_BroadcastCancelledAreaList 
   (const char* name, const s1ap_BroadcastCancelledAreaList* pvalue);

EXTERN int asn1PrtToStr_s1ap_BroadcastCancelledAreaList (const char* name, 
   s1ap_BroadcastCancelledAreaList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BroadcastCancelledAreaList (OSCTXT *pctxt, 
   const char* name, const s1ap_BroadcastCancelledAreaList* pvalue);

EXTERN void asn1Copy_s1ap_BroadcastCancelledAreaList (OSCTXT* pctxt, 
   const s1ap_BroadcastCancelledAreaList* pSrcValue, 
   s1ap_BroadcastCancelledAreaList* pDstValue);

EXTERN int asn1Init_s1ap_BroadcastCancelledAreaList (
   s1ap_BroadcastCancelledAreaList* pvalue);

EXTERN void asn1Free_s1ap_BroadcastCancelledAreaList (OSCTXT *pctxt, 
   s1ap_BroadcastCancelledAreaList* pvalue);

/**************************************************************/
/*                                                            */
/*  MMERelaySupportIndicator                                  */
/*                                                            */
/**************************************************************/
/*
MMERelaySupportIndicator ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   s1ap_true__6 = 0
} s1ap_MMERelaySupportIndicator_Root;

typedef OSUINT32 s1ap_MMERelaySupportIndicator;

EXTERN int asn1PE_s1ap_MMERelaySupportIndicator (OSCTXT* pctxt, s1ap_MMERelaySupportIndicator value);

EXTERN int asn1PD_s1ap_MMERelaySupportIndicator (OSCTXT* pctxt, s1ap_MMERelaySupportIndicator* pvalue);

EXTERN void asn1Print_s1ap_MMERelaySupportIndicator 
   (const char* name, const s1ap_MMERelaySupportIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMERelaySupportIndicator (const char* name, 
   s1ap_MMERelaySupportIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMERelaySupportIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_MMERelaySupportIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_MMERelaySupportIndicator_ENUMTAB[];
#define s1ap_MMERelaySupportIndicator_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_MMERelaySupportIndicator_ToString (OSINT32 value);

EXTERN int s1ap_MMERelaySupportIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_MMERelaySupportIndicator* pvalue);

EXTERN int s1ap_MMERelaySupportIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_MMERelaySupportIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Broadcast_Item_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellID-Broadcast-Item'
*/
typedef struct EXTERN s1ap_CellID_Broadcast_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CellID_Broadcast_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CellID_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CellID_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CellID_Broadcast_Item_iE_Extensions_element 
   (const char* name, const s1ap_CellID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Broadcast_Item_iE_Extensions_element (
   const char* name, s1ap_CellID_Broadcast_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Broadcast_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CellID_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CellID_Broadcast_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CellID_Broadcast_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CellID_Broadcast_Item_iE_Extensions_element (
   s1ap_CellID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CellID_Broadcast_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CellID_Broadcast_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Broadcast_Item_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellID-Broadcast-Item'
*/
/* List of s1ap_CellID_Broadcast_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CellID_Broadcast_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CellID_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CellID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CellID_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CellID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CellID_Broadcast_Item_iE_Extensions 
   (const char* name, const s1ap_CellID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Broadcast_Item_iE_Extensions (const char* name, 
   s1ap_CellID_Broadcast_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Broadcast_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Broadcast_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CellID_Broadcast_Item_iE_Extensions_element* 
   asn1Get_s1ap_CellID_Broadcast_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CellID_Broadcast_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CellID_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CellID_Broadcast_Item_iE_Extensions* pSrcValue, 
   s1ap_CellID_Broadcast_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CellID_Broadcast_Item_iE_Extensions (
   s1ap_CellID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CellID_Broadcast_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CellID_Broadcast_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Broadcast_Item                                     */
/*                                                            */
/**************************************************************/
/*
CellID-Broadcast-Item ::= SEQUENCE {
   eCGI [0] EUTRAN-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CellID-Broadcast-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CellID-Broadcast-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CellID-Broadcast-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CellID_Broadcast_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eCGI;
   s1ap_CellID_Broadcast_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CellID_Broadcast_Item;

EXTERN int asn1PE_s1ap_CellID_Broadcast_Item (OSCTXT* pctxt, s1ap_CellID_Broadcast_Item* pvalue);

EXTERN int asn1PD_s1ap_CellID_Broadcast_Item (OSCTXT* pctxt, s1ap_CellID_Broadcast_Item* pvalue);

EXTERN void asn1Print_s1ap_CellID_Broadcast_Item 
   (const char* name, const s1ap_CellID_Broadcast_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Broadcast_Item (const char* name, 
   s1ap_CellID_Broadcast_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Broadcast_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Broadcast_Item* pvalue);

EXTERN void asn1Copy_s1ap_CellID_Broadcast_Item (OSCTXT* pctxt, 
   const s1ap_CellID_Broadcast_Item* pSrcValue, s1ap_CellID_Broadcast_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_CellID_Broadcast_Item (s1ap_CellID_Broadcast_Item* pvalue);

EXTERN void asn1Free_s1ap_CellID_Broadcast_Item (OSCTXT *pctxt, 
   s1ap_CellID_Broadcast_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CellID_Broadcast                                          */
/*                                                            */
/**************************************************************/
/*
CellID-Broadcast ::= SEQUENCE (SIZE (1..maxnoofCellID)) OF CellID-Broadcast-Item
*/
/* List of s1ap_CellID_Broadcast_Item */
typedef OSRTDList s1ap_CellID_Broadcast;

EXTERN int asn1PE_s1ap_CellID_Broadcast (OSCTXT* pctxt, s1ap_CellID_Broadcast* pvalue);

EXTERN int asn1PD_s1ap_CellID_Broadcast (OSCTXT* pctxt, s1ap_CellID_Broadcast* pvalue);

EXTERN void asn1Print_s1ap_CellID_Broadcast 
   (const char* name, const s1ap_CellID_Broadcast* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellID_Broadcast (const char* name, 
   s1ap_CellID_Broadcast* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellID_Broadcast (OSCTXT *pctxt, 
   const char* name, const s1ap_CellID_Broadcast* pvalue);

EXTERN void asn1Copy_s1ap_CellID_Broadcast (OSCTXT* pctxt, 
   const s1ap_CellID_Broadcast* pSrcValue, s1ap_CellID_Broadcast* pDstValue);

EXTERN int asn1Init_s1ap_CellID_Broadcast (s1ap_CellID_Broadcast* pvalue);

EXTERN void asn1Free_s1ap_CellID_Broadcast (OSCTXT *pctxt, 
   s1ap_CellID_Broadcast* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinTAI_Item_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellinTAI-Item'
*/
typedef struct EXTERN s1ap_CompletedCellinTAI_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CompletedCellinTAI_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CompletedCellinTAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinTAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinTAI_Item_iE_Extensions_element 
   (const char* name, const s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinTAI_Item_iE_Extensions_element (
   const char* name, 
   s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinTAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CompletedCellinTAI_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinTAI_Item_iE_Extensions_element (
   s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinTAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CompletedCellinTAI_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinTAI_Item_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellinTAI-Item'
*/
/* List of s1ap_CompletedCellinTAI_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CompletedCellinTAI_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CompletedCellinTAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CompletedCellinTAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinTAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CompletedCellinTAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinTAI_Item_iE_Extensions 
   (const char* name, const s1ap_CompletedCellinTAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinTAI_Item_iE_Extensions (const char* name, 
   s1ap_CompletedCellinTAI_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinTAI_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinTAI_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CompletedCellinTAI_Item_iE_Extensions_element* 
   asn1Get_s1ap_CompletedCellinTAI_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CompletedCellinTAI_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CompletedCellinTAI_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CompletedCellinTAI_Item_iE_Extensions* pSrcValue, 
   s1ap_CompletedCellinTAI_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinTAI_Item_iE_Extensions (
   s1ap_CompletedCellinTAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinTAI_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CompletedCellinTAI_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinTAI_Item                                   */
/*                                                            */
/**************************************************************/
/*
CompletedCellinTAI-Item ::= SEQUENCE {
   eCGI [0] EUTRAN-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CompletedCellinTAI-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CompletedCellinTAI-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CompletedCellinTAI-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CompletedCellinTAI_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eCGI;
   s1ap_CompletedCellinTAI_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CompletedCellinTAI_Item;

EXTERN int asn1PE_s1ap_CompletedCellinTAI_Item (OSCTXT* pctxt, s1ap_CompletedCellinTAI_Item* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinTAI_Item (OSCTXT* pctxt, s1ap_CompletedCellinTAI_Item* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinTAI_Item 
   (const char* name, const s1ap_CompletedCellinTAI_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinTAI_Item (const char* name, 
   s1ap_CompletedCellinTAI_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinTAI_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinTAI_Item* pvalue);

EXTERN void asn1Copy_s1ap_CompletedCellinTAI_Item (OSCTXT* pctxt, 
   const s1ap_CompletedCellinTAI_Item* pSrcValue, s1ap_CompletedCellinTAI_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinTAI_Item (
   s1ap_CompletedCellinTAI_Item* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinTAI_Item (OSCTXT *pctxt, 
   s1ap_CompletedCellinTAI_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinTAI                                        */
/*                                                            */
/**************************************************************/
/*
CompletedCellinTAI ::= SEQUENCE (SIZE (1..maxnoofCellinTAI)) OF CompletedCellinTAI-Item
*/
/* List of s1ap_CompletedCellinTAI_Item */
typedef OSRTDList s1ap_CompletedCellinTAI;

EXTERN int asn1PE_s1ap_CompletedCellinTAI (OSCTXT* pctxt, s1ap_CompletedCellinTAI* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinTAI (OSCTXT* pctxt, s1ap_CompletedCellinTAI* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinTAI 
   (const char* name, const s1ap_CompletedCellinTAI* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinTAI (const char* name, 
   s1ap_CompletedCellinTAI* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinTAI (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinTAI* pvalue);

EXTERN void asn1Copy_s1ap_CompletedCellinTAI (OSCTXT* pctxt, 
   const s1ap_CompletedCellinTAI* pSrcValue, s1ap_CompletedCellinTAI*
    pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinTAI (s1ap_CompletedCellinTAI* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinTAI (OSCTXT *pctxt, 
   s1ap_CompletedCellinTAI* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Broadcast_Item_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI-Broadcast-Item'
*/
typedef struct EXTERN s1ap_TAI_Broadcast_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TAI_Broadcast_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TAI_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAI_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TAI_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAI_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TAI_Broadcast_Item_iE_Extensions_element 
   (const char* name, const s1ap_TAI_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Broadcast_Item_iE_Extensions_element (
   const char* name, s1ap_TAI_Broadcast_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Broadcast_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TAI_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TAI_Broadcast_Item_iE_Extensions_element* pSrcValue, 
   s1ap_TAI_Broadcast_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TAI_Broadcast_Item_iE_Extensions_element (
   s1ap_TAI_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TAI_Broadcast_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TAI_Broadcast_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Broadcast_Item_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI-Broadcast-Item'
*/
/* List of s1ap_TAI_Broadcast_Item_iE_Extensions_element */
typedef OSRTDList s1ap_TAI_Broadcast_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_TAI_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, s1ap_TAI_Broadcast_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TAI_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, s1ap_TAI_Broadcast_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TAI_Broadcast_Item_iE_Extensions 
   (const char* name, const s1ap_TAI_Broadcast_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Broadcast_Item_iE_Extensions (const char* name, 
   s1ap_TAI_Broadcast_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Broadcast_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Broadcast_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TAI_Broadcast_Item_iE_Extensions_element* 
   asn1Get_s1ap_TAI_Broadcast_Item_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TAI_Broadcast_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TAI_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TAI_Broadcast_Item_iE_Extensions* pSrcValue, 
   s1ap_TAI_Broadcast_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TAI_Broadcast_Item_iE_Extensions (
   s1ap_TAI_Broadcast_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TAI_Broadcast_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TAI_Broadcast_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Broadcast_Item                                        */
/*                                                            */
/**************************************************************/
/*
TAI-Broadcast-Item ::= SEQUENCE {
   tAI [0] TAI,
   completedCellinTAI [1] CompletedCellinTAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TAI-Broadcast-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TAI-Broadcast-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TAI-Broadcast-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TAI_Broadcast_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAI tAI;
   s1ap_CompletedCellinTAI completedCellinTAI;
   s1ap_TAI_Broadcast_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TAI_Broadcast_Item;

EXTERN int asn1PE_s1ap_TAI_Broadcast_Item (OSCTXT* pctxt, s1ap_TAI_Broadcast_Item* pvalue);

EXTERN int asn1PD_s1ap_TAI_Broadcast_Item (OSCTXT* pctxt, s1ap_TAI_Broadcast_Item* pvalue);

EXTERN void asn1Print_s1ap_TAI_Broadcast_Item 
   (const char* name, const s1ap_TAI_Broadcast_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Broadcast_Item (const char* name, 
   s1ap_TAI_Broadcast_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Broadcast_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Broadcast_Item* pvalue);

EXTERN void asn1Copy_s1ap_TAI_Broadcast_Item (OSCTXT* pctxt, 
   const s1ap_TAI_Broadcast_Item* pSrcValue, s1ap_TAI_Broadcast_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_TAI_Broadcast_Item (s1ap_TAI_Broadcast_Item* pvalue);

EXTERN void asn1Free_s1ap_TAI_Broadcast_Item (OSCTXT *pctxt, 
   s1ap_TAI_Broadcast_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_Broadcast                                             */
/*                                                            */
/**************************************************************/
/*
TAI-Broadcast ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAI-Broadcast-Item
*/
/* List of s1ap_TAI_Broadcast_Item */
typedef OSRTDList s1ap_TAI_Broadcast;

EXTERN int asn1PE_s1ap_TAI_Broadcast (OSCTXT* pctxt, s1ap_TAI_Broadcast* pvalue);

EXTERN int asn1PD_s1ap_TAI_Broadcast (OSCTXT* pctxt, s1ap_TAI_Broadcast* pvalue);

EXTERN void asn1Print_s1ap_TAI_Broadcast 
   (const char* name, const s1ap_TAI_Broadcast* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAI_Broadcast (const char* name, 
   s1ap_TAI_Broadcast* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAI_Broadcast (OSCTXT *pctxt, 
   const char* name, const s1ap_TAI_Broadcast* pvalue);

EXTERN void asn1Copy_s1ap_TAI_Broadcast (OSCTXT* pctxt, 
   const s1ap_TAI_Broadcast* pSrcValue, s1ap_TAI_Broadcast* pDstValue);

EXTERN int asn1Init_s1ap_TAI_Broadcast (s1ap_TAI_Broadcast* pvalue);

EXTERN void asn1Free_s1ap_TAI_Broadcast (OSCTXT *pctxt, s1ap_TAI_Broadcast* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinEAI_Item_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellinEAI-Item'
*/
typedef struct EXTERN s1ap_CompletedCellinEAI_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CompletedCellinEAI_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CompletedCellinEAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinEAI_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinEAI_Item_iE_Extensions_element 
   (const char* name, const s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinEAI_Item_iE_Extensions_element (
   const char* name, 
   s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinEAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CompletedCellinEAI_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pSrcValue, 
   s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinEAI_Item_iE_Extensions_element (
   s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinEAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CompletedCellinEAI_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinEAI_Item_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellinEAI-Item'
*/
/* List of s1ap_CompletedCellinEAI_Item_iE_Extensions_element */
typedef OSRTDList s1ap_CompletedCellinEAI_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_CompletedCellinEAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CompletedCellinEAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinEAI_Item_iE_Extensions (OSCTXT* pctxt, s1ap_CompletedCellinEAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinEAI_Item_iE_Extensions 
   (const char* name, const s1ap_CompletedCellinEAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinEAI_Item_iE_Extensions (const char* name, 
   s1ap_CompletedCellinEAI_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinEAI_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinEAI_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CompletedCellinEAI_Item_iE_Extensions_element* 
   asn1Get_s1ap_CompletedCellinEAI_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_CompletedCellinEAI_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CompletedCellinEAI_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CompletedCellinEAI_Item_iE_Extensions* pSrcValue, 
   s1ap_CompletedCellinEAI_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinEAI_Item_iE_Extensions (
   s1ap_CompletedCellinEAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinEAI_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CompletedCellinEAI_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinEAI_Item                                   */
/*                                                            */
/**************************************************************/
/*
CompletedCellinEAI-Item ::= SEQUENCE {
   eCGI [0] EUTRAN-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CompletedCellinEAI-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CompletedCellinEAI-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CompletedCellinEAI-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CompletedCellinEAI_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI eCGI;
   s1ap_CompletedCellinEAI_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CompletedCellinEAI_Item;

EXTERN int asn1PE_s1ap_CompletedCellinEAI_Item (OSCTXT* pctxt, s1ap_CompletedCellinEAI_Item* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinEAI_Item (OSCTXT* pctxt, s1ap_CompletedCellinEAI_Item* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinEAI_Item 
   (const char* name, const s1ap_CompletedCellinEAI_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinEAI_Item (const char* name, 
   s1ap_CompletedCellinEAI_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinEAI_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinEAI_Item* pvalue);

EXTERN void asn1Copy_s1ap_CompletedCellinEAI_Item (OSCTXT* pctxt, 
   const s1ap_CompletedCellinEAI_Item* pSrcValue, s1ap_CompletedCellinEAI_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinEAI_Item (
   s1ap_CompletedCellinEAI_Item* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinEAI_Item (OSCTXT *pctxt, 
   s1ap_CompletedCellinEAI_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellinEAI                                        */
/*                                                            */
/**************************************************************/
/*
CompletedCellinEAI ::= SEQUENCE (SIZE (1..maxnoofCellinEAI)) OF CompletedCellinEAI-Item
*/
/* List of s1ap_CompletedCellinEAI_Item */
typedef OSRTDList s1ap_CompletedCellinEAI;

EXTERN int asn1PE_s1ap_CompletedCellinEAI (OSCTXT* pctxt, s1ap_CompletedCellinEAI* pvalue);

EXTERN int asn1PD_s1ap_CompletedCellinEAI (OSCTXT* pctxt, s1ap_CompletedCellinEAI* pvalue);

EXTERN void asn1Print_s1ap_CompletedCellinEAI 
   (const char* name, const s1ap_CompletedCellinEAI* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompletedCellinEAI (const char* name, 
   s1ap_CompletedCellinEAI* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompletedCellinEAI (OSCTXT *pctxt, 
   const char* name, const s1ap_CompletedCellinEAI* pvalue);

EXTERN void asn1Copy_s1ap_CompletedCellinEAI (OSCTXT* pctxt, 
   const s1ap_CompletedCellinEAI* pSrcValue, s1ap_CompletedCellinEAI*
    pDstValue);

EXTERN int asn1Init_s1ap_CompletedCellinEAI (s1ap_CompletedCellinEAI* pvalue);

EXTERN void asn1Free_s1ap_CompletedCellinEAI (OSCTXT *pctxt, 
   s1ap_CompletedCellinEAI* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Broadcast_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaID-Broadcast-Item'
*/
typedef struct EXTERN s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element 
   (const char* name, const s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element (
   const char* name, 
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pSrcValue, 
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element (
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Broadcast_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaID-Broadcast-Item'
*/
/* List of s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element */
typedef OSRTDList s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions 
   (const char* name, const s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions (
   const char* name, 
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions_element* 
   asn1Get_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pSrcValue, 
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions (
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Broadcast_Item                            */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaID-Broadcast-Item ::= SEQUENCE {
   emergencyAreaID [0] EmergencyAreaID,
   completedCellinEAI [1] CompletedCellinEAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({EmergencyAreaID-Broadcast-Item-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({EmergencyAreaID-Broadcast-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({EmergencyAreaID-Broadcast-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EmergencyAreaID_Broadcast_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EmergencyAreaID emergencyAreaID;
   s1ap_CompletedCellinEAI completedCellinEAI;
   s1ap_EmergencyAreaID_Broadcast_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_EmergencyAreaID_Broadcast_Item;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Broadcast_Item (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast_Item* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Broadcast_Item (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast_Item* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Broadcast_Item 
   (const char* name, const s1ap_EmergencyAreaID_Broadcast_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Broadcast_Item (const char* name, 
   s1ap_EmergencyAreaID_Broadcast_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Broadcast_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Broadcast_Item* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Broadcast_Item (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Broadcast_Item* pSrcValue, 
   s1ap_EmergencyAreaID_Broadcast_Item* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Broadcast_Item (
   s1ap_EmergencyAreaID_Broadcast_Item* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Broadcast_Item (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Broadcast_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID_Broadcast                                 */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaID-Broadcast ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaID-Broadcast-Item
*/
/* List of s1ap_EmergencyAreaID_Broadcast_Item */
typedef OSRTDList s1ap_EmergencyAreaID_Broadcast;

EXTERN int asn1PE_s1ap_EmergencyAreaID_Broadcast (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast* pvalue);

EXTERN int asn1PD_s1ap_EmergencyAreaID_Broadcast (OSCTXT* pctxt, s1ap_EmergencyAreaID_Broadcast* pvalue);

EXTERN void asn1Print_s1ap_EmergencyAreaID_Broadcast 
   (const char* name, const s1ap_EmergencyAreaID_Broadcast* pvalue);

EXTERN int asn1PrtToStr_s1ap_EmergencyAreaID_Broadcast (const char* name, 
   s1ap_EmergencyAreaID_Broadcast* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EmergencyAreaID_Broadcast (OSCTXT *pctxt, 
   const char* name, const s1ap_EmergencyAreaID_Broadcast* pvalue);

EXTERN void asn1Copy_s1ap_EmergencyAreaID_Broadcast (OSCTXT* pctxt, 
   const s1ap_EmergencyAreaID_Broadcast* pSrcValue, 
   s1ap_EmergencyAreaID_Broadcast* pDstValue);

EXTERN int asn1Init_s1ap_EmergencyAreaID_Broadcast (
   s1ap_EmergencyAreaID_Broadcast* pvalue);

EXTERN void asn1Free_s1ap_EmergencyAreaID_Broadcast (OSCTXT *pctxt, 
   s1ap_EmergencyAreaID_Broadcast* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastCompletedAreaList                                */
/*                                                            */
/**************************************************************/
/*
BroadcastCompletedAreaList ::= CHOICE {
   cellID-Broadcast [0] CellID-Broadcast,
   tAI-Broadcast [1] TAI-Broadcast,
   emergencyAreaID-Broadcast [2] EmergencyAreaID-Broadcast,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_BroadcastCompletedAreaList_cellID_Broadcast 1
#define T_s1ap_BroadcastCompletedAreaList_tAI_Broadcast 2
#define T_s1ap_BroadcastCompletedAreaList_emergencyAreaID_Broadcast 3
#define T_s1ap_BroadcastCompletedAreaList_extElem1 4

typedef struct EXTERN s1ap_BroadcastCompletedAreaList {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_CellID_Broadcast *cellID_Broadcast;
      /* t = 2 */
      s1ap_TAI_Broadcast *tAI_Broadcast;
      /* t = 3 */
      s1ap_EmergencyAreaID_Broadcast *emergencyAreaID_Broadcast;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_BroadcastCompletedAreaList;

EXTERN int asn1PE_s1ap_BroadcastCompletedAreaList (OSCTXT* pctxt, s1ap_BroadcastCompletedAreaList* pvalue);

EXTERN int asn1PD_s1ap_BroadcastCompletedAreaList (OSCTXT* pctxt, s1ap_BroadcastCompletedAreaList* pvalue);

EXTERN void asn1Print_s1ap_BroadcastCompletedAreaList 
   (const char* name, const s1ap_BroadcastCompletedAreaList* pvalue);

EXTERN int asn1PrtToStr_s1ap_BroadcastCompletedAreaList (const char* name, 
   s1ap_BroadcastCompletedAreaList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_BroadcastCompletedAreaList (OSCTXT *pctxt, 
   const char* name, const s1ap_BroadcastCompletedAreaList* pvalue);

EXTERN void asn1Copy_s1ap_BroadcastCompletedAreaList (OSCTXT* pctxt, 
   const s1ap_BroadcastCompletedAreaList* pSrcValue, 
   s1ap_BroadcastCompletedAreaList* pDstValue);

EXTERN int asn1Init_s1ap_BroadcastCompletedAreaList (
   s1ap_BroadcastCompletedAreaList* pvalue);

EXTERN void asn1Free_s1ap_BroadcastCompletedAreaList (OSCTXT *pctxt, 
   s1ap_BroadcastCompletedAreaList* pvalue);

/**************************************************************/
/*                                                            */
/*  VoiceSupportMatchIndicator                                */
/*                                                            */
/**************************************************************/
/*
 First bit: QoE Measurement for streaming service
 Second bit: QoE Measurement for MTSI service
 Note that undefined bits are considered as a spare bit and spare bits shall be set to 0 by the transmitter and shall be ignored by the receiver.
 V
VoiceSupportMatchIndicator ::= ENUMERATED { supported(0), not-supported(1), ... }
*/
typedef enum {
   s1ap_supported_2 = 0,
   s1ap_not_supported = 1
} s1ap_VoiceSupportMatchIndicator_Root;

typedef OSUINT32 s1ap_VoiceSupportMatchIndicator;

EXTERN int asn1PE_s1ap_VoiceSupportMatchIndicator (OSCTXT* pctxt, s1ap_VoiceSupportMatchIndicator value);

EXTERN int asn1PD_s1ap_VoiceSupportMatchIndicator (OSCTXT* pctxt, s1ap_VoiceSupportMatchIndicator* pvalue);

EXTERN void asn1Print_s1ap_VoiceSupportMatchIndicator 
   (const char* name, const s1ap_VoiceSupportMatchIndicator* pvalue);

EXTERN int asn1PrtToStr_s1ap_VoiceSupportMatchIndicator (const char* name, 
   s1ap_VoiceSupportMatchIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_VoiceSupportMatchIndicator (OSCTXT *pctxt, 
   const char* name, const s1ap_VoiceSupportMatchIndicator* pvalue);

EXTERN extern const OSEnumItem s1ap_VoiceSupportMatchIndicator_ENUMTAB[];
#define s1ap_VoiceSupportMatchIndicator_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_VoiceSupportMatchIndicator_ToString (OSINT32 value);

EXTERN int s1ap_VoiceSupportMatchIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_VoiceSupportMatchIndicator* pvalue);

EXTERN int s1ap_VoiceSupportMatchIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_VoiceSupportMatchIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeToWait                                                */
/*                                                            */
/**************************************************************/
/*
TimeToWait ::= ENUMERATED { v1s(0), v2s(1), v5s(2), v10s(3), v20s(4), v60s(5), ... }
*/
typedef enum {
   s1ap_v1s = 0,
   s1ap_v2s = 1,
   s1ap_v5s = 2,
   s1ap_v10s = 3,
   s1ap_v20s = 4,
   s1ap_v60s = 5
} s1ap_TimeToWait_Root;

typedef OSUINT32 s1ap_TimeToWait;

EXTERN int asn1PE_s1ap_TimeToWait (OSCTXT* pctxt, s1ap_TimeToWait value);

EXTERN int asn1PD_s1ap_TimeToWait (OSCTXT* pctxt, s1ap_TimeToWait* pvalue);

EXTERN void asn1Print_s1ap_TimeToWait 
   (const char* name, const s1ap_TimeToWait* pvalue);

EXTERN int asn1PrtToStr_s1ap_TimeToWait (const char* name, s1ap_TimeToWait* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TimeToWait (OSCTXT *pctxt, 
   const char* name, const s1ap_TimeToWait* pvalue);

EXTERN extern const OSEnumItem s1ap_TimeToWait_ENUMTAB[];
#define s1ap_TimeToWait_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* s1ap_TimeToWait_ToString (OSINT32 value);

EXTERN int s1ap_TimeToWait_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_TimeToWait* pvalue);

EXTERN int s1ap_TimeToWait_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_TimeToWait* pvalue);

/**************************************************************/
/*                                                            */
/*  Cell_Size                                                 */
/*                                                            */
/**************************************************************/
/*
Cell-Size ::= ENUMERATED { verysmall(0), small(1), medium(2), large(3), ... }
*/
typedef enum {
   s1ap_verysmall = 0,
   s1ap_small_ = 1,
   s1ap_medium = 2,
   s1ap_large_ = 3
} s1ap_Cell_Size_Root;

typedef OSUINT32 s1ap_Cell_Size;

EXTERN int asn1PE_s1ap_Cell_Size (OSCTXT* pctxt, s1ap_Cell_Size value);

EXTERN int asn1PD_s1ap_Cell_Size (OSCTXT* pctxt, s1ap_Cell_Size* pvalue);

EXTERN void asn1Print_s1ap_Cell_Size (const char* name, const s1ap_Cell_Size* pvalue);

EXTERN int asn1PrtToStr_s1ap_Cell_Size (const char* name, s1ap_Cell_Size* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Cell_Size (OSCTXT *pctxt, 
   const char* name, const s1ap_Cell_Size* pvalue);

EXTERN extern const OSEnumItem s1ap_Cell_Size_ENUMTAB[];
#define s1ap_Cell_Size_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* s1ap_Cell_Size_ToString (OSINT32 value);

EXTERN int s1ap_Cell_Size_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_Cell_Size* pvalue);

EXTERN int s1ap_Cell_Size_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_Cell_Size* pvalue);

/**************************************************************/
/*                                                            */
/*  DL_Forwarding                                             */
/*                                                            */
/**************************************************************/
/*
DL-Forwarding ::= ENUMERATED { dL-Forwarding-proposed(0), ... }
*/
typedef enum {
   s1ap_dL_Forwarding_proposed = 0
} s1ap_DL_Forwarding_Root;

typedef OSUINT32 s1ap_DL_Forwarding;

EXTERN int asn1PE_s1ap_DL_Forwarding (OSCTXT* pctxt, s1ap_DL_Forwarding value);

EXTERN int asn1PD_s1ap_DL_Forwarding (OSCTXT* pctxt, s1ap_DL_Forwarding* pvalue);

EXTERN void asn1Print_s1ap_DL_Forwarding 
   (const char* name, const s1ap_DL_Forwarding* pvalue);

EXTERN int asn1PrtToStr_s1ap_DL_Forwarding (const char* name, 
   s1ap_DL_Forwarding* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DL_Forwarding (OSCTXT *pctxt, 
   const char* name, const s1ap_DL_Forwarding* pvalue);

EXTERN extern const OSEnumItem s1ap_DL_Forwarding_ENUMTAB[];
#define s1ap_DL_Forwarding_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_DL_Forwarding_ToString (OSINT32 value);

EXTERN int s1ap_DL_Forwarding_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_DL_Forwarding* pvalue);

EXTERN int s1ap_DL_Forwarding_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_DL_Forwarding* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedNGRANCellInformation                           */
/*                                                            */
/**************************************************************/
/*
LastVisitedNGRANCellInformation ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_LastVisitedNGRANCellInformation;

EXTERN int asn1PE_s1ap_LastVisitedNGRANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedNGRANCellInformation value);

EXTERN int asn1PD_s1ap_LastVisitedNGRANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedNGRANCellInformation* pvalue);

EXTERN void asn1Print_s1ap_LastVisitedNGRANCellInformation 
   (const char* name, const s1ap_LastVisitedNGRANCellInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_LastVisitedNGRANCellInformation (const char* name, 
   s1ap_LastVisitedNGRANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LastVisitedNGRANCellInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_LastVisitedNGRANCellInformation* pvalue);

EXTERN void asn1Copy_s1ap_LastVisitedNGRANCellInformation (OSCTXT* pctxt, 
   const s1ap_LastVisitedNGRANCellInformation* pSrcValue, 
   s1ap_LastVisitedNGRANCellInformation* pDstValue);

EXTERN int asn1Init_s1ap_LastVisitedNGRANCellInformation (
   s1ap_LastVisitedNGRANCellInformation* pvalue);

EXTERN void asn1Free_s1ap_LastVisitedNGRANCellInformation (OSCTXT *pctxt, 
   s1ap_LastVisitedNGRANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedUTRANCellInformation                           */
/*                                                            */
/**************************************************************/
/*
LastVisitedUTRANCellInformation ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_LastVisitedUTRANCellInformation;

EXTERN int asn1PE_s1ap_LastVisitedUTRANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedUTRANCellInformation value);

EXTERN int asn1PD_s1ap_LastVisitedUTRANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedUTRANCellInformation* pvalue);

EXTERN void asn1Print_s1ap_LastVisitedUTRANCellInformation 
   (const char* name, const s1ap_LastVisitedUTRANCellInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_LastVisitedUTRANCellInformation (const char* name, 
   s1ap_LastVisitedUTRANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LastVisitedUTRANCellInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_LastVisitedUTRANCellInformation* pvalue);

EXTERN void asn1Copy_s1ap_LastVisitedUTRANCellInformation (OSCTXT* pctxt, 
   const s1ap_LastVisitedUTRANCellInformation* pSrcValue, 
   s1ap_LastVisitedUTRANCellInformation* pDstValue);

EXTERN int asn1Init_s1ap_LastVisitedUTRANCellInformation (
   s1ap_LastVisitedUTRANCellInformation* pvalue);

EXTERN void asn1Free_s1ap_LastVisitedUTRANCellInformation (OSCTXT *pctxt, 
   s1ap_LastVisitedUTRANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  L3_Information                                            */
/*                                                            */
/**************************************************************/
/*
L3-Information ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_L3_Information;

EXTERN int asn1PE_s1ap_L3_Information (OSCTXT* pctxt, s1ap_L3_Information value);

EXTERN int asn1PD_s1ap_L3_Information (OSCTXT* pctxt, s1ap_L3_Information* pvalue);

EXTERN void asn1Print_s1ap_L3_Information 
   (const char* name, const s1ap_L3_Information* pvalue);

EXTERN int asn1PrtToStr_s1ap_L3_Information (const char* name, 
   s1ap_L3_Information* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_L3_Information (OSCTXT *pctxt, 
   const char* name, const s1ap_L3_Information* pvalue);

EXTERN void asn1Copy_s1ap_L3_Information (OSCTXT* pctxt, 
   const s1ap_L3_Information* pSrcValue, s1ap_L3_Information* pDstValue);

EXTERN int asn1Init_s1ap_L3_Information (s1ap_L3_Information* pvalue);

EXTERN void asn1Free_s1ap_L3_Information (OSCTXT *pctxt, s1ap_L3_Information* pvalue);

/**************************************************************/
/*                                                            */
/*  MobilityInformation                                       */
/*                                                            */
/**************************************************************/
/*
MobilityInformation ::= BIT STRING  (SIZE (32))
*/
typedef ASN1BitStr32 s1ap_MobilityInformation;

EXTERN int asn1PE_s1ap_MobilityInformation (OSCTXT* pctxt, s1ap_MobilityInformation value);

EXTERN int asn1PD_s1ap_MobilityInformation (OSCTXT* pctxt, s1ap_MobilityInformation* pvalue);

EXTERN void asn1Print_s1ap_MobilityInformation 
   (const char* name, const s1ap_MobilityInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_MobilityInformation (const char* name, 
   s1ap_MobilityInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MobilityInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_MobilityInformation* pvalue);

EXTERN void asn1Copy_s1ap_MobilityInformation (OSCTXT* pctxt, 
   const s1ap_MobilityInformation* pSrcValue, s1ap_MobilityInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_MobilityInformation (s1ap_MobilityInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  OldBSS_ToNewBSS_Information                               */
/*                                                            */
/**************************************************************/
/*
 O
OldBSS-ToNewBSS-Information ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_OldBSS_ToNewBSS_Information;

EXTERN int asn1PE_s1ap_OldBSS_ToNewBSS_Information (OSCTXT* pctxt, s1ap_OldBSS_ToNewBSS_Information value);

EXTERN int asn1PD_s1ap_OldBSS_ToNewBSS_Information (OSCTXT* pctxt, s1ap_OldBSS_ToNewBSS_Information* pvalue);

EXTERN void asn1Print_s1ap_OldBSS_ToNewBSS_Information 
   (const char* name, const s1ap_OldBSS_ToNewBSS_Information* pvalue);

EXTERN int asn1PrtToStr_s1ap_OldBSS_ToNewBSS_Information (const char* name, 
   s1ap_OldBSS_ToNewBSS_Information* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OldBSS_ToNewBSS_Information (OSCTXT *pctxt, 
   const char* name, const s1ap_OldBSS_ToNewBSS_Information* pvalue);

EXTERN void asn1Copy_s1ap_OldBSS_ToNewBSS_Information (OSCTXT* pctxt, 
   const s1ap_OldBSS_ToNewBSS_Information* pSrcValue, 
   s1ap_OldBSS_ToNewBSS_Information* pDstValue);

EXTERN int asn1Init_s1ap_OldBSS_ToNewBSS_Information (
   s1ap_OldBSS_ToNewBSS_Information* pvalue);

EXTERN void asn1Free_s1ap_OldBSS_ToNewBSS_Information (OSCTXT *pctxt, 
   s1ap_OldBSS_ToNewBSS_Information* pvalue);

/**************************************************************/
/*                                                            */
/*  RRC_Container                                             */
/*                                                            */
/**************************************************************/
/*
RRC-Container ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_RRC_Container;

EXTERN int asn1PE_s1ap_RRC_Container (OSCTXT* pctxt, s1ap_RRC_Container value);

EXTERN int asn1PD_s1ap_RRC_Container (OSCTXT* pctxt, s1ap_RRC_Container* pvalue);

EXTERN void asn1Print_s1ap_RRC_Container 
   (const char* name, const s1ap_RRC_Container* pvalue);

EXTERN int asn1PrtToStr_s1ap_RRC_Container (const char* name, 
   s1ap_RRC_Container* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RRC_Container (OSCTXT *pctxt, 
   const char* name, const s1ap_RRC_Container* pvalue);

EXTERN void asn1Copy_s1ap_RRC_Container (OSCTXT* pctxt, 
   const s1ap_RRC_Container* pSrcValue, s1ap_RRC_Container* pDstValue);

EXTERN int asn1Init_s1ap_RRC_Container (s1ap_RRC_Container* pvalue);

EXTERN void asn1Free_s1ap_RRC_Container (OSCTXT *pctxt, s1ap_RRC_Container* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceBSS_ToTargetBSS_TransparentContainer                */
/*                                                            */
/**************************************************************/
/*
 This IE includes a transparent container from the source RAN node to the target RAN node. 
 The octets of the OCTET STRING are encoded according to the specifications of the target system.
SourceBSS-ToTargetBSS-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_SourceBSS_ToTargetBSS_TransparentContainer;

EXTERN int asn1PE_s1ap_SourceBSS_ToTargetBSS_TransparentContainer (OSCTXT* pctxt, s1ap_SourceBSS_ToTargetBSS_TransparentContainer value);

EXTERN int asn1PD_s1ap_SourceBSS_ToTargetBSS_TransparentContainer (OSCTXT* pctxt, s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_SourceBSS_ToTargetBSS_TransparentContainer 
   (const char* name, const s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceBSS_ToTargetBSS_TransparentContainer (
   const char* name, s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceBSS_ToTargetBSS_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_SourceBSS_ToTargetBSS_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pSrcValue, 
   s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_SourceBSS_ToTargetBSS_TransparentContainer (
   s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_SourceBSS_ToTargetBSS_TransparentContainer (OSCTXT *pctxt, 
   s1ap_SourceBSS_ToTargetBSS_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceRNC_ToTargetRNC_TransparentContainer                */
/*                                                            */
/**************************************************************/
/*
SourceRNC-ToTargetRNC-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_SourceRNC_ToTargetRNC_TransparentContainer;

EXTERN int asn1PE_s1ap_SourceRNC_ToTargetRNC_TransparentContainer (OSCTXT* pctxt, s1ap_SourceRNC_ToTargetRNC_TransparentContainer value);

EXTERN int asn1PD_s1ap_SourceRNC_ToTargetRNC_TransparentContainer (OSCTXT* pctxt, s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_SourceRNC_ToTargetRNC_TransparentContainer 
   (const char* name, const s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceRNC_ToTargetRNC_TransparentContainer (
   const char* name, s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceRNC_ToTargetRNC_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_SourceRNC_ToTargetRNC_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pSrcValue, 
   s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_SourceRNC_ToTargetRNC_TransparentContainer (
   s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_SourceRNC_ToTargetRNC_TransparentContainer (OSCTXT *pctxt, 
   s1ap_SourceRNC_ToTargetRNC_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceNgRanNode_ToTargetNgRanNode_TransparentContainer    */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
SourceNgRanNode-ToTargetNgRanNode-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer;

EXTERN int asn1PE_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer (OSCTXT* pctxt, s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer value);

EXTERN int asn1PD_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer (OSCTXT* pctxt, s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer 
   (const char* name, const s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer (
   const char* name, 
   s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pSrcValue, 
   s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer (
   s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer (OSCTXT *pctxt, 
   s1ap_SourceNgRanNode_ToTargetNgRanNode_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetRNC_ToSourceRNC_TransparentContainer                */
/*                                                            */
/**************************************************************/
/*
 This IE includes a transparent container from the target RAN node to the source RAN node. 
 The octets of the OCTET STRING are coded according to the specifications of the target system.
TargetRNC-ToSourceRNC-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_TargetRNC_ToSourceRNC_TransparentContainer;

EXTERN int asn1PE_s1ap_TargetRNC_ToSourceRNC_TransparentContainer (OSCTXT* pctxt, s1ap_TargetRNC_ToSourceRNC_TransparentContainer value);

EXTERN int asn1PD_s1ap_TargetRNC_ToSourceRNC_TransparentContainer (OSCTXT* pctxt, s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_TargetRNC_ToSourceRNC_TransparentContainer 
   (const char* name, const s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetRNC_ToSourceRNC_TransparentContainer (
   const char* name, s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetRNC_ToSourceRNC_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_TargetRNC_ToSourceRNC_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pSrcValue, 
   s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_TargetRNC_ToSourceRNC_TransparentContainer (
   s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_TargetRNC_ToSourceRNC_TransparentContainer (OSCTXT *pctxt, 
   s1ap_TargetRNC_ToSourceRNC_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetBSS_ToSourceBSS_TransparentContainer                */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
TargetBSS-ToSourceBSS-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_TargetBSS_ToSourceBSS_TransparentContainer;

EXTERN int asn1PE_s1ap_TargetBSS_ToSourceBSS_TransparentContainer (OSCTXT* pctxt, s1ap_TargetBSS_ToSourceBSS_TransparentContainer value);

EXTERN int asn1PD_s1ap_TargetBSS_ToSourceBSS_TransparentContainer (OSCTXT* pctxt, s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_TargetBSS_ToSourceBSS_TransparentContainer 
   (const char* name, const s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetBSS_ToSourceBSS_TransparentContainer (
   const char* name, s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetBSS_ToSourceBSS_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_TargetBSS_ToSourceBSS_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pSrcValue, 
   s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_TargetBSS_ToSourceBSS_TransparentContainer (
   s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_TargetBSS_ToSourceBSS_TransparentContainer (OSCTXT *pctxt, 
   s1ap_TargetBSS_ToSourceBSS_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetNgRanNode_ToSourceNgRanNode_TransparentContainer    */
/*                                                            */
/**************************************************************/
/*
 This is a dummy IE used only as a reference to the actual definition in relevant specification.
TargetNgRanNode-ToSourceNgRanNode-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer;

EXTERN int asn1PE_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer (OSCTXT* pctxt, s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer value);

EXTERN int asn1PD_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer (OSCTXT* pctxt, s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer 
   (const char* name, const s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer (
   const char* name, 
   s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pSrcValue, 
   s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer (
   s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer (OSCTXT *pctxt, 
   s1ap_TargetNgRanNode_ToSourceNgRanNode_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  Time_UE_StayedInCell                                      */
/*                                                            */
/**************************************************************/
/*
Time-UE-StayedInCell ::= INTEGER (0..4095)
*/
typedef OSUINT16 s1ap_Time_UE_StayedInCell;

EXTERN int asn1PE_s1ap_Time_UE_StayedInCell (OSCTXT* pctxt, s1ap_Time_UE_StayedInCell value);

EXTERN int asn1PD_s1ap_Time_UE_StayedInCell (OSCTXT* pctxt, s1ap_Time_UE_StayedInCell* pvalue);

EXTERN void asn1Print_s1ap_Time_UE_StayedInCell 
   (const char* name, const s1ap_Time_UE_StayedInCell* pvalue);

EXTERN int asn1PrtToStr_s1ap_Time_UE_StayedInCell (const char* name, 
   s1ap_Time_UE_StayedInCell* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Time_UE_StayedInCell (OSCTXT *pctxt, 
   const char* name, const s1ap_Time_UE_StayedInCell* pvalue);

/**************************************************************/
/*                                                            */
/*  Time_UE_StayedInCell_EnhancedGranularity                  */
/*                                                            */
/**************************************************************/
/*
Time-UE-StayedInCell-EnhancedGranularity ::= INTEGER (0..40950)
*/
typedef OSUINT16 s1ap_Time_UE_StayedInCell_EnhancedGranularity;

EXTERN int asn1PE_s1ap_Time_UE_StayedInCell_EnhancedGranularity (OSCTXT* pctxt, s1ap_Time_UE_StayedInCell_EnhancedGranularity value);

EXTERN int asn1PD_s1ap_Time_UE_StayedInCell_EnhancedGranularity (OSCTXT* pctxt, s1ap_Time_UE_StayedInCell_EnhancedGranularity* pvalue);

EXTERN void asn1Print_s1ap_Time_UE_StayedInCell_EnhancedGranularity 
   (const char* name, const s1ap_Time_UE_StayedInCell_EnhancedGranularity* pvalue);

EXTERN int asn1PrtToStr_s1ap_Time_UE_StayedInCell_EnhancedGranularity (
   const char* name, s1ap_Time_UE_StayedInCell_EnhancedGranularity* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Time_UE_StayedInCell_EnhancedGranularity (OSCTXT *pctxt, 
   const char* name, const s1ap_Time_UE_StayedInCell_EnhancedGranularity* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_HistoryInformationFromTheUE                            */
/*                                                            */
/**************************************************************/
/*
UE-HistoryInformationFromTheUE ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_UE_HistoryInformationFromTheUE;

EXTERN int asn1PE_s1ap_UE_HistoryInformationFromTheUE (OSCTXT* pctxt, s1ap_UE_HistoryInformationFromTheUE value);

EXTERN int asn1PD_s1ap_UE_HistoryInformationFromTheUE (OSCTXT* pctxt, s1ap_UE_HistoryInformationFromTheUE* pvalue);

EXTERN void asn1Print_s1ap_UE_HistoryInformationFromTheUE 
   (const char* name, const s1ap_UE_HistoryInformationFromTheUE* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_HistoryInformationFromTheUE (const char* name, 
   s1ap_UE_HistoryInformationFromTheUE* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_HistoryInformationFromTheUE (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_HistoryInformationFromTheUE* pvalue);

EXTERN void asn1Copy_s1ap_UE_HistoryInformationFromTheUE (OSCTXT* pctxt, 
   const s1ap_UE_HistoryInformationFromTheUE* pSrcValue, 
   s1ap_UE_HistoryInformationFromTheUE* pDstValue);

EXTERN int asn1Init_s1ap_UE_HistoryInformationFromTheUE (
   s1ap_UE_HistoryInformationFromTheUE* pvalue);

EXTERN void asn1Free_s1ap_UE_HistoryInformationFromTheUE (OSCTXT *pctxt, 
   s1ap_UE_HistoryInformationFromTheUE* pvalue);

/**************************************************************/
/*                                                            */
/*  CellType_iE_Extensions_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellType'
*/
typedef struct EXTERN s1ap_CellType_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CellType_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CellType_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellType_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CellType_iE_Extensions_element (OSCTXT* pctxt, s1ap_CellType_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CellType_iE_Extensions_element 
   (const char* name, const s1ap_CellType_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellType_iE_Extensions_element (const char* name, 
   s1ap_CellType_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellType_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CellType_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CellType_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CellType_iE_Extensions_element* pSrcValue, 
   s1ap_CellType_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CellType_iE_Extensions_element (
   s1ap_CellType_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CellType_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CellType_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellType_iE_Extensions                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellType'
*/
/* List of s1ap_CellType_iE_Extensions_element */
typedef OSRTDList s1ap_CellType_iE_Extensions;

EXTERN int asn1PE_s1ap_CellType_iE_Extensions (OSCTXT* pctxt, s1ap_CellType_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CellType_iE_Extensions (OSCTXT* pctxt, s1ap_CellType_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CellType_iE_Extensions 
   (const char* name, const s1ap_CellType_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellType_iE_Extensions (const char* name, 
   s1ap_CellType_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellType_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CellType_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CellType_iE_Extensions_element* 
   asn1Get_s1ap_CellType_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_CellType_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CellType_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CellType_iE_Extensions* pSrcValue, s1ap_CellType_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_CellType_iE_Extensions (s1ap_CellType_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CellType_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CellType_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellType                                                  */
/*                                                            */
/**************************************************************/
/*
CellType ::= SEQUENCE {
   cell-Size [0] Cell-Size,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CellType-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CellType-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CellType-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CellType {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_Cell_Size cell_Size;
   s1ap_CellType_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CellType;

EXTERN int asn1PE_s1ap_CellType (OSCTXT* pctxt, s1ap_CellType* pvalue);

EXTERN int asn1PD_s1ap_CellType (OSCTXT* pctxt, s1ap_CellType* pvalue);

EXTERN void asn1Print_s1ap_CellType (const char* name, const s1ap_CellType* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellType (const char* name, s1ap_CellType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellType (OSCTXT *pctxt, 
   const char* name, const s1ap_CellType* pvalue);

EXTERN void asn1Copy_s1ap_CellType (OSCTXT* pctxt, const s1ap_CellType* pSrcValue, 
   s1ap_CellType* pDstValue);

EXTERN int asn1Init_s1ap_CellType (s1ap_CellType* pvalue);

EXTERN void asn1Free_s1ap_CellType (OSCTXT *pctxt, s1ap_CellType* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationListItem_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABInformationListItem'
*/
typedef struct EXTERN s1ap_E_RABInformationListItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABInformationListItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABInformationListItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABInformationListItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABInformationListItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABInformationListItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABInformationListItem_iE_Extensions_element 
   (const char* name, const s1ap_E_RABInformationListItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABInformationListItem_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABInformationListItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABInformationListItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABInformationListItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABInformationListItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABInformationListItem_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABInformationListItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABInformationListItem_iE_Extensions_element (
   s1ap_E_RABInformationListItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABInformationListItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABInformationListItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationListItem_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABInformationListItem'
*/
/* List of s1ap_E_RABInformationListItem_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABInformationListItem_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABInformationListItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABInformationListItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABInformationListItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABInformationListItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABInformationListItem_iE_Extensions 
   (const char* name, const s1ap_E_RABInformationListItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABInformationListItem_iE_Extensions (
   const char* name, s1ap_E_RABInformationListItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABInformationListItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABInformationListItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABInformationListItem_iE_Extensions_element* 
   asn1Get_s1ap_E_RABInformationListItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABInformationListItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABInformationListItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABInformationListItem_iE_Extensions* pSrcValue, 
   s1ap_E_RABInformationListItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABInformationListItem_iE_Extensions (
   s1ap_E_RABInformationListItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABInformationListItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABInformationListItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationListItem                                  */
/*                                                            */
/**************************************************************/
/*
E-RABInformationListItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   dL-Forwarding [1] DL-Forwarding OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABInformationListItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABInformationListItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABInformationListItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABInformationListItem {
   struct {
      unsigned dL_ForwardingPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_DL_Forwarding dL_Forwarding;
   s1ap_E_RABInformationListItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABInformationListItem;

EXTERN int asn1PE_s1ap_E_RABInformationListItem (OSCTXT* pctxt, s1ap_E_RABInformationListItem* pvalue);

EXTERN int asn1PD_s1ap_E_RABInformationListItem (OSCTXT* pctxt, s1ap_E_RABInformationListItem* pvalue);

EXTERN void asn1Print_s1ap_E_RABInformationListItem 
   (const char* name, const s1ap_E_RABInformationListItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABInformationListItem (const char* name, 
   s1ap_E_RABInformationListItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABInformationListItem (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABInformationListItem* pvalue);

EXTERN void asn1Copy_s1ap_E_RABInformationListItem (OSCTXT* pctxt, 
   const s1ap_E_RABInformationListItem* pSrcValue, 
   s1ap_E_RABInformationListItem* pDstValue);

EXTERN int asn1Init_s1ap_E_RABInformationListItem (
   s1ap_E_RABInformationListItem* pvalue);

EXTERN void asn1Free_s1ap_E_RABInformationListItem (OSCTXT *pctxt, 
   s1ap_E_RABInformationListItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationList_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABInformationList'
*/
typedef struct EXTERN s1ap_E_RABInformationList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABInformationListIEs_TVALUE t;

      /**
       * E-RABInformationListIEs information objects
       */
      union {
         /**
          * id: id-E-RABInformationListItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABInformationListItem *_E_RABInformationListIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABInformationList_element;

EXTERN int asn1PE_s1ap_E_RABInformationList_element (OSCTXT* pctxt, s1ap_E_RABInformationList_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABInformationList_element (OSCTXT* pctxt, s1ap_E_RABInformationList_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABInformationList_element 
   (const char* name, const s1ap_E_RABInformationList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABInformationList_element (const char* name, 
   s1ap_E_RABInformationList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABInformationList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABInformationList_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABInformationList_element (OSCTXT* pctxt, 
   const s1ap_E_RABInformationList_element* pSrcValue, 
   s1ap_E_RABInformationList_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABInformationList_element (
   s1ap_E_RABInformationList_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABInformationList_element (OSCTXT *pctxt, 
   s1ap_E_RABInformationList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationList                                      */
/*                                                            */
/**************************************************************/
/*
E-RABInformationList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABInformationListIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABInformationListIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABInformationListIEs}{@id})
}
*/
/* List of s1ap_E_RABInformationList_element */
typedef OSRTDList s1ap_E_RABInformationList;

EXTERN int asn1PE_s1ap_E_RABInformationList (OSCTXT* pctxt, s1ap_E_RABInformationList* pvalue);

EXTERN int asn1PD_s1ap_E_RABInformationList (OSCTXT* pctxt, s1ap_E_RABInformationList* pvalue);

EXTERN void asn1Print_s1ap_E_RABInformationList 
   (const char* name, const s1ap_E_RABInformationList* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABInformationList (const char* name, 
   s1ap_E_RABInformationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABInformationList (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABInformationList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABInformationList_element* 
   asn1Get_s1ap_E_RABInformationList (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABInformationList* plist);

EXTERN void asn1Copy_s1ap_E_RABInformationList (OSCTXT* pctxt, 
   const s1ap_E_RABInformationList* pSrcValue, s1ap_E_RABInformationList*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABInformationList (s1ap_E_RABInformationList* pvalue);

EXTERN void asn1Free_s1ap_E_RABInformationList (OSCTXT *pctxt, 
   s1ap_E_RABInformationList* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedEUTRANCellInformation_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LastVisitedEUTRANCellInformation'
*/
typedef struct EXTERN s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      LastVisitedEUTRANCellInformation_ExtIEs_TVALUE t;

      /**
       * LastVisitedEUTRANCellInformation-ExtIEs information objects
       */
      union {
         /**
          * id: id-Time-UE-StayedInCell-EnhancedGranularity
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Time_UE_StayedInCell_EnhancedGranularity _LastVisitedEUTRANCellInformation_ExtIEs_1;
         /**
          * id: id-HO-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Cause *_LastVisitedEUTRANCellInformation_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element;

EXTERN int asn1PE_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element 
   (const char* name, const s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element (
   const char* name, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element_LastVisitedEUTRANCellInformation_ExtIEs_1
   (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pElem
   , s1ap_Time_UE_StayedInCell_EnhancedGranularity value);

EXTERN void asn1SetTC_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element_LastVisitedEUTRANCellInformation_ExtIEs_2
   (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pElem
   , s1ap_Cause *pvalue);

EXTERN void asn1Copy_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pSrcValue, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element (
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedEUTRANCellInformation_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LastVisitedEUTRANCellInformation'
*/
/* List of s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element */
typedef OSRTDList s1ap_LastVisitedEUTRANCellInformation_iE_Extensions;

EXTERN int asn1PE_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions 
   (const char* name, const s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions (
   const char* name, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pvalue);

/* Append IE with value type s1ap_Time_UE_StayedInCell_EnhancedGranularity to list */
EXTERN int asn1Append_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_1
      (OSCTXT* pctxt, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* plist, 
   s1ap_Time_UE_StayedInCell_EnhancedGranularity value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_2
      (OSCTXT* pctxt, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* plist, struct 
   s1ap_Cause *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_LastVisitedEUTRANCellInformation_iE_Extensions_element* 
   asn1Get_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pSrcValue, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions (
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_LastVisitedEUTRANCellInformation_iE_Extensions (OSCTXT *pctxt, 
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedEUTRANCellInformation                          */
/*                                                            */
/**************************************************************/
/*
LastVisitedEUTRANCellInformation ::= SEQUENCE {
   global-Cell-ID [0] EUTRAN-CGI,
   cellType [1] CellType,
   time-UE-StayedInCell [2] Time-UE-StayedInCell,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({LastVisitedEUTRANCellInformation-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({LastVisitedEUTRANCellInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({LastVisitedEUTRANCellInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_LastVisitedEUTRANCellInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_EUTRAN_CGI global_Cell_ID;
   s1ap_CellType cellType;
   s1ap_Time_UE_StayedInCell time_UE_StayedInCell;
   s1ap_LastVisitedEUTRANCellInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_LastVisitedEUTRANCellInformation;

EXTERN int asn1PE_s1ap_LastVisitedEUTRANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation* pvalue);

EXTERN int asn1PD_s1ap_LastVisitedEUTRANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedEUTRANCellInformation* pvalue);

EXTERN void asn1Print_s1ap_LastVisitedEUTRANCellInformation 
   (const char* name, const s1ap_LastVisitedEUTRANCellInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_LastVisitedEUTRANCellInformation (const char* name, 
   s1ap_LastVisitedEUTRANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LastVisitedEUTRANCellInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_LastVisitedEUTRANCellInformation* pvalue);

EXTERN void asn1Copy_s1ap_LastVisitedEUTRANCellInformation (OSCTXT* pctxt, 
   const s1ap_LastVisitedEUTRANCellInformation* pSrcValue, 
   s1ap_LastVisitedEUTRANCellInformation* pDstValue);

EXTERN int asn1Init_s1ap_LastVisitedEUTRANCellInformation (
   s1ap_LastVisitedEUTRANCellInformation* pvalue);

EXTERN void asn1Free_s1ap_LastVisitedEUTRANCellInformation (OSCTXT *pctxt, 
   s1ap_LastVisitedEUTRANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedGERANCellInformation                           */
/*                                                            */
/**************************************************************/
/*
LastVisitedGERANCellInformation ::= CHOICE {
   undefined [0] NULL,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_LastVisitedGERANCellInformation_undefined 1
#define T_s1ap_LastVisitedGERANCellInformation_extElem1 2

typedef struct EXTERN s1ap_LastVisitedGERANCellInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_LastVisitedGERANCellInformation;

EXTERN int asn1PE_s1ap_LastVisitedGERANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedGERANCellInformation* pvalue);

EXTERN int asn1PD_s1ap_LastVisitedGERANCellInformation (OSCTXT* pctxt, s1ap_LastVisitedGERANCellInformation* pvalue);

EXTERN void asn1Print_s1ap_LastVisitedGERANCellInformation 
   (const char* name, const s1ap_LastVisitedGERANCellInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_LastVisitedGERANCellInformation (const char* name, 
   s1ap_LastVisitedGERANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LastVisitedGERANCellInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_LastVisitedGERANCellInformation* pvalue);

EXTERN void asn1Copy_s1ap_LastVisitedGERANCellInformation (OSCTXT* pctxt, 
   const s1ap_LastVisitedGERANCellInformation* pSrcValue, 
   s1ap_LastVisitedGERANCellInformation* pDstValue);

EXTERN int asn1Init_s1ap_LastVisitedGERANCellInformation (
   s1ap_LastVisitedGERANCellInformation* pvalue);

EXTERN void asn1Free_s1ap_LastVisitedGERANCellInformation (OSCTXT *pctxt, 
   s1ap_LastVisitedGERANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedCell_Item                                      */
/*                                                            */
/**************************************************************/
/*
LastVisitedCell-Item ::= CHOICE {
   e-UTRAN-Cell [0] LastVisitedEUTRANCellInformation,
   uTRAN-Cell [1] LastVisitedUTRANCellInformation,
   gERAN-Cell [2] EXPLICIT LastVisitedGERANCellInformation,
   ...,
   nG-RAN-Cell [3] LastVisitedNGRANCellInformation
}
*/
/* Choice tag constants */

#define T_s1ap_LastVisitedCell_Item_e_UTRAN_Cell 1
#define T_s1ap_LastVisitedCell_Item_uTRAN_Cell 2
#define T_s1ap_LastVisitedCell_Item_gERAN_Cell 3
#define T_s1ap_LastVisitedCell_Item_nG_RAN_Cell 4
#define T_s1ap_LastVisitedCell_Item_extElem1 5

typedef struct EXTERN s1ap_LastVisitedCell_Item {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_LastVisitedEUTRANCellInformation *e_UTRAN_Cell;
      /* t = 2 */
      s1ap_LastVisitedUTRANCellInformation *uTRAN_Cell;
      /* t = 3 */
      s1ap_LastVisitedGERANCellInformation *gERAN_Cell;
      /* t = 4 */
      s1ap_LastVisitedNGRANCellInformation *nG_RAN_Cell;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_LastVisitedCell_Item;

EXTERN int asn1PE_s1ap_LastVisitedCell_Item (OSCTXT* pctxt, s1ap_LastVisitedCell_Item* pvalue);

EXTERN int asn1PD_s1ap_LastVisitedCell_Item (OSCTXT* pctxt, s1ap_LastVisitedCell_Item* pvalue);

EXTERN void asn1Print_s1ap_LastVisitedCell_Item 
   (const char* name, const s1ap_LastVisitedCell_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_LastVisitedCell_Item (const char* name, 
   s1ap_LastVisitedCell_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LastVisitedCell_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_LastVisitedCell_Item* pvalue);

EXTERN void asn1Copy_s1ap_LastVisitedCell_Item (OSCTXT* pctxt, 
   const s1ap_LastVisitedCell_Item* pSrcValue, s1ap_LastVisitedCell_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_LastVisitedCell_Item (s1ap_LastVisitedCell_Item* pvalue);

EXTERN void asn1Free_s1ap_LastVisitedCell_Item (OSCTXT *pctxt, 
   s1ap_LastVisitedCell_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_HistoryInformation                                     */
/*                                                            */
/**************************************************************/
/*
UE-HistoryInformation ::= SEQUENCE (SIZE (1..maxnoofCellsinUEHistoryInfo)) OF LastVisitedCell-Item
*/
/* List of s1ap_LastVisitedCell_Item */
typedef OSRTDList s1ap_UE_HistoryInformation;

EXTERN int asn1PE_s1ap_UE_HistoryInformation (OSCTXT* pctxt, s1ap_UE_HistoryInformation* pvalue);

EXTERN int asn1PD_s1ap_UE_HistoryInformation (OSCTXT* pctxt, s1ap_UE_HistoryInformation* pvalue);

EXTERN void asn1Print_s1ap_UE_HistoryInformation 
   (const char* name, const s1ap_UE_HistoryInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_HistoryInformation (const char* name, 
   s1ap_UE_HistoryInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_HistoryInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_HistoryInformation* pvalue);

EXTERN void asn1Copy_s1ap_UE_HistoryInformation (OSCTXT* pctxt, 
   const s1ap_UE_HistoryInformation* pSrcValue, s1ap_UE_HistoryInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_UE_HistoryInformation (s1ap_UE_HistoryInformation* pvalue);

EXTERN void asn1Free_s1ap_UE_HistoryInformation (OSCTXT *pctxt, 
   s1ap_UE_HistoryInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceeNB-ToTargeteNB-TransparentContainer'
*/
typedef struct EXTERN s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_TVALUE t;

      /**
       * SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs information objects
       */
      union {
         /**
          * id: id-MobilityInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MobilityInformation *_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_1;
         /**
          * id: id-uE-HistoryInformationFromTheUE
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_HistoryInformationFromTheUE *_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element 
   (const char* name, const s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element (
   const char* name, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_1
   (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pElem
   , s1ap_MobilityInformation *pvalue);

EXTERN void asn1SetTC_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element_SourceeNB_ToTargeteNB_TransparentContainer_ExtIEs_2
   (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pElem
   , s1ap_UE_HistoryInformationFromTheUE *pvalue);

EXTERN void asn1Copy_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pSrcValue, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element*
    pDstValue);

EXTERN int asn1Init_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element (
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceeNB-ToTargeteNB-TransparentContainer'
*/
/* List of s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element */
typedef OSRTDList s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions 
   (const char* name, const s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions (
   const char* name, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pvalue);

/* Append IE with value type s1ap_MobilityInformation to list */
EXTERN 
   int asn1Append_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_1
      (OSCTXT* pctxt, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* plist, 
   s1ap_MobilityInformation *pvalue);

/* Append IE with value type s1ap_UE_HistoryInformationFromTheUE to list */
EXTERN 
   int asn1Append_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_2
      (OSCTXT* pctxt, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* plist, 
   s1ap_UE_HistoryInformationFromTheUE *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions_element* 
   asn1Get_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pSrcValue, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions (
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceeNB_ToTargeteNB_TransparentContainer                */
/*                                                            */
/**************************************************************/
/*
SourceeNB-ToTargeteNB-TransparentContainer ::= SEQUENCE {
   rRC-Container [0] RRC-Container,
   e-RABInformationList [1] E-RABInformationList OPTIONAL,
   targetCell-ID [2] EUTRAN-CGI,
   subscriberProfileIDforRFP [3] SubscriberProfileIDforRFP OPTIONAL,
   uE-HistoryInformation [4] UE-HistoryInformation,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_SourceeNB_ToTargeteNB_TransparentContainer {
   struct {
      unsigned e_RABInformationListPresent : 1;
      unsigned subscriberProfileIDforRFPPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_RRC_Container rRC_Container;
   s1ap_E_RABInformationList e_RABInformationList;
   s1ap_EUTRAN_CGI targetCell_ID;
   s1ap_SubscriberProfileIDforRFP subscriberProfileIDforRFP;
   s1ap_UE_HistoryInformation uE_HistoryInformation;
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_SourceeNB_ToTargeteNB_TransparentContainer;

EXTERN int asn1PE_s1ap_SourceeNB_ToTargeteNB_TransparentContainer (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pvalue);

EXTERN int asn1PD_s1ap_SourceeNB_ToTargeteNB_TransparentContainer (OSCTXT* pctxt, s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_SourceeNB_ToTargeteNB_TransparentContainer 
   (const char* name, const s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_SourceeNB_ToTargeteNB_TransparentContainer (
   const char* name, s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SourceeNB_ToTargeteNB_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_SourceeNB_ToTargeteNB_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pSrcValue, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_SourceeNB_ToTargeteNB_TransparentContainer (
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_SourceeNB_ToTargeteNB_TransparentContainer (OSCTXT *pctxt, 
   s1ap_SourceeNB_ToTargeteNB_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargeteNB-ToSourceeNB-TransparentContainer'
*/
typedef struct EXTERN s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element 
   (const char* name, const s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element (
   const char* name, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pSrcValue, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element*
    pDstValue);

EXTERN int asn1Init_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element (
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargeteNB-ToSourceeNB-TransparentContainer'
*/
/* List of s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element */
typedef OSRTDList s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions (OSCTXT* pctxt, s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions (OSCTXT* pctxt, s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions 
   (const char* name, const s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions (
   const char* name, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions_element* 
   asn1Get_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pSrcValue, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions (
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ToSourceeNB_TransparentContainer                */
/*                                                            */
/**************************************************************/
/*
TargeteNB-ToSourceeNB-TransparentContainer ::= SEQUENCE {
   rRC-Container [0] RRC-Container,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TargeteNB_ToSourceeNB_TransparentContainer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_RRC_Container rRC_Container;
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TargeteNB_ToSourceeNB_TransparentContainer;

EXTERN int asn1PE_s1ap_TargeteNB_ToSourceeNB_TransparentContainer (OSCTXT* pctxt, s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pvalue);

EXTERN int asn1PD_s1ap_TargeteNB_ToSourceeNB_TransparentContainer (OSCTXT* pctxt, s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pvalue);

EXTERN void asn1Print_s1ap_TargeteNB_ToSourceeNB_TransparentContainer 
   (const char* name, const s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_TargeteNB_ToSourceeNB_TransparentContainer (
   const char* name, s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TargeteNB_ToSourceeNB_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pvalue);

EXTERN void asn1Copy_s1ap_TargeteNB_ToSourceeNB_TransparentContainer (OSCTXT* pctxt, 
   const s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pSrcValue, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pDstValue);

EXTERN int asn1Init_s1ap_TargeteNB_ToSourceeNB_TransparentContainer (
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pvalue);

EXTERN void asn1Free_s1ap_TargeteNB_ToSourceeNB_TransparentContainer (OSCTXT *pctxt, 
   s1ap_TargeteNB_ToSourceeNB_TransparentContainer* pvalue);

/**
 * Header file for ASN.1 module S1AP-PDU-Contents
 */
typedef enum {
   T4_UNDEF_,
   T4__HandoverRequiredIEs_1,
   T4__HandoverRequiredIEs_2,
   T4__HandoverRequiredIEs_3,
   T4__HandoverRequiredIEs_4,
   T4__HandoverRequiredIEs_5,
   T4__HandoverRequiredIEs_6,
   T4__HandoverRequiredIEs_7,
   T4__HandoverRequiredIEs_8,
   T4__HandoverRequiredIEs_9,
   T4__HandoverRequiredIEs_10,
   T4__HandoverRequiredIEs_11,
   T4__HandoverRequiredIEs_12,
   T4__HandoverRequiredIEs_13,
   T4__HandoverRequiredIEs_14
} HandoverRequiredIEs_TVALUE;

typedef enum {
   T5_UNDEF_,
   T5__HandoverCommandIEs_1,
   T5__HandoverCommandIEs_2,
   T5__HandoverCommandIEs_3,
   T5__HandoverCommandIEs_4,
   T5__HandoverCommandIEs_5,
   T5__HandoverCommandIEs_6,
   T5__HandoverCommandIEs_7,
   T5__HandoverCommandIEs_8,
   T5__HandoverCommandIEs_9
} HandoverCommandIEs_TVALUE;

typedef enum {
   T6_UNDEF_,
   T6__E_RABDataForwardingItemIEs_1
} E_RABDataForwardingItemIEs_TVALUE;

typedef enum {
   T7_UNDEF_
} E_RABDataForwardingItem_ExtIEs_TVALUE;

typedef enum {
   T8_UNDEF_,
   T8__HandoverPreparationFailureIEs_1,
   T8__HandoverPreparationFailureIEs_2,
   T8__HandoverPreparationFailureIEs_3,
   T8__HandoverPreparationFailureIEs_4
} HandoverPreparationFailureIEs_TVALUE;

typedef enum {
   T9_UNDEF_,
   T9__HandoverRequestIEs_1,
   T9__HandoverRequestIEs_2,
   T9__HandoverRequestIEs_3,
   T9__HandoverRequestIEs_4,
   T9__HandoverRequestIEs_5,
   T9__HandoverRequestIEs_6,
   T9__HandoverRequestIEs_7,
   T9__HandoverRequestIEs_8,
   T9__HandoverRequestIEs_9,
   T9__HandoverRequestIEs_10,
   T9__HandoverRequestIEs_11,
   T9__HandoverRequestIEs_12,
   T9__HandoverRequestIEs_13,
   T9__HandoverRequestIEs_14,
   T9__HandoverRequestIEs_15,
   T9__HandoverRequestIEs_16,
   T9__HandoverRequestIEs_17,
   T9__HandoverRequestIEs_18,
   T9__HandoverRequestIEs_19,
   T9__HandoverRequestIEs_20,
   T9__HandoverRequestIEs_21,
   T9__HandoverRequestIEs_22,
   T9__HandoverRequestIEs_23,
   T9__HandoverRequestIEs_24,
   T9__HandoverRequestIEs_25,
   T9__HandoverRequestIEs_26,
   T9__HandoverRequestIEs_27,
   T9__HandoverRequestIEs_28,
   T9__HandoverRequestIEs_29,
   T9__HandoverRequestIEs_30,
   T9__HandoverRequestIEs_31
} HandoverRequestIEs_TVALUE;

typedef enum {
   T10_UNDEF_,
   T10__E_RABToBeSetupItemHOReqIEs_1
} E_RABToBeSetupItemHOReqIEs_TVALUE;

typedef enum {
   T11_UNDEF_,
   T11__E_RABToBeSetupItemHOReq_ExtIEs_1,
   T11__E_RABToBeSetupItemHOReq_ExtIEs_2
} E_RABToBeSetupItemHOReq_ExtIEs_TVALUE;

typedef enum {
   T12_UNDEF_,
   T12__HandoverRequestAcknowledgeIEs_1,
   T12__HandoverRequestAcknowledgeIEs_2,
   T12__HandoverRequestAcknowledgeIEs_3,
   T12__HandoverRequestAcknowledgeIEs_4,
   T12__HandoverRequestAcknowledgeIEs_5,
   T12__HandoverRequestAcknowledgeIEs_6,
   T12__HandoverRequestAcknowledgeIEs_7,
   T12__HandoverRequestAcknowledgeIEs_8,
   T12__HandoverRequestAcknowledgeIEs_9
} HandoverRequestAcknowledgeIEs_TVALUE;

typedef enum {
   T13_UNDEF_,
   T13__E_RABAdmittedItemIEs_1
} E_RABAdmittedItemIEs_TVALUE;

typedef enum {
   T14_UNDEF_
} E_RABAdmittedItem_ExtIEs_TVALUE;

typedef enum {
   T15_UNDEF_,
   T15__E_RABFailedtoSetupItemHOReqAckIEs_1
} E_RABFailedtoSetupItemHOReqAckIEs_TVALUE;

typedef enum {
   T16_UNDEF_
} E_RABFailedToSetupItemHOReqAckExtIEs_TVALUE;

typedef enum {
   T17_UNDEF_,
   T17__HandoverFailureIEs_1,
   T17__HandoverFailureIEs_2,
   T17__HandoverFailureIEs_3
} HandoverFailureIEs_TVALUE;

typedef enum {
   T18_UNDEF_,
   T18__HandoverNotifyIEs_1,
   T18__HandoverNotifyIEs_2,
   T18__HandoverNotifyIEs_3,
   T18__HandoverNotifyIEs_4,
   T18__HandoverNotifyIEs_5,
   T18__HandoverNotifyIEs_6
} HandoverNotifyIEs_TVALUE;

typedef enum {
   T19_UNDEF_,
   T19__PathSwitchRequestIEs_1,
   T19__PathSwitchRequestIEs_2,
   T19__PathSwitchRequestIEs_3,
   T19__PathSwitchRequestIEs_4,
   T19__PathSwitchRequestIEs_5,
   T19__PathSwitchRequestIEs_6,
   T19__PathSwitchRequestIEs_7,
   T19__PathSwitchRequestIEs_8,
   T19__PathSwitchRequestIEs_9,
   T19__PathSwitchRequestIEs_10,
   T19__PathSwitchRequestIEs_11,
   T19__PathSwitchRequestIEs_12,
   T19__PathSwitchRequestIEs_13,
   T19__PathSwitchRequestIEs_14
} PathSwitchRequestIEs_TVALUE;

typedef enum {
   T20_UNDEF_,
   T20__E_RABToBeSwitchedDLItemIEs_1
} E_RABToBeSwitchedDLItemIEs_TVALUE;

typedef enum {
   T21_UNDEF_
} E_RABToBeSwitchedDLItem_ExtIEs_TVALUE;

typedef enum {
   T22_UNDEF_,
   T22__PathSwitchRequestAcknowledgeIEs_1,
   T22__PathSwitchRequestAcknowledgeIEs_2,
   T22__PathSwitchRequestAcknowledgeIEs_3,
   T22__PathSwitchRequestAcknowledgeIEs_4,
   T22__PathSwitchRequestAcknowledgeIEs_5,
   T22__PathSwitchRequestAcknowledgeIEs_6,
   T22__PathSwitchRequestAcknowledgeIEs_7,
   T22__PathSwitchRequestAcknowledgeIEs_8,
   T22__PathSwitchRequestAcknowledgeIEs_9,
   T22__PathSwitchRequestAcknowledgeIEs_10,
   T22__PathSwitchRequestAcknowledgeIEs_11,
   T22__PathSwitchRequestAcknowledgeIEs_12,
   T22__PathSwitchRequestAcknowledgeIEs_13,
   T22__PathSwitchRequestAcknowledgeIEs_14,
   T22__PathSwitchRequestAcknowledgeIEs_15,
   T22__PathSwitchRequestAcknowledgeIEs_16,
   T22__PathSwitchRequestAcknowledgeIEs_17,
   T22__PathSwitchRequestAcknowledgeIEs_18,
   T22__PathSwitchRequestAcknowledgeIEs_19
} PathSwitchRequestAcknowledgeIEs_TVALUE;

typedef enum {
   T23_UNDEF_,
   T23__E_RABToBeSwitchedULItemIEs_1
} E_RABToBeSwitchedULItemIEs_TVALUE;

typedef enum {
   T24_UNDEF_
} E_RABToBeSwitchedULItem_ExtIEs_TVALUE;

typedef enum {
   T25_UNDEF_,
   T25__PathSwitchRequestFailureIEs_1,
   T25__PathSwitchRequestFailureIEs_2,
   T25__PathSwitchRequestFailureIEs_3,
   T25__PathSwitchRequestFailureIEs_4
} PathSwitchRequestFailureIEs_TVALUE;

typedef enum {
   T26_UNDEF_,
   T26__HandoverCancelIEs_1,
   T26__HandoverCancelIEs_2,
   T26__HandoverCancelIEs_3
} HandoverCancelIEs_TVALUE;

typedef enum {
   T27_UNDEF_,
   T27__HandoverCancelAcknowledgeIEs_1,
   T27__HandoverCancelAcknowledgeIEs_2,
   T27__HandoverCancelAcknowledgeIEs_3
} HandoverCancelAcknowledgeIEs_TVALUE;

typedef enum {
   T28_UNDEF_,
   T28__E_RABSetupRequestIEs_1,
   T28__E_RABSetupRequestIEs_2,
   T28__E_RABSetupRequestIEs_3,
   T28__E_RABSetupRequestIEs_4
} E_RABSetupRequestIEs_TVALUE;

typedef enum {
   T29_UNDEF_,
   T29__E_RABToBeSetupItemBearerSUReqIEs_1
} E_RABToBeSetupItemBearerSUReqIEs_TVALUE;

typedef enum {
   T30_UNDEF_,
   T30__E_RABToBeSetupItemBearerSUReqExtIEs_1,
   T30__E_RABToBeSetupItemBearerSUReqExtIEs_2,
   T30__E_RABToBeSetupItemBearerSUReqExtIEs_3
} E_RABToBeSetupItemBearerSUReqExtIEs_TVALUE;

typedef enum {
   T31_UNDEF_,
   T31__E_RABSetupResponseIEs_1,
   T31__E_RABSetupResponseIEs_2,
   T31__E_RABSetupResponseIEs_3,
   T31__E_RABSetupResponseIEs_4,
   T31__E_RABSetupResponseIEs_5
} E_RABSetupResponseIEs_TVALUE;

typedef enum {
   T32_UNDEF_,
   T32__E_RABSetupItemBearerSUResIEs_1
} E_RABSetupItemBearerSUResIEs_TVALUE;

typedef enum {
   T33_UNDEF_
} E_RABSetupItemBearerSUResExtIEs_TVALUE;

typedef enum {
   T34_UNDEF_,
   T34__E_RABModifyRequestIEs_1,
   T34__E_RABModifyRequestIEs_2,
   T34__E_RABModifyRequestIEs_3,
   T34__E_RABModifyRequestIEs_4,
   T34__E_RABModifyRequestIEs_5
} E_RABModifyRequestIEs_TVALUE;

typedef enum {
   T35_UNDEF_,
   T35__E_RABToBeModifiedItemBearerModReqIEs_1
} E_RABToBeModifiedItemBearerModReqIEs_TVALUE;

typedef enum {
   T36_UNDEF_,
   T36__E_RABToBeModifyItemBearerModReqExtIEs_1
} E_RABToBeModifyItemBearerModReqExtIEs_TVALUE;

typedef enum {
   T37_UNDEF_,
   T37__E_RABModifyResponseIEs_1,
   T37__E_RABModifyResponseIEs_2,
   T37__E_RABModifyResponseIEs_3,
   T37__E_RABModifyResponseIEs_4,
   T37__E_RABModifyResponseIEs_5,
   T37__E_RABModifyResponseIEs_6
} E_RABModifyResponseIEs_TVALUE;

typedef enum {
   T38_UNDEF_,
   T38__E_RABModifyItemBearerModResIEs_1
} E_RABModifyItemBearerModResIEs_TVALUE;

typedef enum {
   T39_UNDEF_
} E_RABModifyItemBearerModResExtIEs_TVALUE;

typedef enum {
   T40_UNDEF_,
   T40__E_RABReleaseCommandIEs_1,
   T40__E_RABReleaseCommandIEs_2,
   T40__E_RABReleaseCommandIEs_3,
   T40__E_RABReleaseCommandIEs_4,
   T40__E_RABReleaseCommandIEs_5
} E_RABReleaseCommandIEs_TVALUE;

typedef enum {
   T41_UNDEF_,
   T41__E_RABReleaseResponseIEs_1,
   T41__E_RABReleaseResponseIEs_2,
   T41__E_RABReleaseResponseIEs_3,
   T41__E_RABReleaseResponseIEs_4,
   T41__E_RABReleaseResponseIEs_5,
   T41__E_RABReleaseResponseIEs_6,
   T41__E_RABReleaseResponseIEs_7
} E_RABReleaseResponseIEs_TVALUE;

typedef enum {
   T42_UNDEF_,
   T42__E_RABReleaseItemBearerRelCompIEs_1
} E_RABReleaseItemBearerRelCompIEs_TVALUE;

typedef enum {
   T43_UNDEF_
} E_RABReleaseItemBearerRelCompExtIEs_TVALUE;

typedef enum {
   T44_UNDEF_,
   T44__E_RABReleaseIndicationIEs_1,
   T44__E_RABReleaseIndicationIEs_2,
   T44__E_RABReleaseIndicationIEs_3,
   T44__E_RABReleaseIndicationIEs_4,
   T44__E_RABReleaseIndicationIEs_5
} E_RABReleaseIndicationIEs_TVALUE;

typedef enum {
   T45_UNDEF_,
   T45__InitialContextSetupRequestIEs_1,
   T45__InitialContextSetupRequestIEs_2,
   T45__InitialContextSetupRequestIEs_3,
   T45__InitialContextSetupRequestIEs_4,
   T45__InitialContextSetupRequestIEs_5,
   T45__InitialContextSetupRequestIEs_6,
   T45__InitialContextSetupRequestIEs_7,
   T45__InitialContextSetupRequestIEs_8,
   T45__InitialContextSetupRequestIEs_9,
   T45__InitialContextSetupRequestIEs_10,
   T45__InitialContextSetupRequestIEs_11,
   T45__InitialContextSetupRequestIEs_12,
   T45__InitialContextSetupRequestIEs_13,
   T45__InitialContextSetupRequestIEs_14,
   T45__InitialContextSetupRequestIEs_15,
   T45__InitialContextSetupRequestIEs_16,
   T45__InitialContextSetupRequestIEs_17,
   T45__InitialContextSetupRequestIEs_18,
   T45__InitialContextSetupRequestIEs_19,
   T45__InitialContextSetupRequestIEs_20,
   T45__InitialContextSetupRequestIEs_21,
   T45__InitialContextSetupRequestIEs_22,
   T45__InitialContextSetupRequestIEs_23,
   T45__InitialContextSetupRequestIEs_24,
   T45__InitialContextSetupRequestIEs_25,
   T45__InitialContextSetupRequestIEs_26,
   T45__InitialContextSetupRequestIEs_27,
   T45__InitialContextSetupRequestIEs_28,
   T45__InitialContextSetupRequestIEs_29,
   T45__InitialContextSetupRequestIEs_30,
   T45__InitialContextSetupRequestIEs_31
} InitialContextSetupRequestIEs_TVALUE;

typedef enum {
   T46_UNDEF_,
   T46__E_RABToBeSetupItemCtxtSUReqIEs_1
} E_RABToBeSetupItemCtxtSUReqIEs_TVALUE;

typedef enum {
   T47_UNDEF_,
   T47__E_RABToBeSetupItemCtxtSUReqExtIEs_1,
   T47__E_RABToBeSetupItemCtxtSUReqExtIEs_2,
   T47__E_RABToBeSetupItemCtxtSUReqExtIEs_3
} E_RABToBeSetupItemCtxtSUReqExtIEs_TVALUE;

typedef enum {
   T48_UNDEF_,
   T48__InitialContextSetupResponseIEs_1,
   T48__InitialContextSetupResponseIEs_2,
   T48__InitialContextSetupResponseIEs_3,
   T48__InitialContextSetupResponseIEs_4,
   T48__InitialContextSetupResponseIEs_5
} InitialContextSetupResponseIEs_TVALUE;

typedef enum {
   T49_UNDEF_,
   T49__E_RABSetupItemCtxtSUResIEs_1
} E_RABSetupItemCtxtSUResIEs_TVALUE;

typedef enum {
   T50_UNDEF_
} E_RABSetupItemCtxtSUResExtIEs_TVALUE;

typedef enum {
   T51_UNDEF_,
   T51__InitialContextSetupFailureIEs_1,
   T51__InitialContextSetupFailureIEs_2,
   T51__InitialContextSetupFailureIEs_3,
   T51__InitialContextSetupFailureIEs_4
} InitialContextSetupFailureIEs_TVALUE;

typedef enum {
   T52_UNDEF_,
   T52__PagingIEs_1,
   T52__PagingIEs_2,
   T52__PagingIEs_3,
   T52__PagingIEs_4,
   T52__PagingIEs_5,
   T52__PagingIEs_6,
   T52__PagingIEs_7,
   T52__PagingIEs_8,
   T52__PagingIEs_9,
   T52__PagingIEs_10,
   T52__PagingIEs_11,
   T52__PagingIEs_12,
   T52__PagingIEs_13,
   T52__PagingIEs_14,
   T52__PagingIEs_15
} PagingIEs_TVALUE;

typedef enum {
   T53_UNDEF_,
   T53__TAIItemIEs_1
} TAIItemIEs_TVALUE;

typedef enum {
   T54_UNDEF_
} TAIItemExtIEs_TVALUE;

typedef enum {
   T55_UNDEF_,
   T55__UEContextReleaseRequest_IEs_1,
   T55__UEContextReleaseRequest_IEs_2,
   T55__UEContextReleaseRequest_IEs_3,
   T55__UEContextReleaseRequest_IEs_4,
   T55__UEContextReleaseRequest_IEs_5
} UEContextReleaseRequest_IEs_TVALUE;

typedef enum {
   T56_UNDEF_,
   T56__UEContextReleaseCommand_IEs_1,
   T56__UEContextReleaseCommand_IEs_2
} UEContextReleaseCommand_IEs_TVALUE;

typedef enum {
   T57_UNDEF_,
   T57__UEContextReleaseComplete_IEs_1,
   T57__UEContextReleaseComplete_IEs_2,
   T57__UEContextReleaseComplete_IEs_3,
   T57__UEContextReleaseComplete_IEs_4,
   T57__UEContextReleaseComplete_IEs_5,
   T57__UEContextReleaseComplete_IEs_6,
   T57__UEContextReleaseComplete_IEs_7
} UEContextReleaseComplete_IEs_TVALUE;

typedef enum {
   T58_UNDEF_,
   T58__UEContextModificationRequestIEs_1,
   T58__UEContextModificationRequestIEs_2,
   T58__UEContextModificationRequestIEs_3,
   T58__UEContextModificationRequestIEs_4,
   T58__UEContextModificationRequestIEs_5,
   T58__UEContextModificationRequestIEs_6,
   T58__UEContextModificationRequestIEs_7,
   T58__UEContextModificationRequestIEs_8,
   T58__UEContextModificationRequestIEs_9,
   T58__UEContextModificationRequestIEs_10,
   T58__UEContextModificationRequestIEs_11,
   T58__UEContextModificationRequestIEs_12,
   T58__UEContextModificationRequestIEs_13,
   T58__UEContextModificationRequestIEs_14,
   T58__UEContextModificationRequestIEs_15,
   T58__UEContextModificationRequestIEs_16,
   T58__UEContextModificationRequestIEs_17
} UEContextModificationRequestIEs_TVALUE;

typedef enum {
   T59_UNDEF_,
   T59__UEContextModificationResponseIEs_1,
   T59__UEContextModificationResponseIEs_2,
   T59__UEContextModificationResponseIEs_3
} UEContextModificationResponseIEs_TVALUE;

typedef enum {
   T60_UNDEF_,
   T60__UEContextModificationFailureIEs_1,
   T60__UEContextModificationFailureIEs_2,
   T60__UEContextModificationFailureIEs_3,
   T60__UEContextModificationFailureIEs_4
} UEContextModificationFailureIEs_TVALUE;

typedef enum {
   T61_UNDEF_,
   T61__UERadioCapabilityMatchRequestIEs_1,
   T61__UERadioCapabilityMatchRequestIEs_2,
   T61__UERadioCapabilityMatchRequestIEs_3
} UERadioCapabilityMatchRequestIEs_TVALUE;

typedef enum {
   T62_UNDEF_,
   T62__UERadioCapabilityMatchResponseIEs_1,
   T62__UERadioCapabilityMatchResponseIEs_2,
   T62__UERadioCapabilityMatchResponseIEs_3,
   T62__UERadioCapabilityMatchResponseIEs_4
} UERadioCapabilityMatchResponseIEs_TVALUE;

typedef enum {
   T63_UNDEF_,
   T63__DownlinkNASTransport_IEs_1,
   T63__DownlinkNASTransport_IEs_2,
   T63__DownlinkNASTransport_IEs_3,
   T63__DownlinkNASTransport_IEs_4,
   T63__DownlinkNASTransport_IEs_5,
   T63__DownlinkNASTransport_IEs_6,
   T63__DownlinkNASTransport_IEs_7,
   T63__DownlinkNASTransport_IEs_8,
   T63__DownlinkNASTransport_IEs_9,
   T63__DownlinkNASTransport_IEs_10,
   T63__DownlinkNASTransport_IEs_11,
   T63__DownlinkNASTransport_IEs_12,
   T63__DownlinkNASTransport_IEs_13,
   T63__DownlinkNASTransport_IEs_14,
   T63__DownlinkNASTransport_IEs_15
} DownlinkNASTransport_IEs_TVALUE;

typedef enum {
   T64_UNDEF_,
   T64__InitialUEMessage_IEs_1,
   T64__InitialUEMessage_IEs_2,
   T64__InitialUEMessage_IEs_3,
   T64__InitialUEMessage_IEs_4,
   T64__InitialUEMessage_IEs_5,
   T64__InitialUEMessage_IEs_6,
   T64__InitialUEMessage_IEs_7,
   T64__InitialUEMessage_IEs_8,
   T64__InitialUEMessage_IEs_9,
   T64__InitialUEMessage_IEs_10,
   T64__InitialUEMessage_IEs_11,
   T64__InitialUEMessage_IEs_12,
   T64__InitialUEMessage_IEs_13,
   T64__InitialUEMessage_IEs_14,
   T64__InitialUEMessage_IEs_15,
   T64__InitialUEMessage_IEs_16,
   T64__InitialUEMessage_IEs_17,
   T64__InitialUEMessage_IEs_18,
   T64__InitialUEMessage_IEs_19,
   T64__InitialUEMessage_IEs_20,
   T64__InitialUEMessage_IEs_21,
   T64__InitialUEMessage_IEs_22
} InitialUEMessage_IEs_TVALUE;

typedef enum {
   T65_UNDEF_,
   T65__UplinkNASTransport_IEs_1,
   T65__UplinkNASTransport_IEs_2,
   T65__UplinkNASTransport_IEs_3,
   T65__UplinkNASTransport_IEs_4,
   T65__UplinkNASTransport_IEs_5,
   T65__UplinkNASTransport_IEs_6,
   T65__UplinkNASTransport_IEs_7,
   T65__UplinkNASTransport_IEs_8
} UplinkNASTransport_IEs_TVALUE;

typedef enum {
   T66_UNDEF_,
   T66__NASNonDeliveryIndication_IEs_1,
   T66__NASNonDeliveryIndication_IEs_2,
   T66__NASNonDeliveryIndication_IEs_3,
   T66__NASNonDeliveryIndication_IEs_4
} NASNonDeliveryIndication_IEs_TVALUE;

typedef enum {
   T67_UNDEF_,
   T67__RerouteNASRequest_IEs_1,
   T67__RerouteNASRequest_IEs_2,
   T67__RerouteNASRequest_IEs_3,
   T67__RerouteNASRequest_IEs_4,
   T67__RerouteNASRequest_IEs_5,
   T67__RerouteNASRequest_IEs_6
} RerouteNASRequest_IEs_TVALUE;

typedef enum {
   T68_UNDEF_,
   T68__NASDeliveryIndicationIEs_1,
   T68__NASDeliveryIndicationIEs_2
} NASDeliveryIndicationIEs_TVALUE;

typedef enum {
   T69_UNDEF_,
   T69__ResetIEs_1,
   T69__ResetIEs_2
} ResetIEs_TVALUE;

typedef enum {
   T70_UNDEF_,
   T70__UE_associatedLogicalS1_ConnectionItemRes_1
} UE_associatedLogicalS1_ConnectionItemRes_TVALUE;

typedef enum {
   T71_UNDEF_,
   T71__ResetAcknowledgeIEs_1,
   T71__ResetAcknowledgeIEs_2
} ResetAcknowledgeIEs_TVALUE;

typedef enum {
   T72_UNDEF_,
   T72__UE_associatedLogicalS1_ConnectionItemResAck_1
} UE_associatedLogicalS1_ConnectionItemResAck_TVALUE;

typedef enum {
   T73_UNDEF_,
   T73__ErrorIndicationIEs_1,
   T73__ErrorIndicationIEs_2,
   T73__ErrorIndicationIEs_3,
   T73__ErrorIndicationIEs_4
} ErrorIndicationIEs_TVALUE;

typedef enum {
   T74_UNDEF_,
   T74__S1SetupRequestIEs_1,
   T74__S1SetupRequestIEs_2,
   T74__S1SetupRequestIEs_3,
   T74__S1SetupRequestIEs_4,
   T74__S1SetupRequestIEs_5,
   T74__S1SetupRequestIEs_6,
   T74__S1SetupRequestIEs_7,
   T74__S1SetupRequestIEs_8
} S1SetupRequestIEs_TVALUE;

typedef enum {
   T75_UNDEF_,
   T75__S1SetupResponseIEs_1,
   T75__S1SetupResponseIEs_2,
   T75__S1SetupResponseIEs_3,
   T75__S1SetupResponseIEs_4,
   T75__S1SetupResponseIEs_5,
   T75__S1SetupResponseIEs_6,
   T75__S1SetupResponseIEs_7
} S1SetupResponseIEs_TVALUE;

typedef enum {
   T76_UNDEF_,
   T76__S1SetupFailureIEs_1,
   T76__S1SetupFailureIEs_2,
   T76__S1SetupFailureIEs_3
} S1SetupFailureIEs_TVALUE;

typedef enum {
   T77_UNDEF_,
   T77__ENBConfigurationUpdateIEs_1,
   T77__ENBConfigurationUpdateIEs_2,
   T77__ENBConfigurationUpdateIEs_3,
   T77__ENBConfigurationUpdateIEs_4,
   T77__ENBConfigurationUpdateIEs_5,
   T77__ENBConfigurationUpdateIEs_6,
   T77__ENBConfigurationUpdateIEs_7
} ENBConfigurationUpdateIEs_TVALUE;

typedef enum {
   T78_UNDEF_,
   T78__ENBConfigurationUpdateAcknowledgeIEs_1
} ENBConfigurationUpdateAcknowledgeIEs_TVALUE;

typedef enum {
   T79_UNDEF_,
   T79__ENBConfigurationUpdateFailureIEs_1,
   T79__ENBConfigurationUpdateFailureIEs_2,
   T79__ENBConfigurationUpdateFailureIEs_3
} ENBConfigurationUpdateFailureIEs_TVALUE;

typedef enum {
   T80_UNDEF_,
   T80__MMEConfigurationUpdateIEs_1,
   T80__MMEConfigurationUpdateIEs_2,
   T80__MMEConfigurationUpdateIEs_3,
   T80__MMEConfigurationUpdateIEs_4
} MMEConfigurationUpdateIEs_TVALUE;

typedef enum {
   T81_UNDEF_,
   T81__MMEConfigurationUpdateAcknowledgeIEs_1
} MMEConfigurationUpdateAcknowledgeIEs_TVALUE;

typedef enum {
   T82_UNDEF_,
   T82__MMEConfigurationUpdateFailureIEs_1,
   T82__MMEConfigurationUpdateFailureIEs_2,
   T82__MMEConfigurationUpdateFailureIEs_3
} MMEConfigurationUpdateFailureIEs_TVALUE;

typedef enum {
   T83_UNDEF_,
   T83__DownlinkS1cdma2000tunnellingIEs_1,
   T83__DownlinkS1cdma2000tunnellingIEs_2,
   T83__DownlinkS1cdma2000tunnellingIEs_3,
   T83__DownlinkS1cdma2000tunnellingIEs_4,
   T83__DownlinkS1cdma2000tunnellingIEs_5,
   T83__DownlinkS1cdma2000tunnellingIEs_6
} DownlinkS1cdma2000tunnellingIEs_TVALUE;

typedef enum {
   T84_UNDEF_,
   T84__UplinkS1cdma2000tunnellingIEs_1,
   T84__UplinkS1cdma2000tunnellingIEs_2,
   T84__UplinkS1cdma2000tunnellingIEs_3,
   T84__UplinkS1cdma2000tunnellingIEs_4,
   T84__UplinkS1cdma2000tunnellingIEs_5,
   T84__UplinkS1cdma2000tunnellingIEs_6,
   T84__UplinkS1cdma2000tunnellingIEs_7,
   T84__UplinkS1cdma2000tunnellingIEs_8,
   T84__UplinkS1cdma2000tunnellingIEs_9
} UplinkS1cdma2000tunnellingIEs_TVALUE;

typedef enum {
   T85_UNDEF_,
   T85__UECapabilityInfoIndicationIEs_1,
   T85__UECapabilityInfoIndicationIEs_2,
   T85__UECapabilityInfoIndicationIEs_3,
   T85__UECapabilityInfoIndicationIEs_4,
   T85__UECapabilityInfoIndicationIEs_5,
   T85__UECapabilityInfoIndicationIEs_6
} UECapabilityInfoIndicationIEs_TVALUE;

typedef enum {
   T86_UNDEF_,
   T86__ENBStatusTransferIEs_1,
   T86__ENBStatusTransferIEs_2,
   T86__ENBStatusTransferIEs_3
} ENBStatusTransferIEs_TVALUE;

typedef enum {
   T87_UNDEF_,
   T87__MMEStatusTransferIEs_1,
   T87__MMEStatusTransferIEs_2,
   T87__MMEStatusTransferIEs_3
} MMEStatusTransferIEs_TVALUE;

typedef enum {
   T88_UNDEF_,
   T88__TraceStartIEs_1,
   T88__TraceStartIEs_2,
   T88__TraceStartIEs_3
} TraceStartIEs_TVALUE;

typedef enum {
   T89_UNDEF_,
   T89__TraceFailureIndicationIEs_1,
   T89__TraceFailureIndicationIEs_2,
   T89__TraceFailureIndicationIEs_3,
   T89__TraceFailureIndicationIEs_4
} TraceFailureIndicationIEs_TVALUE;

typedef enum {
   T90_UNDEF_,
   T90__DeactivateTraceIEs_1,
   T90__DeactivateTraceIEs_2,
   T90__DeactivateTraceIEs_3
} DeactivateTraceIEs_TVALUE;

typedef enum {
   T91_UNDEF_,
   T91__CellTrafficTraceIEs_1,
   T91__CellTrafficTraceIEs_2,
   T91__CellTrafficTraceIEs_3,
   T91__CellTrafficTraceIEs_4,
   T91__CellTrafficTraceIEs_5,
   T91__CellTrafficTraceIEs_6
} CellTrafficTraceIEs_TVALUE;

typedef enum {
   T92_UNDEF_,
   T92__LocationReportingControlIEs_1,
   T92__LocationReportingControlIEs_2,
   T92__LocationReportingControlIEs_3
} LocationReportingControlIEs_TVALUE;

typedef enum {
   T93_UNDEF_,
   T93__LocationReportingFailureIndicationIEs_1,
   T93__LocationReportingFailureIndicationIEs_2,
   T93__LocationReportingFailureIndicationIEs_3
} LocationReportingFailureIndicationIEs_TVALUE;

typedef enum {
   T94_UNDEF_,
   T94__LocationReportIEs_1,
   T94__LocationReportIEs_2,
   T94__LocationReportIEs_3,
   T94__LocationReportIEs_4,
   T94__LocationReportIEs_5,
   T94__LocationReportIEs_6
} LocationReportIEs_TVALUE;

typedef enum {
   T95_UNDEF_,
   T95__OverloadStartIEs_1,
   T95__OverloadStartIEs_2,
   T95__OverloadStartIEs_3
} OverloadStartIEs_TVALUE;

typedef enum {
   T96_UNDEF_,
   T96__OverloadStopIEs_1
} OverloadStopIEs_TVALUE;

typedef enum {
   T97_UNDEF_,
   T97__WriteReplaceWarningRequestIEs_1,
   T97__WriteReplaceWarningRequestIEs_2,
   T97__WriteReplaceWarningRequestIEs_3,
   T97__WriteReplaceWarningRequestIEs_4,
   T97__WriteReplaceWarningRequestIEs_5,
   T97__WriteReplaceWarningRequestIEs_6,
   T97__WriteReplaceWarningRequestIEs_7,
   T97__WriteReplaceWarningRequestIEs_8,
   T97__WriteReplaceWarningRequestIEs_9,
   T97__WriteReplaceWarningRequestIEs_10,
   T97__WriteReplaceWarningRequestIEs_11,
   T97__WriteReplaceWarningRequestIEs_12
} WriteReplaceWarningRequestIEs_TVALUE;

typedef enum {
   T98_UNDEF_,
   T98__WriteReplaceWarningResponseIEs_1,
   T98__WriteReplaceWarningResponseIEs_2,
   T98__WriteReplaceWarningResponseIEs_3,
   T98__WriteReplaceWarningResponseIEs_4
} WriteReplaceWarningResponseIEs_TVALUE;

typedef enum {
   T99_UNDEF_,
   T99__ENBDirectInformationTransferIEs_1
} ENBDirectInformationTransferIEs_TVALUE;

typedef enum {
   T100_UNDEF_,
   T100__MMEDirectInformationTransferIEs_1
} MMEDirectInformationTransferIEs_TVALUE;

typedef enum {
   T101_UNDEF_,
   T101__ENBConfigurationTransferIEs_1,
   T101__ENBConfigurationTransferIEs_2
} ENBConfigurationTransferIEs_TVALUE;

typedef enum {
   T102_UNDEF_,
   T102__MMEConfigurationTransferIEs_1,
   T102__MMEConfigurationTransferIEs_2
} MMEConfigurationTransferIEs_TVALUE;

typedef enum {
   T103_UNDEF_
} PrivateMessageIEs_TVALUE;

typedef enum {
   T104_UNDEF_,
   T104__KillRequestIEs_1,
   T104__KillRequestIEs_2,
   T104__KillRequestIEs_3,
   T104__KillRequestIEs_4
} KillRequestIEs_TVALUE;

typedef enum {
   T105_UNDEF_,
   T105__KillResponseIEs_1,
   T105__KillResponseIEs_2,
   T105__KillResponseIEs_3,
   T105__KillResponseIEs_4
} KillResponseIEs_TVALUE;

typedef enum {
   T106_UNDEF_,
   T106__PWSRestartIndicationIEs_1,
   T106__PWSRestartIndicationIEs_2,
   T106__PWSRestartIndicationIEs_3,
   T106__PWSRestartIndicationIEs_4
} PWSRestartIndicationIEs_TVALUE;

typedef enum {
   T107_UNDEF_,
   T107__PWSFailureIndicationIEs_1,
   T107__PWSFailureIndicationIEs_2
} PWSFailureIndicationIEs_TVALUE;

typedef enum {
   T108_UNDEF_,
   T108__DownlinkUEAssociatedLPPaTransport_IEs_1,
   T108__DownlinkUEAssociatedLPPaTransport_IEs_2,
   T108__DownlinkUEAssociatedLPPaTransport_IEs_3,
   T108__DownlinkUEAssociatedLPPaTransport_IEs_4
} DownlinkUEAssociatedLPPaTransport_IEs_TVALUE;

typedef enum {
   T109_UNDEF_,
   T109__UplinkUEAssociatedLPPaTransport_IEs_1,
   T109__UplinkUEAssociatedLPPaTransport_IEs_2,
   T109__UplinkUEAssociatedLPPaTransport_IEs_3,
   T109__UplinkUEAssociatedLPPaTransport_IEs_4
} UplinkUEAssociatedLPPaTransport_IEs_TVALUE;

typedef enum {
   T110_UNDEF_,
   T110__DownlinkNonUEAssociatedLPPaTransport_IEs_1,
   T110__DownlinkNonUEAssociatedLPPaTransport_IEs_2
} DownlinkNonUEAssociatedLPPaTransport_IEs_TVALUE;

typedef enum {
   T111_UNDEF_,
   T111__UplinkNonUEAssociatedLPPaTransport_IEs_1,
   T111__UplinkNonUEAssociatedLPPaTransport_IEs_2
} UplinkNonUEAssociatedLPPaTransport_IEs_TVALUE;

typedef enum {
   T112_UNDEF_,
   T112__E_RABModificationIndicationIEs_1,
   T112__E_RABModificationIndicationIEs_2,
   T112__E_RABModificationIndicationIEs_3,
   T112__E_RABModificationIndicationIEs_4,
   T112__E_RABModificationIndicationIEs_5,
   T112__E_RABModificationIndicationIEs_6,
   T112__E_RABModificationIndicationIEs_7
} E_RABModificationIndicationIEs_TVALUE;

typedef enum {
   T113_UNDEF_,
   T113__E_RABToBeModifiedItemBearerModIndIEs_1
} E_RABToBeModifiedItemBearerModIndIEs_TVALUE;

typedef enum {
   T114_UNDEF_
} E_RABToBeModifiedItemBearerModInd_ExtIEs_TVALUE;

typedef enum {
   T115_UNDEF_,
   T115__E_RABNotToBeModifiedItemBearerModIndIEs_1
} E_RABNotToBeModifiedItemBearerModIndIEs_TVALUE;

typedef enum {
   T116_UNDEF_
} E_RABNotToBeModifiedItemBearerModInd_ExtIEs_TVALUE;

typedef enum {
   T117_UNDEF_
} CSGMembershipInfo_ExtIEs_TVALUE;

typedef enum {
   T118_UNDEF_,
   T118__E_RABModificationConfirmIEs_1,
   T118__E_RABModificationConfirmIEs_2,
   T118__E_RABModificationConfirmIEs_3,
   T118__E_RABModificationConfirmIEs_4,
   T118__E_RABModificationConfirmIEs_5,
   T118__E_RABModificationConfirmIEs_6,
   T118__E_RABModificationConfirmIEs_7
} E_RABModificationConfirmIEs_TVALUE;

typedef enum {
   T119_UNDEF_,
   T119__E_RABModifyItemBearerModConfIEs_1
} E_RABModifyItemBearerModConfIEs_TVALUE;

typedef enum {
   T120_UNDEF_
} E_RABModifyItemBearerModConfExtIEs_TVALUE;

typedef enum {
   T121_UNDEF_,
   T121__UEContextModificationIndicationIEs_1,
   T121__UEContextModificationIndicationIEs_2,
   T121__UEContextModificationIndicationIEs_3
} UEContextModificationIndicationIEs_TVALUE;

typedef enum {
   T122_UNDEF_,
   T122__UEContextModificationConfirmIEs_1,
   T122__UEContextModificationConfirmIEs_2,
   T122__UEContextModificationConfirmIEs_3,
   T122__UEContextModificationConfirmIEs_4
} UEContextModificationConfirmIEs_TVALUE;

typedef enum {
   T123_UNDEF_,
   T123__UEContextSuspendRequestIEs_1,
   T123__UEContextSuspendRequestIEs_2,
   T123__UEContextSuspendRequestIEs_3,
   T123__UEContextSuspendRequestIEs_4,
   T123__UEContextSuspendRequestIEs_5
} UEContextSuspendRequestIEs_TVALUE;

typedef enum {
   T124_UNDEF_,
   T124__UEContextSuspendResponseIEs_1,
   T124__UEContextSuspendResponseIEs_2,
   T124__UEContextSuspendResponseIEs_3,
   T124__UEContextSuspendResponseIEs_4
} UEContextSuspendResponseIEs_TVALUE;

typedef enum {
   T125_UNDEF_,
   T125__UEContextResumeRequestIEs_1,
   T125__UEContextResumeRequestIEs_2,
   T125__UEContextResumeRequestIEs_3,
   T125__UEContextResumeRequestIEs_4
} UEContextResumeRequestIEs_TVALUE;

typedef enum {
   T126_UNDEF_,
   T126__E_RABFailedToResumeItemResumeReqIEs_1
} E_RABFailedToResumeItemResumeReqIEs_TVALUE;

typedef enum {
   T127_UNDEF_
} E_RABFailedToResumeItemResumeReq_ExtIEs_TVALUE;

typedef enum {
   T128_UNDEF_,
   T128__UEContextResumeResponseIEs_1,
   T128__UEContextResumeResponseIEs_2,
   T128__UEContextResumeResponseIEs_3,
   T128__UEContextResumeResponseIEs_4,
   T128__UEContextResumeResponseIEs_5,
   T128__UEContextResumeResponseIEs_6
} UEContextResumeResponseIEs_TVALUE;

typedef enum {
   T129_UNDEF_,
   T129__E_RABFailedToResumeItemResumeResIEs_1
} E_RABFailedToResumeItemResumeResIEs_TVALUE;

typedef enum {
   T130_UNDEF_
} E_RABFailedToResumeItemResumeRes_ExtIEs_TVALUE;

typedef enum {
   T131_UNDEF_,
   T131__UEContextResumeFailureIEs_1,
   T131__UEContextResumeFailureIEs_2,
   T131__UEContextResumeFailureIEs_3,
   T131__UEContextResumeFailureIEs_4
} UEContextResumeFailureIEs_TVALUE;

typedef enum {
   T132_UNDEF_,
   T132__ConnectionEstablishmentIndicationIEs_1,
   T132__ConnectionEstablishmentIndicationIEs_2,
   T132__ConnectionEstablishmentIndicationIEs_3,
   T132__ConnectionEstablishmentIndicationIEs_4,
   T132__ConnectionEstablishmentIndicationIEs_5,
   T132__ConnectionEstablishmentIndicationIEs_6,
   T132__ConnectionEstablishmentIndicationIEs_7,
   T132__ConnectionEstablishmentIndicationIEs_8
} ConnectionEstablishmentIndicationIEs_TVALUE;

typedef enum {
   T133_UNDEF_,
   T133__RetrieveUEInformationIEs_1
} RetrieveUEInformationIEs_TVALUE;

typedef enum {
   T134_UNDEF_,
   T134__UEInformationTransferIEs_1,
   T134__UEInformationTransferIEs_2,
   T134__UEInformationTransferIEs_3,
   T134__UEInformationTransferIEs_4,
   T134__UEInformationTransferIEs_5
} UEInformationTransferIEs_TVALUE;

typedef enum {
   T135_UNDEF_,
   T135__ENBCPRelocationIndicationIEs_1,
   T135__ENBCPRelocationIndicationIEs_2,
   T135__ENBCPRelocationIndicationIEs_3,
   T135__ENBCPRelocationIndicationIEs_4,
   T135__ENBCPRelocationIndicationIEs_5
} ENBCPRelocationIndicationIEs_TVALUE;

typedef enum {
   T136_UNDEF_,
   T136__MMECPRelocationIndicationIEs_1,
   T136__MMECPRelocationIndicationIEs_2
} MMECPRelocationIndicationIEs_TVALUE;

typedef enum {
   T137_UNDEF_,
   T137__SecondaryRATDataUsageReportIEs_1,
   T137__SecondaryRATDataUsageReportIEs_2,
   T137__SecondaryRATDataUsageReportIEs_3,
   T137__SecondaryRATDataUsageReportIEs_4
} SecondaryRATDataUsageReportIEs_TVALUE;

/**************************************************************/
/*                                                            */
/*  HandoverRequired_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequired'
*/
typedef struct EXTERN s1ap_HandoverRequired_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverRequiredIEs_TVALUE t;

      /**
       * HandoverRequiredIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverRequiredIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _HandoverRequiredIEs_2;
         /**
          * id: id-HandoverType
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_HandoverType _HandoverRequiredIEs_3;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_HandoverRequiredIEs_4;
         /**
          * id: id-TargetID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_TargetID *_HandoverRequiredIEs_5;
         /**
          * id: id-Direct-Forwarding-Path-Availability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Direct_Forwarding_Path_Availability _HandoverRequiredIEs_6;
         /**
          * id: id-SRVCCHOIndication
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_SRVCCHOIndication _HandoverRequiredIEs_7;
         /**
          * id: id-Source-ToTarget-TransparentContainer
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Source_ToTarget_TransparentContainer *_HandoverRequiredIEs_8;
         /**
          * id: id-Source-ToTarget-TransparentContainer-Secondary
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_Source_ToTarget_TransparentContainer *_HandoverRequiredIEs_9;
         /**
          * id: id-MSClassmark2
          * criticality: s1ap_reject
          * presence: s1ap_conditional
          */
         s1ap_MSClassmark2 *_HandoverRequiredIEs_10;
         /**
          * id: id-MSClassmark3
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_MSClassmark3 *_HandoverRequiredIEs_11;
         /**
          * id: id-CSG-Id
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSG_Id *_HandoverRequiredIEs_12;
         /**
          * id: id-CellAccessMode
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CellAccessMode _HandoverRequiredIEs_13;
         /**
          * id: id-PS-ServiceNotAvailable
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PS_ServiceNotAvailable _HandoverRequiredIEs_14;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverRequired_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverRequired_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequired_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequired_protocolIEs_element 
   (const char* name, const s1ap_HandoverRequired_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequired_protocolIEs_element (const char* name, 
   s1ap_HandoverRequired_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequired_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequired_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_1
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_2
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_3
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_HandoverType value);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_4
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_5
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_TargetID *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_6
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_Direct_Forwarding_Path_Availability value);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_7
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_SRVCCHOIndication value);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_8
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_Source_ToTarget_TransparentContainer *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_9
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_Source_ToTarget_TransparentContainer *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_10
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_MSClassmark2 *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_11
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_MSClassmark3 *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_12
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_CSG_Id *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_13
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_CellAccessMode value);

EXTERN void asn1SetTC_s1ap_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_14
   (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs_element* pElem, 
   s1ap_PS_ServiceNotAvailable value);

EXTERN void asn1Copy_s1ap_HandoverRequired_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverRequired_protocolIEs_element* pSrcValue, 
   s1ap_HandoverRequired_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequired_protocolIEs_element (
   s1ap_HandoverRequired_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequired_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverRequired_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequired_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequired'
*/
/* List of s1ap_HandoverRequired_protocolIEs_element */
typedef OSRTDList s1ap_HandoverRequired_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverRequired_protocolIEs (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequired_protocolIEs (OSCTXT* pctxt, s1ap_HandoverRequired_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequired_protocolIEs 
   (const char* name, const s1ap_HandoverRequired_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequired_protocolIEs (const char* name, 
   s1ap_HandoverRequired_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequired_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequired_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_HandoverType to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_HandoverType value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_TargetID to list */
struct s1ap_TargetID ;
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, struct s1ap_TargetID *pvalue);

/* Append IE with value type s1ap_Direct_Forwarding_Path_Availability to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, 
   s1ap_Direct_Forwarding_Path_Availability value);

/* Append IE with value type s1ap_SRVCCHOIndication to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_SRVCCHOIndication value);

/* Append IE with value type s1ap_Source_ToTarget_TransparentContainer to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, 
   s1ap_Source_ToTarget_TransparentContainer *pvalue);

/* Append IE with value type s1ap_Source_ToTarget_TransparentContainer to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_9   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, 
   s1ap_Source_ToTarget_TransparentContainer *pvalue);

/* Append IE with value type s1ap_MSClassmark2 to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_10   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_MSClassmark2 *pvalue);

/* Append IE with value type s1ap_MSClassmark3 to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_11   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_MSClassmark3 *pvalue);

/* Append IE with value type s1ap_CSG_Id to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_12   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_CSG_Id *pvalue);

/* Append IE with value type s1ap_CellAccessMode to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_13   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_CellAccessMode value);

/* Append IE with value type s1ap_PS_ServiceNotAvailable to list */
EXTERN int asn1Append_s1ap_HandoverRequired_protocolIEs_14   (OSCTXT* pctxt, 
   s1ap_HandoverRequired_protocolIEs* plist, s1ap_PS_ServiceNotAvailable value)
   ;

/* Get IE using id key value */
EXTERN struct s1ap_HandoverRequired_protocolIEs_element* 
   asn1Get_s1ap_HandoverRequired_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverRequired_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverRequired_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverRequired_protocolIEs* pSrcValue, 
   s1ap_HandoverRequired_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequired_protocolIEs (
   s1ap_HandoverRequired_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequired_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverRequired_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequired                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 HANDOVER PREPARATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Handover Required

 **************************************************************
HandoverRequired ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverRequiredIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverRequiredIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverRequiredIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverRequired {
   s1ap_HandoverRequired_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverRequired;

EXTERN int asn1PE_s1ap_HandoverRequired (OSCTXT* pctxt, s1ap_HandoverRequired* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequired (OSCTXT* pctxt, s1ap_HandoverRequired* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequired 
   (const char* name, const s1ap_HandoverRequired* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequired (const char* name, 
   s1ap_HandoverRequired* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequired (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequired* pvalue);

EXTERN void asn1Copy_s1ap_HandoverRequired (OSCTXT* pctxt, 
   const s1ap_HandoverRequired* pSrcValue, s1ap_HandoverRequired* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequired (s1ap_HandoverRequired* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequired (OSCTXT *pctxt, 
   s1ap_HandoverRequired* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemHOReq_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupItemHOReq'
*/
typedef struct EXTERN s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSetupItemHOReq_ExtIEs_TVALUE t;

      /**
       * E-RABToBeSetupItemHOReq-ExtIEs information objects
       */
      union {
         /**
          * id: id-Data-Forwarding-Not-Possible
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Data_Forwarding_Not_Possible _E_RABToBeSetupItemHOReq_ExtIEs_1;
         /**
          * id: id-BearerType
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_BearerType _E_RABToBeSetupItemHOReq_ExtIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element 
   (const char* name, const s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element_E_RABToBeSetupItemHOReq_ExtIEs_1
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pElem, 
   s1ap_Data_Forwarding_Not_Possible value);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element_E_RABToBeSetupItemHOReq_ExtIEs_2
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pElem, 
   s1ap_BearerType value);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element (
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemHOReq_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupItemHOReq'
*/
/* List of s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABToBeSetupItemHOReq_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions 
   (const char* name, const s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions (const char* name, 
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pvalue);

/* Append IE with value type s1ap_Data_Forwarding_Not_Possible to list */
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* plist, 
   s1ap_Data_Forwarding_Not_Possible value);

/* Append IE with value type s1ap_BearerType to list */
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* plist, 
   s1ap_BearerType value);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSetupItemHOReq_iE_Extensions_element* 
   asn1Get_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pSrcValue, 
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions (
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupItemHOReq_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemHOReq                                   */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSetupItemHOReq ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   gTP-TEID [2] GTP-TEID,
   e-RABlevelQosParameters [3] E-RABLevelQoSParameters,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABToBeSetupItemHOReq-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABToBeSetupItemHOReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABToBeSetupItemHOReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABToBeSetupItemHOReq {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_E_RABLevelQoSParameters e_RABlevelQosParameters;
   s1ap_E_RABToBeSetupItemHOReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABToBeSetupItemHOReq;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemHOReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemHOReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemHOReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemHOReq 
   (const char* name, const s1ap_E_RABToBeSetupItemHOReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemHOReq (const char* name, 
   s1ap_E_RABToBeSetupItemHOReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemHOReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemHOReq* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemHOReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemHOReq* pSrcValue, s1ap_E_RABToBeSetupItemHOReq*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemHOReq (
   s1ap_E_RABToBeSetupItemHOReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupItemHOReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupItemHOReq* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupListHOReq_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupListHOReq'
*/
typedef struct EXTERN s1ap_E_RABToBeSetupListHOReq_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSetupItemHOReqIEs_TVALUE t;

      /**
       * E-RABToBeSetupItemHOReqIEs information objects
       */
      union {
         /**
          * id: id-E-RABToBeSetupItemHOReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSetupItemHOReq *_E_RABToBeSetupItemHOReqIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABToBeSetupListHOReq_element;

EXTERN int asn1PE_s1ap_E_RABToBeSetupListHOReq_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupListHOReq_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupListHOReq_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupListHOReq_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupListHOReq_element 
   (const char* name, const s1ap_E_RABToBeSetupListHOReq_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupListHOReq_element (const char* name, 
   s1ap_E_RABToBeSetupListHOReq_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupListHOReq_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupListHOReq_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupListHOReq_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupListHOReq_element* pSrcValue, 
   s1ap_E_RABToBeSetupListHOReq_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupListHOReq_element (
   s1ap_E_RABToBeSetupListHOReq_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupListHOReq_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupListHOReq_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupListHOReq                                   */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSetupListHOReq ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABToBeSetupItemHOReqIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABToBeSetupItemHOReqIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABToBeSetupItemHOReqIEs}{@id})
}
*/
/* List of s1ap_E_RABToBeSetupListHOReq_element */
typedef OSRTDList s1ap_E_RABToBeSetupListHOReq;

EXTERN int asn1PE_s1ap_E_RABToBeSetupListHOReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupListHOReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupListHOReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupListHOReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupListHOReq 
   (const char* name, const s1ap_E_RABToBeSetupListHOReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupListHOReq (const char* name, 
   s1ap_E_RABToBeSetupListHOReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupListHOReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupListHOReq* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSetupListHOReq_element* 
   asn1Get_s1ap_E_RABToBeSetupListHOReq (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABToBeSetupListHOReq* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupListHOReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupListHOReq* pSrcValue, s1ap_E_RABToBeSetupListHOReq*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupListHOReq (
   s1ap_E_RABToBeSetupListHOReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupListHOReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupListHOReq* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequest_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequest'
*/
typedef struct EXTERN s1ap_HandoverRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverRequestIEs_TVALUE t;

      /**
       * HandoverRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverRequestIEs_1;
         /**
          * id: id-HandoverType
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_HandoverType _HandoverRequestIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_HandoverRequestIEs_3;
         /**
          * id: id-uEaggregateMaximumBitrate
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_UEAggregateMaximumBitrate *_HandoverRequestIEs_4;
         /**
          * id: id-E-RABToBeSetupListHOReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSetupListHOReq *_HandoverRequestIEs_5;
         /**
          * id: id-Source-ToTarget-TransparentContainer
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Source_ToTarget_TransparentContainer *_HandoverRequestIEs_6;
         /**
          * id: id-UESecurityCapabilities
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_UESecurityCapabilities *_HandoverRequestIEs_7;
         /**
          * id: id-HandoverRestrictionList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_HandoverRestrictionList *_HandoverRequestIEs_8;
         /**
          * id: id-TraceActivation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TraceActivation *_HandoverRequestIEs_9;
         /**
          * id: id-RequestType
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_RequestType *_HandoverRequestIEs_10;
         /**
          * id: id-SRVCCOperationPossible
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SRVCCOperationPossible _HandoverRequestIEs_11;
         /**
          * id: id-SecurityContext
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SecurityContext *_HandoverRequestIEs_12;
         /**
          * id: id-NASSecurityParameterstoE-UTRAN
          * criticality: s1ap_reject
          * presence: s1ap_conditional
          */
         s1ap_NASSecurityParameterstoE_UTRAN *_HandoverRequestIEs_13;
         /**
          * id: id-CSG-Id
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSG_Id *_HandoverRequestIEs_14;
         /**
          * id: id-CSGMembershipStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipStatus _HandoverRequestIEs_15;
         /**
          * id: id-GUMMEI-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_GUMMEI *_HandoverRequestIEs_16;
         /**
          * id: id-MME-UE-S1AP-ID-2
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MME_UE_S1AP_ID _HandoverRequestIEs_17;
         /**
          * id: id-ManagementBasedMDTAllowed
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ManagementBasedMDTAllowed _HandoverRequestIEs_18;
         /**
          * id: id-ManagementBasedMDTPLMNList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MDTPLMNList *_HandoverRequestIEs_19;
         /**
          * id: id-Masked-IMEISV
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Masked_IMEISV *_HandoverRequestIEs_20;
         /**
          * id: id-ExpectedUEBehaviour
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExpectedUEBehaviour *_HandoverRequestIEs_21;
         /**
          * id: id-ProSeAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ProSeAuthorized *_HandoverRequestIEs_22;
         /**
          * id: id-UEUserPlaneCIoTSupportIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UEUserPlaneCIoTSupportIndicator _HandoverRequestIEs_23;
         /**
          * id: id-V2XServicesAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_V2XServicesAuthorized *_HandoverRequestIEs_24;
         /**
          * id: id-UESidelinkAggregateMaximumBitrate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UESidelinkAggregateMaximumBitrate *_HandoverRequestIEs_25;
         /**
          * id: id-EnhancedCoverageRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EnhancedCoverageRestricted _HandoverRequestIEs_26;
         /**
          * id: id-NRUESecurityCapabilities
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRUESecurityCapabilities *_HandoverRequestIEs_27;
         /**
          * id: id-CE-ModeBRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_ModeBRestricted _HandoverRequestIEs_28;
         /**
          * id: id-AerialUEsubscriptionInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_AerialUEsubscriptionInformation _HandoverRequestIEs_29;
         /**
          * id: id-PendingDataIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PendingDataIndication _HandoverRequestIEs_30;
         /**
          * id: id-Subscription-Based-UE-DifferentiationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Subscription_Based_UE_DifferentiationInfo *_HandoverRequestIEs_31;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequest_protocolIEs_element 
   (const char* name, const s1ap_HandoverRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequest_protocolIEs_element (const char* name, 
   s1ap_HandoverRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_1
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_2
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_HandoverType value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_3
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, s1ap_Cause 
   *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_4
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_UEAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_5
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_E_RABToBeSetupListHOReq *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_6
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_Source_ToTarget_TransparentContainer *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_7
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_8
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_HandoverRestrictionList *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_9
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_TraceActivation *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_10
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_RequestType *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_11
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_SRVCCOperationPossible value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_12
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_SecurityContext *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_13
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_NASSecurityParameterstoE_UTRAN *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_14
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_CSG_Id *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_15
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_CSGMembershipStatus value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_16
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_GUMMEI *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_17
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_18
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_ManagementBasedMDTAllowed value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_19
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_MDTPLMNList *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_20
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_Masked_IMEISV *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_21
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_ExpectedUEBehaviour *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_22
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_ProSeAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_23
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_UEUserPlaneCIoTSupportIndicator value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_24
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_V2XServicesAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_25
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_26
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_EnhancedCoverageRestricted value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_27
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_NRUESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_28
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_CE_ModeBRestricted value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_29
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_AerialUEsubscriptionInformation value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_30
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_PendingDataIndication value);

EXTERN void asn1SetTC_s1ap_HandoverRequest_protocolIEs_element_HandoverRequestIEs_31
   (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs_element* pElem, 
   s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

EXTERN void asn1Copy_s1ap_HandoverRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverRequest_protocolIEs_element* pSrcValue, 
   s1ap_HandoverRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequest_protocolIEs_element (
   s1ap_HandoverRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequest_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequest'
*/
/* List of s1ap_HandoverRequest_protocolIEs_element */
typedef OSRTDList s1ap_HandoverRequest_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverRequest_protocolIEs (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequest_protocolIEs (OSCTXT* pctxt, s1ap_HandoverRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequest_protocolIEs 
   (const char* name, const s1ap_HandoverRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequest_protocolIEs (const char* name, 
   s1ap_HandoverRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_HandoverType to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_HandoverType value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_UEAggregateMaximumBitrate to list */
struct s1ap_UEAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct 
   s1ap_UEAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_E_RABToBeSetupListHOReq to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_E_RABToBeSetupListHOReq 
   *pvalue);

/* Append IE with value type s1ap_Source_ToTarget_TransparentContainer to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, 
   s1ap_Source_ToTarget_TransparentContainer *pvalue);

/* Append IE with value type s1ap_UESecurityCapabilities to list */
struct s1ap_UESecurityCapabilities ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_UESecurityCapabilities 
   *pvalue);

/* Append IE with value type s1ap_HandoverRestrictionList to list */
struct s1ap_HandoverRestrictionList ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct 
   s1ap_HandoverRestrictionList *pvalue);

/* Append IE with value type s1ap_TraceActivation to list */
struct s1ap_TraceActivation ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_9   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_TraceActivation 
   *pvalue);

/* Append IE with value type s1ap_RequestType to list */
struct s1ap_RequestType ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_10   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_RequestType *pvalue);

/* Append IE with value type s1ap_SRVCCOperationPossible to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_11   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_SRVCCOperationPossible value)
   ;

/* Append IE with value type s1ap_SecurityContext to list */
struct s1ap_SecurityContext ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_12   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_SecurityContext 
   *pvalue);

/* Append IE with value type s1ap_NASSecurityParameterstoE_UTRAN to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_13   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, 
   s1ap_NASSecurityParameterstoE_UTRAN *pvalue);

/* Append IE with value type s1ap_CSG_Id to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_14   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_CSG_Id *pvalue);

/* Append IE with value type s1ap_CSGMembershipStatus to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_15   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_CSGMembershipStatus value);

/* Append IE with value type s1ap_GUMMEI to list */
struct s1ap_GUMMEI ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_16   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_GUMMEI *pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_17   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ManagementBasedMDTAllowed to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_18   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_ManagementBasedMDTAllowed 
   value);

/* Append IE with value type s1ap_MDTPLMNList to list */
struct s1ap_MDTPLMNList ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_19   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_MDTPLMNList *pvalue);

/* Append IE with value type s1ap_Masked_IMEISV to list */
struct s1ap_Masked_IMEISV ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_20   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_Masked_IMEISV *pvalue)
   ;

/* Append IE with value type s1ap_ExpectedUEBehaviour to list */
struct s1ap_ExpectedUEBehaviour ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_21   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_ExpectedUEBehaviour 
   *pvalue);

/* Append IE with value type s1ap_ProSeAuthorized to list */
struct s1ap_ProSeAuthorized ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_22   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_ProSeAuthorized 
   *pvalue);

/* Append IE with value type s1ap_UEUserPlaneCIoTSupportIndicator to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_23   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, 
   s1ap_UEUserPlaneCIoTSupportIndicator value);

/* Append IE with value type s1ap_V2XServicesAuthorized to list */
struct s1ap_V2XServicesAuthorized ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_24   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct s1ap_V2XServicesAuthorized 
   *pvalue);

/* Append IE with value type s1ap_UESidelinkAggregateMaximumBitrate to list */
struct s1ap_UESidelinkAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_25   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct 
   s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_EnhancedCoverageRestricted to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_26   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_EnhancedCoverageRestricted 
   value);

/* Append IE with value type s1ap_NRUESecurityCapabilities to list */
struct s1ap_NRUESecurityCapabilities ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_27   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct 
   s1ap_NRUESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_CE_ModeBRestricted to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_28   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_CE_ModeBRestricted value);

/* Append IE with value type s1ap_AerialUEsubscriptionInformation to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_29   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, 
   s1ap_AerialUEsubscriptionInformation value);

/* Append IE with value type s1ap_PendingDataIndication to list */
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_30   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, s1ap_PendingDataIndication value);

/* Append IE with value type s1ap_Subscription_Based_UE_DifferentiationInfo to list */
struct s1ap_Subscription_Based_UE_DifferentiationInfo ;
EXTERN int asn1Append_s1ap_HandoverRequest_protocolIEs_31   (OSCTXT* pctxt, 
   s1ap_HandoverRequest_protocolIEs* plist, struct 
   s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverRequest_protocolIEs_element* 
   asn1Get_s1ap_HandoverRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverRequest_protocolIEs* pSrcValue, 
   s1ap_HandoverRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequest_protocolIEs (
   s1ap_HandoverRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequest                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 HANDOVER RESOURCE ALLOCATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Handover Request

 **************************************************************
HandoverRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverRequest {
   s1ap_HandoverRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverRequest;

EXTERN int asn1PE_s1ap_HandoverRequest (OSCTXT* pctxt, s1ap_HandoverRequest* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequest (OSCTXT* pctxt, s1ap_HandoverRequest* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequest 
   (const char* name, const s1ap_HandoverRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequest (const char* name, 
   s1ap_HandoverRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequest* pvalue);

EXTERN void asn1Copy_s1ap_HandoverRequest (OSCTXT* pctxt, 
   const s1ap_HandoverRequest* pSrcValue, s1ap_HandoverRequest* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequest (s1ap_HandoverRequest* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequest (OSCTXT *pctxt, 
   s1ap_HandoverRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedDLItem_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSwitchedDLItem'
*/
typedef struct EXTERN s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element 
   (const char* name, const s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element (
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedDLItem_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSwitchedDLItem'
*/
/* List of s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABToBeSwitchedDLItem_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions 
   (const char* name, const s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions (const char* name, 
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSwitchedDLItem_iE_Extensions_element* 
   asn1Get_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pSrcValue, 
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions (
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedDLItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedDLItem                                   */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSwitchedDLItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   gTP-TEID [2] GTP-TEID,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABToBeSwitchedDLItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABToBeSwitchedDLItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABToBeSwitchedDLItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABToBeSwitchedDLItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_E_RABToBeSwitchedDLItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABToBeSwitchedDLItem;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedDLItem (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLItem* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedDLItem (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLItem* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedDLItem 
   (const char* name, const s1ap_E_RABToBeSwitchedDLItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedDLItem (const char* name, 
   s1ap_E_RABToBeSwitchedDLItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedDLItem (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedDLItem* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedDLItem (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedDLItem* pSrcValue, s1ap_E_RABToBeSwitchedDLItem*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedDLItem (
   s1ap_E_RABToBeSwitchedDLItem* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedDLItem (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedDLItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedDLList_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSwitchedDLList'
*/
typedef struct EXTERN s1ap_E_RABToBeSwitchedDLList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSwitchedDLItemIEs_TVALUE t;

      /**
       * E-RABToBeSwitchedDLItemIEs information objects
       */
      union {
         /**
          * id: id-E-RABToBeSwitchedDLItem
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSwitchedDLItem *_E_RABToBeSwitchedDLItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABToBeSwitchedDLList_element;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedDLList_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLList_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedDLList_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLList_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedDLList_element 
   (const char* name, const s1ap_E_RABToBeSwitchedDLList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedDLList_element (const char* name, 
   s1ap_E_RABToBeSwitchedDLList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedDLList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedDLList_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedDLList_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedDLList_element* pSrcValue, 
   s1ap_E_RABToBeSwitchedDLList_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedDLList_element (
   s1ap_E_RABToBeSwitchedDLList_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedDLList_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedDLList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedDLList                                   */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSwitchedDLList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABToBeSwitchedDLItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABToBeSwitchedDLItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABToBeSwitchedDLItemIEs}{@id})
}
*/
/* List of s1ap_E_RABToBeSwitchedDLList_element */
typedef OSRTDList s1ap_E_RABToBeSwitchedDLList;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedDLList (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLList* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedDLList (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedDLList* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedDLList 
   (const char* name, const s1ap_E_RABToBeSwitchedDLList* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedDLList (const char* name, 
   s1ap_E_RABToBeSwitchedDLList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedDLList (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedDLList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSwitchedDLList_element* 
   asn1Get_s1ap_E_RABToBeSwitchedDLList (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABToBeSwitchedDLList* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedDLList (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedDLList* pSrcValue, s1ap_E_RABToBeSwitchedDLList*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedDLList (
   s1ap_E_RABToBeSwitchedDLList* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedDLList (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedDLList* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequest_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequest'
*/
typedef struct EXTERN s1ap_PathSwitchRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      PathSwitchRequestIEs_TVALUE t;

      /**
       * PathSwitchRequestIEs information objects
       */
      union {
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _PathSwitchRequestIEs_1;
         /**
          * id: id-E-RABToBeSwitchedDLList
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSwitchedDLList *_PathSwitchRequestIEs_2;
         /**
          * id: id-SourceMME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _PathSwitchRequestIEs_3;
         /**
          * id: id-EUTRAN-CGI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_EUTRAN_CGI *_PathSwitchRequestIEs_4;
         /**
          * id: id-TAI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TAI *_PathSwitchRequestIEs_5;
         /**
          * id: id-UESecurityCapabilities
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_UESecurityCapabilities *_PathSwitchRequestIEs_6;
         /**
          * id: id-CSG-Id
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSG_Id *_PathSwitchRequestIEs_7;
         /**
          * id: id-CellAccessMode
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CellAccessMode _PathSwitchRequestIEs_8;
         /**
          * id: id-SourceMME-GUMMEI
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_GUMMEI *_PathSwitchRequestIEs_9;
         /**
          * id: id-CSGMembershipStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipStatus _PathSwitchRequestIEs_10;
         /**
          * id: id-Tunnel-Information-for-BBF
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TunnelInformation *_PathSwitchRequestIEs_11;
         /**
          * id: id-LHN-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_LHN_ID *_PathSwitchRequestIEs_12;
         /**
          * id: id-RRC-Resume-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_RRC_Establishment_Cause _PathSwitchRequestIEs_13;
         /**
          * id: id-NRUESecurityCapabilities
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRUESecurityCapabilities *_PathSwitchRequestIEs_14;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_PathSwitchRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_PathSwitchRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequest_protocolIEs_element 
   (const char* name, const s1ap_PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequest_protocolIEs_element (const char* name, 
   s1ap_PathSwitchRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_1
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_2
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_E_RABToBeSwitchedDLList *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_3
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_4
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_EUTRAN_CGI *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_5
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, s1ap_TAI 
   *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_6
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_7
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_CSG_Id *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_8
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_CellAccessMode value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_9
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_GUMMEI *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_10
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_CSGMembershipStatus value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_11
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_TunnelInformation *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_12
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_LHN_ID *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_13
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_RRC_Establishment_Cause value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_14
   (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs_element* pElem, 
   s1ap_NRUESecurityCapabilities *pvalue);

EXTERN void asn1Copy_s1ap_PathSwitchRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequest_protocolIEs_element* pSrcValue, 
   s1ap_PathSwitchRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequest_protocolIEs_element (
   s1ap_PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_PathSwitchRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequest_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequest'
*/
/* List of s1ap_PathSwitchRequest_protocolIEs_element */
typedef OSRTDList s1ap_PathSwitchRequest_protocolIEs;

EXTERN int asn1PE_s1ap_PathSwitchRequest_protocolIEs (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequest_protocolIEs (OSCTXT* pctxt, s1ap_PathSwitchRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequest_protocolIEs 
   (const char* name, const s1ap_PathSwitchRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequest_protocolIEs (const char* name, 
   s1ap_PathSwitchRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABToBeSwitchedDLList to list */
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, s1ap_E_RABToBeSwitchedDLList 
   *pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_EUTRAN_CGI to list */
struct s1ap_EUTRAN_CGI ;
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, struct s1ap_EUTRAN_CGI *pvalue);

/* Append IE with value type s1ap_TAI to list */
struct s1ap_TAI ;
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, struct s1ap_TAI *pvalue);

/* Append IE with value type s1ap_UESecurityCapabilities to list */
struct s1ap_UESecurityCapabilities ;
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, struct 
   s1ap_UESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_CSG_Id to list */
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, s1ap_CSG_Id *pvalue);

/* Append IE with value type s1ap_CellAccessMode to list */
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, s1ap_CellAccessMode value);

/* Append IE with value type s1ap_GUMMEI to list */
struct s1ap_GUMMEI ;
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_9   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, struct s1ap_GUMMEI *pvalue);

/* Append IE with value type s1ap_CSGMembershipStatus to list */
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_10   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, s1ap_CSGMembershipStatus value);

/* Append IE with value type s1ap_TunnelInformation to list */
struct s1ap_TunnelInformation ;
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_11   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, struct s1ap_TunnelInformation 
   *pvalue);

/* Append IE with value type s1ap_LHN_ID to list */
struct s1ap_LHN_ID ;
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_12   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, struct s1ap_LHN_ID *pvalue);

/* Append IE with value type s1ap_RRC_Establishment_Cause to list */
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_13   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, s1ap_RRC_Establishment_Cause 
   value);

/* Append IE with value type s1ap_NRUESecurityCapabilities to list */
struct s1ap_NRUESecurityCapabilities ;
EXTERN int asn1Append_s1ap_PathSwitchRequest_protocolIEs_14   (OSCTXT* pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* plist, struct 
   s1ap_NRUESecurityCapabilities *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PathSwitchRequest_protocolIEs_element* 
   asn1Get_s1ap_PathSwitchRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_PathSwitchRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_PathSwitchRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequest_protocolIEs* pSrcValue, 
   s1ap_PathSwitchRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequest_protocolIEs (
   s1ap_PathSwitchRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_PathSwitchRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequest                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 PATH SWITCH REQUEST ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Path Switch Request

 **************************************************************
PathSwitchRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({PathSwitchRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({PathSwitchRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({PathSwitchRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_PathSwitchRequest {
   s1ap_PathSwitchRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_PathSwitchRequest;

EXTERN int asn1PE_s1ap_PathSwitchRequest (OSCTXT* pctxt, s1ap_PathSwitchRequest* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequest (OSCTXT* pctxt, s1ap_PathSwitchRequest* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequest 
   (const char* name, const s1ap_PathSwitchRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequest (const char* name, 
   s1ap_PathSwitchRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequest* pvalue);

EXTERN void asn1Copy_s1ap_PathSwitchRequest (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequest* pSrcValue, s1ap_PathSwitchRequest* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequest (s1ap_PathSwitchRequest* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequest (OSCTXT *pctxt, 
   s1ap_PathSwitchRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemBearerSUReq_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupItemBearerSUReq'
*/
typedef struct EXTERN s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSetupItemBearerSUReqExtIEs_TVALUE t;

      /**
       * E-RABToBeSetupItemBearerSUReqExtIEs information objects
       */
      union {
         /**
          * id: id-Correlation-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Correlation_ID *_E_RABToBeSetupItemBearerSUReqExtIEs_1;
         /**
          * id: id-SIPTO-Correlation-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Correlation_ID *_E_RABToBeSetupItemBearerSUReqExtIEs_2;
         /**
          * id: id-BearerType
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_BearerType _E_RABToBeSetupItemBearerSUReqExtIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element 
   (const char* name, const s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element_E_RABToBeSetupItemBearerSUReqExtIEs_1
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pElem
   , s1ap_Correlation_ID *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element_E_RABToBeSetupItemBearerSUReqExtIEs_2
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pElem
   , s1ap_Correlation_ID *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element_E_RABToBeSetupItemBearerSUReqExtIEs_3
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pElem
   , s1ap_BearerType value);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element (
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemBearerSUReq_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupItemBearerSUReq'
*/
/* List of s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions 
   (const char* name, const s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions (
   const char* name, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pvalue);

/* Append IE with value type s1ap_Correlation_ID to list */
struct s1ap_Correlation_ID ;
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* plist, 
   struct s1ap_Correlation_ID *pvalue);

/* Append IE with value type s1ap_Correlation_ID to list */
struct s1ap_Correlation_ID ;
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* plist, 
   struct s1ap_Correlation_ID *pvalue);

/* Append IE with value type s1ap_BearerType to list */
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_3
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* plist, 
   s1ap_BearerType value);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions_element* 
   asn1Get_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pSrcValue, 
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions (
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemBearerSUReq                             */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSetupItemBearerSUReq ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   e-RABlevelQoSParameters [1] E-RABLevelQoSParameters,
   transportLayerAddress [2] TransportLayerAddress,
   gTP-TEID [3] GTP-TEID,
   nAS-PDU [4] NAS-PDU,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABToBeSetupItemBearerSUReqExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABToBeSetupItemBearerSUReqExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABToBeSetupItemBearerSUReqExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABToBeSetupItemBearerSUReq {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_E_RABLevelQoSParameters e_RABlevelQoSParameters;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_NAS_PDU nAS_PDU;
   s1ap_E_RABToBeSetupItemBearerSUReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABToBeSetupItemBearerSUReq;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemBearerSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemBearerSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemBearerSUReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemBearerSUReq 
   (const char* name, const s1ap_E_RABToBeSetupItemBearerSUReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemBearerSUReq (const char* name, 
   s1ap_E_RABToBeSetupItemBearerSUReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemBearerSUReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemBearerSUReq* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemBearerSUReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemBearerSUReq* pSrcValue, 
   s1ap_E_RABToBeSetupItemBearerSUReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemBearerSUReq (
   s1ap_E_RABToBeSetupItemBearerSUReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupItemBearerSUReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupItemBearerSUReq* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupListBearerSUReq_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupListBearerSUReq'
*/
typedef struct EXTERN s1ap_E_RABToBeSetupListBearerSUReq_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSetupItemBearerSUReqIEs_TVALUE t;

      /**
       * E-RABToBeSetupItemBearerSUReqIEs information objects
       */
      union {
         /**
          * id: id-E-RABToBeSetupItemBearerSUReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSetupItemBearerSUReq *_E_RABToBeSetupItemBearerSUReqIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABToBeSetupListBearerSUReq_element;

EXTERN int asn1PE_s1ap_E_RABToBeSetupListBearerSUReq_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupListBearerSUReq_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupListBearerSUReq_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupListBearerSUReq_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupListBearerSUReq_element 
   (const char* name, const s1ap_E_RABToBeSetupListBearerSUReq_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupListBearerSUReq_element (const char* name, 
   s1ap_E_RABToBeSetupListBearerSUReq_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupListBearerSUReq_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupListBearerSUReq_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupListBearerSUReq_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupListBearerSUReq_element* pSrcValue, 
   s1ap_E_RABToBeSetupListBearerSUReq_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupListBearerSUReq_element (
   s1ap_E_RABToBeSetupListBearerSUReq_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupListBearerSUReq_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupListBearerSUReq_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupListBearerSUReq                             */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSetupListBearerSUReq ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABToBeSetupItemBearerSUReqIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABToBeSetupItemBearerSUReqIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABToBeSetupItemBearerSUReqIEs}{@id})
}
*/
/* List of s1ap_E_RABToBeSetupListBearerSUReq_element */
typedef OSRTDList s1ap_E_RABToBeSetupListBearerSUReq;

EXTERN int asn1PE_s1ap_E_RABToBeSetupListBearerSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupListBearerSUReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupListBearerSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupListBearerSUReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupListBearerSUReq 
   (const char* name, const s1ap_E_RABToBeSetupListBearerSUReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupListBearerSUReq (const char* name, 
   s1ap_E_RABToBeSetupListBearerSUReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupListBearerSUReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupListBearerSUReq* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSetupListBearerSUReq_element* 
   asn1Get_s1ap_E_RABToBeSetupListBearerSUReq (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABToBeSetupListBearerSUReq* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupListBearerSUReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupListBearerSUReq* pSrcValue, 
   s1ap_E_RABToBeSetupListBearerSUReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupListBearerSUReq (
   s1ap_E_RABToBeSetupListBearerSUReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupListBearerSUReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupListBearerSUReq* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupRequest_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupRequest'
*/
typedef struct EXTERN s1ap_E_RABSetupRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABSetupRequestIEs_TVALUE t;

      /**
       * E-RABSetupRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABSetupRequestIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABSetupRequestIEs_2;
         /**
          * id: id-uEaggregateMaximumBitrate
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_UEAggregateMaximumBitrate *_E_RABSetupRequestIEs_3;
         /**
          * id: id-E-RABToBeSetupListBearerSUReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSetupListBearerSUReq *_E_RABSetupRequestIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABSetupRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABSetupRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupRequest_protocolIEs_element 
   (const char* name, const s1ap_E_RABSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupRequest_protocolIEs_element (const char* name, 
   s1ap_E_RABSetupRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABSetupRequest_protocolIEs_element_E_RABSetupRequestIEs_1
   (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABSetupRequest_protocolIEs_element_E_RABSetupRequestIEs_2
   (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABSetupRequest_protocolIEs_element_E_RABSetupRequestIEs_3
   (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs_element* pElem, 
   s1ap_UEAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABSetupRequest_protocolIEs_element_E_RABSetupRequestIEs_4
   (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs_element* pElem, 
   s1ap_E_RABToBeSetupListBearerSUReq *pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABSetupRequest_protocolIEs_element* pSrcValue, 
   s1ap_E_RABSetupRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupRequest_protocolIEs_element (
   s1ap_E_RABSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABSetupRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupRequest_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupRequest'
*/
/* List of s1ap_E_RABSetupRequest_protocolIEs_element */
typedef OSRTDList s1ap_E_RABSetupRequest_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABSetupRequest_protocolIEs (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupRequest_protocolIEs (OSCTXT* pctxt, s1ap_E_RABSetupRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupRequest_protocolIEs 
   (const char* name, const s1ap_E_RABSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupRequest_protocolIEs (const char* name, 
   s1ap_E_RABSetupRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABSetupRequest_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_E_RABSetupRequest_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABSetupRequest_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_E_RABSetupRequest_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UEAggregateMaximumBitrate to list */
struct s1ap_UEAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_E_RABSetupRequest_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_E_RABSetupRequest_protocolIEs* plist, struct 
   s1ap_UEAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_E_RABToBeSetupListBearerSUReq to list */
EXTERN int asn1Append_s1ap_E_RABSetupRequest_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_E_RABSetupRequest_protocolIEs* plist, 
   s1ap_E_RABToBeSetupListBearerSUReq *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABSetupRequest_protocolIEs_element* 
   asn1Get_s1ap_E_RABSetupRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABSetupRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABSetupRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABSetupRequest_protocolIEs* pSrcValue, 
   s1ap_E_RABSetupRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupRequest_protocolIEs (
   s1ap_E_RABSetupRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABSetupRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupRequest                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB SETUP ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 E-RAB Setup Request

 **************************************************************
E-RABSetupRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABSetupRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABSetupRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABSetupRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABSetupRequest {
   s1ap_E_RABSetupRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABSetupRequest;

EXTERN int asn1PE_s1ap_E_RABSetupRequest (OSCTXT* pctxt, s1ap_E_RABSetupRequest* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupRequest (OSCTXT* pctxt, s1ap_E_RABSetupRequest* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupRequest 
   (const char* name, const s1ap_E_RABSetupRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupRequest (const char* name, 
   s1ap_E_RABSetupRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupRequest* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupRequest (OSCTXT* pctxt, 
   const s1ap_E_RABSetupRequest* pSrcValue, s1ap_E_RABSetupRequest* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupRequest (s1ap_E_RABSetupRequest* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupRequest (OSCTXT *pctxt, 
   s1ap_E_RABSetupRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedItemBearerModReq_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeModifiedItemBearerModReq'
*/
typedef struct EXTERN s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeModifyItemBearerModReqExtIEs_TVALUE t;

      /**
       * E-RABToBeModifyItemBearerModReqExtIEs information objects
       */
      union {
         /**
          * id: id-TransportInformation
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_TransportInformation *_E_RABToBeModifyItemBearerModReqExtIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element 
   (const char* name, const s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element (
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedItemBearerModReq_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeModifiedItemBearerModReq'
*/
/* List of s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions 
   (const char* name, const s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions (
   const char* name, 
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions_element* 
   asn1Get_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pSrcValue, 
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions (
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedItemBearerModReq                         */
/*                                                            */
/**************************************************************/
/*
E-RABToBeModifiedItemBearerModReq ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   e-RABLevelQoSParameters [1] E-RABLevelQoSParameters,
   nAS-PDU [2] NAS-PDU,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABToBeModifyItemBearerModReqExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABToBeModifyItemBearerModReqExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABToBeModifyItemBearerModReqExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABToBeModifiedItemBearerModReq {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_E_RABLevelQoSParameters e_RABLevelQoSParameters;
   s1ap_NAS_PDU nAS_PDU;
   s1ap_E_RABToBeModifiedItemBearerModReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABToBeModifiedItemBearerModReq;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedItemBearerModReq (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedItemBearerModReq (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedItemBearerModReq 
   (const char* name, const s1ap_E_RABToBeModifiedItemBearerModReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedItemBearerModReq (const char* name, 
   s1ap_E_RABToBeModifiedItemBearerModReq* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedItemBearerModReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedItemBearerModReq* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedItemBearerModReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedItemBearerModReq* pSrcValue, 
   s1ap_E_RABToBeModifiedItemBearerModReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedItemBearerModReq (
   s1ap_E_RABToBeModifiedItemBearerModReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedItemBearerModReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedItemBearerModReq* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedListBearerModReq_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeModifiedListBearerModReq'
*/
typedef struct EXTERN s1ap_E_RABToBeModifiedListBearerModReq_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeModifiedItemBearerModReqIEs_TVALUE t;

      /**
       * E-RABToBeModifiedItemBearerModReqIEs information objects
       */
      union {
         /**
          * id: id-E-RABToBeModifiedItemBearerModReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeModifiedItemBearerModReq *_E_RABToBeModifiedItemBearerModReqIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABToBeModifiedListBearerModReq_element;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedListBearerModReq_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModReq_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedListBearerModReq_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModReq_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedListBearerModReq_element 
   (const char* name, const s1ap_E_RABToBeModifiedListBearerModReq_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedListBearerModReq_element (
   const char* name, s1ap_E_RABToBeModifiedListBearerModReq_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedListBearerModReq_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedListBearerModReq_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedListBearerModReq_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedListBearerModReq_element* pSrcValue, 
   s1ap_E_RABToBeModifiedListBearerModReq_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedListBearerModReq_element (
   s1ap_E_RABToBeModifiedListBearerModReq_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedListBearerModReq_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedListBearerModReq_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedListBearerModReq                         */
/*                                                            */
/**************************************************************/
/*
E-RABToBeModifiedListBearerModReq ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABToBeModifiedItemBearerModReqIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABToBeModifiedItemBearerModReqIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABToBeModifiedItemBearerModReqIEs}{@id})
}
*/
/* List of s1ap_E_RABToBeModifiedListBearerModReq_element */
typedef OSRTDList s1ap_E_RABToBeModifiedListBearerModReq;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedListBearerModReq (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedListBearerModReq (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedListBearerModReq 
   (const char* name, const s1ap_E_RABToBeModifiedListBearerModReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedListBearerModReq (const char* name, 
   s1ap_E_RABToBeModifiedListBearerModReq* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedListBearerModReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedListBearerModReq* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeModifiedListBearerModReq_element* 
   asn1Get_s1ap_E_RABToBeModifiedListBearerModReq (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABToBeModifiedListBearerModReq* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedListBearerModReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedListBearerModReq* pSrcValue, 
   s1ap_E_RABToBeModifiedListBearerModReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedListBearerModReq (
   s1ap_E_RABToBeModifiedListBearerModReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedListBearerModReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedListBearerModReq* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyRequest_protocolIEs_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyRequest'
*/
typedef struct EXTERN s1ap_E_RABModifyRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABModifyRequestIEs_TVALUE t;

      /**
       * E-RABModifyRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABModifyRequestIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABModifyRequestIEs_2;
         /**
          * id: id-uEaggregateMaximumBitrate
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_UEAggregateMaximumBitrate *_E_RABModifyRequestIEs_3;
         /**
          * id: id-E-RABToBeModifiedListBearerModReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeModifiedListBearerModReq *_E_RABModifyRequestIEs_4;
         /**
          * id: id-SecondaryRATDataUsageRequest
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageRequest _E_RABModifyRequestIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABModifyRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABModifyRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyRequest_protocolIEs_element 
   (const char* name, const s1ap_E_RABModifyRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyRequest_protocolIEs_element (
   const char* name, s1ap_E_RABModifyRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModifyRequest_protocolIEs_element_E_RABModifyRequestIEs_1
   (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModifyRequest_protocolIEs_element_E_RABModifyRequestIEs_2
   (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModifyRequest_protocolIEs_element_E_RABModifyRequestIEs_3
   (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs_element* pElem, 
   s1ap_UEAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModifyRequest_protocolIEs_element_E_RABModifyRequestIEs_4
   (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs_element* pElem, 
   s1ap_E_RABToBeModifiedListBearerModReq *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModifyRequest_protocolIEs_element_E_RABModifyRequestIEs_5
   (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs_element* pElem, 
   s1ap_SecondaryRATDataUsageRequest value);

EXTERN void asn1Copy_s1ap_E_RABModifyRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABModifyRequest_protocolIEs_element* pSrcValue, 
   s1ap_E_RABModifyRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyRequest_protocolIEs_element (
   s1ap_E_RABModifyRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABModifyRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyRequest_protocolIEs                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyRequest'
*/
/* List of s1ap_E_RABModifyRequest_protocolIEs_element */
typedef OSRTDList s1ap_E_RABModifyRequest_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABModifyRequest_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyRequest_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModifyRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyRequest_protocolIEs 
   (const char* name, const s1ap_E_RABModifyRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyRequest_protocolIEs (const char* name, 
   s1ap_E_RABModifyRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModifyRequest_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_E_RABModifyRequest_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModifyRequest_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_E_RABModifyRequest_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UEAggregateMaximumBitrate to list */
struct s1ap_UEAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_E_RABModifyRequest_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_E_RABModifyRequest_protocolIEs* plist, struct 
   s1ap_UEAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_E_RABToBeModifiedListBearerModReq to list */
EXTERN int asn1Append_s1ap_E_RABModifyRequest_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_E_RABModifyRequest_protocolIEs* plist, 
   s1ap_E_RABToBeModifiedListBearerModReq *pvalue);

/* Append IE with value type s1ap_SecondaryRATDataUsageRequest to list */
EXTERN int asn1Append_s1ap_E_RABModifyRequest_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_E_RABModifyRequest_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageRequest value);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModifyRequest_protocolIEs_element* 
   asn1Get_s1ap_E_RABModifyRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABModifyRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABModifyRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABModifyRequest_protocolIEs* pSrcValue, 
   s1ap_E_RABModifyRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyRequest_protocolIEs (
   s1ap_E_RABModifyRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABModifyRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyRequest                                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB MODIFY ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 E-RAB Modify Request

 **************************************************************
E-RABModifyRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABModifyRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABModifyRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABModifyRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABModifyRequest {
   s1ap_E_RABModifyRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABModifyRequest;

EXTERN int asn1PE_s1ap_E_RABModifyRequest (OSCTXT* pctxt, s1ap_E_RABModifyRequest* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyRequest (OSCTXT* pctxt, s1ap_E_RABModifyRequest* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyRequest 
   (const char* name, const s1ap_E_RABModifyRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyRequest (const char* name, 
   s1ap_E_RABModifyRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyRequest* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyRequest (OSCTXT* pctxt, 
   const s1ap_E_RABModifyRequest* pSrcValue, s1ap_E_RABModifyRequest*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyRequest (s1ap_E_RABModifyRequest* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyRequest (OSCTXT *pctxt, 
   s1ap_E_RABModifyRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseCommand_protocolIEs_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseCommand'
*/
typedef struct EXTERN s1ap_E_RABReleaseCommand_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABReleaseCommandIEs_TVALUE t;

      /**
       * E-RABReleaseCommandIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABReleaseCommandIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABReleaseCommandIEs_2;
         /**
          * id: id-uEaggregateMaximumBitrate
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_UEAggregateMaximumBitrate *_E_RABReleaseCommandIEs_3;
         /**
          * id: id-E-RABToBeReleasedList
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABList *_E_RABReleaseCommandIEs_4;
         /**
          * id: id-NAS-PDU
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NAS_PDU *_E_RABReleaseCommandIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABReleaseCommand_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABReleaseCommand_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseCommand_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseCommand_protocolIEs_element 
   (const char* name, const s1ap_E_RABReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseCommand_protocolIEs_element (
   const char* name, s1ap_E_RABReleaseCommand_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseCommand_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseCommand_protocolIEs_element_E_RABReleaseCommandIEs_1
   (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABReleaseCommand_protocolIEs_element_E_RABReleaseCommandIEs_2
   (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABReleaseCommand_protocolIEs_element_E_RABReleaseCommandIEs_3
   (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs_element* pElem, 
   s1ap_UEAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseCommand_protocolIEs_element_E_RABReleaseCommandIEs_4
   (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseCommand_protocolIEs_element_E_RABReleaseCommandIEs_5
   (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs_element* pElem, 
   s1ap_NAS_PDU *pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseCommand_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseCommand_protocolIEs_element* pSrcValue, 
   s1ap_E_RABReleaseCommand_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseCommand_protocolIEs_element (
   s1ap_E_RABReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseCommand_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABReleaseCommand_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseCommand_protocolIEs                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseCommand'
*/
/* List of s1ap_E_RABReleaseCommand_protocolIEs_element */
typedef OSRTDList s1ap_E_RABReleaseCommand_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABReleaseCommand_protocolIEs (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseCommand_protocolIEs (OSCTXT* pctxt, s1ap_E_RABReleaseCommand_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseCommand_protocolIEs 
   (const char* name, const s1ap_E_RABReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseCommand_protocolIEs (const char* name, 
   s1ap_E_RABReleaseCommand_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseCommand_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseCommand_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABReleaseCommand_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_E_RABReleaseCommand_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABReleaseCommand_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_E_RABReleaseCommand_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UEAggregateMaximumBitrate to list */
struct s1ap_UEAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_E_RABReleaseCommand_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_E_RABReleaseCommand_protocolIEs* plist, struct 
   s1ap_UEAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_E_RABReleaseCommand_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_E_RABReleaseCommand_protocolIEs* plist, s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_NAS_PDU to list */
EXTERN int asn1Append_s1ap_E_RABReleaseCommand_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_E_RABReleaseCommand_protocolIEs* plist, s1ap_NAS_PDU *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABReleaseCommand_protocolIEs_element* 
   asn1Get_s1ap_E_RABReleaseCommand_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABReleaseCommand_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABReleaseCommand_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseCommand_protocolIEs* pSrcValue, 
   s1ap_E_RABReleaseCommand_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseCommand_protocolIEs (
   s1ap_E_RABReleaseCommand_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseCommand_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABReleaseCommand_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseCommand                                       */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB RELEASE ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 E-RAB Release Command

 **************************************************************
E-RABReleaseCommand ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABReleaseCommandIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABReleaseCommandIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABReleaseCommandIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABReleaseCommand {
   s1ap_E_RABReleaseCommand_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABReleaseCommand;

EXTERN int asn1PE_s1ap_E_RABReleaseCommand (OSCTXT* pctxt, s1ap_E_RABReleaseCommand* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseCommand (OSCTXT* pctxt, s1ap_E_RABReleaseCommand* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseCommand 
   (const char* name, const s1ap_E_RABReleaseCommand* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseCommand (const char* name, 
   s1ap_E_RABReleaseCommand* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseCommand (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseCommand* pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseCommand (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseCommand* pSrcValue, s1ap_E_RABReleaseCommand*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseCommand (s1ap_E_RABReleaseCommand* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseCommand (OSCTXT *pctxt, 
   s1ap_E_RABReleaseCommand* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupItemCtxtSUReq'
*/
typedef struct EXTERN s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSetupItemCtxtSUReqExtIEs_TVALUE t;

      /**
       * E-RABToBeSetupItemCtxtSUReqExtIEs information objects
       */
      union {
         /**
          * id: id-Correlation-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Correlation_ID *_E_RABToBeSetupItemCtxtSUReqExtIEs_1;
         /**
          * id: id-SIPTO-Correlation-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Correlation_ID *_E_RABToBeSetupItemCtxtSUReqExtIEs_2;
         /**
          * id: id-BearerType
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_BearerType _E_RABToBeSetupItemCtxtSUReqExtIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element 
   (const char* name, const s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element_E_RABToBeSetupItemCtxtSUReqExtIEs_1
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pElem
   , s1ap_Correlation_ID *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element_E_RABToBeSetupItemCtxtSUReqExtIEs_2
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pElem
   , s1ap_Correlation_ID *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element_E_RABToBeSetupItemCtxtSUReqExtIEs_3
   (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pElem
   , s1ap_BearerType value);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element (
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemCtxtSUReq_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupItemCtxtSUReq'
*/
/* List of s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions 
   (const char* name, const s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions (
   const char* name, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pvalue);

/* Append IE with value type s1ap_Correlation_ID to list */
struct s1ap_Correlation_ID ;
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_1
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* plist, 
   struct s1ap_Correlation_ID *pvalue);

/* Append IE with value type s1ap_Correlation_ID to list */
struct s1ap_Correlation_ID ;
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_2
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* plist, 
   struct s1ap_Correlation_ID *pvalue);

/* Append IE with value type s1ap_BearerType to list */
EXTERN int asn1Append_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_3
      (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* plist, 
   s1ap_BearerType value);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions_element* 
   asn1Get_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pSrcValue, 
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions (
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupItemCtxtSUReq                               */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSetupItemCtxtSUReq ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   e-RABlevelQoSParameters [1] E-RABLevelQoSParameters,
   transportLayerAddress [2] TransportLayerAddress,
   gTP-TEID [3] GTP-TEID,
   nAS-PDU [4] NAS-PDU OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABToBeSetupItemCtxtSUReqExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABToBeSetupItemCtxtSUReqExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABToBeSetupItemCtxtSUReqExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABToBeSetupItemCtxtSUReq {
   struct {
      unsigned nAS_PDUPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_E_RABLevelQoSParameters e_RABlevelQoSParameters;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_NAS_PDU nAS_PDU;
   s1ap_E_RABToBeSetupItemCtxtSUReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABToBeSetupItemCtxtSUReq;

EXTERN int asn1PE_s1ap_E_RABToBeSetupItemCtxtSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupItemCtxtSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupItemCtxtSUReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupItemCtxtSUReq 
   (const char* name, const s1ap_E_RABToBeSetupItemCtxtSUReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupItemCtxtSUReq (const char* name, 
   s1ap_E_RABToBeSetupItemCtxtSUReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupItemCtxtSUReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupItemCtxtSUReq* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupItemCtxtSUReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupItemCtxtSUReq* pSrcValue, 
   s1ap_E_RABToBeSetupItemCtxtSUReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupItemCtxtSUReq (
   s1ap_E_RABToBeSetupItemCtxtSUReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupItemCtxtSUReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupItemCtxtSUReq* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupListCtxtSUReq_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSetupListCtxtSUReq'
*/
typedef struct EXTERN s1ap_E_RABToBeSetupListCtxtSUReq_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSetupItemCtxtSUReqIEs_TVALUE t;

      /**
       * E-RABToBeSetupItemCtxtSUReqIEs information objects
       */
      union {
         /**
          * id: id-E-RABToBeSetupItemCtxtSUReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSetupItemCtxtSUReq *_E_RABToBeSetupItemCtxtSUReqIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABToBeSetupListCtxtSUReq_element;

EXTERN int asn1PE_s1ap_E_RABToBeSetupListCtxtSUReq_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupListCtxtSUReq_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupListCtxtSUReq_element (OSCTXT* pctxt, s1ap_E_RABToBeSetupListCtxtSUReq_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupListCtxtSUReq_element 
   (const char* name, const s1ap_E_RABToBeSetupListCtxtSUReq_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupListCtxtSUReq_element (const char* name, 
   s1ap_E_RABToBeSetupListCtxtSUReq_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupListCtxtSUReq_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupListCtxtSUReq_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupListCtxtSUReq_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupListCtxtSUReq_element* pSrcValue, 
   s1ap_E_RABToBeSetupListCtxtSUReq_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupListCtxtSUReq_element (
   s1ap_E_RABToBeSetupListCtxtSUReq_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupListCtxtSUReq_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupListCtxtSUReq_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSetupListCtxtSUReq                               */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSetupListCtxtSUReq ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABToBeSetupItemCtxtSUReqIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABToBeSetupItemCtxtSUReqIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABToBeSetupItemCtxtSUReqIEs}{@id})
}
*/
/* List of s1ap_E_RABToBeSetupListCtxtSUReq_element */
typedef OSRTDList s1ap_E_RABToBeSetupListCtxtSUReq;

EXTERN int asn1PE_s1ap_E_RABToBeSetupListCtxtSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupListCtxtSUReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSetupListCtxtSUReq (OSCTXT* pctxt, s1ap_E_RABToBeSetupListCtxtSUReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSetupListCtxtSUReq 
   (const char* name, const s1ap_E_RABToBeSetupListCtxtSUReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSetupListCtxtSUReq (const char* name, 
   s1ap_E_RABToBeSetupListCtxtSUReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSetupListCtxtSUReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSetupListCtxtSUReq* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSetupListCtxtSUReq_element* 
   asn1Get_s1ap_E_RABToBeSetupListCtxtSUReq (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABToBeSetupListCtxtSUReq* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSetupListCtxtSUReq (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSetupListCtxtSUReq* pSrcValue, 
   s1ap_E_RABToBeSetupListCtxtSUReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSetupListCtxtSUReq (
   s1ap_E_RABToBeSetupListCtxtSUReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSetupListCtxtSUReq (OSCTXT *pctxt, 
   s1ap_E_RABToBeSetupListCtxtSUReq* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupRequest_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupRequest'
*/
typedef struct EXTERN s1ap_InitialContextSetupRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      InitialContextSetupRequestIEs_TVALUE t;

      /**
       * InitialContextSetupRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _InitialContextSetupRequestIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _InitialContextSetupRequestIEs_2;
         /**
          * id: id-uEaggregateMaximumBitrate
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_UEAggregateMaximumBitrate *_InitialContextSetupRequestIEs_3;
         /**
          * id: id-E-RABToBeSetupListCtxtSUReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSetupListCtxtSUReq *_InitialContextSetupRequestIEs_4;
         /**
          * id: id-UESecurityCapabilities
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_UESecurityCapabilities *_InitialContextSetupRequestIEs_5;
         /**
          * id: id-SecurityKey
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SecurityKey *_InitialContextSetupRequestIEs_6;
         /**
          * id: id-TraceActivation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TraceActivation *_InitialContextSetupRequestIEs_7;
         /**
          * id: id-HandoverRestrictionList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_HandoverRestrictionList *_InitialContextSetupRequestIEs_8;
         /**
          * id: id-UERadioCapability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UERadioCapability *_InitialContextSetupRequestIEs_9;
         /**
          * id: id-SubscriberProfileIDforRFP
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SubscriberProfileIDforRFP _InitialContextSetupRequestIEs_10;
         /**
          * id: id-CSFallbackIndicator
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSFallbackIndicator _InitialContextSetupRequestIEs_11;
         /**
          * id: id-SRVCCOperationPossible
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SRVCCOperationPossible _InitialContextSetupRequestIEs_12;
         /**
          * id: id-CSGMembershipStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipStatus _InitialContextSetupRequestIEs_13;
         /**
          * id: id-RegisteredLAI
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_LAI *_InitialContextSetupRequestIEs_14;
         /**
          * id: id-GUMMEI-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_GUMMEI *_InitialContextSetupRequestIEs_15;
         /**
          * id: id-MME-UE-S1AP-ID-2
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MME_UE_S1AP_ID _InitialContextSetupRequestIEs_16;
         /**
          * id: id-ManagementBasedMDTAllowed
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ManagementBasedMDTAllowed _InitialContextSetupRequestIEs_17;
         /**
          * id: id-ManagementBasedMDTPLMNList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MDTPLMNList *_InitialContextSetupRequestIEs_18;
         /**
          * id: id-AdditionalCSFallbackIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_AdditionalCSFallbackIndicator _InitialContextSetupRequestIEs_19;
         /**
          * id: id-Masked-IMEISV
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Masked_IMEISV *_InitialContextSetupRequestIEs_20;
         /**
          * id: id-ExpectedUEBehaviour
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ExpectedUEBehaviour *_InitialContextSetupRequestIEs_21;
         /**
          * id: id-ProSeAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ProSeAuthorized *_InitialContextSetupRequestIEs_22;
         /**
          * id: id-UEUserPlaneCIoTSupportIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UEUserPlaneCIoTSupportIndicator _InitialContextSetupRequestIEs_23;
         /**
          * id: id-V2XServicesAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_V2XServicesAuthorized *_InitialContextSetupRequestIEs_24;
         /**
          * id: id-UESidelinkAggregateMaximumBitrate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UESidelinkAggregateMaximumBitrate *_InitialContextSetupRequestIEs_25;
         /**
          * id: id-EnhancedCoverageRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EnhancedCoverageRestricted _InitialContextSetupRequestIEs_26;
         /**
          * id: id-NRUESecurityCapabilities
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRUESecurityCapabilities *_InitialContextSetupRequestIEs_27;
         /**
          * id: id-CE-ModeBRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_ModeBRestricted _InitialContextSetupRequestIEs_28;
         /**
          * id: id-AerialUEsubscriptionInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_AerialUEsubscriptionInformation _InitialContextSetupRequestIEs_29;
         /**
          * id: id-PendingDataIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PendingDataIndication _InitialContextSetupRequestIEs_30;
         /**
          * id: id-Subscription-Based-UE-DifferentiationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Subscription_Based_UE_DifferentiationInfo *_InitialContextSetupRequestIEs_31;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_InitialContextSetupRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_InitialContextSetupRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupRequest_protocolIEs_element 
   (const char* name, const s1ap_InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupRequest_protocolIEs_element (
   const char* name, 
   s1ap_InitialContextSetupRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_1
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_2
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_3
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_UEAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_4
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_E_RABToBeSetupListCtxtSUReq *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_5
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_6
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_SecurityKey *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_7
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_TraceActivation *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_8
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_HandoverRestrictionList *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_9
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_UERadioCapability *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_10
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_SubscriberProfileIDforRFP value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_11
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_CSFallbackIndicator value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_12
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_SRVCCOperationPossible value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_13
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_CSGMembershipStatus value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_14
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_LAI *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_15
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_GUMMEI *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_16
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_17
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_ManagementBasedMDTAllowed value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_18
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_MDTPLMNList *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_19
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_AdditionalCSFallbackIndicator value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_20
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_Masked_IMEISV *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_21
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_ExpectedUEBehaviour *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_22
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_ProSeAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_23
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_UEUserPlaneCIoTSupportIndicator value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_24
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_V2XServicesAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_25
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_26
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_EnhancedCoverageRestricted value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_27
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_NRUESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_28
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_CE_ModeBRestricted value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_29
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_AerialUEsubscriptionInformation value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_30
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_PendingDataIndication value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_31
   (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs_element* pElem, 
   s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

EXTERN void asn1Copy_s1ap_InitialContextSetupRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupRequest_protocolIEs_element* pSrcValue, 
   s1ap_InitialContextSetupRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupRequest_protocolIEs_element (
   s1ap_InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_InitialContextSetupRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupRequest_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupRequest'
*/
/* List of s1ap_InitialContextSetupRequest_protocolIEs_element */
typedef OSRTDList s1ap_InitialContextSetupRequest_protocolIEs;

EXTERN int asn1PE_s1ap_InitialContextSetupRequest_protocolIEs (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupRequest_protocolIEs (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupRequest_protocolIEs 
   (const char* name, const s1ap_InitialContextSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupRequest_protocolIEs (
   const char* name, s1ap_InitialContextSetupRequest_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_1
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_2
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UEAggregateMaximumBitrate to list */
struct s1ap_UEAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_3
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_UEAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_E_RABToBeSetupListCtxtSUReq to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_4
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_E_RABToBeSetupListCtxtSUReq *pvalue);

/* Append IE with value type s1ap_UESecurityCapabilities to list */
struct s1ap_UESecurityCapabilities ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_5
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_UESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_SecurityKey to list */
struct s1ap_SecurityKey ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_6
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_SecurityKey *pvalue);

/* Append IE with value type s1ap_TraceActivation to list */
struct s1ap_TraceActivation ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_7
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_TraceActivation *pvalue);

/* Append IE with value type s1ap_HandoverRestrictionList to list */
struct s1ap_HandoverRestrictionList ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_8
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_HandoverRestrictionList *pvalue);

/* Append IE with value type s1ap_UERadioCapability to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_9
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_UERadioCapability *pvalue);

/* Append IE with value type s1ap_SubscriberProfileIDforRFP to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_10
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_SubscriberProfileIDforRFP value);

/* Append IE with value type s1ap_CSFallbackIndicator to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_11
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_CSFallbackIndicator value);

/* Append IE with value type s1ap_SRVCCOperationPossible to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_12
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_SRVCCOperationPossible value);

/* Append IE with value type s1ap_CSGMembershipStatus to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_13
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_CSGMembershipStatus value);

/* Append IE with value type s1ap_LAI to list */
struct s1ap_LAI ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_14
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_LAI *pvalue);

/* Append IE with value type s1ap_GUMMEI to list */
struct s1ap_GUMMEI ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_15
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_GUMMEI *pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_16
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ManagementBasedMDTAllowed to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_17
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_ManagementBasedMDTAllowed value);

/* Append IE with value type s1ap_MDTPLMNList to list */
struct s1ap_MDTPLMNList ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_18
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_MDTPLMNList *pvalue);

/* Append IE with value type s1ap_AdditionalCSFallbackIndicator to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_19
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_AdditionalCSFallbackIndicator value);

/* Append IE with value type s1ap_Masked_IMEISV to list */
struct s1ap_Masked_IMEISV ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_20
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_Masked_IMEISV *pvalue);

/* Append IE with value type s1ap_ExpectedUEBehaviour to list */
struct s1ap_ExpectedUEBehaviour ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_21
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_ExpectedUEBehaviour *pvalue);

/* Append IE with value type s1ap_ProSeAuthorized to list */
struct s1ap_ProSeAuthorized ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_22
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_ProSeAuthorized *pvalue);

/* Append IE with value type s1ap_UEUserPlaneCIoTSupportIndicator to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_23
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_UEUserPlaneCIoTSupportIndicator value);

/* Append IE with value type s1ap_V2XServicesAuthorized to list */
struct s1ap_V2XServicesAuthorized ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_24
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_V2XServicesAuthorized *pvalue);

/* Append IE with value type s1ap_UESidelinkAggregateMaximumBitrate to list */
struct s1ap_UESidelinkAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_25
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_EnhancedCoverageRestricted to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_26
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_EnhancedCoverageRestricted value);

/* Append IE with value type s1ap_NRUESecurityCapabilities to list */
struct s1ap_NRUESecurityCapabilities ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_27
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_NRUESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_CE_ModeBRestricted to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_28
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_CE_ModeBRestricted value);

/* Append IE with value type s1ap_AerialUEsubscriptionInformation to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_29
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_AerialUEsubscriptionInformation value);

/* Append IE with value type s1ap_PendingDataIndication to list */
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_30
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   s1ap_PendingDataIndication value);

/* Append IE with value type s1ap_Subscription_Based_UE_DifferentiationInfo to list */
struct s1ap_Subscription_Based_UE_DifferentiationInfo ;
EXTERN int asn1Append_s1ap_InitialContextSetupRequest_protocolIEs_31
      (OSCTXT* pctxt, s1ap_InitialContextSetupRequest_protocolIEs* plist, 
   struct s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_InitialContextSetupRequest_protocolIEs_element* 
   asn1Get_s1ap_InitialContextSetupRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_InitialContextSetupRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_InitialContextSetupRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupRequest_protocolIEs* pSrcValue, 
   s1ap_InitialContextSetupRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupRequest_protocolIEs (
   s1ap_InitialContextSetupRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_InitialContextSetupRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupRequest                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 INITIAL CONTEXT SETUP ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Initial Context Setup Request

 **************************************************************
InitialContextSetupRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({InitialContextSetupRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({InitialContextSetupRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({InitialContextSetupRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_InitialContextSetupRequest {
   s1ap_InitialContextSetupRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_InitialContextSetupRequest;

EXTERN int asn1PE_s1ap_InitialContextSetupRequest (OSCTXT* pctxt, s1ap_InitialContextSetupRequest* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupRequest (OSCTXT* pctxt, s1ap_InitialContextSetupRequest* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupRequest 
   (const char* name, const s1ap_InitialContextSetupRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupRequest (const char* name, 
   s1ap_InitialContextSetupRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupRequest* pvalue);

EXTERN void asn1Copy_s1ap_InitialContextSetupRequest (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupRequest* pSrcValue, 
   s1ap_InitialContextSetupRequest* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupRequest (
   s1ap_InitialContextSetupRequest* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupRequest (OSCTXT *pctxt, 
   s1ap_InitialContextSetupRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancel_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancel'
*/
typedef struct EXTERN s1ap_HandoverCancel_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverCancelIEs_TVALUE t;

      /**
       * HandoverCancelIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverCancelIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _HandoverCancelIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_HandoverCancelIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverCancel_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverCancel_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverCancel_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverCancel_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverCancel_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverCancel_protocolIEs_element 
   (const char* name, const s1ap_HandoverCancel_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCancel_protocolIEs_element (const char* name, 
   s1ap_HandoverCancel_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCancel_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCancel_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCancel_protocolIEs_element_HandoverCancelIEs_1
   (OSCTXT* pctxt, s1ap_HandoverCancel_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverCancel_protocolIEs_element_HandoverCancelIEs_2
   (OSCTXT* pctxt, s1ap_HandoverCancel_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverCancel_protocolIEs_element_HandoverCancelIEs_3
   (OSCTXT* pctxt, s1ap_HandoverCancel_protocolIEs_element* pElem, s1ap_Cause 
   *pvalue);

EXTERN void asn1Copy_s1ap_HandoverCancel_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverCancel_protocolIEs_element* pSrcValue, 
   s1ap_HandoverCancel_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCancel_protocolIEs_element (
   s1ap_HandoverCancel_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverCancel_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverCancel_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancel_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancel'
*/
/* List of s1ap_HandoverCancel_protocolIEs_element */
typedef OSRTDList s1ap_HandoverCancel_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverCancel_protocolIEs (OSCTXT* pctxt, s1ap_HandoverCancel_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverCancel_protocolIEs (OSCTXT* pctxt, s1ap_HandoverCancel_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverCancel_protocolIEs 
   (const char* name, const s1ap_HandoverCancel_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCancel_protocolIEs (const char* name, 
   s1ap_HandoverCancel_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCancel_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCancel_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverCancel_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_HandoverCancel_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverCancel_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_HandoverCancel_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_HandoverCancel_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_HandoverCancel_protocolIEs* plist, struct s1ap_Cause *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverCancel_protocolIEs_element* 
   asn1Get_s1ap_HandoverCancel_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverCancel_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverCancel_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverCancel_protocolIEs* pSrcValue, 
   s1ap_HandoverCancel_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCancel_protocolIEs (
   s1ap_HandoverCancel_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverCancel_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverCancel_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancel                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 HANDOVER CANCEL ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Handover Cancel

 **************************************************************
HandoverCancel ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverCancelIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverCancelIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverCancelIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverCancel {
   s1ap_HandoverCancel_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverCancel;

EXTERN int asn1PE_s1ap_HandoverCancel (OSCTXT* pctxt, s1ap_HandoverCancel* pvalue);

EXTERN int asn1PD_s1ap_HandoverCancel (OSCTXT* pctxt, s1ap_HandoverCancel* pvalue);

EXTERN void asn1Print_s1ap_HandoverCancel 
   (const char* name, const s1ap_HandoverCancel* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCancel (const char* name, 
   s1ap_HandoverCancel* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCancel (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCancel* pvalue);

EXTERN void asn1Copy_s1ap_HandoverCancel (OSCTXT* pctxt, 
   const s1ap_HandoverCancel* pSrcValue, s1ap_HandoverCancel* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCancel (s1ap_HandoverCancel* pvalue);

EXTERN void asn1Free_s1ap_HandoverCancel (OSCTXT *pctxt, s1ap_HandoverCancel* pvalue);

/**************************************************************/
/*                                                            */
/*  KillRequest_protocolIEs_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'KillRequest'
*/
typedef struct EXTERN s1ap_KillRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      KillRequestIEs_TVALUE t;

      /**
       * KillRequestIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MessageIdentifier *_KillRequestIEs_1;
         /**
          * id: id-SerialNumber
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SerialNumber *_KillRequestIEs_2;
         /**
          * id: id-WarningAreaList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WarningAreaList *_KillRequestIEs_3;
         /**
          * id: id-KillAllWarningMessages
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_KillAllWarningMessages _KillRequestIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_KillRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_KillRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_KillRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_KillRequest_protocolIEs_element 
   (const char* name, const s1ap_KillRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_KillRequest_protocolIEs_element (const char* name, 
   s1ap_KillRequest_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_KillRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_KillRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_KillRequest_protocolIEs_element_KillRequestIEs_1
   (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs_element* pElem, 
   s1ap_MessageIdentifier *pvalue);

EXTERN void asn1SetTC_s1ap_KillRequest_protocolIEs_element_KillRequestIEs_2
   (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs_element* pElem, 
   s1ap_SerialNumber *pvalue);

EXTERN void asn1SetTC_s1ap_KillRequest_protocolIEs_element_KillRequestIEs_3
   (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs_element* pElem, 
   s1ap_WarningAreaList *pvalue);

EXTERN void asn1SetTC_s1ap_KillRequest_protocolIEs_element_KillRequestIEs_4
   (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs_element* pElem, 
   s1ap_KillAllWarningMessages value);

EXTERN void asn1Copy_s1ap_KillRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_KillRequest_protocolIEs_element* pSrcValue, 
   s1ap_KillRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_KillRequest_protocolIEs_element (
   s1ap_KillRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_KillRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_KillRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  KillRequest_protocolIEs                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'KillRequest'
*/
/* List of s1ap_KillRequest_protocolIEs_element */
typedef OSRTDList s1ap_KillRequest_protocolIEs;

EXTERN int asn1PE_s1ap_KillRequest_protocolIEs (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_KillRequest_protocolIEs (OSCTXT* pctxt, s1ap_KillRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_KillRequest_protocolIEs 
   (const char* name, const s1ap_KillRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_KillRequest_protocolIEs (const char* name, 
   s1ap_KillRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_KillRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_KillRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MessageIdentifier to list */
EXTERN int asn1Append_s1ap_KillRequest_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_KillRequest_protocolIEs* plist, s1ap_MessageIdentifier *pvalue);

/* Append IE with value type s1ap_SerialNumber to list */
EXTERN int asn1Append_s1ap_KillRequest_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_KillRequest_protocolIEs* plist, s1ap_SerialNumber *pvalue);

/* Append IE with value type s1ap_WarningAreaList to list */
struct s1ap_WarningAreaList ;
EXTERN int asn1Append_s1ap_KillRequest_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_KillRequest_protocolIEs* plist, struct s1ap_WarningAreaList *pvalue);

/* Append IE with value type s1ap_KillAllWarningMessages to list */
EXTERN int asn1Append_s1ap_KillRequest_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_KillRequest_protocolIEs* plist, s1ap_KillAllWarningMessages value);

/* Get IE using id key value */
EXTERN struct s1ap_KillRequest_protocolIEs_element* 
   asn1Get_s1ap_KillRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_KillRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_KillRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_KillRequest_protocolIEs* pSrcValue, s1ap_KillRequest_protocolIEs*
    pDstValue);

EXTERN int asn1Init_s1ap_KillRequest_protocolIEs (
   s1ap_KillRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_KillRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_KillRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  KillRequest                                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 KILL PROCEDURE

 **************************************************************
 **************************************************************

 Kill Request

 **************************************************************
KillRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({KillRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({KillRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({KillRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_KillRequest {
   s1ap_KillRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_KillRequest;

EXTERN int asn1PE_s1ap_KillRequest (OSCTXT* pctxt, s1ap_KillRequest* pvalue);

EXTERN int asn1PD_s1ap_KillRequest (OSCTXT* pctxt, s1ap_KillRequest* pvalue);

EXTERN void asn1Print_s1ap_KillRequest 
   (const char* name, const s1ap_KillRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_KillRequest (const char* name, s1ap_KillRequest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_KillRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_KillRequest* pvalue);

EXTERN void asn1Copy_s1ap_KillRequest (OSCTXT* pctxt, 
   const s1ap_KillRequest* pSrcValue, s1ap_KillRequest* pDstValue);

EXTERN int asn1Init_s1ap_KillRequest (s1ap_KillRequest* pvalue);

EXTERN void asn1Free_s1ap_KillRequest (OSCTXT *pctxt, s1ap_KillRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetAll                                                  */
/*                                                            */
/**************************************************************/
/*
ResetAll ::= ENUMERATED { reset-all(0), ... }
*/
typedef enum {
   s1ap_reset_all = 0
} s1ap_ResetAll_Root;

typedef OSUINT32 s1ap_ResetAll;

EXTERN int asn1PE_s1ap_ResetAll (OSCTXT* pctxt, s1ap_ResetAll value);

EXTERN int asn1PD_s1ap_ResetAll (OSCTXT* pctxt, s1ap_ResetAll* pvalue);

EXTERN void asn1Print_s1ap_ResetAll (const char* name, const s1ap_ResetAll* pvalue);

EXTERN int asn1PrtToStr_s1ap_ResetAll (const char* name, s1ap_ResetAll* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ResetAll (OSCTXT *pctxt, 
   const char* name, const s1ap_ResetAll* pvalue);

EXTERN extern const OSEnumItem s1ap_ResetAll_ENUMTAB[];
#define s1ap_ResetAll_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_ResetAll_ToString (OSINT32 value);

EXTERN int s1ap_ResetAll_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_ResetAll* pvalue);

EXTERN int s1ap_ResetAll_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_ResetAll* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalS1_ConnectionListRes_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-associatedLogicalS1-ConnectionListRes'
*/
typedef struct EXTERN s1ap_UE_associatedLogicalS1_ConnectionListRes_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UE_associatedLogicalS1_ConnectionItemRes_TVALUE t;

      /**
       * UE-associatedLogicalS1-ConnectionItemRes information objects
       */
      union {
         /**
          * id: id-UE-associatedLogicalS1-ConnectionItem
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_UE_associatedLogicalS1_ConnectionItem *_UE_associatedLogicalS1_ConnectionItemRes_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UE_associatedLogicalS1_ConnectionListRes_element;

EXTERN int asn1PE_s1ap_UE_associatedLogicalS1_ConnectionListRes_element (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pvalue);

EXTERN int asn1PD_s1ap_UE_associatedLogicalS1_ConnectionListRes_element (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pvalue);

EXTERN void asn1Print_s1ap_UE_associatedLogicalS1_ConnectionListRes_element 
   (const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_associatedLogicalS1_ConnectionListRes_element (
   const char* name, 
   s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_associatedLogicalS1_ConnectionListRes_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pvalue);

EXTERN void asn1Copy_s1ap_UE_associatedLogicalS1_ConnectionListRes_element (OSCTXT* pctxt, 
   const s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pSrcValue, 
   s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pDstValue);

EXTERN int asn1Init_s1ap_UE_associatedLogicalS1_ConnectionListRes_element (
   s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pvalue);

EXTERN void asn1Free_s1ap_UE_associatedLogicalS1_ConnectionListRes_element (OSCTXT *pctxt, 
   s1ap_UE_associatedLogicalS1_ConnectionListRes_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalS1_ConnectionListRes                  */
/*                                                            */
/**************************************************************/
/*
UE-associatedLogicalS1-ConnectionListRes ::= SEQUENCE (SIZE (1..maxnoofIndividualS1ConnectionsToReset)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({UE-associatedLogicalS1-ConnectionItemRes}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({UE-associatedLogicalS1-ConnectionItemRes}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UE-associatedLogicalS1-ConnectionItemRes}{@id})
}
*/
/* List of s1ap_UE_associatedLogicalS1_ConnectionListRes_element */
typedef OSRTDList s1ap_UE_associatedLogicalS1_ConnectionListRes;

EXTERN int asn1PE_s1ap_UE_associatedLogicalS1_ConnectionListRes (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListRes* pvalue);

EXTERN int asn1PD_s1ap_UE_associatedLogicalS1_ConnectionListRes (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListRes* pvalue);

EXTERN void asn1Print_s1ap_UE_associatedLogicalS1_ConnectionListRes 
   (const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListRes* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_associatedLogicalS1_ConnectionListRes (
   const char* name, s1ap_UE_associatedLogicalS1_ConnectionListRes* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_associatedLogicalS1_ConnectionListRes (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListRes* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UE_associatedLogicalS1_ConnectionListRes_element* 
   asn1Get_s1ap_UE_associatedLogicalS1_ConnectionListRes 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UE_associatedLogicalS1_ConnectionListRes* plist);

EXTERN void asn1Copy_s1ap_UE_associatedLogicalS1_ConnectionListRes (OSCTXT* pctxt, 
   const s1ap_UE_associatedLogicalS1_ConnectionListRes* pSrcValue, 
   s1ap_UE_associatedLogicalS1_ConnectionListRes* pDstValue);

EXTERN int asn1Init_s1ap_UE_associatedLogicalS1_ConnectionListRes (
   s1ap_UE_associatedLogicalS1_ConnectionListRes* pvalue);

EXTERN void asn1Free_s1ap_UE_associatedLogicalS1_ConnectionListRes (OSCTXT *pctxt, 
   s1ap_UE_associatedLogicalS1_ConnectionListRes* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetType                                                 */
/*                                                            */
/**************************************************************/
/*
ResetType ::= CHOICE {
   s1-Interface [0] ResetAll,
   partOfS1-Interface [1] UE-associatedLogicalS1-ConnectionListRes,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_ResetType_s1_Interface   1
#define T_s1ap_ResetType_partOfS1_Interface 2
#define T_s1ap_ResetType_extElem1       3

typedef struct EXTERN s1ap_ResetType {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_ResetAll s1_Interface;
      /* t = 2 */
      s1ap_UE_associatedLogicalS1_ConnectionListRes *partOfS1_Interface;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_ResetType;

EXTERN int asn1PE_s1ap_ResetType (OSCTXT* pctxt, s1ap_ResetType* pvalue);

EXTERN int asn1PD_s1ap_ResetType (OSCTXT* pctxt, s1ap_ResetType* pvalue);

EXTERN void asn1Print_s1ap_ResetType (const char* name, const s1ap_ResetType* pvalue);

EXTERN int asn1PrtToStr_s1ap_ResetType (const char* name, s1ap_ResetType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ResetType (OSCTXT *pctxt, 
   const char* name, const s1ap_ResetType* pvalue);

EXTERN void asn1Copy_s1ap_ResetType (OSCTXT* pctxt, const s1ap_ResetType* pSrcValue, 
   s1ap_ResetType* pDstValue);

EXTERN int asn1Init_s1ap_ResetType (s1ap_ResetType* pvalue);

EXTERN void asn1Free_s1ap_ResetType (OSCTXT *pctxt, s1ap_ResetType* pvalue);

/**************************************************************/
/*                                                            */
/*  Reset_protocolIEs_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Reset'
*/
typedef struct EXTERN s1ap_Reset_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ResetIEs_TVALUE t;

      /**
       * ResetIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_ResetIEs_1;
         /**
          * id: id-ResetType
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ResetType *_ResetIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_Reset_protocolIEs_element;

EXTERN int asn1PE_s1ap_Reset_protocolIEs_element (OSCTXT* pctxt, s1ap_Reset_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_Reset_protocolIEs_element (OSCTXT* pctxt, s1ap_Reset_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_Reset_protocolIEs_element 
   (const char* name, const s1ap_Reset_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Reset_protocolIEs_element (const char* name, 
   s1ap_Reset_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Reset_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Reset_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_Reset_protocolIEs_element_ResetIEs_1
   (OSCTXT* pctxt, s1ap_Reset_protocolIEs_element* pElem, s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_Reset_protocolIEs_element_ResetIEs_2
   (OSCTXT* pctxt, s1ap_Reset_protocolIEs_element* pElem, s1ap_ResetType 
   *pvalue);

EXTERN void asn1Copy_s1ap_Reset_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_Reset_protocolIEs_element* pSrcValue, 
   s1ap_Reset_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_Reset_protocolIEs_element (
   s1ap_Reset_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_Reset_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_Reset_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Reset_protocolIEs                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Reset'
*/
/* List of s1ap_Reset_protocolIEs_element */
typedef OSRTDList s1ap_Reset_protocolIEs;

EXTERN int asn1PE_s1ap_Reset_protocolIEs (OSCTXT* pctxt, s1ap_Reset_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_Reset_protocolIEs (OSCTXT* pctxt, s1ap_Reset_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_Reset_protocolIEs 
   (const char* name, const s1ap_Reset_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_Reset_protocolIEs (const char* name, 
   s1ap_Reset_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Reset_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_Reset_protocolIEs* pvalue);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_Reset_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_Reset_protocolIEs* plist, struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_ResetType to list */
struct s1ap_ResetType ;
EXTERN int asn1Append_s1ap_Reset_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_Reset_protocolIEs* plist, struct s1ap_ResetType *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_Reset_protocolIEs_element* asn1Get_s1ap_Reset_protocolIEs 
   (s1ap_ProtocolIE_ID id, s1ap_Reset_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_Reset_protocolIEs (OSCTXT* pctxt, 
   const s1ap_Reset_protocolIEs* pSrcValue, s1ap_Reset_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_Reset_protocolIEs (s1ap_Reset_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_Reset_protocolIEs (OSCTXT *pctxt, 
   s1ap_Reset_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  Reset                                                     */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 RESET ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Reset

 **************************************************************
Reset ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ResetIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ResetIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ResetIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_Reset {
   s1ap_Reset_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_Reset;

EXTERN int asn1PE_s1ap_Reset (OSCTXT* pctxt, s1ap_Reset* pvalue);

EXTERN int asn1PD_s1ap_Reset (OSCTXT* pctxt, s1ap_Reset* pvalue);

EXTERN void asn1Print_s1ap_Reset (const char* name, const s1ap_Reset* pvalue);

EXTERN int asn1PrtToStr_s1ap_Reset (const char* name, s1ap_Reset* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Reset (OSCTXT *pctxt, 
   const char* name, const s1ap_Reset* pvalue);

EXTERN void asn1Copy_s1ap_Reset (OSCTXT* pctxt, const s1ap_Reset* pSrcValue, 
   s1ap_Reset* pDstValue);

EXTERN int asn1Init_s1ap_Reset (s1ap_Reset* pvalue);

EXTERN void asn1Free_s1ap_Reset (OSCTXT *pctxt, s1ap_Reset* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupRequest_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S1SetupRequest'
*/
typedef struct EXTERN s1ap_S1SetupRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      S1SetupRequestIEs_TVALUE t;

      /**
       * S1SetupRequestIEs information objects
       */
      union {
         /**
          * id: id-Global-ENB-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Global_ENB_ID *_S1SetupRequestIEs_1;
         /**
          * id: id-eNBname
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ENBname _S1SetupRequestIEs_2;
         /**
          * id: id-SupportedTAs
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SupportedTAs *_S1SetupRequestIEs_3;
         /**
          * id: id-DefaultPagingDRX
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_PagingDRX _S1SetupRequestIEs_4;
         /**
          * id: id-CSG-IdList
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSG_IdList *_S1SetupRequestIEs_5;
         /**
          * id: id-UE-RetentionInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_RetentionInformation _S1SetupRequestIEs_6;
         /**
          * id: id-NB-IoT-DefaultPagingDRX
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NB_IoT_DefaultPagingDRX _S1SetupRequestIEs_7;
         /**
          * id: id-ConnectedengNBList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ConnectedengNBList *_S1SetupRequestIEs_8;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_S1SetupRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_S1SetupRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_S1SetupRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_S1SetupRequest_protocolIEs_element 
   (const char* name, const s1ap_S1SetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupRequest_protocolIEs_element (const char* name, 
   s1ap_S1SetupRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_1
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_Global_ENB_ID *pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_2
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_ENBname value);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_3
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_SupportedTAs *pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_4
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_PagingDRX value);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_5
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_CSG_IdList *pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_6
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_UE_RetentionInformation value);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_7
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_NB_IoT_DefaultPagingDRX value);

EXTERN void asn1SetTC_s1ap_S1SetupRequest_protocolIEs_element_S1SetupRequestIEs_8
   (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs_element* pElem, 
   s1ap_ConnectedengNBList *pvalue);

EXTERN void asn1Copy_s1ap_S1SetupRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_S1SetupRequest_protocolIEs_element* pSrcValue, 
   s1ap_S1SetupRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupRequest_protocolIEs_element (
   s1ap_S1SetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_S1SetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_S1SetupRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupRequest_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S1SetupRequest'
*/
/* List of s1ap_S1SetupRequest_protocolIEs_element */
typedef OSRTDList s1ap_S1SetupRequest_protocolIEs;

EXTERN int asn1PE_s1ap_S1SetupRequest_protocolIEs (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_S1SetupRequest_protocolIEs (OSCTXT* pctxt, s1ap_S1SetupRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_S1SetupRequest_protocolIEs 
   (const char* name, const s1ap_S1SetupRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupRequest_protocolIEs (const char* name, 
   s1ap_S1SetupRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_Global_ENB_ID to list */
struct s1ap_Global_ENB_ID ;
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, struct s1ap_Global_ENB_ID *pvalue);

/* Append IE with value type s1ap_ENBname to list */
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, s1ap_ENBname value);

/* Append IE with value type s1ap_SupportedTAs to list */
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, s1ap_SupportedTAs *pvalue);

/* Append IE with value type s1ap_PagingDRX to list */
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, s1ap_PagingDRX value);

/* Append IE with value type s1ap_CSG_IdList to list */
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, s1ap_CSG_IdList *pvalue);

/* Append IE with value type s1ap_UE_RetentionInformation to list */
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, s1ap_UE_RetentionInformation value)
   ;

/* Append IE with value type s1ap_NB_IoT_DefaultPagingDRX to list */
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, s1ap_NB_IoT_DefaultPagingDRX value)
   ;

/* Append IE with value type s1ap_ConnectedengNBList to list */
EXTERN int asn1Append_s1ap_S1SetupRequest_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_S1SetupRequest_protocolIEs* plist, s1ap_ConnectedengNBList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_S1SetupRequest_protocolIEs_element* 
   asn1Get_s1ap_S1SetupRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_S1SetupRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_S1SetupRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_S1SetupRequest_protocolIEs* pSrcValue, 
   s1ap_S1SetupRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupRequest_protocolIEs (
   s1ap_S1SetupRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_S1SetupRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_S1SetupRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupRequest                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 S1 SETUP ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 S1 Setup Request

 **************************************************************
S1SetupRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({S1SetupRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({S1SetupRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({S1SetupRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_S1SetupRequest {
   s1ap_S1SetupRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_S1SetupRequest;

EXTERN int asn1PE_s1ap_S1SetupRequest (OSCTXT* pctxt, s1ap_S1SetupRequest* pvalue);

EXTERN int asn1PD_s1ap_S1SetupRequest (OSCTXT* pctxt, s1ap_S1SetupRequest* pvalue);

EXTERN void asn1Print_s1ap_S1SetupRequest 
   (const char* name, const s1ap_S1SetupRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupRequest (const char* name, 
   s1ap_S1SetupRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupRequest* pvalue);

EXTERN void asn1Copy_s1ap_S1SetupRequest (OSCTXT* pctxt, 
   const s1ap_S1SetupRequest* pSrcValue, s1ap_S1SetupRequest* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupRequest (s1ap_S1SetupRequest* pvalue);

EXTERN void asn1Free_s1ap_S1SetupRequest (OSCTXT *pctxt, s1ap_S1SetupRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationRequest_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationRequest'
*/
typedef struct EXTERN s1ap_UEContextModificationRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextModificationRequestIEs_TVALUE t;

      /**
       * UEContextModificationRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextModificationRequestIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextModificationRequestIEs_2;
         /**
          * id: id-SecurityKey
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_SecurityKey *_UEContextModificationRequestIEs_3;
         /**
          * id: id-SubscriberProfileIDforRFP
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SubscriberProfileIDforRFP _UEContextModificationRequestIEs_4;
         /**
          * id: id-uEaggregateMaximumBitrate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UEAggregateMaximumBitrate *_UEContextModificationRequestIEs_5;
         /**
          * id: id-CSFallbackIndicator
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSFallbackIndicator _UEContextModificationRequestIEs_6;
         /**
          * id: id-UESecurityCapabilities
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_UESecurityCapabilities *_UEContextModificationRequestIEs_7;
         /**
          * id: id-CSGMembershipStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipStatus _UEContextModificationRequestIEs_8;
         /**
          * id: id-RegisteredLAI
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_LAI *_UEContextModificationRequestIEs_9;
         /**
          * id: id-AdditionalCSFallbackIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_conditional
          */
         s1ap_AdditionalCSFallbackIndicator _UEContextModificationRequestIEs_10;
         /**
          * id: id-ProSeAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ProSeAuthorized *_UEContextModificationRequestIEs_11;
         /**
          * id: id-SRVCCOperationPossible
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SRVCCOperationPossible _UEContextModificationRequestIEs_12;
         /**
          * id: id-SRVCCOperationNotPossible
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SRVCCOperationNotPossible _UEContextModificationRequestIEs_13;
         /**
          * id: id-V2XServicesAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_V2XServicesAuthorized *_UEContextModificationRequestIEs_14;
         /**
          * id: id-UESidelinkAggregateMaximumBitrate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UESidelinkAggregateMaximumBitrate *_UEContextModificationRequestIEs_15;
         /**
          * id: id-NRUESecurityCapabilities
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRUESecurityCapabilities *_UEContextModificationRequestIEs_16;
         /**
          * id: id-AerialUEsubscriptionInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_AerialUEsubscriptionInformation _UEContextModificationRequestIEs_17;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextModificationRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextModificationRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationRequest_protocolIEs_element 
   (const char* name, const s1ap_UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationRequest_protocolIEs_element (
   const char* name, 
   s1ap_UEContextModificationRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_1
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_2
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_3
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_SecurityKey *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_4
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_SubscriberProfileIDforRFP value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_5
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_UEAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_6
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_CSFallbackIndicator value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_7
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_8
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_CSGMembershipStatus value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_9
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_LAI *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_10
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_AdditionalCSFallbackIndicator value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_11
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_ProSeAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_12
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_SRVCCOperationPossible value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_13
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_SRVCCOperationNotPossible value);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_14
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_V2XServicesAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_15
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_16
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_NRUESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_17
   (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs_element* pElem
   , s1ap_AerialUEsubscriptionInformation value);

EXTERN void asn1Copy_s1ap_UEContextModificationRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextModificationRequest_protocolIEs_element* pSrcValue, 
   s1ap_UEContextModificationRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationRequest_protocolIEs_element (
   s1ap_UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextModificationRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationRequest_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationRequest'
*/
/* List of s1ap_UEContextModificationRequest_protocolIEs_element */
typedef OSRTDList s1ap_UEContextModificationRequest_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextModificationRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationRequest_protocolIEs 
   (const char* name, const s1ap_UEContextModificationRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationRequest_protocolIEs (
   const char* name, s1ap_UEContextModificationRequest_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_SecurityKey to list */
struct s1ap_SecurityKey ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_SecurityKey *pvalue);

/* Append IE with value type s1ap_SubscriberProfileIDforRFP to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_SubscriberProfileIDforRFP value);

/* Append IE with value type s1ap_UEAggregateMaximumBitrate to list */
struct s1ap_UEAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_UEAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_CSFallbackIndicator to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_6
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_CSFallbackIndicator value);

/* Append IE with value type s1ap_UESecurityCapabilities to list */
struct s1ap_UESecurityCapabilities ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_7
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_UESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_CSGMembershipStatus to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_8
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_CSGMembershipStatus value);

/* Append IE with value type s1ap_LAI to list */
struct s1ap_LAI ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_9
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_LAI *pvalue);

/* Append IE with value type s1ap_AdditionalCSFallbackIndicator to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_10
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_AdditionalCSFallbackIndicator value);

/* Append IE with value type s1ap_ProSeAuthorized to list */
struct s1ap_ProSeAuthorized ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_11
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_ProSeAuthorized *pvalue);

/* Append IE with value type s1ap_SRVCCOperationPossible to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_12
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_SRVCCOperationPossible value);

/* Append IE with value type s1ap_SRVCCOperationNotPossible to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_13
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_SRVCCOperationNotPossible value);

/* Append IE with value type s1ap_V2XServicesAuthorized to list */
struct s1ap_V2XServicesAuthorized ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_14
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_V2XServicesAuthorized *pvalue);

/* Append IE with value type s1ap_UESidelinkAggregateMaximumBitrate to list */
struct s1ap_UESidelinkAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_15
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_NRUESecurityCapabilities to list */
struct s1ap_NRUESecurityCapabilities ;
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_16
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   struct s1ap_NRUESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_AerialUEsubscriptionInformation to list */
EXTERN int asn1Append_s1ap_UEContextModificationRequest_protocolIEs_17
      (OSCTXT* pctxt, s1ap_UEContextModificationRequest_protocolIEs* plist, 
   s1ap_AerialUEsubscriptionInformation value);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextModificationRequest_protocolIEs_element* 
   asn1Get_s1ap_UEContextModificationRequest_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextModificationRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextModificationRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextModificationRequest_protocolIEs* pSrcValue, 
   s1ap_UEContextModificationRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationRequest_protocolIEs (
   s1ap_UEContextModificationRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextModificationRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationRequest                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE CONTEXT MODIFICATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 UE Context Modification Request

 **************************************************************
UEContextModificationRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextModificationRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextModificationRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextModificationRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextModificationRequest {
   s1ap_UEContextModificationRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextModificationRequest;

EXTERN int asn1PE_s1ap_UEContextModificationRequest (OSCTXT* pctxt, s1ap_UEContextModificationRequest* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationRequest (OSCTXT* pctxt, s1ap_UEContextModificationRequest* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationRequest 
   (const char* name, const s1ap_UEContextModificationRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationRequest (const char* name, 
   s1ap_UEContextModificationRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationRequest* pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationRequest (OSCTXT* pctxt, 
   const s1ap_UEContextModificationRequest* pSrcValue, 
   s1ap_UEContextModificationRequest* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationRequest (
   s1ap_UEContextModificationRequest* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationRequest (OSCTXT *pctxt, 
   s1ap_UEContextModificationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseCommand_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseCommand'
*/
typedef struct EXTERN s1ap_UEContextReleaseCommand_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextReleaseCommand_IEs_TVALUE t;

      /**
       * UEContextReleaseCommand-IEs information objects
       */
      union {
         /**
          * id: id-UE-S1AP-IDs
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_UE_S1AP_IDs *_UEContextReleaseCommand_IEs_1;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_UEContextReleaseCommand_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextReleaseCommand_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextReleaseCommand_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseCommand_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseCommand_protocolIEs_element 
   (const char* name, const s1ap_UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseCommand_protocolIEs_element (
   const char* name, s1ap_UEContextReleaseCommand_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseCommand_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseCommand_protocolIEs_element_UEContextReleaseCommand_IEs_1
   (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs_element* pElem, 
   s1ap_UE_S1AP_IDs *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseCommand_protocolIEs_element_UEContextReleaseCommand_IEs_2
   (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1Copy_s1ap_UEContextReleaseCommand_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseCommand_protocolIEs_element* pSrcValue, 
   s1ap_UEContextReleaseCommand_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseCommand_protocolIEs_element (
   s1ap_UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseCommand_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextReleaseCommand_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseCommand_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseCommand'
*/
/* List of s1ap_UEContextReleaseCommand_protocolIEs_element */
typedef OSRTDList s1ap_UEContextReleaseCommand_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextReleaseCommand_protocolIEs (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseCommand_protocolIEs (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseCommand_protocolIEs 
   (const char* name, const s1ap_UEContextReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseCommand_protocolIEs (const char* name, 
   s1ap_UEContextReleaseCommand_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseCommand_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseCommand_protocolIEs* pvalue);

/* Append IE with value type s1ap_UE_S1AP_IDs to list */
struct s1ap_UE_S1AP_IDs ;
EXTERN int asn1Append_s1ap_UEContextReleaseCommand_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs* plist, struct 
   s1ap_UE_S1AP_IDs *pvalue);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_UEContextReleaseCommand_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextReleaseCommand_protocolIEs* plist, struct 
   s1ap_Cause *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextReleaseCommand_protocolIEs_element* 
   asn1Get_s1ap_UEContextReleaseCommand_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextReleaseCommand_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextReleaseCommand_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseCommand_protocolIEs* pSrcValue, 
   s1ap_UEContextReleaseCommand_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseCommand_protocolIEs (
   s1ap_UEContextReleaseCommand_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseCommand_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextReleaseCommand_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseCommand                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Release Command

 **************************************************************
UEContextReleaseCommand ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextReleaseCommand-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextReleaseCommand-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextReleaseCommand-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextReleaseCommand {
   s1ap_UEContextReleaseCommand_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextReleaseCommand;

EXTERN int asn1PE_s1ap_UEContextReleaseCommand (OSCTXT* pctxt, s1ap_UEContextReleaseCommand* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseCommand (OSCTXT* pctxt, s1ap_UEContextReleaseCommand* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseCommand 
   (const char* name, const s1ap_UEContextReleaseCommand* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseCommand (const char* name, 
   s1ap_UEContextReleaseCommand* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseCommand (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseCommand* pvalue);

EXTERN void asn1Copy_s1ap_UEContextReleaseCommand (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseCommand* pSrcValue, s1ap_UEContextReleaseCommand*
    pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseCommand (
   s1ap_UEContextReleaseCommand* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseCommand (OSCTXT *pctxt, 
   s1ap_UEContextReleaseCommand* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdate_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationUpdate'
*/
typedef struct EXTERN s1ap_ENBConfigurationUpdate_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ENBConfigurationUpdateIEs_TVALUE t;

      /**
       * ENBConfigurationUpdateIEs information objects
       */
      union {
         /**
          * id: id-eNBname
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ENBname _ENBConfigurationUpdateIEs_1;
         /**
          * id: id-SupportedTAs
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_SupportedTAs *_ENBConfigurationUpdateIEs_2;
         /**
          * id: id-CSG-IdList
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSG_IdList *_ENBConfigurationUpdateIEs_3;
         /**
          * id: id-DefaultPagingDRX
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PagingDRX _ENBConfigurationUpdateIEs_4;
         /**
          * id: id-NB-IoT-DefaultPagingDRX
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NB_IoT_DefaultPagingDRX _ENBConfigurationUpdateIEs_5;
         /**
          * id: id-ConnectedengNBToAddList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ConnectedengNBList *_ENBConfigurationUpdateIEs_6;
         /**
          * id: id-ConnectedengNBToRemoveList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ConnectedengNBList *_ENBConfigurationUpdateIEs_7;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ENBConfigurationUpdate_protocolIEs_element;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdate_protocolIEs_element 
   (const char* name, const s1ap_ENBConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdate_protocolIEs_element (
   const char* name, s1ap_ENBConfigurationUpdate_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdate_protocolIEs_element_ENBConfigurationUpdateIEs_1
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_ENBname value);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdate_protocolIEs_element_ENBConfigurationUpdateIEs_2
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_SupportedTAs *pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdate_protocolIEs_element_ENBConfigurationUpdateIEs_3
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_CSG_IdList *pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdate_protocolIEs_element_ENBConfigurationUpdateIEs_4
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_PagingDRX value);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdate_protocolIEs_element_ENBConfigurationUpdateIEs_5
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_NB_IoT_DefaultPagingDRX value);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdate_protocolIEs_element_ENBConfigurationUpdateIEs_6
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_ConnectedengNBList *pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdate_protocolIEs_element_ENBConfigurationUpdateIEs_7
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_ConnectedengNBList *pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdate_protocolIEs_element* pSrcValue, 
   s1ap_ENBConfigurationUpdate_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdate_protocolIEs_element (
   s1ap_ENBConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdate_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdate_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationUpdate'
*/
/* List of s1ap_ENBConfigurationUpdate_protocolIEs_element */
typedef OSRTDList s1ap_ENBConfigurationUpdate_protocolIEs;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdate_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdate_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdate_protocolIEs 
   (const char* name, const s1ap_ENBConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdate_protocolIEs (const char* name, 
   s1ap_ENBConfigurationUpdate_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdate_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdate_protocolIEs* pvalue);

/* Append IE with value type s1ap_ENBname to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdate_protocolIEs_1
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* plist, 
   s1ap_ENBname value);

/* Append IE with value type s1ap_SupportedTAs to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdate_protocolIEs_2
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* plist, 
   s1ap_SupportedTAs *pvalue);

/* Append IE with value type s1ap_CSG_IdList to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdate_protocolIEs_3
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* plist, 
   s1ap_CSG_IdList *pvalue);

/* Append IE with value type s1ap_PagingDRX to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdate_protocolIEs_4
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* plist, 
   s1ap_PagingDRX value);

/* Append IE with value type s1ap_NB_IoT_DefaultPagingDRX to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdate_protocolIEs_5
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* plist, 
   s1ap_NB_IoT_DefaultPagingDRX value);

/* Append IE with value type s1ap_ConnectedengNBList to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdate_protocolIEs_6
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* plist, 
   s1ap_ConnectedengNBList *pvalue);

/* Append IE with value type s1ap_ConnectedengNBList to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdate_protocolIEs_7
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate_protocolIEs* plist, 
   s1ap_ConnectedengNBList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBConfigurationUpdate_protocolIEs_element* 
   asn1Get_s1ap_ENBConfigurationUpdate_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_ENBConfigurationUpdate_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdate_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdate_protocolIEs* pSrcValue, 
   s1ap_ENBConfigurationUpdate_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdate_protocolIEs (
   s1ap_ENBConfigurationUpdate_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdate_protocolIEs (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdate_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdate                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 ENB CONFIGURATION UPDATE ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 eNB Configuration Update 

 **************************************************************
ENBConfigurationUpdate ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ENBConfigurationUpdateIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ENBConfigurationUpdateIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ENBConfigurationUpdateIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ENBConfigurationUpdate {
   s1ap_ENBConfigurationUpdate_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ENBConfigurationUpdate;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdate (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdate (OSCTXT* pctxt, s1ap_ENBConfigurationUpdate* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdate 
   (const char* name, const s1ap_ENBConfigurationUpdate* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdate (const char* name, 
   s1ap_ENBConfigurationUpdate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdate (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdate* pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdate (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdate* pSrcValue, s1ap_ENBConfigurationUpdate*
    pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdate (s1ap_ENBConfigurationUpdate* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdate (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdate_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationUpdate'
*/
typedef struct EXTERN s1ap_MMEConfigurationUpdate_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MMEConfigurationUpdateIEs_TVALUE t;

      /**
       * MMEConfigurationUpdateIEs information objects
       */
      union {
         /**
          * id: id-MMEname
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MMEname _MMEConfigurationUpdateIEs_1;
         /**
          * id: id-ServedGUMMEIs
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_ServedGUMMEIs *_MMEConfigurationUpdateIEs_2;
         /**
          * id: id-RelativeMMECapacity
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_RelativeMMECapacity _MMEConfigurationUpdateIEs_3;
         /**
          * id: id-ServedDCNs
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ServedDCNs *_MMEConfigurationUpdateIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_MMEConfigurationUpdate_protocolIEs_element;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdate_protocolIEs_element 
   (const char* name, const s1ap_MMEConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdate_protocolIEs_element (
   const char* name, s1ap_MMEConfigurationUpdate_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_MMEConfigurationUpdate_protocolIEs_element_MMEConfigurationUpdateIEs_1
   (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_MMEname value);

EXTERN void asn1SetTC_s1ap_MMEConfigurationUpdate_protocolIEs_element_MMEConfigurationUpdateIEs_2
   (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_ServedGUMMEIs *pvalue);

EXTERN void asn1SetTC_s1ap_MMEConfigurationUpdate_protocolIEs_element_MMEConfigurationUpdateIEs_3
   (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_RelativeMMECapacity value);

EXTERN void asn1SetTC_s1ap_MMEConfigurationUpdate_protocolIEs_element_MMEConfigurationUpdateIEs_4
   (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs_element* pElem, 
   s1ap_ServedDCNs *pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdate_protocolIEs_element* pSrcValue, 
   s1ap_MMEConfigurationUpdate_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdate_protocolIEs_element (
   s1ap_MMEConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdate_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdate_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationUpdate'
*/
/* List of s1ap_MMEConfigurationUpdate_protocolIEs_element */
typedef OSRTDList s1ap_MMEConfigurationUpdate_protocolIEs;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdate_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdate_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdate_protocolIEs 
   (const char* name, const s1ap_MMEConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdate_protocolIEs (const char* name, 
   s1ap_MMEConfigurationUpdate_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdate_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdate_protocolIEs* pvalue);

/* Append IE with value type s1ap_MMEname to list */
EXTERN int asn1Append_s1ap_MMEConfigurationUpdate_protocolIEs_1
      (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs* plist, 
   s1ap_MMEname value);

/* Append IE with value type s1ap_ServedGUMMEIs to list */
EXTERN int asn1Append_s1ap_MMEConfigurationUpdate_protocolIEs_2
      (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs* plist, 
   s1ap_ServedGUMMEIs *pvalue);

/* Append IE with value type s1ap_RelativeMMECapacity to list */
EXTERN int asn1Append_s1ap_MMEConfigurationUpdate_protocolIEs_3
      (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs* plist, 
   s1ap_RelativeMMECapacity value);

/* Append IE with value type s1ap_ServedDCNs to list */
EXTERN int asn1Append_s1ap_MMEConfigurationUpdate_protocolIEs_4
      (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate_protocolIEs* plist, 
   s1ap_ServedDCNs *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MMEConfigurationUpdate_protocolIEs_element* 
   asn1Get_s1ap_MMEConfigurationUpdate_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_MMEConfigurationUpdate_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdate_protocolIEs (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdate_protocolIEs* pSrcValue, 
   s1ap_MMEConfigurationUpdate_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdate_protocolIEs (
   s1ap_MMEConfigurationUpdate_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdate_protocolIEs (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdate_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdate                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 MME CONFIGURATION UPDATE ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 MME Configuration Update 

 **************************************************************
MMEConfigurationUpdate ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({MMEConfigurationUpdateIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({MMEConfigurationUpdateIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MMEConfigurationUpdateIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_MMEConfigurationUpdate {
   s1ap_MMEConfigurationUpdate_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_MMEConfigurationUpdate;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdate (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdate (OSCTXT* pctxt, s1ap_MMEConfigurationUpdate* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdate 
   (const char* name, const s1ap_MMEConfigurationUpdate* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdate (const char* name, 
   s1ap_MMEConfigurationUpdate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdate (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdate* pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdate (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdate* pSrcValue, s1ap_MMEConfigurationUpdate*
    pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdate (s1ap_MMEConfigurationUpdate* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdate (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningRequest_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningRequest'
*/
typedef struct EXTERN s1ap_WriteReplaceWarningRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      WriteReplaceWarningRequestIEs_TVALUE t;

      /**
       * WriteReplaceWarningRequestIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MessageIdentifier *_WriteReplaceWarningRequestIEs_1;
         /**
          * id: id-SerialNumber
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SerialNumber *_WriteReplaceWarningRequestIEs_2;
         /**
          * id: id-WarningAreaList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WarningAreaList *_WriteReplaceWarningRequestIEs_3;
         /**
          * id: id-RepetitionPeriod
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_RepetitionPeriod _WriteReplaceWarningRequestIEs_4;
         /**
          * id: id-ExtendedRepetitionPeriod
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_ExtendedRepetitionPeriod _WriteReplaceWarningRequestIEs_5;
         /**
          * id: id-NumberofBroadcastRequest
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_NumberofBroadcastRequest _WriteReplaceWarningRequestIEs_6;
         /**
          * id: id-WarningType
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WarningType *_WriteReplaceWarningRequestIEs_7;
         /**
          * id: id-WarningSecurityInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WarningSecurityInfo *_WriteReplaceWarningRequestIEs_8;
         /**
          * id: id-DataCodingScheme
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_DataCodingScheme *_WriteReplaceWarningRequestIEs_9;
         /**
          * id: id-WarningMessageContents
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WarningMessageContents *_WriteReplaceWarningRequestIEs_10;
         /**
          * id: id-ConcurrentWarningMessageIndicator
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_ConcurrentWarningMessageIndicator _WriteReplaceWarningRequestIEs_11;
         /**
          * id: id-WarningAreaCoordinates
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_WarningAreaCoordinates *_WriteReplaceWarningRequestIEs_12;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_WriteReplaceWarningRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_WriteReplaceWarningRequest_protocolIEs_element 
   (const char* name, const s1ap_WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_WriteReplaceWarningRequest_protocolIEs_element (
   const char* name, 
   s1ap_WriteReplaceWarningRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_1
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_MessageIdentifier *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_2
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_SerialNumber *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_3
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_WarningAreaList *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_4
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_RepetitionPeriod value);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_5
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_ExtendedRepetitionPeriod value);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_6
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_NumberofBroadcastRequest value);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_7
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_WarningType *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_8
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_WarningSecurityInfo *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_9
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_DataCodingScheme *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_10
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_WarningMessageContents *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_11
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_ConcurrentWarningMessageIndicator value);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_12
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   s1ap_WarningAreaCoordinates *pvalue);

EXTERN void asn1Copy_s1ap_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_WriteReplaceWarningRequest_protocolIEs_element* pSrcValue, 
   s1ap_WriteReplaceWarningRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_WriteReplaceWarningRequest_protocolIEs_element (
   s1ap_WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_WriteReplaceWarningRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningRequest_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningRequest'
*/
/* List of s1ap_WriteReplaceWarningRequest_protocolIEs_element */
typedef OSRTDList s1ap_WriteReplaceWarningRequest_protocolIEs;

EXTERN int asn1PE_s1ap_WriteReplaceWarningRequest_protocolIEs (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_WriteReplaceWarningRequest_protocolIEs (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_WriteReplaceWarningRequest_protocolIEs 
   (const char* name, const s1ap_WriteReplaceWarningRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_WriteReplaceWarningRequest_protocolIEs (
   const char* name, s1ap_WriteReplaceWarningRequest_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WriteReplaceWarningRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_WriteReplaceWarningRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MessageIdentifier to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_1
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   s1ap_MessageIdentifier *pvalue);

/* Append IE with value type s1ap_SerialNumber to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_2
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   s1ap_SerialNumber *pvalue);

/* Append IE with value type s1ap_WarningAreaList to list */
struct s1ap_WarningAreaList ;
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_3
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   struct s1ap_WarningAreaList *pvalue);

/* Append IE with value type s1ap_RepetitionPeriod to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_4
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   s1ap_RepetitionPeriod value);

/* Append IE with value type s1ap_ExtendedRepetitionPeriod to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_5
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   s1ap_ExtendedRepetitionPeriod value);

/* Append IE with value type s1ap_NumberofBroadcastRequest to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_6
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   s1ap_NumberofBroadcastRequest value);

/* Append IE with value type s1ap_WarningType to list */
struct s1ap_WarningType ;
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_7
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   struct s1ap_WarningType *pvalue);

/* Append IE with value type s1ap_WarningSecurityInfo to list */
struct s1ap_WarningSecurityInfo ;
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_8
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   struct s1ap_WarningSecurityInfo *pvalue);

/* Append IE with value type s1ap_DataCodingScheme to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_9
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   s1ap_DataCodingScheme *pvalue);

/* Append IE with value type s1ap_WarningMessageContents to list */
struct s1ap_WarningMessageContents ;
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_10
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   struct s1ap_WarningMessageContents *pvalue);

/* Append IE with value type s1ap_ConcurrentWarningMessageIndicator to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_11
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   s1ap_ConcurrentWarningMessageIndicator value);

/* Append IE with value type s1ap_WarningAreaCoordinates to list */
struct s1ap_WarningAreaCoordinates ;
EXTERN int asn1Append_s1ap_WriteReplaceWarningRequest_protocolIEs_12
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest_protocolIEs* plist, 
   struct s1ap_WarningAreaCoordinates *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_WriteReplaceWarningRequest_protocolIEs_element* 
   asn1Get_s1ap_WriteReplaceWarningRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_WriteReplaceWarningRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_WriteReplaceWarningRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_WriteReplaceWarningRequest_protocolIEs* pSrcValue, 
   s1ap_WriteReplaceWarningRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_WriteReplaceWarningRequest_protocolIEs (
   s1ap_WriteReplaceWarningRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_WriteReplaceWarningRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_WriteReplaceWarningRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningRequest                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 WRITE-REPLACE WARNING ELEMENTARY PROCEDURE 

 **************************************************************
 **************************************************************

 Write-Replace Warning Request

 **************************************************************
WriteReplaceWarningRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({WriteReplaceWarningRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({WriteReplaceWarningRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({WriteReplaceWarningRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_WriteReplaceWarningRequest {
   s1ap_WriteReplaceWarningRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_WriteReplaceWarningRequest;

EXTERN int asn1PE_s1ap_WriteReplaceWarningRequest (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest* pvalue);

EXTERN int asn1PD_s1ap_WriteReplaceWarningRequest (OSCTXT* pctxt, s1ap_WriteReplaceWarningRequest* pvalue);

EXTERN void asn1Print_s1ap_WriteReplaceWarningRequest 
   (const char* name, const s1ap_WriteReplaceWarningRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_WriteReplaceWarningRequest (const char* name, 
   s1ap_WriteReplaceWarningRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WriteReplaceWarningRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_WriteReplaceWarningRequest* pvalue);

EXTERN void asn1Copy_s1ap_WriteReplaceWarningRequest (OSCTXT* pctxt, 
   const s1ap_WriteReplaceWarningRequest* pSrcValue, 
   s1ap_WriteReplaceWarningRequest* pDstValue);

EXTERN int asn1Init_s1ap_WriteReplaceWarningRequest (
   s1ap_WriteReplaceWarningRequest* pvalue);

EXTERN void asn1Free_s1ap_WriteReplaceWarningRequest (OSCTXT *pctxt, 
   s1ap_WriteReplaceWarningRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityMatchRequest_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityMatchRequest'
*/
typedef struct EXTERN s1ap_UERadioCapabilityMatchRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UERadioCapabilityMatchRequestIEs_TVALUE t;

      /**
       * UERadioCapabilityMatchRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UERadioCapabilityMatchRequestIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UERadioCapabilityMatchRequestIEs_2;
         /**
          * id: id-UERadioCapability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UERadioCapability *_UERadioCapabilityMatchRequestIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UERadioCapabilityMatchRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element 
   (const char* name, const s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element (
   const char* name, 
   s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element_UERadioCapabilityMatchRequestIEs_1
   (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element_UERadioCapabilityMatchRequestIEs_2
   (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element_UERadioCapabilityMatchRequestIEs_3
   (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pElem
   , s1ap_UERadioCapability *pvalue);

EXTERN void asn1Copy_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pSrcValue, 
   s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element (
   s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapabilityMatchRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityMatchRequest_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityMatchRequest'
*/
/* List of s1ap_UERadioCapabilityMatchRequest_protocolIEs_element */
typedef OSRTDList s1ap_UERadioCapabilityMatchRequest_protocolIEs;

EXTERN int asn1PE_s1ap_UERadioCapabilityMatchRequest_protocolIEs (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UERadioCapabilityMatchRequest_protocolIEs (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapabilityMatchRequest_protocolIEs 
   (const char* name, const s1ap_UERadioCapabilityMatchRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapabilityMatchRequest_protocolIEs (
   const char* name, s1ap_UERadioCapabilityMatchRequest_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapabilityMatchRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapabilityMatchRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UERadioCapabilityMatchRequest_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UERadioCapabilityMatchRequest_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UERadioCapability to list */
EXTERN int asn1Append_s1ap_UERadioCapabilityMatchRequest_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest_protocolIEs* plist, 
   s1ap_UERadioCapability *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UERadioCapabilityMatchRequest_protocolIEs_element* 
   asn1Get_s1ap_UERadioCapabilityMatchRequest_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UERadioCapabilityMatchRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UERadioCapabilityMatchRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UERadioCapabilityMatchRequest_protocolIEs* pSrcValue, 
   s1ap_UERadioCapabilityMatchRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapabilityMatchRequest_protocolIEs (
   s1ap_UERadioCapabilityMatchRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapabilityMatchRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_UERadioCapabilityMatchRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityMatchRequest                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE RADIO CAPABILITY MATCH ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 UE Radio Capability Match Request

 **************************************************************
UERadioCapabilityMatchRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UERadioCapabilityMatchRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UERadioCapabilityMatchRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UERadioCapabilityMatchRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UERadioCapabilityMatchRequest {
   s1ap_UERadioCapabilityMatchRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UERadioCapabilityMatchRequest;

EXTERN int asn1PE_s1ap_UERadioCapabilityMatchRequest (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest* pvalue);

EXTERN int asn1PD_s1ap_UERadioCapabilityMatchRequest (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchRequest* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapabilityMatchRequest 
   (const char* name, const s1ap_UERadioCapabilityMatchRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapabilityMatchRequest (const char* name, 
   s1ap_UERadioCapabilityMatchRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapabilityMatchRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapabilityMatchRequest* pvalue);

EXTERN void asn1Copy_s1ap_UERadioCapabilityMatchRequest (OSCTXT* pctxt, 
   const s1ap_UERadioCapabilityMatchRequest* pSrcValue, 
   s1ap_UERadioCapabilityMatchRequest* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapabilityMatchRequest (
   s1ap_UERadioCapabilityMatchRequest* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapabilityMatchRequest (OSCTXT *pctxt, 
   s1ap_UERadioCapabilityMatchRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedItemBearerModInd_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeModifiedItemBearerModInd'
*/
typedef struct EXTERN s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element 
   (const char* name, const s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element (
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedItemBearerModInd_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeModifiedItemBearerModInd'
*/
/* List of s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions 
   (const char* name, const s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions (
   const char* name, 
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions_element* 
   asn1Get_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pSrcValue, 
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions (
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedItemBearerModInd                         */
/*                                                            */
/**************************************************************/
/*
E-RABToBeModifiedItemBearerModInd ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   dL-GTP-TEID [2] GTP-TEID,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABToBeModifiedItemBearerModInd-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABToBeModifiedItemBearerModInd-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABToBeModifiedItemBearerModInd-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABToBeModifiedItemBearerModInd {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID dL_GTP_TEID;
   s1ap_E_RABToBeModifiedItemBearerModInd_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABToBeModifiedItemBearerModInd;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedItemBearerModInd (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModInd* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedItemBearerModInd (OSCTXT* pctxt, s1ap_E_RABToBeModifiedItemBearerModInd* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedItemBearerModInd 
   (const char* name, const s1ap_E_RABToBeModifiedItemBearerModInd* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedItemBearerModInd (const char* name, 
   s1ap_E_RABToBeModifiedItemBearerModInd* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedItemBearerModInd (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedItemBearerModInd* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedItemBearerModInd (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedItemBearerModInd* pSrcValue, 
   s1ap_E_RABToBeModifiedItemBearerModInd* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedItemBearerModInd (
   s1ap_E_RABToBeModifiedItemBearerModInd* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedItemBearerModInd (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedItemBearerModInd* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedListBearerModInd_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeModifiedListBearerModInd'
*/
typedef struct EXTERN s1ap_E_RABToBeModifiedListBearerModInd_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeModifiedItemBearerModIndIEs_TVALUE t;

      /**
       * E-RABToBeModifiedItemBearerModIndIEs information objects
       */
      union {
         /**
          * id: id-E-RABToBeModifiedItemBearerModInd
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeModifiedItemBearerModInd *_E_RABToBeModifiedItemBearerModIndIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABToBeModifiedListBearerModInd_element;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedListBearerModInd_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModInd_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedListBearerModInd_element (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModInd_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedListBearerModInd_element 
   (const char* name, const s1ap_E_RABToBeModifiedListBearerModInd_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedListBearerModInd_element (
   const char* name, s1ap_E_RABToBeModifiedListBearerModInd_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedListBearerModInd_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedListBearerModInd_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedListBearerModInd_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedListBearerModInd_element* pSrcValue, 
   s1ap_E_RABToBeModifiedListBearerModInd_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedListBearerModInd_element (
   s1ap_E_RABToBeModifiedListBearerModInd_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedListBearerModInd_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedListBearerModInd_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeModifiedListBearerModInd                         */
/*                                                            */
/**************************************************************/
/*
E-RABToBeModifiedListBearerModInd ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABToBeModifiedItemBearerModIndIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABToBeModifiedItemBearerModIndIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABToBeModifiedItemBearerModIndIEs}{@id})
}
*/
/* List of s1ap_E_RABToBeModifiedListBearerModInd_element */
typedef OSRTDList s1ap_E_RABToBeModifiedListBearerModInd;

EXTERN int asn1PE_s1ap_E_RABToBeModifiedListBearerModInd (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModInd* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeModifiedListBearerModInd (OSCTXT* pctxt, s1ap_E_RABToBeModifiedListBearerModInd* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeModifiedListBearerModInd 
   (const char* name, const s1ap_E_RABToBeModifiedListBearerModInd* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeModifiedListBearerModInd (const char* name, 
   s1ap_E_RABToBeModifiedListBearerModInd* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeModifiedListBearerModInd (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeModifiedListBearerModInd* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeModifiedListBearerModInd_element* 
   asn1Get_s1ap_E_RABToBeModifiedListBearerModInd (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABToBeModifiedListBearerModInd* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeModifiedListBearerModInd (OSCTXT* pctxt, 
   const s1ap_E_RABToBeModifiedListBearerModInd* pSrcValue, 
   s1ap_E_RABToBeModifiedListBearerModInd* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeModifiedListBearerModInd (
   s1ap_E_RABToBeModifiedListBearerModInd* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeModifiedListBearerModInd (OSCTXT *pctxt, 
   s1ap_E_RABToBeModifiedListBearerModInd* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABNotToBeModifiedItemBearerModInd'
*/
typedef struct EXTERN s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element 
   (const char* name, const s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element (
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABNotToBeModifiedItemBearerModInd_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABNotToBeModifiedItemBearerModInd'
*/
/* List of s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions 
   (const char* name, const s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions (
   const char* name, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions_element* 
   asn1Get_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pSrcValue, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions (
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABNotToBeModifiedItemBearerModInd                      */
/*                                                            */
/**************************************************************/
/*
E-RABNotToBeModifiedItemBearerModInd ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   dL-GTP-TEID [2] GTP-TEID,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABNotToBeModifiedItemBearerModInd-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABNotToBeModifiedItemBearerModInd-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABNotToBeModifiedItemBearerModInd-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABNotToBeModifiedItemBearerModInd {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID dL_GTP_TEID;
   s1ap_E_RABNotToBeModifiedItemBearerModInd_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABNotToBeModifiedItemBearerModInd;

EXTERN int asn1PE_s1ap_E_RABNotToBeModifiedItemBearerModInd (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedItemBearerModInd* pvalue);

EXTERN int asn1PD_s1ap_E_RABNotToBeModifiedItemBearerModInd (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedItemBearerModInd* pvalue);

EXTERN void asn1Print_s1ap_E_RABNotToBeModifiedItemBearerModInd 
   (const char* name, const s1ap_E_RABNotToBeModifiedItemBearerModInd* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABNotToBeModifiedItemBearerModInd (const char* name, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABNotToBeModifiedItemBearerModInd (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABNotToBeModifiedItemBearerModInd* pvalue);

EXTERN void asn1Copy_s1ap_E_RABNotToBeModifiedItemBearerModInd (OSCTXT* pctxt, 
   const s1ap_E_RABNotToBeModifiedItemBearerModInd* pSrcValue, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd* pDstValue);

EXTERN int asn1Init_s1ap_E_RABNotToBeModifiedItemBearerModInd (
   s1ap_E_RABNotToBeModifiedItemBearerModInd* pvalue);

EXTERN void asn1Free_s1ap_E_RABNotToBeModifiedItemBearerModInd (OSCTXT *pctxt, 
   s1ap_E_RABNotToBeModifiedItemBearerModInd* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABNotToBeModifiedListBearerModInd_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABNotToBeModifiedListBearerModInd'
*/
typedef struct EXTERN s1ap_E_RABNotToBeModifiedListBearerModInd_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABNotToBeModifiedItemBearerModIndIEs_TVALUE t;

      /**
       * E-RABNotToBeModifiedItemBearerModIndIEs information objects
       */
      union {
         /**
          * id: id-E-RABNotToBeModifiedItemBearerModInd
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABNotToBeModifiedItemBearerModInd *_E_RABNotToBeModifiedItemBearerModIndIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABNotToBeModifiedListBearerModInd_element;

EXTERN int asn1PE_s1ap_E_RABNotToBeModifiedListBearerModInd_element (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedListBearerModInd_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABNotToBeModifiedListBearerModInd_element (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedListBearerModInd_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABNotToBeModifiedListBearerModInd_element 
   (const char* name, const s1ap_E_RABNotToBeModifiedListBearerModInd_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABNotToBeModifiedListBearerModInd_element (
   const char* name, 
   s1ap_E_RABNotToBeModifiedListBearerModInd_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABNotToBeModifiedListBearerModInd_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABNotToBeModifiedListBearerModInd_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABNotToBeModifiedListBearerModInd_element (OSCTXT* pctxt, 
   const s1ap_E_RABNotToBeModifiedListBearerModInd_element* pSrcValue, 
   s1ap_E_RABNotToBeModifiedListBearerModInd_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABNotToBeModifiedListBearerModInd_element (
   s1ap_E_RABNotToBeModifiedListBearerModInd_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABNotToBeModifiedListBearerModInd_element (OSCTXT *pctxt, 
   s1ap_E_RABNotToBeModifiedListBearerModInd_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABNotToBeModifiedListBearerModInd                      */
/*                                                            */
/**************************************************************/
/*
E-RABNotToBeModifiedListBearerModInd ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABNotToBeModifiedItemBearerModIndIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABNotToBeModifiedItemBearerModIndIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABNotToBeModifiedItemBearerModIndIEs}{@id})
}
*/
/* List of s1ap_E_RABNotToBeModifiedListBearerModInd_element */
typedef OSRTDList s1ap_E_RABNotToBeModifiedListBearerModInd;

EXTERN int asn1PE_s1ap_E_RABNotToBeModifiedListBearerModInd (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedListBearerModInd* pvalue);

EXTERN int asn1PD_s1ap_E_RABNotToBeModifiedListBearerModInd (OSCTXT* pctxt, s1ap_E_RABNotToBeModifiedListBearerModInd* pvalue);

EXTERN void asn1Print_s1ap_E_RABNotToBeModifiedListBearerModInd 
   (const char* name, const s1ap_E_RABNotToBeModifiedListBearerModInd* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABNotToBeModifiedListBearerModInd (const char* name, 
   s1ap_E_RABNotToBeModifiedListBearerModInd* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABNotToBeModifiedListBearerModInd (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABNotToBeModifiedListBearerModInd* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABNotToBeModifiedListBearerModInd_element* 
   asn1Get_s1ap_E_RABNotToBeModifiedListBearerModInd (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABNotToBeModifiedListBearerModInd* plist);

EXTERN void asn1Copy_s1ap_E_RABNotToBeModifiedListBearerModInd (OSCTXT* pctxt, 
   const s1ap_E_RABNotToBeModifiedListBearerModInd* pSrcValue, 
   s1ap_E_RABNotToBeModifiedListBearerModInd* pDstValue);

EXTERN int asn1Init_s1ap_E_RABNotToBeModifiedListBearerModInd (
   s1ap_E_RABNotToBeModifiedListBearerModInd* pvalue);

EXTERN void asn1Free_s1ap_E_RABNotToBeModifiedListBearerModInd (OSCTXT *pctxt, 
   s1ap_E_RABNotToBeModifiedListBearerModInd* pvalue);

/**************************************************************/
/*                                                            */
/*  CSGMembershipInfo_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CSGMembershipInfo'
*/
typedef struct EXTERN s1ap_CSGMembershipInfo_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_CSGMembershipInfo_iE_Extensions_element;

EXTERN int asn1PE_s1ap_CSGMembershipInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_CSGMembershipInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_CSGMembershipInfo_iE_Extensions_element (OSCTXT* pctxt, s1ap_CSGMembershipInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_CSGMembershipInfo_iE_Extensions_element 
   (const char* name, const s1ap_CSGMembershipInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSGMembershipInfo_iE_Extensions_element (
   const char* name, s1ap_CSGMembershipInfo_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSGMembershipInfo_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CSGMembershipInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_CSGMembershipInfo_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_CSGMembershipInfo_iE_Extensions_element* pSrcValue, 
   s1ap_CSGMembershipInfo_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_CSGMembershipInfo_iE_Extensions_element (
   s1ap_CSGMembershipInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_CSGMembershipInfo_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_CSGMembershipInfo_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CSGMembershipInfo_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CSGMembershipInfo'
*/
/* List of s1ap_CSGMembershipInfo_iE_Extensions_element */
typedef OSRTDList s1ap_CSGMembershipInfo_iE_Extensions;

EXTERN int asn1PE_s1ap_CSGMembershipInfo_iE_Extensions (OSCTXT* pctxt, s1ap_CSGMembershipInfo_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_CSGMembershipInfo_iE_Extensions (OSCTXT* pctxt, s1ap_CSGMembershipInfo_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_CSGMembershipInfo_iE_Extensions 
   (const char* name, const s1ap_CSGMembershipInfo_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSGMembershipInfo_iE_Extensions (const char* name, 
   s1ap_CSGMembershipInfo_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSGMembershipInfo_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_CSGMembershipInfo_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_CSGMembershipInfo_iE_Extensions_element* 
   asn1Get_s1ap_CSGMembershipInfo_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_CSGMembershipInfo_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_CSGMembershipInfo_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_CSGMembershipInfo_iE_Extensions* pSrcValue, 
   s1ap_CSGMembershipInfo_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_CSGMembershipInfo_iE_Extensions (
   s1ap_CSGMembershipInfo_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_CSGMembershipInfo_iE_Extensions (OSCTXT *pctxt, 
   s1ap_CSGMembershipInfo_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CSGMembershipInfo                                         */
/*                                                            */
/**************************************************************/
/*
CSGMembershipInfo ::= SEQUENCE {
   cSGMembershipStatus [0] CSGMembershipStatus,
   cSG-Id [1] CSG-Id,
   cellAccessMode [2] CellAccessMode OPTIONAL,
   pLMNidentity [3] PLMNidentity OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({CSGMembershipInfo-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({CSGMembershipInfo-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({CSGMembershipInfo-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CSGMembershipInfo {
   struct {
      unsigned cellAccessModePresent : 1;
      unsigned pLMNidentityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_CSGMembershipStatus cSGMembershipStatus;
   s1ap_CSG_Id cSG_Id;
   s1ap_CellAccessMode cellAccessMode;
   s1ap_PLMNidentity pLMNidentity;
   s1ap_CSGMembershipInfo_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_CSGMembershipInfo;

EXTERN int asn1PE_s1ap_CSGMembershipInfo (OSCTXT* pctxt, s1ap_CSGMembershipInfo* pvalue);

EXTERN int asn1PD_s1ap_CSGMembershipInfo (OSCTXT* pctxt, s1ap_CSGMembershipInfo* pvalue);

EXTERN void asn1Print_s1ap_CSGMembershipInfo 
   (const char* name, const s1ap_CSGMembershipInfo* pvalue);

EXTERN int asn1PrtToStr_s1ap_CSGMembershipInfo (const char* name, 
   s1ap_CSGMembershipInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CSGMembershipInfo (OSCTXT *pctxt, 
   const char* name, const s1ap_CSGMembershipInfo* pvalue);

EXTERN void asn1Copy_s1ap_CSGMembershipInfo (OSCTXT* pctxt, 
   const s1ap_CSGMembershipInfo* pSrcValue, s1ap_CSGMembershipInfo* pDstValue);

EXTERN int asn1Init_s1ap_CSGMembershipInfo (s1ap_CSGMembershipInfo* pvalue);

EXTERN void asn1Free_s1ap_CSGMembershipInfo (OSCTXT *pctxt, 
   s1ap_CSGMembershipInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModificationIndication_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModificationIndication'
*/
typedef struct EXTERN s1ap_E_RABModificationIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABModificationIndicationIEs_TVALUE t;

      /**
       * E-RABModificationIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABModificationIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABModificationIndicationIEs_2;
         /**
          * id: id-E-RABToBeModifiedListBearerModInd
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeModifiedListBearerModInd *_E_RABModificationIndicationIEs_3;
         /**
          * id: id-E-RABNotToBeModifiedListBearerModInd
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_E_RABNotToBeModifiedListBearerModInd *_E_RABModificationIndicationIEs_4;
         /**
          * id: id-CSGMembershipInfo
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipInfo *_E_RABModificationIndicationIEs_5;
         /**
          * id: id-Tunnel-Information-for-BBF
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TunnelInformation *_E_RABModificationIndicationIEs_6;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageReportList *_E_RABModificationIndicationIEs_7;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABModificationIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABModificationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModificationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModificationIndication_protocolIEs_element 
   (const char* name, const s1ap_E_RABModificationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModificationIndication_protocolIEs_element (
   const char* name, 
   s1ap_E_RABModificationIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModificationIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModificationIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationIndication_protocolIEs_element_E_RABModificationIndicationIEs_1
   (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModificationIndication_protocolIEs_element_E_RABModificationIndicationIEs_2
   (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModificationIndication_protocolIEs_element_E_RABModificationIndicationIEs_3
   (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pElem
   , s1ap_E_RABToBeModifiedListBearerModInd *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationIndication_protocolIEs_element_E_RABModificationIndicationIEs_4
   (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pElem
   , s1ap_E_RABNotToBeModifiedListBearerModInd *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationIndication_protocolIEs_element_E_RABModificationIndicationIEs_5
   (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pElem
   , s1ap_CSGMembershipInfo *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationIndication_protocolIEs_element_E_RABModificationIndicationIEs_6
   (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pElem
   , s1ap_TunnelInformation *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationIndication_protocolIEs_element_E_RABModificationIndicationIEs_7
   (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs_element* pElem
   , s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1Copy_s1ap_E_RABModificationIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABModificationIndication_protocolIEs_element* pSrcValue, 
   s1ap_E_RABModificationIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModificationIndication_protocolIEs_element (
   s1ap_E_RABModificationIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModificationIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABModificationIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModificationIndication_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModificationIndication'
*/
/* List of s1ap_E_RABModificationIndication_protocolIEs_element */
typedef OSRTDList s1ap_E_RABModificationIndication_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABModificationIndication_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABModificationIndication_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABModificationIndication_protocolIEs 
   (const char* name, const s1ap_E_RABModificationIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModificationIndication_protocolIEs (
   const char* name, s1ap_E_RABModificationIndication_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModificationIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModificationIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModificationIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModificationIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABToBeModifiedListBearerModInd to list */
EXTERN int asn1Append_s1ap_E_RABModificationIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* plist, 
   s1ap_E_RABToBeModifiedListBearerModInd *pvalue);

/* Append IE with value type s1ap_E_RABNotToBeModifiedListBearerModInd to list */
EXTERN int asn1Append_s1ap_E_RABModificationIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* plist, 
   s1ap_E_RABNotToBeModifiedListBearerModInd *pvalue);

/* Append IE with value type s1ap_CSGMembershipInfo to list */
struct s1ap_CSGMembershipInfo ;
EXTERN int asn1Append_s1ap_E_RABModificationIndication_protocolIEs_5
      (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* plist, 
   struct s1ap_CSGMembershipInfo *pvalue);

/* Append IE with value type s1ap_TunnelInformation to list */
struct s1ap_TunnelInformation ;
EXTERN int asn1Append_s1ap_E_RABModificationIndication_protocolIEs_6
      (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* plist, 
   struct s1ap_TunnelInformation *pvalue);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_E_RABModificationIndication_protocolIEs_7
      (OSCTXT* pctxt, s1ap_E_RABModificationIndication_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModificationIndication_protocolIEs_element* 
   asn1Get_s1ap_E_RABModificationIndication_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABModificationIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABModificationIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABModificationIndication_protocolIEs* pSrcValue, 
   s1ap_E_RABModificationIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModificationIndication_protocolIEs (
   s1ap_E_RABModificationIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABModificationIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABModificationIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModificationIndication                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB MODIFICATION INDICATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 E-RAB Modification Indication

 **************************************************************
E-RABModificationIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABModificationIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABModificationIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABModificationIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABModificationIndication {
   s1ap_E_RABModificationIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABModificationIndication;

EXTERN int asn1PE_s1ap_E_RABModificationIndication (OSCTXT* pctxt, s1ap_E_RABModificationIndication* pvalue);

EXTERN int asn1PD_s1ap_E_RABModificationIndication (OSCTXT* pctxt, s1ap_E_RABModificationIndication* pvalue);

EXTERN void asn1Print_s1ap_E_RABModificationIndication 
   (const char* name, const s1ap_E_RABModificationIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModificationIndication (const char* name, 
   s1ap_E_RABModificationIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModificationIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModificationIndication* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModificationIndication (OSCTXT* pctxt, 
   const s1ap_E_RABModificationIndication* pSrcValue, 
   s1ap_E_RABModificationIndication* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModificationIndication (
   s1ap_E_RABModificationIndication* pvalue);

EXTERN void asn1Free_s1ap_E_RABModificationIndication (OSCTXT *pctxt, 
   s1ap_E_RABModificationIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationIndication_protocolIEs_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationIndication'
*/
typedef struct EXTERN s1ap_UEContextModificationIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextModificationIndicationIEs_TVALUE t;

      /**
       * UEContextModificationIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextModificationIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextModificationIndicationIEs_2;
         /**
          * id: id-CSGMembershipInfo
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipInfo *_UEContextModificationIndicationIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextModificationIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextModificationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationIndication_protocolIEs_element 
   (const char* name, const s1ap_UEContextModificationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationIndication_protocolIEs_element (
   const char* name, 
   s1ap_UEContextModificationIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationIndication_protocolIEs_element_UEContextModificationIndicationIEs_1
   (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationIndication_protocolIEs_element_UEContextModificationIndicationIEs_2
   (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationIndication_protocolIEs_element_UEContextModificationIndicationIEs_3
   (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs_element* pElem
   , s1ap_CSGMembershipInfo *pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextModificationIndication_protocolIEs_element* pSrcValue, 
   s1ap_UEContextModificationIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationIndication_protocolIEs_element (
   s1ap_UEContextModificationIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextModificationIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationIndication_protocolIEs               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationIndication'
*/
/* List of s1ap_UEContextModificationIndication_protocolIEs_element */
typedef OSRTDList s1ap_UEContextModificationIndication_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextModificationIndication_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationIndication_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationIndication_protocolIEs 
   (const char* name, const s1ap_UEContextModificationIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationIndication_protocolIEs (
   const char* name, s1ap_UEContextModificationIndication_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_CSGMembershipInfo to list */
struct s1ap_CSGMembershipInfo ;
EXTERN int asn1Append_s1ap_UEContextModificationIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextModificationIndication_protocolIEs* plist, 
   struct s1ap_CSGMembershipInfo *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextModificationIndication_protocolIEs_element* 
   asn1Get_s1ap_UEContextModificationIndication_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextModificationIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextModificationIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextModificationIndication_protocolIEs* pSrcValue, 
   s1ap_UEContextModificationIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationIndication_protocolIEs (
   s1ap_UEContextModificationIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextModificationIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationIndication                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE CONTEXT MODIFICATION INDICATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 UE Context Modification Indication

 **************************************************************
UEContextModificationIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextModificationIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextModificationIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextModificationIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextModificationIndication {
   s1ap_UEContextModificationIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextModificationIndication;

EXTERN int asn1PE_s1ap_UEContextModificationIndication (OSCTXT* pctxt, s1ap_UEContextModificationIndication* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationIndication (OSCTXT* pctxt, s1ap_UEContextModificationIndication* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationIndication 
   (const char* name, const s1ap_UEContextModificationIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationIndication (const char* name, 
   s1ap_UEContextModificationIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationIndication* pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationIndication (OSCTXT* pctxt, 
   const s1ap_UEContextModificationIndication* pSrcValue, 
   s1ap_UEContextModificationIndication* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationIndication (
   s1ap_UEContextModificationIndication* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationIndication (OSCTXT *pctxt, 
   s1ap_UEContextModificationIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextSuspendRequest_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextSuspendRequest'
*/
typedef struct EXTERN s1ap_UEContextSuspendRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextSuspendRequestIEs_TVALUE t;

      /**
       * UEContextSuspendRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextSuspendRequestIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextSuspendRequestIEs_2;
         /**
          * id: id-InformationOnRecommendedCellsAndENBsForPaging
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_InformationOnRecommendedCellsAndENBsForPaging *_UEContextSuspendRequestIEs_3;
         /**
          * id: id-CellIdentifierAndCELevelForCECapableUEs
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CellIdentifierAndCELevelForCECapableUEs *_UEContextSuspendRequestIEs_4;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageReportList *_UEContextSuspendRequestIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextSuspendRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextSuspendRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextSuspendRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextSuspendRequest_protocolIEs_element 
   (const char* name, const s1ap_UEContextSuspendRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextSuspendRequest_protocolIEs_element (
   const char* name, s1ap_UEContextSuspendRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextSuspendRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextSuspendRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextSuspendRequest_protocolIEs_element_UEContextSuspendRequestIEs_1
   (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextSuspendRequest_protocolIEs_element_UEContextSuspendRequestIEs_2
   (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextSuspendRequest_protocolIEs_element_UEContextSuspendRequestIEs_3
   (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs_element* pElem, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextSuspendRequest_protocolIEs_element_UEContextSuspendRequestIEs_4
   (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs_element* pElem, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextSuspendRequest_protocolIEs_element_UEContextSuspendRequestIEs_5
   (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs_element* pElem, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1Copy_s1ap_UEContextSuspendRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextSuspendRequest_protocolIEs_element* pSrcValue, 
   s1ap_UEContextSuspendRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextSuspendRequest_protocolIEs_element (
   s1ap_UEContextSuspendRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextSuspendRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextSuspendRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextSuspendRequest_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextSuspendRequest'
*/
/* List of s1ap_UEContextSuspendRequest_protocolIEs_element */
typedef OSRTDList s1ap_UEContextSuspendRequest_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextSuspendRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextSuspendRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextSuspendRequest_protocolIEs 
   (const char* name, const s1ap_UEContextSuspendRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextSuspendRequest_protocolIEs (const char* name, 
   s1ap_UEContextSuspendRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextSuspendRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextSuspendRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextSuspendRequest_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextSuspendRequest_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_InformationOnRecommendedCellsAndENBsForPaging to list */
struct s1ap_InformationOnRecommendedCellsAndENBsForPaging ;
EXTERN int asn1Append_s1ap_UEContextSuspendRequest_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs* plist, struct 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging *pvalue);

/* Append IE with value type s1ap_CellIdentifierAndCELevelForCECapableUEs to list */
struct s1ap_CellIdentifierAndCELevelForCECapableUEs ;
EXTERN int asn1Append_s1ap_UEContextSuspendRequest_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs* plist, struct 
   s1ap_CellIdentifierAndCELevelForCECapableUEs *pvalue);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_UEContextSuspendRequest_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UEContextSuspendRequest_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextSuspendRequest_protocolIEs_element* 
   asn1Get_s1ap_UEContextSuspendRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextSuspendRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextSuspendRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextSuspendRequest_protocolIEs* pSrcValue, 
   s1ap_UEContextSuspendRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextSuspendRequest_protocolIEs (
   s1ap_UEContextSuspendRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextSuspendRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextSuspendRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextSuspendRequest                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE CONTEXT SUSPEND ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 UE Context Suspend Request

 **************************************************************
UEContextSuspendRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextSuspendRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextSuspendRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextSuspendRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextSuspendRequest {
   s1ap_UEContextSuspendRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextSuspendRequest;

EXTERN int asn1PE_s1ap_UEContextSuspendRequest (OSCTXT* pctxt, s1ap_UEContextSuspendRequest* pvalue);

EXTERN int asn1PD_s1ap_UEContextSuspendRequest (OSCTXT* pctxt, s1ap_UEContextSuspendRequest* pvalue);

EXTERN void asn1Print_s1ap_UEContextSuspendRequest 
   (const char* name, const s1ap_UEContextSuspendRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextSuspendRequest (const char* name, 
   s1ap_UEContextSuspendRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextSuspendRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextSuspendRequest* pvalue);

EXTERN void asn1Copy_s1ap_UEContextSuspendRequest (OSCTXT* pctxt, 
   const s1ap_UEContextSuspendRequest* pSrcValue, s1ap_UEContextSuspendRequest*
    pDstValue);

EXTERN int asn1Init_s1ap_UEContextSuspendRequest (
   s1ap_UEContextSuspendRequest* pvalue);

EXTERN void asn1Free_s1ap_UEContextSuspendRequest (OSCTXT *pctxt, 
   s1ap_UEContextSuspendRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeItemResumeReq_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToResumeItemResumeReq'
*/
typedef struct EXTERN s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element 
   (const char* name, const s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element (
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeItemResumeReq_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToResumeItemResumeReq'
*/
/* List of s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions 
   (const char* name, const s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions (
   const char* name, 
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions_element* 
   asn1Get_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pSrcValue, 
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions (
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeItemResumeReq                          */
/*                                                            */
/**************************************************************/
/*
E-RABFailedToResumeItemResumeReq ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   cause [1] EXPLICIT Cause,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABFailedToResumeItemResumeReq-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABFailedToResumeItemResumeReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABFailedToResumeItemResumeReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABFailedToResumeItemResumeReq {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_Cause cause;
   s1ap_E_RABFailedToResumeItemResumeReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABFailedToResumeItemResumeReq;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeItemResumeReq (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeItemResumeReq (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeItemResumeReq 
   (const char* name, const s1ap_E_RABFailedToResumeItemResumeReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeItemResumeReq (const char* name, 
   s1ap_E_RABFailedToResumeItemResumeReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeItemResumeReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeItemResumeReq* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeItemResumeReq (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeItemResumeReq* pSrcValue, 
   s1ap_E_RABFailedToResumeItemResumeReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeItemResumeReq (
   s1ap_E_RABFailedToResumeItemResumeReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeItemResumeReq (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeItemResumeReq* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeListResumeReq_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToResumeListResumeReq'
*/
typedef struct EXTERN s1ap_E_RABFailedToResumeListResumeReq_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABFailedToResumeItemResumeReqIEs_TVALUE t;

      /**
       * E-RABFailedToResumeItemResumeReqIEs information objects
       */
      union {
         /**
          * id: id-E-RABFailedToResumeItemResumeReq
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABFailedToResumeItemResumeReq *_E_RABFailedToResumeItemResumeReqIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABFailedToResumeListResumeReq_element;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeListResumeReq_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeReq_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeListResumeReq_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeReq_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeListResumeReq_element 
   (const char* name, const s1ap_E_RABFailedToResumeListResumeReq_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeListResumeReq_element (
   const char* name, s1ap_E_RABFailedToResumeListResumeReq_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeListResumeReq_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeListResumeReq_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeListResumeReq_element (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeListResumeReq_element* pSrcValue, 
   s1ap_E_RABFailedToResumeListResumeReq_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeListResumeReq_element (
   s1ap_E_RABFailedToResumeListResumeReq_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeListResumeReq_element (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeListResumeReq_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeListResumeReq                          */
/*                                                            */
/**************************************************************/
/*
E-RABFailedToResumeListResumeReq ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABFailedToResumeItemResumeReqIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABFailedToResumeItemResumeReqIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABFailedToResumeItemResumeReqIEs}{@id})
}
*/
/* List of s1ap_E_RABFailedToResumeListResumeReq_element */
typedef OSRTDList s1ap_E_RABFailedToResumeListResumeReq;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeListResumeReq (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeReq* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeListResumeReq (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeReq* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeListResumeReq 
   (const char* name, const s1ap_E_RABFailedToResumeListResumeReq* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeListResumeReq (const char* name, 
   s1ap_E_RABFailedToResumeListResumeReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeListResumeReq (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeListResumeReq* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABFailedToResumeListResumeReq_element* 
   asn1Get_s1ap_E_RABFailedToResumeListResumeReq (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABFailedToResumeListResumeReq* plist);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeListResumeReq (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeListResumeReq* pSrcValue, 
   s1ap_E_RABFailedToResumeListResumeReq* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeListResumeReq (
   s1ap_E_RABFailedToResumeListResumeReq* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeListResumeReq (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeListResumeReq* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeRequest_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextResumeRequest'
*/
typedef struct EXTERN s1ap_UEContextResumeRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextResumeRequestIEs_TVALUE t;

      /**
       * UEContextResumeRequestIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextResumeRequestIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextResumeRequestIEs_2;
         /**
          * id: id-E-RABFailedToResumeListResumeReq
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_E_RABFailedToResumeListResumeReq *_UEContextResumeRequestIEs_3;
         /**
          * id: id-RRC-Resume-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_RRC_Establishment_Cause _UEContextResumeRequestIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextResumeRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextResumeRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeRequest_protocolIEs_element 
   (const char* name, const s1ap_UEContextResumeRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeRequest_protocolIEs_element (
   const char* name, s1ap_UEContextResumeRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeRequest_protocolIEs_element_UEContextResumeRequestIEs_1
   (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextResumeRequest_protocolIEs_element_UEContextResumeRequestIEs_2
   (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextResumeRequest_protocolIEs_element_UEContextResumeRequestIEs_3
   (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs_element* pElem, 
   s1ap_E_RABFailedToResumeListResumeReq *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeRequest_protocolIEs_element_UEContextResumeRequestIEs_4
   (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs_element* pElem, 
   s1ap_RRC_Establishment_Cause value);

EXTERN void asn1Copy_s1ap_UEContextResumeRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextResumeRequest_protocolIEs_element* pSrcValue, 
   s1ap_UEContextResumeRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeRequest_protocolIEs_element (
   s1ap_UEContextResumeRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextResumeRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeRequest_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextResumeRequest'
*/
/* List of s1ap_UEContextResumeRequest_protocolIEs_element */
typedef OSRTDList s1ap_UEContextResumeRequest_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextResumeRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeRequest_protocolIEs 
   (const char* name, const s1ap_UEContextResumeRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeRequest_protocolIEs (const char* name, 
   s1ap_UEContextResumeRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextResumeRequest_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextResumeRequest_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABFailedToResumeListResumeReq to list */
EXTERN int asn1Append_s1ap_UEContextResumeRequest_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs* plist, 
   s1ap_E_RABFailedToResumeListResumeReq *pvalue);

/* Append IE with value type s1ap_RRC_Establishment_Cause to list */
EXTERN int asn1Append_s1ap_UEContextResumeRequest_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextResumeRequest_protocolIEs* plist, 
   s1ap_RRC_Establishment_Cause value);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextResumeRequest_protocolIEs_element* 
   asn1Get_s1ap_UEContextResumeRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextResumeRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextResumeRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextResumeRequest_protocolIEs* pSrcValue, 
   s1ap_UEContextResumeRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeRequest_protocolIEs (
   s1ap_UEContextResumeRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextResumeRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeRequest                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE CONTEXT RESUME ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 UE Context Resume Request

 **************************************************************
UEContextResumeRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextResumeRequestIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextResumeRequestIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextResumeRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextResumeRequest {
   s1ap_UEContextResumeRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextResumeRequest;

EXTERN int asn1PE_s1ap_UEContextResumeRequest (OSCTXT* pctxt, s1ap_UEContextResumeRequest* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeRequest (OSCTXT* pctxt, s1ap_UEContextResumeRequest* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeRequest 
   (const char* name, const s1ap_UEContextResumeRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeRequest (const char* name, 
   s1ap_UEContextResumeRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeRequest* pvalue);

EXTERN void asn1Copy_s1ap_UEContextResumeRequest (OSCTXT* pctxt, 
   const s1ap_UEContextResumeRequest* pSrcValue, s1ap_UEContextResumeRequest*
    pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeRequest (s1ap_UEContextResumeRequest* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeRequest (OSCTXT *pctxt, 
   s1ap_UEContextResumeRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverNotify_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverNotify'
*/
typedef struct EXTERN s1ap_HandoverNotify_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverNotifyIEs_TVALUE t;

      /**
       * HandoverNotifyIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverNotifyIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _HandoverNotifyIEs_2;
         /**
          * id: id-EUTRAN-CGI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_EUTRAN_CGI *_HandoverNotifyIEs_3;
         /**
          * id: id-TAI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TAI *_HandoverNotifyIEs_4;
         /**
          * id: id-Tunnel-Information-for-BBF
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TunnelInformation *_HandoverNotifyIEs_5;
         /**
          * id: id-LHN-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_LHN_ID *_HandoverNotifyIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverNotify_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverNotify_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverNotify_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverNotify_protocolIEs_element 
   (const char* name, const s1ap_HandoverNotify_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverNotify_protocolIEs_element (const char* name, 
   s1ap_HandoverNotify_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverNotify_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverNotify_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_1
   (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_2
   (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_3
   (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pElem, 
   s1ap_EUTRAN_CGI *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_4
   (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pElem, s1ap_TAI 
   *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_5
   (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pElem, 
   s1ap_TunnelInformation *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_6
   (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs_element* pElem, s1ap_LHN_ID 
   *pvalue);

EXTERN void asn1Copy_s1ap_HandoverNotify_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverNotify_protocolIEs_element* pSrcValue, 
   s1ap_HandoverNotify_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverNotify_protocolIEs_element (
   s1ap_HandoverNotify_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverNotify_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverNotify_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverNotify_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverNotify'
*/
/* List of s1ap_HandoverNotify_protocolIEs_element */
typedef OSRTDList s1ap_HandoverNotify_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverNotify_protocolIEs (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverNotify_protocolIEs (OSCTXT* pctxt, s1ap_HandoverNotify_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverNotify_protocolIEs 
   (const char* name, const s1ap_HandoverNotify_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverNotify_protocolIEs (const char* name, 
   s1ap_HandoverNotify_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverNotify_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverNotify_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverNotify_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_HandoverNotify_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverNotify_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_HandoverNotify_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_EUTRAN_CGI to list */
struct s1ap_EUTRAN_CGI ;
EXTERN int asn1Append_s1ap_HandoverNotify_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_HandoverNotify_protocolIEs* plist, struct s1ap_EUTRAN_CGI *pvalue);

/* Append IE with value type s1ap_TAI to list */
struct s1ap_TAI ;
EXTERN int asn1Append_s1ap_HandoverNotify_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_HandoverNotify_protocolIEs* plist, struct s1ap_TAI *pvalue);

/* Append IE with value type s1ap_TunnelInformation to list */
struct s1ap_TunnelInformation ;
EXTERN int asn1Append_s1ap_HandoverNotify_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_HandoverNotify_protocolIEs* plist, struct s1ap_TunnelInformation 
   *pvalue);

/* Append IE with value type s1ap_LHN_ID to list */
struct s1ap_LHN_ID ;
EXTERN int asn1Append_s1ap_HandoverNotify_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_HandoverNotify_protocolIEs* plist, struct s1ap_LHN_ID *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverNotify_protocolIEs_element* 
   asn1Get_s1ap_HandoverNotify_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverNotify_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverNotify_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverNotify_protocolIEs* pSrcValue, 
   s1ap_HandoverNotify_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverNotify_protocolIEs (
   s1ap_HandoverNotify_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverNotify_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverNotify_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverNotify                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 HANDOVER NOTIFICATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Handover Notify

 **************************************************************
HandoverNotify ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverNotifyIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverNotifyIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverNotifyIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverNotify {
   s1ap_HandoverNotify_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverNotify;

EXTERN int asn1PE_s1ap_HandoverNotify (OSCTXT* pctxt, s1ap_HandoverNotify* pvalue);

EXTERN int asn1PD_s1ap_HandoverNotify (OSCTXT* pctxt, s1ap_HandoverNotify* pvalue);

EXTERN void asn1Print_s1ap_HandoverNotify 
   (const char* name, const s1ap_HandoverNotify* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverNotify (const char* name, 
   s1ap_HandoverNotify* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverNotify (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverNotify* pvalue);

EXTERN void asn1Copy_s1ap_HandoverNotify (OSCTXT* pctxt, 
   const s1ap_HandoverNotify* pSrcValue, s1ap_HandoverNotify* pDstValue);

EXTERN int asn1Init_s1ap_HandoverNotify (s1ap_HandoverNotify* pvalue);

EXTERN void asn1Free_s1ap_HandoverNotify (OSCTXT *pctxt, s1ap_HandoverNotify* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseIndication_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseIndication'
*/
typedef struct EXTERN s1ap_E_RABReleaseIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABReleaseIndicationIEs_TVALUE t;

      /**
       * E-RABReleaseIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABReleaseIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABReleaseIndicationIEs_2;
         /**
          * id: id-E-RABReleasedList
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABList *_E_RABReleaseIndicationIEs_3;
         /**
          * id: id-UserLocationInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UserLocationInformation *_E_RABReleaseIndicationIEs_4;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageReportList *_E_RABReleaseIndicationIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABReleaseIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABReleaseIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseIndication_protocolIEs_element 
   (const char* name, const s1ap_E_RABReleaseIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseIndication_protocolIEs_element (
   const char* name, s1ap_E_RABReleaseIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseIndication_protocolIEs_element_E_RABReleaseIndicationIEs_1
   (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABReleaseIndication_protocolIEs_element_E_RABReleaseIndicationIEs_2
   (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABReleaseIndication_protocolIEs_element_E_RABReleaseIndicationIEs_3
   (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseIndication_protocolIEs_element_E_RABReleaseIndicationIEs_4
   (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs_element* pElem, 
   s1ap_UserLocationInformation *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseIndication_protocolIEs_element_E_RABReleaseIndicationIEs_5
   (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs_element* pElem, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseIndication_protocolIEs_element* pSrcValue, 
   s1ap_E_RABReleaseIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseIndication_protocolIEs_element (
   s1ap_E_RABReleaseIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABReleaseIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseIndication_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseIndication'
*/
/* List of s1ap_E_RABReleaseIndication_protocolIEs_element */
typedef OSRTDList s1ap_E_RABReleaseIndication_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABReleaseIndication_protocolIEs (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseIndication_protocolIEs (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseIndication_protocolIEs 
   (const char* name, const s1ap_E_RABReleaseIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseIndication_protocolIEs (const char* name, 
   s1ap_E_RABReleaseIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABReleaseIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABReleaseIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_E_RABReleaseIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs* plist, 
   s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_UserLocationInformation to list */
struct s1ap_UserLocationInformation ;
EXTERN int asn1Append_s1ap_E_RABReleaseIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs* plist, struct 
   s1ap_UserLocationInformation *pvalue);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_E_RABReleaseIndication_protocolIEs_5
      (OSCTXT* pctxt, s1ap_E_RABReleaseIndication_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABReleaseIndication_protocolIEs_element* 
   asn1Get_s1ap_E_RABReleaseIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABReleaseIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABReleaseIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseIndication_protocolIEs* pSrcValue, 
   s1ap_E_RABReleaseIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseIndication_protocolIEs (
   s1ap_E_RABReleaseIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABReleaseIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseIndication                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB RELEASE INDICATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 E-RAB Release Indication

 **************************************************************
E-RABReleaseIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABReleaseIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABReleaseIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABReleaseIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABReleaseIndication {
   s1ap_E_RABReleaseIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABReleaseIndication;

EXTERN int asn1PE_s1ap_E_RABReleaseIndication (OSCTXT* pctxt, s1ap_E_RABReleaseIndication* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseIndication (OSCTXT* pctxt, s1ap_E_RABReleaseIndication* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseIndication 
   (const char* name, const s1ap_E_RABReleaseIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseIndication (const char* name, 
   s1ap_E_RABReleaseIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseIndication* pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseIndication (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseIndication* pSrcValue, s1ap_E_RABReleaseIndication*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseIndication (s1ap_E_RABReleaseIndication* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseIndication (OSCTXT *pctxt, 
   s1ap_E_RABReleaseIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIItem_iE_Extensions_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIItem'
*/
typedef struct EXTERN s1ap_TAIItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_TAIItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_TAIItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_TAIItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_TAIItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_TAIItem_iE_Extensions_element 
   (const char* name, const s1ap_TAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIItem_iE_Extensions_element (const char* name, 
   s1ap_TAIItem_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_TAIItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_TAIItem_iE_Extensions_element* pSrcValue, 
   s1ap_TAIItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_TAIItem_iE_Extensions_element (
   s1ap_TAIItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_TAIItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_TAIItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIItem_iE_Extensions                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIItem'
*/
/* List of s1ap_TAIItem_iE_Extensions_element */
typedef OSRTDList s1ap_TAIItem_iE_Extensions;

EXTERN int asn1PE_s1ap_TAIItem_iE_Extensions (OSCTXT* pctxt, s1ap_TAIItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_TAIItem_iE_Extensions (OSCTXT* pctxt, s1ap_TAIItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_TAIItem_iE_Extensions 
   (const char* name, const s1ap_TAIItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIItem_iE_Extensions (const char* name, 
   s1ap_TAIItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TAIItem_iE_Extensions_element* 
   asn1Get_s1ap_TAIItem_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_TAIItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_TAIItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_TAIItem_iE_Extensions* pSrcValue, s1ap_TAIItem_iE_Extensions*
    pDstValue);

EXTERN int asn1Init_s1ap_TAIItem_iE_Extensions (s1ap_TAIItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_TAIItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_TAIItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIItem                                                   */
/*                                                            */
/**************************************************************/
/*
TAIItem ::= SEQUENCE {
   tAI [0] TAI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({TAIItemExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({TAIItemExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({TAIItemExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TAIItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_TAI tAI;
   s1ap_TAIItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_TAIItem;

EXTERN int asn1PE_s1ap_TAIItem (OSCTXT* pctxt, s1ap_TAIItem* pvalue);

EXTERN int asn1PD_s1ap_TAIItem (OSCTXT* pctxt, s1ap_TAIItem* pvalue);

EXTERN void asn1Print_s1ap_TAIItem (const char* name, const s1ap_TAIItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIItem (const char* name, s1ap_TAIItem* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIItem (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIItem* pvalue);

EXTERN void asn1Copy_s1ap_TAIItem (OSCTXT* pctxt, const s1ap_TAIItem* pSrcValue, 
   s1ap_TAIItem* pDstValue);

EXTERN int asn1Init_s1ap_TAIItem (s1ap_TAIItem* pvalue);

EXTERN void asn1Free_s1ap_TAIItem (OSCTXT *pctxt, s1ap_TAIItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIList_element                                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIList'
*/
typedef struct EXTERN s1ap_TAIList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      TAIItemIEs_TVALUE t;

      /**
       * TAIItemIEs information objects
       */
      union {
         /**
          * id: id-TAIItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TAIItem *_TAIItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_TAIList_element;

EXTERN int asn1PE_s1ap_TAIList_element (OSCTXT* pctxt, s1ap_TAIList_element* pvalue);

EXTERN int asn1PD_s1ap_TAIList_element (OSCTXT* pctxt, s1ap_TAIList_element* pvalue);

EXTERN void asn1Print_s1ap_TAIList_element 
   (const char* name, const s1ap_TAIList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIList_element (const char* name, 
   s1ap_TAIList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIList_element* pvalue);

EXTERN void asn1Copy_s1ap_TAIList_element (OSCTXT* pctxt, 
   const s1ap_TAIList_element* pSrcValue, s1ap_TAIList_element* pDstValue);

EXTERN int asn1Init_s1ap_TAIList_element (s1ap_TAIList_element* pvalue);

EXTERN void asn1Free_s1ap_TAIList_element (OSCTXT *pctxt, 
   s1ap_TAIList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIList                                                   */
/*                                                            */
/**************************************************************/
/*
TAIList ::= SEQUENCE (SIZE (1..maxnoofTAIs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({TAIItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({TAIItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({TAIItemIEs}{@id})
}
*/
/* List of s1ap_TAIList_element */
typedef OSRTDList s1ap_TAIList;

EXTERN int asn1PE_s1ap_TAIList (OSCTXT* pctxt, s1ap_TAIList* pvalue);

EXTERN int asn1PD_s1ap_TAIList (OSCTXT* pctxt, s1ap_TAIList* pvalue);

EXTERN void asn1Print_s1ap_TAIList (const char* name, const s1ap_TAIList* pvalue);

EXTERN int asn1PrtToStr_s1ap_TAIList (const char* name, s1ap_TAIList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TAIList (OSCTXT *pctxt, 
   const char* name, const s1ap_TAIList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TAIList_element* asn1Get_s1ap_TAIList 
   (s1ap_ProtocolIE_ID id, s1ap_TAIList* plist);

EXTERN void asn1Copy_s1ap_TAIList (OSCTXT* pctxt, const s1ap_TAIList* pSrcValue, 
   s1ap_TAIList* pDstValue);

EXTERN int asn1Init_s1ap_TAIList (s1ap_TAIList* pvalue);

EXTERN void asn1Free_s1ap_TAIList (OSCTXT *pctxt, s1ap_TAIList* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_protocolIEs_element                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Paging'
*/
typedef struct EXTERN s1ap_Paging_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      PagingIEs_TVALUE t;

      /**
       * PagingIEs information objects
       */
      union {
         /**
          * id: id-UEIdentityIndexValue
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_UEIdentityIndexValue *_PagingIEs_1;
         /**
          * id: id-UEPagingID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_UEPagingID *_PagingIEs_2;
         /**
          * id: id-pagingDRX
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PagingDRX _PagingIEs_3;
         /**
          * id: id-CNDomain
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_CNDomain _PagingIEs_4;
         /**
          * id: id-TAIList
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TAIList *_PagingIEs_5;
         /**
          * id: id-CSG-IdList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSG_IdList *_PagingIEs_6;
         /**
          * id: id-PagingPriority
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PagingPriority _PagingIEs_7;
         /**
          * id: id-UERadioCapabilityForPaging
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UERadioCapabilityForPaging *_PagingIEs_8;
         /**
          * id: id-AssistanceDataForPaging
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_AssistanceDataForPaging *_PagingIEs_9;
         /**
          * id: id-Paging-eDRXInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Paging_eDRXInformation *_PagingIEs_10;
         /**
          * id: id-extended-UEIdentityIndexValue
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Extended_UEIdentityIndexValue *_PagingIEs_11;
         /**
          * id: id-NB-IoT-Paging-eDRXInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NB_IoT_Paging_eDRXInformation *_PagingIEs_12;
         /**
          * id: id-NB-IoT-UEIdentityIndexValue
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NB_IoT_UEIdentityIndexValue *_PagingIEs_13;
         /**
          * id: id-EnhancedCoverageRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EnhancedCoverageRestricted _PagingIEs_14;
         /**
          * id: id-CE-ModeBRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_ModeBRestricted _PagingIEs_15;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_Paging_protocolIEs_element;

EXTERN int asn1PE_s1ap_Paging_protocolIEs_element (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_Paging_protocolIEs_element (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_Paging_protocolIEs_element 
   (const char* name, const s1ap_Paging_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_Paging_protocolIEs_element (const char* name, 
   s1ap_Paging_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Paging_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_Paging_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_1
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_UEIdentityIndexValue *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_2
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, s1ap_UEPagingID 
   *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_3
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, s1ap_PagingDRX value
   );

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_4
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, s1ap_CNDomain value)
   ;

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_5
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, s1ap_TAIList *pvalue
   );

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_6
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, s1ap_CSG_IdList 
   *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_7
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, s1ap_PagingPriority 
   value);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_8
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_UERadioCapabilityForPaging *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_9
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_AssistanceDataForPaging *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_10
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_Paging_eDRXInformation *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_11
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_Extended_UEIdentityIndexValue *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_12
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_NB_IoT_Paging_eDRXInformation *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_13
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_NB_IoT_UEIdentityIndexValue *pvalue);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_14
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_EnhancedCoverageRestricted value);

EXTERN void asn1SetTC_s1ap_Paging_protocolIEs_element_PagingIEs_15
   (OSCTXT* pctxt, s1ap_Paging_protocolIEs_element* pElem, 
   s1ap_CE_ModeBRestricted value);

EXTERN void asn1Copy_s1ap_Paging_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_Paging_protocolIEs_element* pSrcValue, 
   s1ap_Paging_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_Paging_protocolIEs_element (
   s1ap_Paging_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_Paging_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_Paging_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_protocolIEs                                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Paging'
*/
/* List of s1ap_Paging_protocolIEs_element */
typedef OSRTDList s1ap_Paging_protocolIEs;

EXTERN int asn1PE_s1ap_Paging_protocolIEs (OSCTXT* pctxt, s1ap_Paging_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_Paging_protocolIEs (OSCTXT* pctxt, s1ap_Paging_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_Paging_protocolIEs 
   (const char* name, const s1ap_Paging_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_Paging_protocolIEs (const char* name, 
   s1ap_Paging_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Paging_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_Paging_protocolIEs* pvalue);

/* Append IE with value type s1ap_UEIdentityIndexValue to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_UEIdentityIndexValue *pvalue);

/* Append IE with value type s1ap_UEPagingID to list */
struct s1ap_UEPagingID ;
EXTERN int asn1Append_s1ap_Paging_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, struct s1ap_UEPagingID *pvalue);

/* Append IE with value type s1ap_PagingDRX to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_PagingDRX value);

/* Append IE with value type s1ap_CNDomain to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_CNDomain value);

/* Append IE with value type s1ap_TAIList to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_TAIList *pvalue);

/* Append IE with value type s1ap_CSG_IdList to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_CSG_IdList *pvalue);

/* Append IE with value type s1ap_PagingPriority to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_PagingPriority value);

/* Append IE with value type s1ap_UERadioCapabilityForPaging to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_UERadioCapabilityForPaging *pvalue);

/* Append IE with value type s1ap_AssistanceDataForPaging to list */
struct s1ap_AssistanceDataForPaging ;
EXTERN int asn1Append_s1ap_Paging_protocolIEs_9   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, struct s1ap_AssistanceDataForPaging *pvalue)
   ;

/* Append IE with value type s1ap_Paging_eDRXInformation to list */
struct s1ap_Paging_eDRXInformation ;
EXTERN int asn1Append_s1ap_Paging_protocolIEs_10   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, struct s1ap_Paging_eDRXInformation *pvalue)
   ;

/* Append IE with value type s1ap_Extended_UEIdentityIndexValue to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_11   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_Extended_UEIdentityIndexValue *pvalue)
   ;

/* Append IE with value type s1ap_NB_IoT_Paging_eDRXInformation to list */
struct s1ap_NB_IoT_Paging_eDRXInformation ;
EXTERN int asn1Append_s1ap_Paging_protocolIEs_12   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, struct s1ap_NB_IoT_Paging_eDRXInformation 
   *pvalue);

/* Append IE with value type s1ap_NB_IoT_UEIdentityIndexValue to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_13   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_NB_IoT_UEIdentityIndexValue *pvalue);

/* Append IE with value type s1ap_EnhancedCoverageRestricted to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_14   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_EnhancedCoverageRestricted value);

/* Append IE with value type s1ap_CE_ModeBRestricted to list */
EXTERN int asn1Append_s1ap_Paging_protocolIEs_15   (OSCTXT* pctxt, 
   s1ap_Paging_protocolIEs* plist, s1ap_CE_ModeBRestricted value);

/* Get IE using id key value */
EXTERN struct s1ap_Paging_protocolIEs_element* asn1Get_s1ap_Paging_protocolIEs 
   (s1ap_ProtocolIE_ID id, s1ap_Paging_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_Paging_protocolIEs (OSCTXT* pctxt, 
   const s1ap_Paging_protocolIEs* pSrcValue, s1ap_Paging_protocolIEs*
    pDstValue);

EXTERN int asn1Init_s1ap_Paging_protocolIEs (s1ap_Paging_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_Paging_protocolIEs (OSCTXT *pctxt, 
   s1ap_Paging_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging                                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 PAGING ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Paging

 **************************************************************
Paging ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({PagingIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({PagingIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({PagingIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_Paging {
   s1ap_Paging_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_Paging;

EXTERN int asn1PE_s1ap_Paging (OSCTXT* pctxt, s1ap_Paging* pvalue);

EXTERN int asn1PD_s1ap_Paging (OSCTXT* pctxt, s1ap_Paging* pvalue);

EXTERN void asn1Print_s1ap_Paging (const char* name, const s1ap_Paging* pvalue);

EXTERN int asn1PrtToStr_s1ap_Paging (const char* name, s1ap_Paging* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Paging (OSCTXT *pctxt, 
   const char* name, const s1ap_Paging* pvalue);

EXTERN void asn1Copy_s1ap_Paging (OSCTXT* pctxt, const s1ap_Paging* pSrcValue, 
   s1ap_Paging* pDstValue);

EXTERN int asn1Init_s1ap_Paging (s1ap_Paging* pvalue);

EXTERN void asn1Free_s1ap_Paging (OSCTXT *pctxt, s1ap_Paging* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNASTransport_protocolIEs_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNASTransport'
*/
typedef struct EXTERN s1ap_DownlinkNASTransport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      DownlinkNASTransport_IEs_TVALUE t;

      /**
       * DownlinkNASTransport-IEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _DownlinkNASTransport_IEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _DownlinkNASTransport_IEs_2;
         /**
          * id: id-NAS-PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_NAS_PDU *_DownlinkNASTransport_IEs_3;
         /**
          * id: id-HandoverRestrictionList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_HandoverRestrictionList *_DownlinkNASTransport_IEs_4;
         /**
          * id: id-SubscriberProfileIDforRFP
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SubscriberProfileIDforRFP _DownlinkNASTransport_IEs_5;
         /**
          * id: id-SRVCCOperationPossible
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SRVCCOperationPossible _DownlinkNASTransport_IEs_6;
         /**
          * id: id-UERadioCapability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UERadioCapability *_DownlinkNASTransport_IEs_7;
         /**
          * id: id-DLNASPDUDeliveryAckRequest
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_DLNASPDUDeliveryAckRequest _DownlinkNASTransport_IEs_8;
         /**
          * id: id-EnhancedCoverageRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EnhancedCoverageRestricted _DownlinkNASTransport_IEs_9;
         /**
          * id: id-NRUESecurityCapabilities
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRUESecurityCapabilities *_DownlinkNASTransport_IEs_10;
         /**
          * id: id-CE-ModeBRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_ModeBRestricted _DownlinkNASTransport_IEs_11;
         /**
          * id: id-UECapabilityInfoRequest
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UECapabilityInfoRequest _DownlinkNASTransport_IEs_12;
         /**
          * id: id-EndIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EndIndication _DownlinkNASTransport_IEs_13;
         /**
          * id: id-PendingDataIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PendingDataIndication _DownlinkNASTransport_IEs_14;
         /**
          * id: id-Subscription-Based-UE-DifferentiationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Subscription_Based_UE_DifferentiationInfo *_DownlinkNASTransport_IEs_15;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_DownlinkNASTransport_protocolIEs_element;

EXTERN int asn1PE_s1ap_DownlinkNASTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_DownlinkNASTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_DownlinkNASTransport_protocolIEs_element 
   (const char* name, const s1ap_DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkNASTransport_protocolIEs_element (
   const char* name, s1ap_DownlinkNASTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkNASTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_1
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_2
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_3
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_NAS_PDU *pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_4
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_HandoverRestrictionList *pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_5
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_SubscriberProfileIDforRFP value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_6
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_SRVCCOperationPossible value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_7
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_UERadioCapability *pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_8
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_DLNASPDUDeliveryAckRequest value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_9
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_EnhancedCoverageRestricted value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_10
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_NRUESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_11
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_CE_ModeBRestricted value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_12
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_UECapabilityInfoRequest value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_13
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_EndIndication value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_14
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_PendingDataIndication value);

EXTERN void asn1SetTC_s1ap_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_15
   (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs_element* pElem, 
   s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

EXTERN void asn1Copy_s1ap_DownlinkNASTransport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_DownlinkNASTransport_protocolIEs_element* pSrcValue, 
   s1ap_DownlinkNASTransport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkNASTransport_protocolIEs_element (
   s1ap_DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_DownlinkNASTransport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_DownlinkNASTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNASTransport_protocolIEs                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNASTransport'
*/
/* List of s1ap_DownlinkNASTransport_protocolIEs_element */
typedef OSRTDList s1ap_DownlinkNASTransport_protocolIEs;

EXTERN int asn1PE_s1ap_DownlinkNASTransport_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_DownlinkNASTransport_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_DownlinkNASTransport_protocolIEs 
   (const char* name, const s1ap_DownlinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkNASTransport_protocolIEs (const char* name, 
   s1ap_DownlinkNASTransport_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkNASTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkNASTransport_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_1
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_2
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_NAS_PDU to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_3
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_NAS_PDU *pvalue);

/* Append IE with value type s1ap_HandoverRestrictionList to list */
struct s1ap_HandoverRestrictionList ;
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_4
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, struct 
   s1ap_HandoverRestrictionList *pvalue);

/* Append IE with value type s1ap_SubscriberProfileIDforRFP to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_5
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_SubscriberProfileIDforRFP value);

/* Append IE with value type s1ap_SRVCCOperationPossible to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_6
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_SRVCCOperationPossible value);

/* Append IE with value type s1ap_UERadioCapability to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_7
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_UERadioCapability *pvalue);

/* Append IE with value type s1ap_DLNASPDUDeliveryAckRequest to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_8
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_DLNASPDUDeliveryAckRequest value);

/* Append IE with value type s1ap_EnhancedCoverageRestricted to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_9
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_EnhancedCoverageRestricted value);

/* Append IE with value type s1ap_NRUESecurityCapabilities to list */
struct s1ap_NRUESecurityCapabilities ;
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_10
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, struct 
   s1ap_NRUESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_CE_ModeBRestricted to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_11
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_CE_ModeBRestricted value);

/* Append IE with value type s1ap_UECapabilityInfoRequest to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_12
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_UECapabilityInfoRequest value);

/* Append IE with value type s1ap_EndIndication to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_13
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_EndIndication value);

/* Append IE with value type s1ap_PendingDataIndication to list */
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_14
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, 
   s1ap_PendingDataIndication value);

/* Append IE with value type s1ap_Subscription_Based_UE_DifferentiationInfo to list */
struct s1ap_Subscription_Based_UE_DifferentiationInfo ;
EXTERN int asn1Append_s1ap_DownlinkNASTransport_protocolIEs_15
      (OSCTXT* pctxt, s1ap_DownlinkNASTransport_protocolIEs* plist, struct 
   s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_DownlinkNASTransport_protocolIEs_element* 
   asn1Get_s1ap_DownlinkNASTransport_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_DownlinkNASTransport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_DownlinkNASTransport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_DownlinkNASTransport_protocolIEs* pSrcValue, 
   s1ap_DownlinkNASTransport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkNASTransport_protocolIEs (
   s1ap_DownlinkNASTransport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_DownlinkNASTransport_protocolIEs (OSCTXT *pctxt, 
   s1ap_DownlinkNASTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNASTransport                                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 NAS TRANSPORT ELEMENTARY PROCEDURES

 **************************************************************
 **************************************************************

 DOWNLINK NAS TRANSPORT

 **************************************************************
DownlinkNASTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({DownlinkNASTransport-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({DownlinkNASTransport-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({DownlinkNASTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_DownlinkNASTransport {
   s1ap_DownlinkNASTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_DownlinkNASTransport;

EXTERN int asn1PE_s1ap_DownlinkNASTransport (OSCTXT* pctxt, s1ap_DownlinkNASTransport* pvalue);

EXTERN int asn1PD_s1ap_DownlinkNASTransport (OSCTXT* pctxt, s1ap_DownlinkNASTransport* pvalue);

EXTERN void asn1Print_s1ap_DownlinkNASTransport 
   (const char* name, const s1ap_DownlinkNASTransport* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkNASTransport (const char* name, 
   s1ap_DownlinkNASTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkNASTransport (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkNASTransport* pvalue);

EXTERN void asn1Copy_s1ap_DownlinkNASTransport (OSCTXT* pctxt, 
   const s1ap_DownlinkNASTransport* pSrcValue, s1ap_DownlinkNASTransport*
    pDstValue);

EXTERN int asn1Init_s1ap_DownlinkNASTransport (s1ap_DownlinkNASTransport* pvalue);

EXTERN void asn1Free_s1ap_DownlinkNASTransport (OSCTXT *pctxt, 
   s1ap_DownlinkNASTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialUEMessage_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialUEMessage'
*/
typedef struct EXTERN s1ap_InitialUEMessage_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      InitialUEMessage_IEs_TVALUE t;

      /**
       * InitialUEMessage-IEs information objects
       */
      union {
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _InitialUEMessage_IEs_1;
         /**
          * id: id-NAS-PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_NAS_PDU *_InitialUEMessage_IEs_2;
         /**
          * id: id-TAI
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_TAI *_InitialUEMessage_IEs_3;
         /**
          * id: id-EUTRAN-CGI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_EUTRAN_CGI *_InitialUEMessage_IEs_4;
         /**
          * id: id-RRC-Establishment-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_RRC_Establishment_Cause _InitialUEMessage_IEs_5;
         /**
          * id: id-S-TMSI
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_S_TMSI *_InitialUEMessage_IEs_6;
         /**
          * id: id-CSG-Id
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CSG_Id *_InitialUEMessage_IEs_7;
         /**
          * id: id-GUMMEI-ID
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_GUMMEI *_InitialUEMessage_IEs_8;
         /**
          * id: id-CellAccessMode
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_CellAccessMode _InitialUEMessage_IEs_9;
         /**
          * id: id-GW-TransportLayerAddress
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TransportLayerAddress *_InitialUEMessage_IEs_10;
         /**
          * id: id-RelayNode-Indicator
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_RelayNode_Indicator _InitialUEMessage_IEs_11;
         /**
          * id: id-GUMMEIType
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_GUMMEIType _InitialUEMessage_IEs_12;
         /**
          * id: id-Tunnel-Information-for-BBF
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TunnelInformation *_InitialUEMessage_IEs_13;
         /**
          * id: id-SIPTO-L-GW-TransportLayerAddress
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TransportLayerAddress *_InitialUEMessage_IEs_14;
         /**
          * id: id-LHN-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_LHN_ID *_InitialUEMessage_IEs_15;
         /**
          * id: id-MME-Group-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MME_Group_ID *_InitialUEMessage_IEs_16;
         /**
          * id: id-UE-Usage-Type
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_Usage_Type _InitialUEMessage_IEs_17;
         /**
          * id: id-CE-mode-B-SupportIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_mode_B_SupportIndicator _InitialUEMessage_IEs_18;
         /**
          * id: id-DCN-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_DCN_ID _InitialUEMessage_IEs_19;
         /**
          * id: id-Coverage-Level
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Coverage_Level _InitialUEMessage_IEs_20;
         /**
          * id: id-UE-Application-Layer-Measurement-Capability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_Application_Layer_Measurement_Capability *_InitialUEMessage_IEs_21;
         /**
          * id: id-EDT-Session
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EDT_Session _InitialUEMessage_IEs_22;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_InitialUEMessage_protocolIEs_element;

EXTERN int asn1PE_s1ap_InitialUEMessage_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_InitialUEMessage_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_InitialUEMessage_protocolIEs_element 
   (const char* name, const s1ap_InitialUEMessage_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialUEMessage_protocolIEs_element (const char* name, 
   s1ap_InitialUEMessage_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialUEMessage_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialUEMessage_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_1
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_2
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_NAS_PDU *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_3
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, s1ap_TAI 
   *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_4
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_EUTRAN_CGI *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_5
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_RRC_Establishment_Cause value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_6
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_S_TMSI *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_7
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_CSG_Id *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_8
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_GUMMEI *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_9
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_CellAccessMode value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_10
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_TransportLayerAddress *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_11
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_RelayNode_Indicator value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_12
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_GUMMEIType value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_13
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_TunnelInformation *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_14
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_TransportLayerAddress *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_15
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_LHN_ID *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_16
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_MME_Group_ID *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_17
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_UE_Usage_Type value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_18
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_CE_mode_B_SupportIndicator value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_19
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_DCN_ID value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_20
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_Coverage_Level value);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_21
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_UE_Application_Layer_Measurement_Capability *pvalue);

EXTERN void asn1SetTC_s1ap_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_22
   (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs_element* pElem, 
   s1ap_EDT_Session value);

EXTERN void asn1Copy_s1ap_InitialUEMessage_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_InitialUEMessage_protocolIEs_element* pSrcValue, 
   s1ap_InitialUEMessage_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_InitialUEMessage_protocolIEs_element (
   s1ap_InitialUEMessage_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_InitialUEMessage_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_InitialUEMessage_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialUEMessage_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialUEMessage'
*/
/* List of s1ap_InitialUEMessage_protocolIEs_element */
typedef OSRTDList s1ap_InitialUEMessage_protocolIEs;

EXTERN int asn1PE_s1ap_InitialUEMessage_protocolIEs (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_InitialUEMessage_protocolIEs (OSCTXT* pctxt, s1ap_InitialUEMessage_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_InitialUEMessage_protocolIEs 
   (const char* name, const s1ap_InitialUEMessage_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialUEMessage_protocolIEs (const char* name, 
   s1ap_InitialUEMessage_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialUEMessage_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialUEMessage_protocolIEs* pvalue);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_NAS_PDU to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_NAS_PDU *pvalue);

/* Append IE with value type s1ap_TAI to list */
struct s1ap_TAI ;
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, struct s1ap_TAI *pvalue);

/* Append IE with value type s1ap_EUTRAN_CGI to list */
struct s1ap_EUTRAN_CGI ;
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, struct s1ap_EUTRAN_CGI *pvalue);

/* Append IE with value type s1ap_RRC_Establishment_Cause to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_RRC_Establishment_Cause 
   value);

/* Append IE with value type s1ap_S_TMSI to list */
struct s1ap_S_TMSI ;
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, struct s1ap_S_TMSI *pvalue);

/* Append IE with value type s1ap_CSG_Id to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_CSG_Id *pvalue);

/* Append IE with value type s1ap_GUMMEI to list */
struct s1ap_GUMMEI ;
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, struct s1ap_GUMMEI *pvalue);

/* Append IE with value type s1ap_CellAccessMode to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_9   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_CellAccessMode value);

/* Append IE with value type s1ap_TransportLayerAddress to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_10   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_TransportLayerAddress 
   *pvalue);

/* Append IE with value type s1ap_RelayNode_Indicator to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_11   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_RelayNode_Indicator value);

/* Append IE with value type s1ap_GUMMEIType to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_12   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_GUMMEIType value);

/* Append IE with value type s1ap_TunnelInformation to list */
struct s1ap_TunnelInformation ;
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_13   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, struct s1ap_TunnelInformation 
   *pvalue);

/* Append IE with value type s1ap_TransportLayerAddress to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_14   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_TransportLayerAddress 
   *pvalue);

/* Append IE with value type s1ap_LHN_ID to list */
struct s1ap_LHN_ID ;
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_15   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, struct s1ap_LHN_ID *pvalue);

/* Append IE with value type s1ap_MME_Group_ID to list */
struct s1ap_MME_Group_ID ;
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_16   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, struct s1ap_MME_Group_ID *pvalue)
   ;

/* Append IE with value type s1ap_UE_Usage_Type to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_17   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_UE_Usage_Type value);

/* Append IE with value type s1ap_CE_mode_B_SupportIndicator to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_18   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_CE_mode_B_SupportIndicator 
   value);

/* Append IE with value type s1ap_DCN_ID to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_19   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_DCN_ID value);

/* Append IE with value type s1ap_Coverage_Level to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_20   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_Coverage_Level value);

/* Append IE with value type s1ap_UE_Application_Layer_Measurement_Capability to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_21   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, 
   s1ap_UE_Application_Layer_Measurement_Capability *pvalue);

/* Append IE with value type s1ap_EDT_Session to list */
EXTERN int asn1Append_s1ap_InitialUEMessage_protocolIEs_22   (OSCTXT* pctxt, 
   s1ap_InitialUEMessage_protocolIEs* plist, s1ap_EDT_Session value);

/* Get IE using id key value */
EXTERN struct s1ap_InitialUEMessage_protocolIEs_element* 
   asn1Get_s1ap_InitialUEMessage_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_InitialUEMessage_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_InitialUEMessage_protocolIEs (OSCTXT* pctxt, 
   const s1ap_InitialUEMessage_protocolIEs* pSrcValue, 
   s1ap_InitialUEMessage_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_InitialUEMessage_protocolIEs (
   s1ap_InitialUEMessage_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_InitialUEMessage_protocolIEs (OSCTXT *pctxt, 
   s1ap_InitialUEMessage_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialUEMessage                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 INITIAL UE MESSAGE

 **************************************************************
InitialUEMessage ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({InitialUEMessage-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({InitialUEMessage-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({InitialUEMessage-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_InitialUEMessage {
   s1ap_InitialUEMessage_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_InitialUEMessage;

EXTERN int asn1PE_s1ap_InitialUEMessage (OSCTXT* pctxt, s1ap_InitialUEMessage* pvalue);

EXTERN int asn1PD_s1ap_InitialUEMessage (OSCTXT* pctxt, s1ap_InitialUEMessage* pvalue);

EXTERN void asn1Print_s1ap_InitialUEMessage 
   (const char* name, const s1ap_InitialUEMessage* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialUEMessage (const char* name, 
   s1ap_InitialUEMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialUEMessage (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialUEMessage* pvalue);

EXTERN void asn1Copy_s1ap_InitialUEMessage (OSCTXT* pctxt, 
   const s1ap_InitialUEMessage* pSrcValue, s1ap_InitialUEMessage* pDstValue);

EXTERN int asn1Init_s1ap_InitialUEMessage (s1ap_InitialUEMessage* pvalue);

EXTERN void asn1Free_s1ap_InitialUEMessage (OSCTXT *pctxt, 
   s1ap_InitialUEMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNASTransport_protocolIEs_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNASTransport'
*/
typedef struct EXTERN s1ap_UplinkNASTransport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UplinkNASTransport_IEs_TVALUE t;

      /**
       * UplinkNASTransport-IEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UplinkNASTransport_IEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UplinkNASTransport_IEs_2;
         /**
          * id: id-NAS-PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_NAS_PDU *_UplinkNASTransport_IEs_3;
         /**
          * id: id-EUTRAN-CGI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_EUTRAN_CGI *_UplinkNASTransport_IEs_4;
         /**
          * id: id-TAI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TAI *_UplinkNASTransport_IEs_5;
         /**
          * id: id-GW-TransportLayerAddress
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TransportLayerAddress *_UplinkNASTransport_IEs_6;
         /**
          * id: id-SIPTO-L-GW-TransportLayerAddress
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TransportLayerAddress *_UplinkNASTransport_IEs_7;
         /**
          * id: id-LHN-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_LHN_ID *_UplinkNASTransport_IEs_8;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UplinkNASTransport_protocolIEs_element;

EXTERN int asn1PE_s1ap_UplinkNASTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UplinkNASTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UplinkNASTransport_protocolIEs_element 
   (const char* name, const s1ap_UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkNASTransport_protocolIEs_element (
   const char* name, s1ap_UplinkNASTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkNASTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_1
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_2
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_3
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_NAS_PDU *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_4
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_EUTRAN_CGI *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_5
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_TAI *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_6
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_TransportLayerAddress *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_7
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_TransportLayerAddress *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_8
   (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs_element* pElem, 
   s1ap_LHN_ID *pvalue);

EXTERN void asn1Copy_s1ap_UplinkNASTransport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UplinkNASTransport_protocolIEs_element* pSrcValue, 
   s1ap_UplinkNASTransport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UplinkNASTransport_protocolIEs_element (
   s1ap_UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UplinkNASTransport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UplinkNASTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNASTransport_protocolIEs                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNASTransport'
*/
/* List of s1ap_UplinkNASTransport_protocolIEs_element */
typedef OSRTDList s1ap_UplinkNASTransport_protocolIEs;

EXTERN int asn1PE_s1ap_UplinkNASTransport_protocolIEs (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UplinkNASTransport_protocolIEs (OSCTXT* pctxt, s1ap_UplinkNASTransport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UplinkNASTransport_protocolIEs 
   (const char* name, const s1ap_UplinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkNASTransport_protocolIEs (const char* name, 
   s1ap_UplinkNASTransport_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkNASTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkNASTransport_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_NAS_PDU to list */
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, s1ap_NAS_PDU *pvalue);

/* Append IE with value type s1ap_EUTRAN_CGI to list */
struct s1ap_EUTRAN_CGI ;
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, struct s1ap_EUTRAN_CGI *pvalue)
   ;

/* Append IE with value type s1ap_TAI to list */
struct s1ap_TAI ;
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, struct s1ap_TAI *pvalue);

/* Append IE with value type s1ap_TransportLayerAddress to list */
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, s1ap_TransportLayerAddress 
   *pvalue);

/* Append IE with value type s1ap_TransportLayerAddress to list */
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, s1ap_TransportLayerAddress 
   *pvalue);

/* Append IE with value type s1ap_LHN_ID to list */
struct s1ap_LHN_ID ;
EXTERN int asn1Append_s1ap_UplinkNASTransport_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* plist, struct s1ap_LHN_ID *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UplinkNASTransport_protocolIEs_element* 
   asn1Get_s1ap_UplinkNASTransport_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UplinkNASTransport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UplinkNASTransport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UplinkNASTransport_protocolIEs* pSrcValue, 
   s1ap_UplinkNASTransport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UplinkNASTransport_protocolIEs (
   s1ap_UplinkNASTransport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UplinkNASTransport_protocolIEs (OSCTXT *pctxt, 
   s1ap_UplinkNASTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNASTransport                                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UPLINK NAS TRANSPORT

 **************************************************************
UplinkNASTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UplinkNASTransport-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UplinkNASTransport-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UplinkNASTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UplinkNASTransport {
   s1ap_UplinkNASTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UplinkNASTransport;

EXTERN int asn1PE_s1ap_UplinkNASTransport (OSCTXT* pctxt, s1ap_UplinkNASTransport* pvalue);

EXTERN int asn1PD_s1ap_UplinkNASTransport (OSCTXT* pctxt, s1ap_UplinkNASTransport* pvalue);

EXTERN void asn1Print_s1ap_UplinkNASTransport 
   (const char* name, const s1ap_UplinkNASTransport* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkNASTransport (const char* name, 
   s1ap_UplinkNASTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkNASTransport (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkNASTransport* pvalue);

EXTERN void asn1Copy_s1ap_UplinkNASTransport (OSCTXT* pctxt, 
   const s1ap_UplinkNASTransport* pSrcValue, s1ap_UplinkNASTransport*
    pDstValue);

EXTERN int asn1Init_s1ap_UplinkNASTransport (s1ap_UplinkNASTransport* pvalue);

EXTERN void asn1Free_s1ap_UplinkNASTransport (OSCTXT *pctxt, 
   s1ap_UplinkNASTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ErrorIndication'
*/
typedef struct EXTERN s1ap_ErrorIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ErrorIndicationIEs_TVALUE t;

      /**
       * ErrorIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MME_UE_S1AP_ID _ErrorIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ENB_UE_S1AP_ID _ErrorIndicationIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Cause *_ErrorIndicationIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_ErrorIndicationIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ErrorIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ErrorIndication_protocolIEs_element 
   (const char* name, const s1ap_ErrorIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ErrorIndication_protocolIEs_element (const char* name, 
   s1ap_ErrorIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ErrorIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_1
   (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_2
   (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_3
   (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs_element* pElem, s1ap_Cause 
   *pvalue);

EXTERN void asn1SetTC_s1ap_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_4
   (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ErrorIndication_protocolIEs_element* pSrcValue, 
   s1ap_ErrorIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ErrorIndication_protocolIEs_element (
   s1ap_ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ErrorIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ErrorIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ErrorIndication'
*/
/* List of s1ap_ErrorIndication_protocolIEs_element */
typedef OSRTDList s1ap_ErrorIndication_protocolIEs;

EXTERN int asn1PE_s1ap_ErrorIndication_protocolIEs (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ErrorIndication_protocolIEs (OSCTXT* pctxt, s1ap_ErrorIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ErrorIndication_protocolIEs 
   (const char* name, const s1ap_ErrorIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ErrorIndication_protocolIEs (const char* name, 
   s1ap_ErrorIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ErrorIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ErrorIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_ErrorIndication_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_ErrorIndication_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_ErrorIndication_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_ErrorIndication_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_ErrorIndication_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_ErrorIndication_protocolIEs* plist, struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_ErrorIndication_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_ErrorIndication_protocolIEs* plist, struct s1ap_CriticalityDiagnostics 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ErrorIndication_protocolIEs_element* 
   asn1Get_s1ap_ErrorIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_ErrorIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ErrorIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ErrorIndication_protocolIEs* pSrcValue, 
   s1ap_ErrorIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ErrorIndication_protocolIEs (
   s1ap_ErrorIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ErrorIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_ErrorIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 ERROR INDICATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Error Indication

 **************************************************************
ErrorIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ErrorIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ErrorIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ErrorIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ErrorIndication {
   s1ap_ErrorIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ErrorIndication;

EXTERN int asn1PE_s1ap_ErrorIndication (OSCTXT* pctxt, s1ap_ErrorIndication* pvalue);

EXTERN int asn1PD_s1ap_ErrorIndication (OSCTXT* pctxt, s1ap_ErrorIndication* pvalue);

EXTERN void asn1Print_s1ap_ErrorIndication 
   (const char* name, const s1ap_ErrorIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_ErrorIndication (const char* name, 
   s1ap_ErrorIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ErrorIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_ErrorIndication* pvalue);

EXTERN void asn1Copy_s1ap_ErrorIndication (OSCTXT* pctxt, 
   const s1ap_ErrorIndication* pSrcValue, s1ap_ErrorIndication* pDstValue);

EXTERN int asn1Init_s1ap_ErrorIndication (s1ap_ErrorIndication* pvalue);

EXTERN void asn1Free_s1ap_ErrorIndication (OSCTXT *pctxt, 
   s1ap_ErrorIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  NASNonDeliveryIndication_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASNonDeliveryIndication'
*/
typedef struct EXTERN s1ap_NASNonDeliveryIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      NASNonDeliveryIndication_IEs_TVALUE t;

      /**
       * NASNonDeliveryIndication-IEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _NASNonDeliveryIndication_IEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _NASNonDeliveryIndication_IEs_2;
         /**
          * id: id-NAS-PDU
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_NAS_PDU *_NASNonDeliveryIndication_IEs_3;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_NASNonDeliveryIndication_IEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_NASNonDeliveryIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_NASNonDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_NASNonDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_NASNonDeliveryIndication_protocolIEs_element 
   (const char* name, const s1ap_NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASNonDeliveryIndication_protocolIEs_element (
   const char* name, 
   s1ap_NASNonDeliveryIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASNonDeliveryIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_1
   (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_2
   (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_3
   (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs_element* pElem, 
   s1ap_NAS_PDU *pvalue);

EXTERN void asn1SetTC_s1ap_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_4
   (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1Copy_s1ap_NASNonDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_NASNonDeliveryIndication_protocolIEs_element* pSrcValue, 
   s1ap_NASNonDeliveryIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_NASNonDeliveryIndication_protocolIEs_element (
   s1ap_NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_NASNonDeliveryIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_NASNonDeliveryIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NASNonDeliveryIndication_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASNonDeliveryIndication'
*/
/* List of s1ap_NASNonDeliveryIndication_protocolIEs_element */
typedef OSRTDList s1ap_NASNonDeliveryIndication_protocolIEs;

EXTERN int asn1PE_s1ap_NASNonDeliveryIndication_protocolIEs (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_NASNonDeliveryIndication_protocolIEs (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_NASNonDeliveryIndication_protocolIEs 
   (const char* name, const s1ap_NASNonDeliveryIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASNonDeliveryIndication_protocolIEs (const char* name, 
   s1ap_NASNonDeliveryIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASNonDeliveryIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_NASNonDeliveryIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_NASNonDeliveryIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_NASNonDeliveryIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_NAS_PDU to list */
EXTERN int asn1Append_s1ap_NASNonDeliveryIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs* plist, 
   s1ap_NAS_PDU *pvalue);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_NASNonDeliveryIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication_protocolIEs* plist, struct 
   s1ap_Cause *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_NASNonDeliveryIndication_protocolIEs_element* 
   asn1Get_s1ap_NASNonDeliveryIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_NASNonDeliveryIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_NASNonDeliveryIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_NASNonDeliveryIndication_protocolIEs* pSrcValue, 
   s1ap_NASNonDeliveryIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_NASNonDeliveryIndication_protocolIEs (
   s1ap_NASNonDeliveryIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_NASNonDeliveryIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_NASNonDeliveryIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NASNonDeliveryIndication                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 NAS NON DELIVERY INDICATION

 **************************************************************
NASNonDeliveryIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({NASNonDeliveryIndication-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({NASNonDeliveryIndication-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({NASNonDeliveryIndication-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_NASNonDeliveryIndication {
   s1ap_NASNonDeliveryIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_NASNonDeliveryIndication;

EXTERN int asn1PE_s1ap_NASNonDeliveryIndication (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication* pvalue);

EXTERN int asn1PD_s1ap_NASNonDeliveryIndication (OSCTXT* pctxt, s1ap_NASNonDeliveryIndication* pvalue);

EXTERN void asn1Print_s1ap_NASNonDeliveryIndication 
   (const char* name, const s1ap_NASNonDeliveryIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASNonDeliveryIndication (const char* name, 
   s1ap_NASNonDeliveryIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASNonDeliveryIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_NASNonDeliveryIndication* pvalue);

EXTERN void asn1Copy_s1ap_NASNonDeliveryIndication (OSCTXT* pctxt, 
   const s1ap_NASNonDeliveryIndication* pSrcValue, 
   s1ap_NASNonDeliveryIndication* pDstValue);

EXTERN int asn1Init_s1ap_NASNonDeliveryIndication (
   s1ap_NASNonDeliveryIndication* pvalue);

EXTERN void asn1Free_s1ap_NASNonDeliveryIndication (OSCTXT *pctxt, 
   s1ap_NASNonDeliveryIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseRequest_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseRequest'
*/
typedef struct EXTERN s1ap_UEContextReleaseRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextReleaseRequest_IEs_TVALUE t;

      /**
       * UEContextReleaseRequest-IEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextReleaseRequest_IEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextReleaseRequest_IEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_UEContextReleaseRequest_IEs_3;
         /**
          * id: id-GWContextReleaseIndication
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_GWContextReleaseIndication _UEContextReleaseRequest_IEs_4;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageReportList *_UEContextReleaseRequest_IEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextReleaseRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextReleaseRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseRequest_protocolIEs_element 
   (const char* name, const s1ap_UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseRequest_protocolIEs_element (
   const char* name, s1ap_UEContextReleaseRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_1
   (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_2
   (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_3
   (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_4
   (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs_element* pElem, 
   s1ap_GWContextReleaseIndication value);

EXTERN void asn1SetTC_s1ap_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_5
   (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs_element* pElem, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1Copy_s1ap_UEContextReleaseRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseRequest_protocolIEs_element* pSrcValue, 
   s1ap_UEContextReleaseRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseRequest_protocolIEs_element (
   s1ap_UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextReleaseRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseRequest_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseRequest'
*/
/* List of s1ap_UEContextReleaseRequest_protocolIEs_element */
typedef OSRTDList s1ap_UEContextReleaseRequest_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextReleaseRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseRequest_protocolIEs (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseRequest_protocolIEs 
   (const char* name, const s1ap_UEContextReleaseRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseRequest_protocolIEs (const char* name, 
   s1ap_UEContextReleaseRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextReleaseRequest_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextReleaseRequest_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_UEContextReleaseRequest_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs* plist, struct 
   s1ap_Cause *pvalue);

/* Append IE with value type s1ap_GWContextReleaseIndication to list */
EXTERN int asn1Append_s1ap_UEContextReleaseRequest_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs* plist, 
   s1ap_GWContextReleaseIndication value);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_UEContextReleaseRequest_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UEContextReleaseRequest_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextReleaseRequest_protocolIEs_element* 
   asn1Get_s1ap_UEContextReleaseRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextReleaseRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextReleaseRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseRequest_protocolIEs* pSrcValue, 
   s1ap_UEContextReleaseRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseRequest_protocolIEs (
   s1ap_UEContextReleaseRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextReleaseRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseRequest                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE CONTEXT RELEASE ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 UE Context Release Request

 **************************************************************
UEContextReleaseRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextReleaseRequest-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextReleaseRequest-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextReleaseRequest-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextReleaseRequest {
   s1ap_UEContextReleaseRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextReleaseRequest;

EXTERN int asn1PE_s1ap_UEContextReleaseRequest (OSCTXT* pctxt, s1ap_UEContextReleaseRequest* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseRequest (OSCTXT* pctxt, s1ap_UEContextReleaseRequest* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseRequest 
   (const char* name, const s1ap_UEContextReleaseRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseRequest (const char* name, 
   s1ap_UEContextReleaseRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseRequest* pvalue);

EXTERN void asn1Copy_s1ap_UEContextReleaseRequest (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseRequest* pSrcValue, s1ap_UEContextReleaseRequest*
    pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseRequest (
   s1ap_UEContextReleaseRequest* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseRequest (OSCTXT *pctxt, 
   s1ap_UEContextReleaseRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABDataForwardingItem_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABDataForwardingItem'
*/
typedef struct EXTERN s1ap_E_RABDataForwardingItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABDataForwardingItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABDataForwardingItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABDataForwardingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABDataForwardingItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABDataForwardingItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABDataForwardingItem_iE_Extensions_element 
   (const char* name, const s1ap_E_RABDataForwardingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABDataForwardingItem_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABDataForwardingItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABDataForwardingItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABDataForwardingItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABDataForwardingItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABDataForwardingItem_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABDataForwardingItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABDataForwardingItem_iE_Extensions_element (
   s1ap_E_RABDataForwardingItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABDataForwardingItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABDataForwardingItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABDataForwardingItem_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABDataForwardingItem'
*/
/* List of s1ap_E_RABDataForwardingItem_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABDataForwardingItem_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABDataForwardingItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABDataForwardingItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABDataForwardingItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABDataForwardingItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABDataForwardingItem_iE_Extensions 
   (const char* name, const s1ap_E_RABDataForwardingItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABDataForwardingItem_iE_Extensions (const char* name, 
   s1ap_E_RABDataForwardingItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABDataForwardingItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABDataForwardingItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABDataForwardingItem_iE_Extensions_element* 
   asn1Get_s1ap_E_RABDataForwardingItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABDataForwardingItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABDataForwardingItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABDataForwardingItem_iE_Extensions* pSrcValue, 
   s1ap_E_RABDataForwardingItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABDataForwardingItem_iE_Extensions (
   s1ap_E_RABDataForwardingItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABDataForwardingItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABDataForwardingItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABDataForwardingItem                                   */
/*                                                            */
/**************************************************************/
/*
E-RABDataForwardingItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   dL-transportLayerAddress [1] TransportLayerAddress OPTIONAL,
   dL-gTP-TEID [2] GTP-TEID OPTIONAL,
   uL-TransportLayerAddress [3] TransportLayerAddress OPTIONAL,
   uL-GTP-TEID [4] GTP-TEID OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABDataForwardingItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABDataForwardingItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABDataForwardingItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABDataForwardingItem {
   struct {
      unsigned dL_transportLayerAddressPresent : 1;
      unsigned dL_gTP_TEIDPresent : 1;
      unsigned uL_TransportLayerAddressPresent : 1;
      unsigned uL_GTP_TEIDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress dL_transportLayerAddress;
   s1ap_GTP_TEID dL_gTP_TEID;
   s1ap_TransportLayerAddress uL_TransportLayerAddress;
   s1ap_GTP_TEID uL_GTP_TEID;
   s1ap_E_RABDataForwardingItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABDataForwardingItem;

EXTERN int asn1PE_s1ap_E_RABDataForwardingItem (OSCTXT* pctxt, s1ap_E_RABDataForwardingItem* pvalue);

EXTERN int asn1PD_s1ap_E_RABDataForwardingItem (OSCTXT* pctxt, s1ap_E_RABDataForwardingItem* pvalue);

EXTERN void asn1Print_s1ap_E_RABDataForwardingItem 
   (const char* name, const s1ap_E_RABDataForwardingItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABDataForwardingItem (const char* name, 
   s1ap_E_RABDataForwardingItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABDataForwardingItem (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABDataForwardingItem* pvalue);

EXTERN void asn1Copy_s1ap_E_RABDataForwardingItem (OSCTXT* pctxt, 
   const s1ap_E_RABDataForwardingItem* pSrcValue, s1ap_E_RABDataForwardingItem*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABDataForwardingItem (
   s1ap_E_RABDataForwardingItem* pvalue);

EXTERN void asn1Free_s1ap_E_RABDataForwardingItem (OSCTXT *pctxt, 
   s1ap_E_RABDataForwardingItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSubjecttoDataForwardingList_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSubjecttoDataForwardingList'
*/
typedef struct EXTERN s1ap_E_RABSubjecttoDataForwardingList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABDataForwardingItemIEs_TVALUE t;

      /**
       * E-RABDataForwardingItemIEs information objects
       */
      union {
         /**
          * id: id-E-RABDataForwardingItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABDataForwardingItem *_E_RABDataForwardingItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABSubjecttoDataForwardingList_element;

EXTERN int asn1PE_s1ap_E_RABSubjecttoDataForwardingList_element (OSCTXT* pctxt, s1ap_E_RABSubjecttoDataForwardingList_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABSubjecttoDataForwardingList_element (OSCTXT* pctxt, s1ap_E_RABSubjecttoDataForwardingList_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABSubjecttoDataForwardingList_element 
   (const char* name, const s1ap_E_RABSubjecttoDataForwardingList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSubjecttoDataForwardingList_element (
   const char* name, s1ap_E_RABSubjecttoDataForwardingList_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSubjecttoDataForwardingList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSubjecttoDataForwardingList_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSubjecttoDataForwardingList_element (OSCTXT* pctxt, 
   const s1ap_E_RABSubjecttoDataForwardingList_element* pSrcValue, 
   s1ap_E_RABSubjecttoDataForwardingList_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSubjecttoDataForwardingList_element (
   s1ap_E_RABSubjecttoDataForwardingList_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABSubjecttoDataForwardingList_element (OSCTXT *pctxt, 
   s1ap_E_RABSubjecttoDataForwardingList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSubjecttoDataForwardingList                          */
/*                                                            */
/**************************************************************/
/*
E-RABSubjecttoDataForwardingList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABDataForwardingItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABDataForwardingItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABDataForwardingItemIEs}{@id})
}
*/
/* List of s1ap_E_RABSubjecttoDataForwardingList_element */
typedef OSRTDList s1ap_E_RABSubjecttoDataForwardingList;

EXTERN int asn1PE_s1ap_E_RABSubjecttoDataForwardingList (OSCTXT* pctxt, s1ap_E_RABSubjecttoDataForwardingList* pvalue);

EXTERN int asn1PD_s1ap_E_RABSubjecttoDataForwardingList (OSCTXT* pctxt, s1ap_E_RABSubjecttoDataForwardingList* pvalue);

EXTERN void asn1Print_s1ap_E_RABSubjecttoDataForwardingList 
   (const char* name, const s1ap_E_RABSubjecttoDataForwardingList* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSubjecttoDataForwardingList (const char* name, 
   s1ap_E_RABSubjecttoDataForwardingList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSubjecttoDataForwardingList (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSubjecttoDataForwardingList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABSubjecttoDataForwardingList_element* 
   asn1Get_s1ap_E_RABSubjecttoDataForwardingList (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABSubjecttoDataForwardingList* plist);

EXTERN void asn1Copy_s1ap_E_RABSubjecttoDataForwardingList (OSCTXT* pctxt, 
   const s1ap_E_RABSubjecttoDataForwardingList* pSrcValue, 
   s1ap_E_RABSubjecttoDataForwardingList* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSubjecttoDataForwardingList (
   s1ap_E_RABSubjecttoDataForwardingList* pvalue);

EXTERN void asn1Free_s1ap_E_RABSubjecttoDataForwardingList (OSCTXT *pctxt, 
   s1ap_E_RABSubjecttoDataForwardingList* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkS1cdma2000tunnelling_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkS1cdma2000tunnelling'
*/
typedef struct EXTERN s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      DownlinkS1cdma2000tunnellingIEs_TVALUE t;

      /**
       * DownlinkS1cdma2000tunnellingIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _DownlinkS1cdma2000tunnellingIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _DownlinkS1cdma2000tunnellingIEs_2;
         /**
          * id: id-E-RABSubjecttoDataForwardingList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABSubjecttoDataForwardingList *_DownlinkS1cdma2000tunnellingIEs_3;
         /**
          * id: id-cdma2000HOStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Cdma2000HOStatus _DownlinkS1cdma2000tunnellingIEs_4;
         /**
          * id: id-cdma2000RATType
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Cdma2000RATType _DownlinkS1cdma2000tunnellingIEs_5;
         /**
          * id: id-cdma2000PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Cdma2000PDU *_DownlinkS1cdma2000tunnellingIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element;

EXTERN int asn1PE_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element 
   (const char* name, const s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element (
   const char* name, 
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element_DownlinkS1cdma2000tunnellingIEs_1
   (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element_DownlinkS1cdma2000tunnellingIEs_2
   (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element_DownlinkS1cdma2000tunnellingIEs_3
   (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pElem
   , s1ap_E_RABSubjecttoDataForwardingList *pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element_DownlinkS1cdma2000tunnellingIEs_4
   (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pElem
   , s1ap_Cdma2000HOStatus value);

EXTERN void asn1SetTC_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element_DownlinkS1cdma2000tunnellingIEs_5
   (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pElem
   , s1ap_Cdma2000RATType value);

EXTERN void asn1SetTC_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element_DownlinkS1cdma2000tunnellingIEs_6
   (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pElem
   , s1ap_Cdma2000PDU *pvalue);

EXTERN void asn1Copy_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pSrcValue, 
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element (
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkS1cdma2000tunnelling_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkS1cdma2000tunnelling'
*/
/* List of s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element */
typedef OSRTDList s1ap_DownlinkS1cdma2000tunnelling_protocolIEs;

EXTERN int asn1PE_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs 
   (const char* name, const s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs (
   const char* name, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_1
      (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_2
      (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABSubjecttoDataForwardingList to list */
EXTERN int asn1Append_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_3
      (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_E_RABSubjecttoDataForwardingList *pvalue);

/* Append IE with value type s1ap_Cdma2000HOStatus to list */
EXTERN int asn1Append_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_4
      (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000HOStatus value);

/* Append IE with value type s1ap_Cdma2000RATType to list */
EXTERN int asn1Append_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_5
      (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000RATType value);

/* Append IE with value type s1ap_Cdma2000PDU to list */
EXTERN int asn1Append_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_6
      (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000PDU *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_DownlinkS1cdma2000tunnelling_protocolIEs_element* 
   asn1Get_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs (OSCTXT* pctxt, 
   const s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pSrcValue, 
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs (
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_DownlinkS1cdma2000tunnelling_protocolIEs (OSCTXT *pctxt, 
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkS1cdma2000tunnelling                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 DOWNLINK S1 CDMA2000 TUNNELLING ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Downlink S1 CDMA2000 Tunnelling

 **************************************************************
DownlinkS1cdma2000tunnelling ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({DownlinkS1cdma2000tunnellingIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({DownlinkS1cdma2000tunnellingIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({DownlinkS1cdma2000tunnellingIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_DownlinkS1cdma2000tunnelling {
   s1ap_DownlinkS1cdma2000tunnelling_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_DownlinkS1cdma2000tunnelling;

EXTERN int asn1PE_s1ap_DownlinkS1cdma2000tunnelling (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling* pvalue);

EXTERN int asn1PD_s1ap_DownlinkS1cdma2000tunnelling (OSCTXT* pctxt, s1ap_DownlinkS1cdma2000tunnelling* pvalue);

EXTERN void asn1Print_s1ap_DownlinkS1cdma2000tunnelling 
   (const char* name, const s1ap_DownlinkS1cdma2000tunnelling* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkS1cdma2000tunnelling (const char* name, 
   s1ap_DownlinkS1cdma2000tunnelling* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkS1cdma2000tunnelling (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkS1cdma2000tunnelling* pvalue);

EXTERN void asn1Copy_s1ap_DownlinkS1cdma2000tunnelling (OSCTXT* pctxt, 
   const s1ap_DownlinkS1cdma2000tunnelling* pSrcValue, 
   s1ap_DownlinkS1cdma2000tunnelling* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkS1cdma2000tunnelling (
   s1ap_DownlinkS1cdma2000tunnelling* pvalue);

EXTERN void asn1Free_s1ap_DownlinkS1cdma2000tunnelling (OSCTXT *pctxt, 
   s1ap_DownlinkS1cdma2000tunnelling* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkS1cdma2000tunnelling_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkS1cdma2000tunnelling'
*/
typedef struct EXTERN s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UplinkS1cdma2000tunnellingIEs_TVALUE t;

      /**
       * UplinkS1cdma2000tunnellingIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UplinkS1cdma2000tunnellingIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UplinkS1cdma2000tunnellingIEs_2;
         /**
          * id: id-cdma2000RATType
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Cdma2000RATType _UplinkS1cdma2000tunnellingIEs_3;
         /**
          * id: id-cdma2000SectorID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Cdma2000SectorID *_UplinkS1cdma2000tunnellingIEs_4;
         /**
          * id: id-cdma2000HORequiredIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Cdma2000HORequiredIndication _UplinkS1cdma2000tunnellingIEs_5;
         /**
          * id: id-cdma2000OneXSRVCCInfo
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_Cdma2000OneXSRVCCInfo *_UplinkS1cdma2000tunnellingIEs_6;
         /**
          * id: id-cdma2000OneXRAND
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_Cdma2000OneXRAND *_UplinkS1cdma2000tunnellingIEs_7;
         /**
          * id: id-cdma2000PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Cdma2000PDU *_UplinkS1cdma2000tunnellingIEs_8;
         /**
          * id: id-EUTRANRoundTripDelayEstimationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EUTRANRoundTripDelayEstimationInfo _UplinkS1cdma2000tunnellingIEs_9;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element;

EXTERN int asn1PE_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element 
   (const char* name, const s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element (
   const char* name, 
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_1
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_2
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_3
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_Cdma2000RATType value);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_4
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_Cdma2000SectorID *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_5
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_Cdma2000HORequiredIndication value);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_6
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_Cdma2000OneXSRVCCInfo *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_7
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_Cdma2000OneXRAND *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_8
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_Cdma2000PDU *pvalue);

EXTERN void asn1SetTC_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element_UplinkS1cdma2000tunnellingIEs_9
   (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pElem, 
   s1ap_EUTRANRoundTripDelayEstimationInfo value);

EXTERN void asn1Copy_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pSrcValue, 
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element (
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkS1cdma2000tunnelling_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkS1cdma2000tunnelling'
*/
/* List of s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element */
typedef OSRTDList s1ap_UplinkS1cdma2000tunnelling_protocolIEs;

EXTERN int asn1PE_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UplinkS1cdma2000tunnelling_protocolIEs 
   (const char* name, const s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (
   const char* name, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cdma2000RATType to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000RATType value);

/* Append IE with value type s1ap_Cdma2000SectorID to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000SectorID *pvalue);

/* Append IE with value type s1ap_Cdma2000HORequiredIndication to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000HORequiredIndication value);

/* Append IE with value type s1ap_Cdma2000OneXSRVCCInfo to list */
struct s1ap_Cdma2000OneXSRVCCInfo ;
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_6
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   struct s1ap_Cdma2000OneXSRVCCInfo *pvalue);

/* Append IE with value type s1ap_Cdma2000OneXRAND to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_7
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000OneXRAND *pvalue);

/* Append IE with value type s1ap_Cdma2000PDU to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_8
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_Cdma2000PDU *pvalue);

/* Append IE with value type s1ap_EUTRANRoundTripDelayEstimationInfo to list */
EXTERN int asn1Append_s1ap_UplinkS1cdma2000tunnelling_protocolIEs_9
      (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist, 
   s1ap_EUTRANRoundTripDelayEstimationInfo value);

/* Get IE using id key value */
EXTERN struct s1ap_UplinkS1cdma2000tunnelling_protocolIEs_element* 
   asn1Get_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pSrcValue, 
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UplinkS1cdma2000tunnelling_protocolIEs (OSCTXT *pctxt, 
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkS1cdma2000tunnelling                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UPLINK S1 CDMA2000 TUNNELLING ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Uplink S1 CDMA2000 Tunnelling

 **************************************************************
UplinkS1cdma2000tunnelling ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UplinkS1cdma2000tunnellingIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UplinkS1cdma2000tunnellingIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UplinkS1cdma2000tunnellingIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UplinkS1cdma2000tunnelling {
   s1ap_UplinkS1cdma2000tunnelling_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UplinkS1cdma2000tunnelling;

EXTERN int asn1PE_s1ap_UplinkS1cdma2000tunnelling (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling* pvalue);

EXTERN int asn1PD_s1ap_UplinkS1cdma2000tunnelling (OSCTXT* pctxt, s1ap_UplinkS1cdma2000tunnelling* pvalue);

EXTERN void asn1Print_s1ap_UplinkS1cdma2000tunnelling 
   (const char* name, const s1ap_UplinkS1cdma2000tunnelling* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkS1cdma2000tunnelling (const char* name, 
   s1ap_UplinkS1cdma2000tunnelling* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkS1cdma2000tunnelling (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkS1cdma2000tunnelling* pvalue);

EXTERN void asn1Copy_s1ap_UplinkS1cdma2000tunnelling (OSCTXT* pctxt, 
   const s1ap_UplinkS1cdma2000tunnelling* pSrcValue, 
   s1ap_UplinkS1cdma2000tunnelling* pDstValue);

EXTERN int asn1Init_s1ap_UplinkS1cdma2000tunnelling (
   s1ap_UplinkS1cdma2000tunnelling* pvalue);

EXTERN void asn1Free_s1ap_UplinkS1cdma2000tunnelling (OSCTXT *pctxt, 
   s1ap_UplinkS1cdma2000tunnelling* pvalue);

/**************************************************************/
/*                                                            */
/*  UECapabilityInfoIndication_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UECapabilityInfoIndication'
*/
typedef struct EXTERN s1ap_UECapabilityInfoIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UECapabilityInfoIndicationIEs_TVALUE t;

      /**
       * UECapabilityInfoIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UECapabilityInfoIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UECapabilityInfoIndicationIEs_2;
         /**
          * id: id-UERadioCapability
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_UERadioCapability *_UECapabilityInfoIndicationIEs_3;
         /**
          * id: id-UERadioCapabilityForPaging
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UERadioCapabilityForPaging *_UECapabilityInfoIndicationIEs_4;
         /**
          * id: id-UE-Application-Layer-Measurement-Capability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_Application_Layer_Measurement_Capability *_UECapabilityInfoIndicationIEs_5;
         /**
          * id: id-LTE-M-Indication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_LTE_M_Indication _UECapabilityInfoIndicationIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UECapabilityInfoIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_UECapabilityInfoIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UECapabilityInfoIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UECapabilityInfoIndication_protocolIEs_element 
   (const char* name, const s1ap_UECapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UECapabilityInfoIndication_protocolIEs_element (
   const char* name, 
   s1ap_UECapabilityInfoIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UECapabilityInfoIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UECapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UECapabilityInfoIndication_protocolIEs_element_UECapabilityInfoIndicationIEs_1
   (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UECapabilityInfoIndication_protocolIEs_element_UECapabilityInfoIndicationIEs_2
   (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UECapabilityInfoIndication_protocolIEs_element_UECapabilityInfoIndicationIEs_3
   (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pElem, 
   s1ap_UERadioCapability *pvalue);

EXTERN void asn1SetTC_s1ap_UECapabilityInfoIndication_protocolIEs_element_UECapabilityInfoIndicationIEs_4
   (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pElem, 
   s1ap_UERadioCapabilityForPaging *pvalue);

EXTERN void asn1SetTC_s1ap_UECapabilityInfoIndication_protocolIEs_element_UECapabilityInfoIndicationIEs_5
   (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pElem, 
   s1ap_UE_Application_Layer_Measurement_Capability *pvalue);

EXTERN void asn1SetTC_s1ap_UECapabilityInfoIndication_protocolIEs_element_UECapabilityInfoIndicationIEs_6
   (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs_element* pElem, 
   s1ap_LTE_M_Indication value);

EXTERN void asn1Copy_s1ap_UECapabilityInfoIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UECapabilityInfoIndication_protocolIEs_element* pSrcValue, 
   s1ap_UECapabilityInfoIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UECapabilityInfoIndication_protocolIEs_element (
   s1ap_UECapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UECapabilityInfoIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UECapabilityInfoIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UECapabilityInfoIndication_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UECapabilityInfoIndication'
*/
/* List of s1ap_UECapabilityInfoIndication_protocolIEs_element */
typedef OSRTDList s1ap_UECapabilityInfoIndication_protocolIEs;

EXTERN int asn1PE_s1ap_UECapabilityInfoIndication_protocolIEs (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UECapabilityInfoIndication_protocolIEs (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UECapabilityInfoIndication_protocolIEs 
   (const char* name, const s1ap_UECapabilityInfoIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UECapabilityInfoIndication_protocolIEs (
   const char* name, s1ap_UECapabilityInfoIndication_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UECapabilityInfoIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UECapabilityInfoIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UECapabilityInfoIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UECapabilityInfoIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UERadioCapability to list */
EXTERN int asn1Append_s1ap_UECapabilityInfoIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* plist, 
   s1ap_UERadioCapability *pvalue);

/* Append IE with value type s1ap_UERadioCapabilityForPaging to list */
EXTERN int asn1Append_s1ap_UECapabilityInfoIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* plist, 
   s1ap_UERadioCapabilityForPaging *pvalue);

/* Append IE with value type s1ap_UE_Application_Layer_Measurement_Capability to list */
EXTERN int asn1Append_s1ap_UECapabilityInfoIndication_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* plist, 
   s1ap_UE_Application_Layer_Measurement_Capability *pvalue);

/* Append IE with value type s1ap_LTE_M_Indication to list */
EXTERN int asn1Append_s1ap_UECapabilityInfoIndication_protocolIEs_6
      (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication_protocolIEs* plist, 
   s1ap_LTE_M_Indication value);

/* Get IE using id key value */
EXTERN struct s1ap_UECapabilityInfoIndication_protocolIEs_element* 
   asn1Get_s1ap_UECapabilityInfoIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UECapabilityInfoIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UECapabilityInfoIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UECapabilityInfoIndication_protocolIEs* pSrcValue, 
   s1ap_UECapabilityInfoIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UECapabilityInfoIndication_protocolIEs (
   s1ap_UECapabilityInfoIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UECapabilityInfoIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_UECapabilityInfoIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UECapabilityInfoIndication                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE CAPABILITY INFO INDICATION ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 UE Capability Info Indication

 **************************************************************
UECapabilityInfoIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UECapabilityInfoIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UECapabilityInfoIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UECapabilityInfoIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UECapabilityInfoIndication {
   s1ap_UECapabilityInfoIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UECapabilityInfoIndication;

EXTERN int asn1PE_s1ap_UECapabilityInfoIndication (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication* pvalue);

EXTERN int asn1PD_s1ap_UECapabilityInfoIndication (OSCTXT* pctxt, s1ap_UECapabilityInfoIndication* pvalue);

EXTERN void asn1Print_s1ap_UECapabilityInfoIndication 
   (const char* name, const s1ap_UECapabilityInfoIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_UECapabilityInfoIndication (const char* name, 
   s1ap_UECapabilityInfoIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UECapabilityInfoIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_UECapabilityInfoIndication* pvalue);

EXTERN void asn1Copy_s1ap_UECapabilityInfoIndication (OSCTXT* pctxt, 
   const s1ap_UECapabilityInfoIndication* pSrcValue, 
   s1ap_UECapabilityInfoIndication* pDstValue);

EXTERN int asn1Init_s1ap_UECapabilityInfoIndication (
   s1ap_UECapabilityInfoIndication* pvalue);

EXTERN void asn1Free_s1ap_UECapabilityInfoIndication (OSCTXT *pctxt, 
   s1ap_UECapabilityInfoIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBStatusTransfer_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBStatusTransfer'
*/
typedef struct EXTERN s1ap_ENBStatusTransfer_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ENBStatusTransferIEs_TVALUE t;

      /**
       * ENBStatusTransferIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _ENBStatusTransferIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _ENBStatusTransferIEs_2;
         /**
          * id: id-eNB-StatusTransfer-TransparentContainer
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_StatusTransfer_TransparentContainer *_ENBStatusTransferIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ENBStatusTransfer_protocolIEs_element;

EXTERN int asn1PE_s1ap_ENBStatusTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ENBStatusTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ENBStatusTransfer_protocolIEs_element 
   (const char* name, const s1ap_ENBStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBStatusTransfer_protocolIEs_element (const char* name, 
   s1ap_ENBStatusTransfer_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBStatusTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ENBStatusTransfer_protocolIEs_element_ENBStatusTransferIEs_1
   (OSCTXT* pctxt, s1ap_ENBStatusTransfer_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_ENBStatusTransfer_protocolIEs_element_ENBStatusTransferIEs_2
   (OSCTXT* pctxt, s1ap_ENBStatusTransfer_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_ENBStatusTransfer_protocolIEs_element_ENBStatusTransferIEs_3
   (OSCTXT* pctxt, s1ap_ENBStatusTransfer_protocolIEs_element* pElem, 
   s1ap_ENB_StatusTransfer_TransparentContainer *pvalue);

EXTERN void asn1Copy_s1ap_ENBStatusTransfer_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ENBStatusTransfer_protocolIEs_element* pSrcValue, 
   s1ap_ENBStatusTransfer_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBStatusTransfer_protocolIEs_element (
   s1ap_ENBStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ENBStatusTransfer_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ENBStatusTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBStatusTransfer_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBStatusTransfer'
*/
/* List of s1ap_ENBStatusTransfer_protocolIEs_element */
typedef OSRTDList s1ap_ENBStatusTransfer_protocolIEs;

EXTERN int asn1PE_s1ap_ENBStatusTransfer_protocolIEs (OSCTXT* pctxt, s1ap_ENBStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ENBStatusTransfer_protocolIEs (OSCTXT* pctxt, s1ap_ENBStatusTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ENBStatusTransfer_protocolIEs 
   (const char* name, const s1ap_ENBStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBStatusTransfer_protocolIEs (const char* name, 
   s1ap_ENBStatusTransfer_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBStatusTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBStatusTransfer_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_ENBStatusTransfer_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_ENBStatusTransfer_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_ENBStatusTransfer_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_ENBStatusTransfer_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_StatusTransfer_TransparentContainer to list */
struct s1ap_ENB_StatusTransfer_TransparentContainer ;
EXTERN int asn1Append_s1ap_ENBStatusTransfer_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_ENBStatusTransfer_protocolIEs* plist, struct 
   s1ap_ENB_StatusTransfer_TransparentContainer *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBStatusTransfer_protocolIEs_element* 
   asn1Get_s1ap_ENBStatusTransfer_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_ENBStatusTransfer_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ENBStatusTransfer_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ENBStatusTransfer_protocolIEs* pSrcValue, 
   s1ap_ENBStatusTransfer_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ENBStatusTransfer_protocolIEs (
   s1ap_ENBStatusTransfer_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ENBStatusTransfer_protocolIEs (OSCTXT *pctxt, 
   s1ap_ENBStatusTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBStatusTransfer                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 eNB STATUS TRANSFER ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 eNB Status Transfer

 **************************************************************
ENBStatusTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ENBStatusTransferIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ENBStatusTransferIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ENBStatusTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ENBStatusTransfer {
   s1ap_ENBStatusTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ENBStatusTransfer;

EXTERN int asn1PE_s1ap_ENBStatusTransfer (OSCTXT* pctxt, s1ap_ENBStatusTransfer* pvalue);

EXTERN int asn1PD_s1ap_ENBStatusTransfer (OSCTXT* pctxt, s1ap_ENBStatusTransfer* pvalue);

EXTERN void asn1Print_s1ap_ENBStatusTransfer 
   (const char* name, const s1ap_ENBStatusTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBStatusTransfer (const char* name, 
   s1ap_ENBStatusTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBStatusTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBStatusTransfer* pvalue);

EXTERN void asn1Copy_s1ap_ENBStatusTransfer (OSCTXT* pctxt, 
   const s1ap_ENBStatusTransfer* pSrcValue, s1ap_ENBStatusTransfer* pDstValue);

EXTERN int asn1Init_s1ap_ENBStatusTransfer (s1ap_ENBStatusTransfer* pvalue);

EXTERN void asn1Free_s1ap_ENBStatusTransfer (OSCTXT *pctxt, 
   s1ap_ENBStatusTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEStatusTransfer_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEStatusTransfer'
*/
typedef struct EXTERN s1ap_MMEStatusTransfer_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MMEStatusTransferIEs_TVALUE t;

      /**
       * MMEStatusTransferIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _MMEStatusTransferIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _MMEStatusTransferIEs_2;
         /**
          * id: id-eNB-StatusTransfer-TransparentContainer
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_StatusTransfer_TransparentContainer *_MMEStatusTransferIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_MMEStatusTransfer_protocolIEs_element;

EXTERN int asn1PE_s1ap_MMEStatusTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_MMEStatusTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_MMEStatusTransfer_protocolIEs_element 
   (const char* name, const s1ap_MMEStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEStatusTransfer_protocolIEs_element (const char* name, 
   s1ap_MMEStatusTransfer_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEStatusTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_MMEStatusTransfer_protocolIEs_element_MMEStatusTransferIEs_1
   (OSCTXT* pctxt, s1ap_MMEStatusTransfer_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_MMEStatusTransfer_protocolIEs_element_MMEStatusTransferIEs_2
   (OSCTXT* pctxt, s1ap_MMEStatusTransfer_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_MMEStatusTransfer_protocolIEs_element_MMEStatusTransferIEs_3
   (OSCTXT* pctxt, s1ap_MMEStatusTransfer_protocolIEs_element* pElem, 
   s1ap_ENB_StatusTransfer_TransparentContainer *pvalue);

EXTERN void asn1Copy_s1ap_MMEStatusTransfer_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_MMEStatusTransfer_protocolIEs_element* pSrcValue, 
   s1ap_MMEStatusTransfer_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_MMEStatusTransfer_protocolIEs_element (
   s1ap_MMEStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_MMEStatusTransfer_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_MMEStatusTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEStatusTransfer_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEStatusTransfer'
*/
/* List of s1ap_MMEStatusTransfer_protocolIEs_element */
typedef OSRTDList s1ap_MMEStatusTransfer_protocolIEs;

EXTERN int asn1PE_s1ap_MMEStatusTransfer_protocolIEs (OSCTXT* pctxt, s1ap_MMEStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_MMEStatusTransfer_protocolIEs (OSCTXT* pctxt, s1ap_MMEStatusTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_MMEStatusTransfer_protocolIEs 
   (const char* name, const s1ap_MMEStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEStatusTransfer_protocolIEs (const char* name, 
   s1ap_MMEStatusTransfer_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEStatusTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEStatusTransfer_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_MMEStatusTransfer_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_MMEStatusTransfer_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_MMEStatusTransfer_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_MMEStatusTransfer_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_StatusTransfer_TransparentContainer to list */
struct s1ap_ENB_StatusTransfer_TransparentContainer ;
EXTERN int asn1Append_s1ap_MMEStatusTransfer_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_MMEStatusTransfer_protocolIEs* plist, struct 
   s1ap_ENB_StatusTransfer_TransparentContainer *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MMEStatusTransfer_protocolIEs_element* 
   asn1Get_s1ap_MMEStatusTransfer_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_MMEStatusTransfer_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_MMEStatusTransfer_protocolIEs (OSCTXT* pctxt, 
   const s1ap_MMEStatusTransfer_protocolIEs* pSrcValue, 
   s1ap_MMEStatusTransfer_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_MMEStatusTransfer_protocolIEs (
   s1ap_MMEStatusTransfer_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_MMEStatusTransfer_protocolIEs (OSCTXT *pctxt, 
   s1ap_MMEStatusTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEStatusTransfer                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 MME STATUS TRANSFER ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 MME Status Transfer

 **************************************************************
MMEStatusTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({MMEStatusTransferIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({MMEStatusTransferIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MMEStatusTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_MMEStatusTransfer {
   s1ap_MMEStatusTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_MMEStatusTransfer;

EXTERN int asn1PE_s1ap_MMEStatusTransfer (OSCTXT* pctxt, s1ap_MMEStatusTransfer* pvalue);

EXTERN int asn1PD_s1ap_MMEStatusTransfer (OSCTXT* pctxt, s1ap_MMEStatusTransfer* pvalue);

EXTERN void asn1Print_s1ap_MMEStatusTransfer 
   (const char* name, const s1ap_MMEStatusTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEStatusTransfer (const char* name, 
   s1ap_MMEStatusTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEStatusTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEStatusTransfer* pvalue);

EXTERN void asn1Copy_s1ap_MMEStatusTransfer (OSCTXT* pctxt, 
   const s1ap_MMEStatusTransfer* pSrcValue, s1ap_MMEStatusTransfer* pDstValue);

EXTERN int asn1Init_s1ap_MMEStatusTransfer (s1ap_MMEStatusTransfer* pvalue);

EXTERN void asn1Free_s1ap_MMEStatusTransfer (OSCTXT *pctxt, 
   s1ap_MMEStatusTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  DeactivateTrace_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DeactivateTrace'
*/
typedef struct EXTERN s1ap_DeactivateTrace_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      DeactivateTraceIEs_TVALUE t;

      /**
       * DeactivateTraceIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _DeactivateTraceIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _DeactivateTraceIEs_2;
         /**
          * id: id-E-UTRAN-Trace-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_UTRAN_Trace_ID *_DeactivateTraceIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_DeactivateTrace_protocolIEs_element;

EXTERN int asn1PE_s1ap_DeactivateTrace_protocolIEs_element (OSCTXT* pctxt, s1ap_DeactivateTrace_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_DeactivateTrace_protocolIEs_element (OSCTXT* pctxt, s1ap_DeactivateTrace_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_DeactivateTrace_protocolIEs_element 
   (const char* name, const s1ap_DeactivateTrace_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_DeactivateTrace_protocolIEs_element (const char* name, 
   s1ap_DeactivateTrace_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DeactivateTrace_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_DeactivateTrace_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_DeactivateTrace_protocolIEs_element_DeactivateTraceIEs_1
   (OSCTXT* pctxt, s1ap_DeactivateTrace_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DeactivateTrace_protocolIEs_element_DeactivateTraceIEs_2
   (OSCTXT* pctxt, s1ap_DeactivateTrace_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DeactivateTrace_protocolIEs_element_DeactivateTraceIEs_3
   (OSCTXT* pctxt, s1ap_DeactivateTrace_protocolIEs_element* pElem, 
   s1ap_E_UTRAN_Trace_ID *pvalue);

EXTERN void asn1Copy_s1ap_DeactivateTrace_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_DeactivateTrace_protocolIEs_element* pSrcValue, 
   s1ap_DeactivateTrace_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_DeactivateTrace_protocolIEs_element (
   s1ap_DeactivateTrace_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DeactivateTrace_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DeactivateTrace'
*/
/* List of s1ap_DeactivateTrace_protocolIEs_element */
typedef OSRTDList s1ap_DeactivateTrace_protocolIEs;

EXTERN int asn1PE_s1ap_DeactivateTrace_protocolIEs (OSCTXT* pctxt, s1ap_DeactivateTrace_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_DeactivateTrace_protocolIEs (OSCTXT* pctxt, s1ap_DeactivateTrace_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_DeactivateTrace_protocolIEs 
   (const char* name, const s1ap_DeactivateTrace_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_DeactivateTrace_protocolIEs (const char* name, 
   s1ap_DeactivateTrace_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DeactivateTrace_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_DeactivateTrace_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DeactivateTrace_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_DeactivateTrace_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DeactivateTrace_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_DeactivateTrace_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_UTRAN_Trace_ID to list */
struct s1ap_E_UTRAN_Trace_ID ;
EXTERN int asn1Append_s1ap_DeactivateTrace_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_DeactivateTrace_protocolIEs* plist, struct s1ap_E_UTRAN_Trace_ID 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_DeactivateTrace_protocolIEs_element* 
   asn1Get_s1ap_DeactivateTrace_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_DeactivateTrace_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_DeactivateTrace_protocolIEs (OSCTXT* pctxt, 
   const s1ap_DeactivateTrace_protocolIEs* pSrcValue, 
   s1ap_DeactivateTrace_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_DeactivateTrace_protocolIEs (
   s1ap_DeactivateTrace_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_DeactivateTrace_protocolIEs (OSCTXT *pctxt, 
   s1ap_DeactivateTrace_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DeactivateTrace                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 DEACTIVATE TRACE ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Deactivate Trace

 **************************************************************
DeactivateTrace ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({DeactivateTraceIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({DeactivateTraceIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({DeactivateTraceIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_DeactivateTrace {
   s1ap_DeactivateTrace_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_DeactivateTrace;

EXTERN int asn1PE_s1ap_DeactivateTrace (OSCTXT* pctxt, s1ap_DeactivateTrace* pvalue);

EXTERN int asn1PD_s1ap_DeactivateTrace (OSCTXT* pctxt, s1ap_DeactivateTrace* pvalue);

EXTERN void asn1Print_s1ap_DeactivateTrace 
   (const char* name, const s1ap_DeactivateTrace* pvalue);

EXTERN int asn1PrtToStr_s1ap_DeactivateTrace (const char* name, 
   s1ap_DeactivateTrace* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DeactivateTrace (OSCTXT *pctxt, 
   const char* name, const s1ap_DeactivateTrace* pvalue);

EXTERN void asn1Copy_s1ap_DeactivateTrace (OSCTXT* pctxt, 
   const s1ap_DeactivateTrace* pSrcValue, s1ap_DeactivateTrace* pDstValue);

EXTERN int asn1Init_s1ap_DeactivateTrace (s1ap_DeactivateTrace* pvalue);

EXTERN void asn1Free_s1ap_DeactivateTrace (OSCTXT *pctxt, 
   s1ap_DeactivateTrace* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceStart_protocolIEs_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceStart'
*/
typedef struct EXTERN s1ap_TraceStart_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      TraceStartIEs_TVALUE t;

      /**
       * TraceStartIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _TraceStartIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _TraceStartIEs_2;
         /**
          * id: id-TraceActivation
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TraceActivation *_TraceStartIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_TraceStart_protocolIEs_element;

EXTERN int asn1PE_s1ap_TraceStart_protocolIEs_element (OSCTXT* pctxt, s1ap_TraceStart_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_TraceStart_protocolIEs_element (OSCTXT* pctxt, s1ap_TraceStart_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_TraceStart_protocolIEs_element 
   (const char* name, const s1ap_TraceStart_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceStart_protocolIEs_element (const char* name, 
   s1ap_TraceStart_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceStart_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceStart_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_TraceStart_protocolIEs_element_TraceStartIEs_1
   (OSCTXT* pctxt, s1ap_TraceStart_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_TraceStart_protocolIEs_element_TraceStartIEs_2
   (OSCTXT* pctxt, s1ap_TraceStart_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_TraceStart_protocolIEs_element_TraceStartIEs_3
   (OSCTXT* pctxt, s1ap_TraceStart_protocolIEs_element* pElem, 
   s1ap_TraceActivation *pvalue);

EXTERN void asn1Copy_s1ap_TraceStart_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_TraceStart_protocolIEs_element* pSrcValue, 
   s1ap_TraceStart_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_TraceStart_protocolIEs_element (
   s1ap_TraceStart_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_TraceStart_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_TraceStart_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceStart_protocolIEs                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceStart'
*/
/* List of s1ap_TraceStart_protocolIEs_element */
typedef OSRTDList s1ap_TraceStart_protocolIEs;

EXTERN int asn1PE_s1ap_TraceStart_protocolIEs (OSCTXT* pctxt, s1ap_TraceStart_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_TraceStart_protocolIEs (OSCTXT* pctxt, s1ap_TraceStart_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_TraceStart_protocolIEs 
   (const char* name, const s1ap_TraceStart_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceStart_protocolIEs (const char* name, 
   s1ap_TraceStart_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceStart_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceStart_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_TraceStart_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_TraceStart_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_TraceStart_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_TraceStart_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_TraceActivation to list */
struct s1ap_TraceActivation ;
EXTERN int asn1Append_s1ap_TraceStart_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_TraceStart_protocolIEs* plist, struct s1ap_TraceActivation *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TraceStart_protocolIEs_element* 
   asn1Get_s1ap_TraceStart_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_TraceStart_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_TraceStart_protocolIEs (OSCTXT* pctxt, 
   const s1ap_TraceStart_protocolIEs* pSrcValue, s1ap_TraceStart_protocolIEs*
    pDstValue);

EXTERN int asn1Init_s1ap_TraceStart_protocolIEs (s1ap_TraceStart_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_TraceStart_protocolIEs (OSCTXT *pctxt, 
   s1ap_TraceStart_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceStart                                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 TRACE ELEMENTARY PROCEDURES

 **************************************************************
 **************************************************************

 Trace Start

 **************************************************************
TraceStart ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({TraceStartIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({TraceStartIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({TraceStartIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_TraceStart {
   s1ap_TraceStart_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_TraceStart;

EXTERN int asn1PE_s1ap_TraceStart (OSCTXT* pctxt, s1ap_TraceStart* pvalue);

EXTERN int asn1PD_s1ap_TraceStart (OSCTXT* pctxt, s1ap_TraceStart* pvalue);

EXTERN void asn1Print_s1ap_TraceStart 
   (const char* name, const s1ap_TraceStart* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceStart (const char* name, s1ap_TraceStart* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceStart (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceStart* pvalue);

EXTERN void asn1Copy_s1ap_TraceStart (OSCTXT* pctxt, 
   const s1ap_TraceStart* pSrcValue, s1ap_TraceStart* pDstValue);

EXTERN int asn1Init_s1ap_TraceStart (s1ap_TraceStart* pvalue);

EXTERN void asn1Free_s1ap_TraceStart (OSCTXT *pctxt, s1ap_TraceStart* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceFailureIndication_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceFailureIndication'
*/
typedef struct EXTERN s1ap_TraceFailureIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      TraceFailureIndicationIEs_TVALUE t;

      /**
       * TraceFailureIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _TraceFailureIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _TraceFailureIndicationIEs_2;
         /**
          * id: id-E-UTRAN-Trace-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_UTRAN_Trace_ID *_TraceFailureIndicationIEs_3;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_TraceFailureIndicationIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_TraceFailureIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_TraceFailureIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_TraceFailureIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_TraceFailureIndication_protocolIEs_element 
   (const char* name, const s1ap_TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceFailureIndication_protocolIEs_element (
   const char* name, s1ap_TraceFailureIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_1
   (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_2
   (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_3
   (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs_element* pElem, 
   s1ap_E_UTRAN_Trace_ID *pvalue);

EXTERN void asn1SetTC_s1ap_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_4
   (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1Copy_s1ap_TraceFailureIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_TraceFailureIndication_protocolIEs_element* pSrcValue, 
   s1ap_TraceFailureIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_TraceFailureIndication_protocolIEs_element (
   s1ap_TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_TraceFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_TraceFailureIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceFailureIndication_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceFailureIndication'
*/
/* List of s1ap_TraceFailureIndication_protocolIEs_element */
typedef OSRTDList s1ap_TraceFailureIndication_protocolIEs;

EXTERN int asn1PE_s1ap_TraceFailureIndication_protocolIEs (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_TraceFailureIndication_protocolIEs (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_TraceFailureIndication_protocolIEs 
   (const char* name, const s1ap_TraceFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceFailureIndication_protocolIEs (const char* name, 
   s1ap_TraceFailureIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceFailureIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceFailureIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_TraceFailureIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_TraceFailureIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_UTRAN_Trace_ID to list */
struct s1ap_E_UTRAN_Trace_ID ;
EXTERN int asn1Append_s1ap_TraceFailureIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs* plist, struct 
   s1ap_E_UTRAN_Trace_ID *pvalue);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_TraceFailureIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_TraceFailureIndication_protocolIEs* plist, struct 
   s1ap_Cause *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_TraceFailureIndication_protocolIEs_element* 
   asn1Get_s1ap_TraceFailureIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_TraceFailureIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_TraceFailureIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_TraceFailureIndication_protocolIEs* pSrcValue, 
   s1ap_TraceFailureIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_TraceFailureIndication_protocolIEs (
   s1ap_TraceFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_TraceFailureIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_TraceFailureIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceFailureIndication                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Trace Failure Indication

 **************************************************************
TraceFailureIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({TraceFailureIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({TraceFailureIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({TraceFailureIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_TraceFailureIndication {
   s1ap_TraceFailureIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_TraceFailureIndication;

EXTERN int asn1PE_s1ap_TraceFailureIndication (OSCTXT* pctxt, s1ap_TraceFailureIndication* pvalue);

EXTERN int asn1PD_s1ap_TraceFailureIndication (OSCTXT* pctxt, s1ap_TraceFailureIndication* pvalue);

EXTERN void asn1Print_s1ap_TraceFailureIndication 
   (const char* name, const s1ap_TraceFailureIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_TraceFailureIndication (const char* name, 
   s1ap_TraceFailureIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TraceFailureIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_TraceFailureIndication* pvalue);

EXTERN void asn1Copy_s1ap_TraceFailureIndication (OSCTXT* pctxt, 
   const s1ap_TraceFailureIndication* pSrcValue, s1ap_TraceFailureIndication*
    pDstValue);

EXTERN int asn1Init_s1ap_TraceFailureIndication (s1ap_TraceFailureIndication* pvalue);

EXTERN void asn1Free_s1ap_TraceFailureIndication (OSCTXT *pctxt, 
   s1ap_TraceFailureIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  CellTrafficTrace_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellTrafficTrace'
*/
typedef struct EXTERN s1ap_CellTrafficTrace_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      CellTrafficTraceIEs_TVALUE t;

      /**
       * CellTrafficTraceIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _CellTrafficTraceIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _CellTrafficTraceIEs_2;
         /**
          * id: id-E-UTRAN-Trace-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_UTRAN_Trace_ID *_CellTrafficTraceIEs_3;
         /**
          * id: id-EUTRAN-CGI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_EUTRAN_CGI *_CellTrafficTraceIEs_4;
         /**
          * id: id-TraceCollectionEntityIPAddress
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TransportLayerAddress *_CellTrafficTraceIEs_5;
         /**
          * id: id-PrivacyIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PrivacyIndicator _CellTrafficTraceIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_CellTrafficTrace_protocolIEs_element;

EXTERN int asn1PE_s1ap_CellTrafficTrace_protocolIEs_element (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_CellTrafficTrace_protocolIEs_element (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_CellTrafficTrace_protocolIEs_element 
   (const char* name, const s1ap_CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellTrafficTrace_protocolIEs_element (const char* name, 
   s1ap_CellTrafficTrace_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellTrafficTrace_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_1
   (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_2
   (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_3
   (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pElem, 
   s1ap_E_UTRAN_Trace_ID *pvalue);

EXTERN void asn1SetTC_s1ap_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_4
   (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pElem, 
   s1ap_EUTRAN_CGI *pvalue);

EXTERN void asn1SetTC_s1ap_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_5
   (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pElem, 
   s1ap_TransportLayerAddress *pvalue);

EXTERN void asn1SetTC_s1ap_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_6
   (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs_element* pElem, 
   s1ap_PrivacyIndicator value);

EXTERN void asn1Copy_s1ap_CellTrafficTrace_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_CellTrafficTrace_protocolIEs_element* pSrcValue, 
   s1ap_CellTrafficTrace_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_CellTrafficTrace_protocolIEs_element (
   s1ap_CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_CellTrafficTrace_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_CellTrafficTrace_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellTrafficTrace_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellTrafficTrace'
*/
/* List of s1ap_CellTrafficTrace_protocolIEs_element */
typedef OSRTDList s1ap_CellTrafficTrace_protocolIEs;

EXTERN int asn1PE_s1ap_CellTrafficTrace_protocolIEs (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_CellTrafficTrace_protocolIEs (OSCTXT* pctxt, s1ap_CellTrafficTrace_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_CellTrafficTrace_protocolIEs 
   (const char* name, const s1ap_CellTrafficTrace_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellTrafficTrace_protocolIEs (const char* name, 
   s1ap_CellTrafficTrace_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellTrafficTrace_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_CellTrafficTrace_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_CellTrafficTrace_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_CellTrafficTrace_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_CellTrafficTrace_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_CellTrafficTrace_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_UTRAN_Trace_ID to list */
struct s1ap_E_UTRAN_Trace_ID ;
EXTERN int asn1Append_s1ap_CellTrafficTrace_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_CellTrafficTrace_protocolIEs* plist, struct s1ap_E_UTRAN_Trace_ID 
   *pvalue);

/* Append IE with value type s1ap_EUTRAN_CGI to list */
struct s1ap_EUTRAN_CGI ;
EXTERN int asn1Append_s1ap_CellTrafficTrace_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_CellTrafficTrace_protocolIEs* plist, struct s1ap_EUTRAN_CGI *pvalue);

/* Append IE with value type s1ap_TransportLayerAddress to list */
EXTERN int asn1Append_s1ap_CellTrafficTrace_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_CellTrafficTrace_protocolIEs* plist, s1ap_TransportLayerAddress 
   *pvalue);

/* Append IE with value type s1ap_PrivacyIndicator to list */
EXTERN int asn1Append_s1ap_CellTrafficTrace_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_CellTrafficTrace_protocolIEs* plist, s1ap_PrivacyIndicator value);

/* Get IE using id key value */
EXTERN struct s1ap_CellTrafficTrace_protocolIEs_element* 
   asn1Get_s1ap_CellTrafficTrace_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_CellTrafficTrace_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_CellTrafficTrace_protocolIEs (OSCTXT* pctxt, 
   const s1ap_CellTrafficTrace_protocolIEs* pSrcValue, 
   s1ap_CellTrafficTrace_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_CellTrafficTrace_protocolIEs (
   s1ap_CellTrafficTrace_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_CellTrafficTrace_protocolIEs (OSCTXT *pctxt, 
   s1ap_CellTrafficTrace_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  CellTrafficTrace                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 CELL TRAFFIC TRACE ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Cell Traffic Trace

 **************************************************************
CellTrafficTrace ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({CellTrafficTraceIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({CellTrafficTraceIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({CellTrafficTraceIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_CellTrafficTrace {
   s1ap_CellTrafficTrace_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_CellTrafficTrace;

EXTERN int asn1PE_s1ap_CellTrafficTrace (OSCTXT* pctxt, s1ap_CellTrafficTrace* pvalue);

EXTERN int asn1PD_s1ap_CellTrafficTrace (OSCTXT* pctxt, s1ap_CellTrafficTrace* pvalue);

EXTERN void asn1Print_s1ap_CellTrafficTrace 
   (const char* name, const s1ap_CellTrafficTrace* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellTrafficTrace (const char* name, 
   s1ap_CellTrafficTrace* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellTrafficTrace (OSCTXT *pctxt, 
   const char* name, const s1ap_CellTrafficTrace* pvalue);

EXTERN void asn1Copy_s1ap_CellTrafficTrace (OSCTXT* pctxt, 
   const s1ap_CellTrafficTrace* pSrcValue, s1ap_CellTrafficTrace* pDstValue);

EXTERN int asn1Init_s1ap_CellTrafficTrace (s1ap_CellTrafficTrace* pvalue);

EXTERN void asn1Free_s1ap_CellTrafficTrace (OSCTXT *pctxt, 
   s1ap_CellTrafficTrace* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingControl_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingControl'
*/
typedef struct EXTERN s1ap_LocationReportingControl_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      LocationReportingControlIEs_TVALUE t;

      /**
       * LocationReportingControlIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _LocationReportingControlIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _LocationReportingControlIEs_2;
         /**
          * id: id-RequestType
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_RequestType *_LocationReportingControlIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_LocationReportingControl_protocolIEs_element;

EXTERN int asn1PE_s1ap_LocationReportingControl_protocolIEs_element (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_LocationReportingControl_protocolIEs_element (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_LocationReportingControl_protocolIEs_element 
   (const char* name, const s1ap_LocationReportingControl_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReportingControl_protocolIEs_element (
   const char* name, 
   s1ap_LocationReportingControl_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReportingControl_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReportingControl_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_LocationReportingControl_protocolIEs_element_LocationReportingControlIEs_1
   (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_LocationReportingControl_protocolIEs_element_LocationReportingControlIEs_2
   (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_LocationReportingControl_protocolIEs_element_LocationReportingControlIEs_3
   (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs_element* pElem, 
   s1ap_RequestType *pvalue);

EXTERN void asn1Copy_s1ap_LocationReportingControl_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_LocationReportingControl_protocolIEs_element* pSrcValue, 
   s1ap_LocationReportingControl_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_LocationReportingControl_protocolIEs_element (
   s1ap_LocationReportingControl_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_LocationReportingControl_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_LocationReportingControl_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingControl_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingControl'
*/
/* List of s1ap_LocationReportingControl_protocolIEs_element */
typedef OSRTDList s1ap_LocationReportingControl_protocolIEs;

EXTERN int asn1PE_s1ap_LocationReportingControl_protocolIEs (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_LocationReportingControl_protocolIEs (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_LocationReportingControl_protocolIEs 
   (const char* name, const s1ap_LocationReportingControl_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReportingControl_protocolIEs (const char* name, 
   s1ap_LocationReportingControl_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReportingControl_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReportingControl_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_LocationReportingControl_protocolIEs_1
      (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_LocationReportingControl_protocolIEs_2
      (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_RequestType to list */
struct s1ap_RequestType ;
EXTERN int asn1Append_s1ap_LocationReportingControl_protocolIEs_3
      (OSCTXT* pctxt, s1ap_LocationReportingControl_protocolIEs* plist, struct 
   s1ap_RequestType *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_LocationReportingControl_protocolIEs_element* 
   asn1Get_s1ap_LocationReportingControl_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_LocationReportingControl_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_LocationReportingControl_protocolIEs (OSCTXT* pctxt, 
   const s1ap_LocationReportingControl_protocolIEs* pSrcValue, 
   s1ap_LocationReportingControl_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_LocationReportingControl_protocolIEs (
   s1ap_LocationReportingControl_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_LocationReportingControl_protocolIEs (OSCTXT *pctxt, 
   s1ap_LocationReportingControl_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingControl                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 LOCATION ELEMENTARY PROCEDURES

 **************************************************************
 **************************************************************

 Location Reporting Control

 **************************************************************
LocationReportingControl ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({LocationReportingControlIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({LocationReportingControlIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({LocationReportingControlIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_LocationReportingControl {
   s1ap_LocationReportingControl_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_LocationReportingControl;

EXTERN int asn1PE_s1ap_LocationReportingControl (OSCTXT* pctxt, s1ap_LocationReportingControl* pvalue);

EXTERN int asn1PD_s1ap_LocationReportingControl (OSCTXT* pctxt, s1ap_LocationReportingControl* pvalue);

EXTERN void asn1Print_s1ap_LocationReportingControl 
   (const char* name, const s1ap_LocationReportingControl* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReportingControl (const char* name, 
   s1ap_LocationReportingControl* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReportingControl (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReportingControl* pvalue);

EXTERN void asn1Copy_s1ap_LocationReportingControl (OSCTXT* pctxt, 
   const s1ap_LocationReportingControl* pSrcValue, 
   s1ap_LocationReportingControl* pDstValue);

EXTERN int asn1Init_s1ap_LocationReportingControl (
   s1ap_LocationReportingControl* pvalue);

EXTERN void asn1Free_s1ap_LocationReportingControl (OSCTXT *pctxt, 
   s1ap_LocationReportingControl* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingFailureIndication_protocolIEs_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingFailureIndication'
*/
typedef struct EXTERN s1ap_LocationReportingFailureIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      LocationReportingFailureIndicationIEs_TVALUE t;

      /**
       * LocationReportingFailureIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _LocationReportingFailureIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _LocationReportingFailureIndicationIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_LocationReportingFailureIndicationIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_LocationReportingFailureIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_LocationReportingFailureIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_LocationReportingFailureIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_LocationReportingFailureIndication_protocolIEs_element 
   (const char* name, const s1ap_LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReportingFailureIndication_protocolIEs_element (
   const char* name, 
   s1ap_LocationReportingFailureIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReportingFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_LocationReportingFailureIndication_protocolIEs_element_LocationReportingFailureIndicationIEs_1
   (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_LocationReportingFailureIndication_protocolIEs_element_LocationReportingFailureIndicationIEs_2
   (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_LocationReportingFailureIndication_protocolIEs_element_LocationReportingFailureIndicationIEs_3
   (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication_protocolIEs_element* pElem
   , s1ap_Cause *pvalue);

EXTERN void asn1Copy_s1ap_LocationReportingFailureIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_LocationReportingFailureIndication_protocolIEs_element* pSrcValue, 
   s1ap_LocationReportingFailureIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_LocationReportingFailureIndication_protocolIEs_element (
   s1ap_LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_LocationReportingFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_LocationReportingFailureIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingFailureIndication_protocolIEs            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingFailureIndication'
*/
/* List of s1ap_LocationReportingFailureIndication_protocolIEs_element */
typedef OSRTDList s1ap_LocationReportingFailureIndication_protocolIEs;

EXTERN int asn1PE_s1ap_LocationReportingFailureIndication_protocolIEs (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_LocationReportingFailureIndication_protocolIEs (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_LocationReportingFailureIndication_protocolIEs 
   (const char* name, const s1ap_LocationReportingFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReportingFailureIndication_protocolIEs (
   const char* name, 
   s1ap_LocationReportingFailureIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReportingFailureIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReportingFailureIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_LocationReportingFailureIndication_protocolIEs_1
      (OSCTXT* pctxt, 
   s1ap_LocationReportingFailureIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_LocationReportingFailureIndication_protocolIEs_2
      (OSCTXT* pctxt, 
   s1ap_LocationReportingFailureIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_LocationReportingFailureIndication_protocolIEs_3
      (OSCTXT* pctxt, 
   s1ap_LocationReportingFailureIndication_protocolIEs* plist, struct 
   s1ap_Cause *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_LocationReportingFailureIndication_protocolIEs_element* 
   asn1Get_s1ap_LocationReportingFailureIndication_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_LocationReportingFailureIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_LocationReportingFailureIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_LocationReportingFailureIndication_protocolIEs* pSrcValue, 
   s1ap_LocationReportingFailureIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_LocationReportingFailureIndication_protocolIEs (
   s1ap_LocationReportingFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_LocationReportingFailureIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_LocationReportingFailureIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingFailureIndication                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Location Report Failure Indication

 **************************************************************
LocationReportingFailureIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({LocationReportingFailureIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({LocationReportingFailureIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({LocationReportingFailureIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_LocationReportingFailureIndication {
   s1ap_LocationReportingFailureIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_LocationReportingFailureIndication;

EXTERN int asn1PE_s1ap_LocationReportingFailureIndication (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication* pvalue);

EXTERN int asn1PD_s1ap_LocationReportingFailureIndication (OSCTXT* pctxt, s1ap_LocationReportingFailureIndication* pvalue);

EXTERN void asn1Print_s1ap_LocationReportingFailureIndication 
   (const char* name, const s1ap_LocationReportingFailureIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReportingFailureIndication (const char* name, 
   s1ap_LocationReportingFailureIndication* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReportingFailureIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReportingFailureIndication* pvalue);

EXTERN void asn1Copy_s1ap_LocationReportingFailureIndication (OSCTXT* pctxt, 
   const s1ap_LocationReportingFailureIndication* pSrcValue, 
   s1ap_LocationReportingFailureIndication* pDstValue);

EXTERN int asn1Init_s1ap_LocationReportingFailureIndication (
   s1ap_LocationReportingFailureIndication* pvalue);

EXTERN void asn1Free_s1ap_LocationReportingFailureIndication (OSCTXT *pctxt, 
   s1ap_LocationReportingFailureIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReport_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReport'
*/
typedef struct EXTERN s1ap_LocationReport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      LocationReportIEs_TVALUE t;

      /**
       * LocationReportIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _LocationReportIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _LocationReportIEs_2;
         /**
          * id: id-EUTRAN-CGI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_EUTRAN_CGI *_LocationReportIEs_3;
         /**
          * id: id-TAI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TAI *_LocationReportIEs_4;
         /**
          * id: id-RequestType
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_RequestType *_LocationReportIEs_5;
         /**
          * id: id-PSCellInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PSCellInformation *_LocationReportIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_LocationReport_protocolIEs_element;

EXTERN int asn1PE_s1ap_LocationReport_protocolIEs_element (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_LocationReport_protocolIEs_element (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_LocationReport_protocolIEs_element 
   (const char* name, const s1ap_LocationReport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReport_protocolIEs_element (const char* name, 
   s1ap_LocationReport_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_LocationReport_protocolIEs_element_LocationReportIEs_1
   (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_LocationReport_protocolIEs_element_LocationReportIEs_2
   (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_LocationReport_protocolIEs_element_LocationReportIEs_3
   (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pElem, 
   s1ap_EUTRAN_CGI *pvalue);

EXTERN void asn1SetTC_s1ap_LocationReport_protocolIEs_element_LocationReportIEs_4
   (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pElem, s1ap_TAI 
   *pvalue);

EXTERN void asn1SetTC_s1ap_LocationReport_protocolIEs_element_LocationReportIEs_5
   (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pElem, 
   s1ap_RequestType *pvalue);

EXTERN void asn1SetTC_s1ap_LocationReport_protocolIEs_element_LocationReportIEs_6
   (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs_element* pElem, 
   s1ap_PSCellInformation *pvalue);

EXTERN void asn1Copy_s1ap_LocationReport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_LocationReport_protocolIEs_element* pSrcValue, 
   s1ap_LocationReport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_LocationReport_protocolIEs_element (
   s1ap_LocationReport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_LocationReport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_LocationReport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReport_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReport'
*/
/* List of s1ap_LocationReport_protocolIEs_element */
typedef OSRTDList s1ap_LocationReport_protocolIEs;

EXTERN int asn1PE_s1ap_LocationReport_protocolIEs (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_LocationReport_protocolIEs (OSCTXT* pctxt, s1ap_LocationReport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_LocationReport_protocolIEs 
   (const char* name, const s1ap_LocationReport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReport_protocolIEs (const char* name, 
   s1ap_LocationReport_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReport_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_LocationReport_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_LocationReport_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_LocationReport_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_LocationReport_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_EUTRAN_CGI to list */
struct s1ap_EUTRAN_CGI ;
EXTERN int asn1Append_s1ap_LocationReport_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_LocationReport_protocolIEs* plist, struct s1ap_EUTRAN_CGI *pvalue);

/* Append IE with value type s1ap_TAI to list */
struct s1ap_TAI ;
EXTERN int asn1Append_s1ap_LocationReport_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_LocationReport_protocolIEs* plist, struct s1ap_TAI *pvalue);

/* Append IE with value type s1ap_RequestType to list */
struct s1ap_RequestType ;
EXTERN int asn1Append_s1ap_LocationReport_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_LocationReport_protocolIEs* plist, struct s1ap_RequestType *pvalue);

/* Append IE with value type s1ap_PSCellInformation to list */
struct s1ap_PSCellInformation ;
EXTERN int asn1Append_s1ap_LocationReport_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_LocationReport_protocolIEs* plist, struct s1ap_PSCellInformation 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_LocationReport_protocolIEs_element* 
   asn1Get_s1ap_LocationReport_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_LocationReport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_LocationReport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_LocationReport_protocolIEs* pSrcValue, 
   s1ap_LocationReport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_LocationReport_protocolIEs (
   s1ap_LocationReport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_LocationReport_protocolIEs (OSCTXT *pctxt, 
   s1ap_LocationReport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReport                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Location Report 

 **************************************************************
LocationReport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({LocationReportIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({LocationReportIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({LocationReportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_LocationReport {
   s1ap_LocationReport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_LocationReport;

EXTERN int asn1PE_s1ap_LocationReport (OSCTXT* pctxt, s1ap_LocationReport* pvalue);

EXTERN int asn1PD_s1ap_LocationReport (OSCTXT* pctxt, s1ap_LocationReport* pvalue);

EXTERN void asn1Print_s1ap_LocationReport 
   (const char* name, const s1ap_LocationReport* pvalue);

EXTERN int asn1PrtToStr_s1ap_LocationReport (const char* name, 
   s1ap_LocationReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_LocationReport (OSCTXT *pctxt, 
   const char* name, const s1ap_LocationReport* pvalue);

EXTERN void asn1Copy_s1ap_LocationReport (OSCTXT* pctxt, 
   const s1ap_LocationReport* pSrcValue, s1ap_LocationReport* pDstValue);

EXTERN int asn1Init_s1ap_LocationReport (s1ap_LocationReport* pvalue);

EXTERN void asn1Free_s1ap_LocationReport (OSCTXT *pctxt, s1ap_LocationReport* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStart_protocolIEs_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStart'
*/
typedef struct EXTERN s1ap_OverloadStart_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      OverloadStartIEs_TVALUE t;

      /**
       * OverloadStartIEs information objects
       */
      union {
         /**
          * id: id-OverloadResponse
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_OverloadResponse *_OverloadStartIEs_1;
         /**
          * id: id-GUMMEIList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_GUMMEIList *_OverloadStartIEs_2;
         /**
          * id: id-TrafficLoadReductionIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TrafficLoadReductionIndication _OverloadStartIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_OverloadStart_protocolIEs_element;

EXTERN int asn1PE_s1ap_OverloadStart_protocolIEs_element (OSCTXT* pctxt, s1ap_OverloadStart_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_OverloadStart_protocolIEs_element (OSCTXT* pctxt, s1ap_OverloadStart_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_OverloadStart_protocolIEs_element 
   (const char* name, const s1ap_OverloadStart_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadStart_protocolIEs_element (const char* name, 
   s1ap_OverloadStart_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadStart_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadStart_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_OverloadStart_protocolIEs_element_OverloadStartIEs_1
   (OSCTXT* pctxt, s1ap_OverloadStart_protocolIEs_element* pElem, 
   s1ap_OverloadResponse *pvalue);

EXTERN void asn1SetTC_s1ap_OverloadStart_protocolIEs_element_OverloadStartIEs_2
   (OSCTXT* pctxt, s1ap_OverloadStart_protocolIEs_element* pElem, 
   s1ap_GUMMEIList *pvalue);

EXTERN void asn1SetTC_s1ap_OverloadStart_protocolIEs_element_OverloadStartIEs_3
   (OSCTXT* pctxt, s1ap_OverloadStart_protocolIEs_element* pElem, 
   s1ap_TrafficLoadReductionIndication value);

EXTERN void asn1Copy_s1ap_OverloadStart_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_OverloadStart_protocolIEs_element* pSrcValue, 
   s1ap_OverloadStart_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_OverloadStart_protocolIEs_element (
   s1ap_OverloadStart_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_OverloadStart_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_OverloadStart_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStart_protocolIEs                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStart'
*/
/* List of s1ap_OverloadStart_protocolIEs_element */
typedef OSRTDList s1ap_OverloadStart_protocolIEs;

EXTERN int asn1PE_s1ap_OverloadStart_protocolIEs (OSCTXT* pctxt, s1ap_OverloadStart_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_OverloadStart_protocolIEs (OSCTXT* pctxt, s1ap_OverloadStart_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_OverloadStart_protocolIEs 
   (const char* name, const s1ap_OverloadStart_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadStart_protocolIEs (const char* name, 
   s1ap_OverloadStart_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadStart_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadStart_protocolIEs* pvalue);

/* Append IE with value type s1ap_OverloadResponse to list */
struct s1ap_OverloadResponse ;
EXTERN int asn1Append_s1ap_OverloadStart_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_OverloadStart_protocolIEs* plist, struct s1ap_OverloadResponse *pvalue)
   ;

/* Append IE with value type s1ap_GUMMEIList to list */
EXTERN int asn1Append_s1ap_OverloadStart_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_OverloadStart_protocolIEs* plist, s1ap_GUMMEIList *pvalue);

/* Append IE with value type s1ap_TrafficLoadReductionIndication to list */
EXTERN int asn1Append_s1ap_OverloadStart_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_OverloadStart_protocolIEs* plist, s1ap_TrafficLoadReductionIndication 
   value);

/* Get IE using id key value */
EXTERN struct s1ap_OverloadStart_protocolIEs_element* 
   asn1Get_s1ap_OverloadStart_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_OverloadStart_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_OverloadStart_protocolIEs (OSCTXT* pctxt, 
   const s1ap_OverloadStart_protocolIEs* pSrcValue, 
   s1ap_OverloadStart_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_OverloadStart_protocolIEs (
   s1ap_OverloadStart_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_OverloadStart_protocolIEs (OSCTXT *pctxt, 
   s1ap_OverloadStart_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStart                                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 OVERLOAD ELEMENTARY PROCEDURES

 **************************************************************
 **************************************************************

 Overload Start

 **************************************************************
OverloadStart ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({OverloadStartIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({OverloadStartIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({OverloadStartIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_OverloadStart {
   s1ap_OverloadStart_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_OverloadStart;

EXTERN int asn1PE_s1ap_OverloadStart (OSCTXT* pctxt, s1ap_OverloadStart* pvalue);

EXTERN int asn1PD_s1ap_OverloadStart (OSCTXT* pctxt, s1ap_OverloadStart* pvalue);

EXTERN void asn1Print_s1ap_OverloadStart 
   (const char* name, const s1ap_OverloadStart* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadStart (const char* name, 
   s1ap_OverloadStart* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadStart (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadStart* pvalue);

EXTERN void asn1Copy_s1ap_OverloadStart (OSCTXT* pctxt, 
   const s1ap_OverloadStart* pSrcValue, s1ap_OverloadStart* pDstValue);

EXTERN int asn1Init_s1ap_OverloadStart (s1ap_OverloadStart* pvalue);

EXTERN void asn1Free_s1ap_OverloadStart (OSCTXT *pctxt, s1ap_OverloadStart* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStop_protocolIEs_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStop'
*/
typedef struct EXTERN s1ap_OverloadStop_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      OverloadStopIEs_TVALUE t;

      /**
       * OverloadStopIEs information objects
       */
      union {
         /**
          * id: id-GUMMEIList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_GUMMEIList *_OverloadStopIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_OverloadStop_protocolIEs_element;

EXTERN int asn1PE_s1ap_OverloadStop_protocolIEs_element (OSCTXT* pctxt, s1ap_OverloadStop_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_OverloadStop_protocolIEs_element (OSCTXT* pctxt, s1ap_OverloadStop_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_OverloadStop_protocolIEs_element 
   (const char* name, const s1ap_OverloadStop_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadStop_protocolIEs_element (const char* name, 
   s1ap_OverloadStop_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadStop_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadStop_protocolIEs_element* pvalue);

EXTERN void asn1Copy_s1ap_OverloadStop_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_OverloadStop_protocolIEs_element* pSrcValue, 
   s1ap_OverloadStop_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_OverloadStop_protocolIEs_element (
   s1ap_OverloadStop_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_OverloadStop_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_OverloadStop_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStop_protocolIEs                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStop'
*/
/* List of s1ap_OverloadStop_protocolIEs_element */
typedef OSRTDList s1ap_OverloadStop_protocolIEs;

EXTERN int asn1PE_s1ap_OverloadStop_protocolIEs (OSCTXT* pctxt, s1ap_OverloadStop_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_OverloadStop_protocolIEs (OSCTXT* pctxt, s1ap_OverloadStop_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_OverloadStop_protocolIEs 
   (const char* name, const s1ap_OverloadStop_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadStop_protocolIEs (const char* name, 
   s1ap_OverloadStop_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadStop_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadStop_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_OverloadStop_protocolIEs_element* 
   asn1Get_s1ap_OverloadStop_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_OverloadStop_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_OverloadStop_protocolIEs (OSCTXT* pctxt, 
   const s1ap_OverloadStop_protocolIEs* pSrcValue, 
   s1ap_OverloadStop_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_OverloadStop_protocolIEs (
   s1ap_OverloadStop_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_OverloadStop_protocolIEs (OSCTXT *pctxt, 
   s1ap_OverloadStop_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStop                                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Overload Stop

 **************************************************************
OverloadStop ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({OverloadStopIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({OverloadStopIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({OverloadStopIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_OverloadStop {
   s1ap_OverloadStop_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_OverloadStop;

EXTERN int asn1PE_s1ap_OverloadStop (OSCTXT* pctxt, s1ap_OverloadStop* pvalue);

EXTERN int asn1PD_s1ap_OverloadStop (OSCTXT* pctxt, s1ap_OverloadStop* pvalue);

EXTERN void asn1Print_s1ap_OverloadStop 
   (const char* name, const s1ap_OverloadStop* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadStop (const char* name, 
   s1ap_OverloadStop* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadStop (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadStop* pvalue);

EXTERN void asn1Copy_s1ap_OverloadStop (OSCTXT* pctxt, 
   const s1ap_OverloadStop* pSrcValue, s1ap_OverloadStop* pDstValue);

EXTERN int asn1Init_s1ap_OverloadStop (s1ap_OverloadStop* pvalue);

EXTERN void asn1Free_s1ap_OverloadStop (OSCTXT *pctxt, s1ap_OverloadStop* pvalue);

/**************************************************************/
/*                                                            */
/*  Inter_SystemInformationTransferType                       */
/*                                                            */
/**************************************************************/
/*
Inter-SystemInformationTransferType ::= CHOICE {
   rIMTransfer [0] RIMTransfer,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_Inter_SystemInformationTransferType_rIMTransfer 1
#define T_s1ap_Inter_SystemInformationTransferType_extElem1 2

typedef struct EXTERN s1ap_Inter_SystemInformationTransferType {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_RIMTransfer *rIMTransfer;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_Inter_SystemInformationTransferType;

EXTERN int asn1PE_s1ap_Inter_SystemInformationTransferType (OSCTXT* pctxt, s1ap_Inter_SystemInformationTransferType* pvalue);

EXTERN int asn1PD_s1ap_Inter_SystemInformationTransferType (OSCTXT* pctxt, s1ap_Inter_SystemInformationTransferType* pvalue);

EXTERN void asn1Print_s1ap_Inter_SystemInformationTransferType 
   (const char* name, const s1ap_Inter_SystemInformationTransferType* pvalue);

EXTERN int asn1PrtToStr_s1ap_Inter_SystemInformationTransferType (const char* name, 
   s1ap_Inter_SystemInformationTransferType* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_Inter_SystemInformationTransferType (OSCTXT *pctxt, 
   const char* name, const s1ap_Inter_SystemInformationTransferType* pvalue);

EXTERN void asn1Copy_s1ap_Inter_SystemInformationTransferType (OSCTXT* pctxt, 
   const s1ap_Inter_SystemInformationTransferType* pSrcValue, 
   s1ap_Inter_SystemInformationTransferType* pDstValue);

EXTERN int asn1Init_s1ap_Inter_SystemInformationTransferType (
   s1ap_Inter_SystemInformationTransferType* pvalue);

EXTERN void asn1Free_s1ap_Inter_SystemInformationTransferType (OSCTXT *pctxt, 
   s1ap_Inter_SystemInformationTransferType* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBDirectInformationTransfer_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBDirectInformationTransfer'
*/
typedef struct EXTERN s1ap_ENBDirectInformationTransfer_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ENBDirectInformationTransferIEs_TVALUE t;

      /**
       * ENBDirectInformationTransferIEs information objects
       */
      union {
         /**
          * id: id-Inter-SystemInformationTransferTypeEDT
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Inter_SystemInformationTransferType *_ENBDirectInformationTransferIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ENBDirectInformationTransfer_protocolIEs_element;

EXTERN int asn1PE_s1ap_ENBDirectInformationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ENBDirectInformationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ENBDirectInformationTransfer_protocolIEs_element 
   (const char* name, const s1ap_ENBDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBDirectInformationTransfer_protocolIEs_element (
   const char* name, 
   s1ap_ENBDirectInformationTransfer_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBDirectInformationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Copy_s1ap_ENBDirectInformationTransfer_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ENBDirectInformationTransfer_protocolIEs_element* pSrcValue, 
   s1ap_ENBDirectInformationTransfer_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBDirectInformationTransfer_protocolIEs_element (
   s1ap_ENBDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ENBDirectInformationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ENBDirectInformationTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBDirectInformationTransfer_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBDirectInformationTransfer'
*/
/* List of s1ap_ENBDirectInformationTransfer_protocolIEs_element */
typedef OSRTDList s1ap_ENBDirectInformationTransfer_protocolIEs;

EXTERN int asn1PE_s1ap_ENBDirectInformationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_ENBDirectInformationTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ENBDirectInformationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_ENBDirectInformationTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ENBDirectInformationTransfer_protocolIEs 
   (const char* name, const s1ap_ENBDirectInformationTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBDirectInformationTransfer_protocolIEs (
   const char* name, s1ap_ENBDirectInformationTransfer_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBDirectInformationTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBDirectInformationTransfer_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBDirectInformationTransfer_protocolIEs_element* 
   asn1Get_s1ap_ENBDirectInformationTransfer_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_ENBDirectInformationTransfer_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ENBDirectInformationTransfer_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ENBDirectInformationTransfer_protocolIEs* pSrcValue, 
   s1ap_ENBDirectInformationTransfer_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ENBDirectInformationTransfer_protocolIEs (
   s1ap_ENBDirectInformationTransfer_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ENBDirectInformationTransfer_protocolIEs (OSCTXT *pctxt, 
   s1ap_ENBDirectInformationTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBDirectInformationTransfer                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 eNB DIRECT INFORMATION TRANSFER ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 eNB Direct Information Transfer

 **************************************************************
ENBDirectInformationTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ENBDirectInformationTransferIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ENBDirectInformationTransferIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ENBDirectInformationTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ENBDirectInformationTransfer {
   s1ap_ENBDirectInformationTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ENBDirectInformationTransfer;

EXTERN int asn1PE_s1ap_ENBDirectInformationTransfer (OSCTXT* pctxt, s1ap_ENBDirectInformationTransfer* pvalue);

EXTERN int asn1PD_s1ap_ENBDirectInformationTransfer (OSCTXT* pctxt, s1ap_ENBDirectInformationTransfer* pvalue);

EXTERN void asn1Print_s1ap_ENBDirectInformationTransfer 
   (const char* name, const s1ap_ENBDirectInformationTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBDirectInformationTransfer (const char* name, 
   s1ap_ENBDirectInformationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBDirectInformationTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBDirectInformationTransfer* pvalue);

EXTERN void asn1Copy_s1ap_ENBDirectInformationTransfer (OSCTXT* pctxt, 
   const s1ap_ENBDirectInformationTransfer* pSrcValue, 
   s1ap_ENBDirectInformationTransfer* pDstValue);

EXTERN int asn1Init_s1ap_ENBDirectInformationTransfer (
   s1ap_ENBDirectInformationTransfer* pvalue);

EXTERN void asn1Free_s1ap_ENBDirectInformationTransfer (OSCTXT *pctxt, 
   s1ap_ENBDirectInformationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEDirectInformationTransfer_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEDirectInformationTransfer'
*/
typedef struct EXTERN s1ap_MMEDirectInformationTransfer_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MMEDirectInformationTransferIEs_TVALUE t;

      /**
       * MMEDirectInformationTransferIEs information objects
       */
      union {
         /**
          * id: id-Inter-SystemInformationTransferTypeMDT
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Inter_SystemInformationTransferType *_MMEDirectInformationTransferIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_MMEDirectInformationTransfer_protocolIEs_element;

EXTERN int asn1PE_s1ap_MMEDirectInformationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_MMEDirectInformationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_MMEDirectInformationTransfer_protocolIEs_element 
   (const char* name, const s1ap_MMEDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEDirectInformationTransfer_protocolIEs_element (
   const char* name, 
   s1ap_MMEDirectInformationTransfer_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEDirectInformationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Copy_s1ap_MMEDirectInformationTransfer_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_MMEDirectInformationTransfer_protocolIEs_element* pSrcValue, 
   s1ap_MMEDirectInformationTransfer_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_MMEDirectInformationTransfer_protocolIEs_element (
   s1ap_MMEDirectInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_MMEDirectInformationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_MMEDirectInformationTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEDirectInformationTransfer_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEDirectInformationTransfer'
*/
/* List of s1ap_MMEDirectInformationTransfer_protocolIEs_element */
typedef OSRTDList s1ap_MMEDirectInformationTransfer_protocolIEs;

EXTERN int asn1PE_s1ap_MMEDirectInformationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_MMEDirectInformationTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_MMEDirectInformationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_MMEDirectInformationTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_MMEDirectInformationTransfer_protocolIEs 
   (const char* name, const s1ap_MMEDirectInformationTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEDirectInformationTransfer_protocolIEs (
   const char* name, s1ap_MMEDirectInformationTransfer_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEDirectInformationTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEDirectInformationTransfer_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MMEDirectInformationTransfer_protocolIEs_element* 
   asn1Get_s1ap_MMEDirectInformationTransfer_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_MMEDirectInformationTransfer_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_MMEDirectInformationTransfer_protocolIEs (OSCTXT* pctxt, 
   const s1ap_MMEDirectInformationTransfer_protocolIEs* pSrcValue, 
   s1ap_MMEDirectInformationTransfer_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_MMEDirectInformationTransfer_protocolIEs (
   s1ap_MMEDirectInformationTransfer_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_MMEDirectInformationTransfer_protocolIEs (OSCTXT *pctxt, 
   s1ap_MMEDirectInformationTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEDirectInformationTransfer                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 MME DIRECT INFORMATION TRANSFER ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 MME Direct Information Transfer

 **************************************************************
MMEDirectInformationTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({MMEDirectInformationTransferIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({MMEDirectInformationTransferIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MMEDirectInformationTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_MMEDirectInformationTransfer {
   s1ap_MMEDirectInformationTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_MMEDirectInformationTransfer;

EXTERN int asn1PE_s1ap_MMEDirectInformationTransfer (OSCTXT* pctxt, s1ap_MMEDirectInformationTransfer* pvalue);

EXTERN int asn1PD_s1ap_MMEDirectInformationTransfer (OSCTXT* pctxt, s1ap_MMEDirectInformationTransfer* pvalue);

EXTERN void asn1Print_s1ap_MMEDirectInformationTransfer 
   (const char* name, const s1ap_MMEDirectInformationTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEDirectInformationTransfer (const char* name, 
   s1ap_MMEDirectInformationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEDirectInformationTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEDirectInformationTransfer* pvalue);

EXTERN void asn1Copy_s1ap_MMEDirectInformationTransfer (OSCTXT* pctxt, 
   const s1ap_MMEDirectInformationTransfer* pSrcValue, 
   s1ap_MMEDirectInformationTransfer* pDstValue);

EXTERN int asn1Init_s1ap_MMEDirectInformationTransfer (
   s1ap_MMEDirectInformationTransfer* pvalue);

EXTERN void asn1Free_s1ap_MMEDirectInformationTransfer (OSCTXT *pctxt, 
   s1ap_MMEDirectInformationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationTransfer_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationTransfer'
*/
typedef struct EXTERN s1ap_ENBConfigurationTransfer_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ENBConfigurationTransferIEs_TVALUE t;

      /**
       * ENBConfigurationTransferIEs information objects
       */
      union {
         /**
          * id: id-SONConfigurationTransferECT
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SONConfigurationTransfer *_ENBConfigurationTransferIEs_1;
         /**
          * id: id-EN-DCSONConfigurationTransfer-ECT
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EN_DCSONConfigurationTransfer *_ENBConfigurationTransferIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ENBConfigurationTransfer_protocolIEs_element;

EXTERN int asn1PE_s1ap_ENBConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationTransfer_protocolIEs_element 
   (const char* name, const s1ap_ENBConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationTransfer_protocolIEs_element (
   const char* name, 
   s1ap_ENBConfigurationTransfer_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationTransfer_protocolIEs_element_ENBConfigurationTransferIEs_1
   (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs_element* pElem, 
   s1ap_SONConfigurationTransfer *pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationTransfer_protocolIEs_element_ENBConfigurationTransferIEs_2
   (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs_element* pElem, 
   s1ap_EN_DCSONConfigurationTransfer *pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationTransfer_protocolIEs_element* pSrcValue, 
   s1ap_ENBConfigurationTransfer_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationTransfer_protocolIEs_element (
   s1ap_ENBConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ENBConfigurationTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationTransfer_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationTransfer'
*/
/* List of s1ap_ENBConfigurationTransfer_protocolIEs_element */
typedef OSRTDList s1ap_ENBConfigurationTransfer_protocolIEs;

EXTERN int asn1PE_s1ap_ENBConfigurationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationTransfer_protocolIEs 
   (const char* name, const s1ap_ENBConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationTransfer_protocolIEs (const char* name, 
   s1ap_ENBConfigurationTransfer_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationTransfer_protocolIEs* pvalue);

/* Append IE with value type s1ap_SONConfigurationTransfer to list */
struct s1ap_SONConfigurationTransfer ;
EXTERN int asn1Append_s1ap_ENBConfigurationTransfer_protocolIEs_1
      (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs* plist, struct 
   s1ap_SONConfigurationTransfer *pvalue);

/* Append IE with value type s1ap_EN_DCSONConfigurationTransfer to list */
struct s1ap_EN_DCSONConfigurationTransfer ;
EXTERN int asn1Append_s1ap_ENBConfigurationTransfer_protocolIEs_2
      (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer_protocolIEs* plist, struct 
   s1ap_EN_DCSONConfigurationTransfer *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBConfigurationTransfer_protocolIEs_element* 
   asn1Get_s1ap_ENBConfigurationTransfer_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_ENBConfigurationTransfer_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ENBConfigurationTransfer_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationTransfer_protocolIEs* pSrcValue, 
   s1ap_ENBConfigurationTransfer_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationTransfer_protocolIEs (
   s1ap_ENBConfigurationTransfer_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationTransfer_protocolIEs (OSCTXT *pctxt, 
   s1ap_ENBConfigurationTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationTransfer                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 eNB CONFIGURATION TRANSFER ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 eNB Configuration Transfer

 **************************************************************
ENBConfigurationTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ENBConfigurationTransferIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ENBConfigurationTransferIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ENBConfigurationTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ENBConfigurationTransfer {
   s1ap_ENBConfigurationTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ENBConfigurationTransfer;

EXTERN int asn1PE_s1ap_ENBConfigurationTransfer (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationTransfer (OSCTXT* pctxt, s1ap_ENBConfigurationTransfer* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationTransfer 
   (const char* name, const s1ap_ENBConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationTransfer (const char* name, 
   s1ap_ENBConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationTransfer* pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationTransfer (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationTransfer* pSrcValue, 
   s1ap_ENBConfigurationTransfer* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationTransfer (
   s1ap_ENBConfigurationTransfer* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationTransfer (OSCTXT *pctxt, 
   s1ap_ENBConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationTransfer_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationTransfer'
*/
typedef struct EXTERN s1ap_MMEConfigurationTransfer_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MMEConfigurationTransferIEs_TVALUE t;

      /**
       * MMEConfigurationTransferIEs information objects
       */
      union {
         /**
          * id: id-SONConfigurationTransferMCT
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SONConfigurationTransfer *_MMEConfigurationTransferIEs_1;
         /**
          * id: id-EN-DCSONConfigurationTransfer-MCT
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EN_DCSONConfigurationTransfer *_MMEConfigurationTransferIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_MMEConfigurationTransfer_protocolIEs_element;

EXTERN int asn1PE_s1ap_MMEConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationTransfer_protocolIEs_element 
   (const char* name, const s1ap_MMEConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationTransfer_protocolIEs_element (
   const char* name, 
   s1ap_MMEConfigurationTransfer_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_MMEConfigurationTransfer_protocolIEs_element_MMEConfigurationTransferIEs_1
   (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs_element* pElem, 
   s1ap_SONConfigurationTransfer *pvalue);

EXTERN void asn1SetTC_s1ap_MMEConfigurationTransfer_protocolIEs_element_MMEConfigurationTransferIEs_2
   (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs_element* pElem, 
   s1ap_EN_DCSONConfigurationTransfer *pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationTransfer_protocolIEs_element* pSrcValue, 
   s1ap_MMEConfigurationTransfer_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationTransfer_protocolIEs_element (
   s1ap_MMEConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_MMEConfigurationTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationTransfer_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationTransfer'
*/
/* List of s1ap_MMEConfigurationTransfer_protocolIEs_element */
typedef OSRTDList s1ap_MMEConfigurationTransfer_protocolIEs;

EXTERN int asn1PE_s1ap_MMEConfigurationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationTransfer_protocolIEs 
   (const char* name, const s1ap_MMEConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationTransfer_protocolIEs (const char* name, 
   s1ap_MMEConfigurationTransfer_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationTransfer_protocolIEs* pvalue);

/* Append IE with value type s1ap_SONConfigurationTransfer to list */
struct s1ap_SONConfigurationTransfer ;
EXTERN int asn1Append_s1ap_MMEConfigurationTransfer_protocolIEs_1
      (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs* plist, struct 
   s1ap_SONConfigurationTransfer *pvalue);

/* Append IE with value type s1ap_EN_DCSONConfigurationTransfer to list */
struct s1ap_EN_DCSONConfigurationTransfer ;
EXTERN int asn1Append_s1ap_MMEConfigurationTransfer_protocolIEs_2
      (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer_protocolIEs* plist, struct 
   s1ap_EN_DCSONConfigurationTransfer *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MMEConfigurationTransfer_protocolIEs_element* 
   asn1Get_s1ap_MMEConfigurationTransfer_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_MMEConfigurationTransfer_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_MMEConfigurationTransfer_protocolIEs (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationTransfer_protocolIEs* pSrcValue, 
   s1ap_MMEConfigurationTransfer_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationTransfer_protocolIEs (
   s1ap_MMEConfigurationTransfer_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationTransfer_protocolIEs (OSCTXT *pctxt, 
   s1ap_MMEConfigurationTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationTransfer                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 MME CONFIGURATION TRANSFER ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 MME Configuration Transfer

 **************************************************************
MMEConfigurationTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({MMEConfigurationTransferIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({MMEConfigurationTransferIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MMEConfigurationTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_MMEConfigurationTransfer {
   s1ap_MMEConfigurationTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_MMEConfigurationTransfer;

EXTERN int asn1PE_s1ap_MMEConfigurationTransfer (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationTransfer (OSCTXT* pctxt, s1ap_MMEConfigurationTransfer* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationTransfer 
   (const char* name, const s1ap_MMEConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationTransfer (const char* name, 
   s1ap_MMEConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationTransfer* pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationTransfer (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationTransfer* pSrcValue, 
   s1ap_MMEConfigurationTransfer* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationTransfer (
   s1ap_MMEConfigurationTransfer* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationTransfer (OSCTXT *pctxt, 
   s1ap_MMEConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage_privateIEs_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PrivateMessage'
*/
typedef struct EXTERN s1ap_PrivateMessage_privateIEs_element {
   s1ap_PrivateIE_ID id;
   s1ap_Criticality criticality;
   ASN1OpenType value;
} s1ap_PrivateMessage_privateIEs_element;

EXTERN int asn1PE_s1ap_PrivateMessage_privateIEs_element (OSCTXT* pctxt, s1ap_PrivateMessage_privateIEs_element* pvalue);

EXTERN int asn1PD_s1ap_PrivateMessage_privateIEs_element (OSCTXT* pctxt, s1ap_PrivateMessage_privateIEs_element* pvalue);

EXTERN void asn1Print_s1ap_PrivateMessage_privateIEs_element 
   (const char* name, const s1ap_PrivateMessage_privateIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PrivateMessage_privateIEs_element (const char* name, 
   s1ap_PrivateMessage_privateIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PrivateMessage_privateIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PrivateMessage_privateIEs_element* pvalue);

EXTERN void asn1Copy_s1ap_PrivateMessage_privateIEs_element (OSCTXT* pctxt, 
   const s1ap_PrivateMessage_privateIEs_element* pSrcValue, 
   s1ap_PrivateMessage_privateIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_PrivateMessage_privateIEs_element (
   s1ap_PrivateMessage_privateIEs_element* pvalue);

EXTERN void asn1Free_s1ap_PrivateMessage_privateIEs_element (OSCTXT *pctxt, 
   s1ap_PrivateMessage_privateIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage_privateIEs                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PrivateMessage'
*/
/* List of s1ap_PrivateMessage_privateIEs_element */
typedef OSRTDList s1ap_PrivateMessage_privateIEs;

EXTERN int asn1PE_s1ap_PrivateMessage_privateIEs (OSCTXT* pctxt, s1ap_PrivateMessage_privateIEs* pvalue);

EXTERN int asn1PD_s1ap_PrivateMessage_privateIEs (OSCTXT* pctxt, s1ap_PrivateMessage_privateIEs* pvalue);

EXTERN void asn1Print_s1ap_PrivateMessage_privateIEs 
   (const char* name, const s1ap_PrivateMessage_privateIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_PrivateMessage_privateIEs (const char* name, 
   s1ap_PrivateMessage_privateIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PrivateMessage_privateIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_PrivateMessage_privateIEs* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PrivateMessage_privateIEs_element* 
   asn1Get_s1ap_PrivateMessage_privateIEs (s1ap_PrivateIE_ID* id, 
   s1ap_PrivateMessage_privateIEs* plist);

EXTERN void asn1Copy_s1ap_PrivateMessage_privateIEs (OSCTXT* pctxt, 
   const s1ap_PrivateMessage_privateIEs* pSrcValue, 
   s1ap_PrivateMessage_privateIEs* pDstValue);

EXTERN int asn1Init_s1ap_PrivateMessage_privateIEs (
   s1ap_PrivateMessage_privateIEs* pvalue);

EXTERN void asn1Free_s1ap_PrivateMessage_privateIEs (OSCTXT *pctxt, 
   s1ap_PrivateMessage_privateIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 PRIVATE MESSAGE ELEMENTARY PROCEDURE

 **************************************************************
 **************************************************************

 Private Message

 **************************************************************
PrivateMessage ::= SEQUENCE {
   privateIEs [0] SEQUENCE (SIZE (1..maxPrivateIEs)) OF SEQUENCE {
      id [0] EXPLICIT S1AP-PRIVATE-IES.&id ({PrivateMessageIEs}),
      criticality [1] S1AP-PRIVATE-IES.&criticality ({PrivateMessageIEs}{@id}),
      value [2] EXPLICIT S1AP-PRIVATE-IES.&Value ({PrivateMessageIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_PrivateMessage {
   s1ap_PrivateMessage_privateIEs privateIEs;
   OSRTDList extElem1;
} s1ap_PrivateMessage;

EXTERN int asn1PE_s1ap_PrivateMessage (OSCTXT* pctxt, s1ap_PrivateMessage* pvalue);

EXTERN int asn1PD_s1ap_PrivateMessage (OSCTXT* pctxt, s1ap_PrivateMessage* pvalue);

EXTERN void asn1Print_s1ap_PrivateMessage 
   (const char* name, const s1ap_PrivateMessage* pvalue);

EXTERN int asn1PrtToStr_s1ap_PrivateMessage (const char* name, 
   s1ap_PrivateMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PrivateMessage (OSCTXT *pctxt, 
   const char* name, const s1ap_PrivateMessage* pvalue);

EXTERN void asn1Copy_s1ap_PrivateMessage (OSCTXT* pctxt, 
   const s1ap_PrivateMessage* pSrcValue, s1ap_PrivateMessage* pDstValue);

EXTERN int asn1Init_s1ap_PrivateMessage (s1ap_PrivateMessage* pvalue);

EXTERN void asn1Free_s1ap_PrivateMessage (OSCTXT *pctxt, s1ap_PrivateMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkUEAssociatedLPPaTransport_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkUEAssociatedLPPaTransport'
*/
typedef struct EXTERN s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      DownlinkUEAssociatedLPPaTransport_IEs_TVALUE t;

      /**
       * DownlinkUEAssociatedLPPaTransport-IEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _DownlinkUEAssociatedLPPaTransport_IEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _DownlinkUEAssociatedLPPaTransport_IEs_2;
         /**
          * id: id-Routing-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Routing_ID _DownlinkUEAssociatedLPPaTransport_IEs_3;
         /**
          * id: id-LPPa-PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_LPPa_PDU *_DownlinkUEAssociatedLPPaTransport_IEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element;

EXTERN int asn1PE_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element 
   (const char* name, const s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element (
   const char* name, 
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element_DownlinkUEAssociatedLPPaTransport_IEs_1
   (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element_DownlinkUEAssociatedLPPaTransport_IEs_2
   (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element_DownlinkUEAssociatedLPPaTransport_IEs_3
   (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_Routing_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element_DownlinkUEAssociatedLPPaTransport_IEs_4
   (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_LPPa_PDU *pvalue);

EXTERN void asn1Copy_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pSrcValue, 
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element (
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkUEAssociatedLPPaTransport_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkUEAssociatedLPPaTransport'
*/
/* List of s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element */
typedef OSRTDList s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs;

EXTERN int asn1PE_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs 
   (const char* name, const s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs (
   const char* name, 
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_1
      (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* plist
   , s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_2
      (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* plist
   , s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Routing_ID to list */
EXTERN int asn1Append_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_3
      (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* plist
   , s1ap_Routing_ID value);

/* Append IE with value type s1ap_LPPa_PDU to list */
EXTERN int asn1Append_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_4
      (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* plist
   , s1ap_LPPa_PDU *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs_element* 
   asn1Get_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pSrcValue, 
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs (
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkUEAssociatedLPPaTransport                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 LPPA TRANSPORT ELEMENTARY PROCEDURES

 **************************************************************
 **************************************************************

 DOWNLINK UE ASSOCIATED LPPA TRANSPORT

 **************************************************************
DownlinkUEAssociatedLPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({DownlinkUEAssociatedLPPaTransport-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({DownlinkUEAssociatedLPPaTransport-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({DownlinkUEAssociatedLPPaTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_DownlinkUEAssociatedLPPaTransport {
   s1ap_DownlinkUEAssociatedLPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_DownlinkUEAssociatedLPPaTransport;

EXTERN int asn1PE_s1ap_DownlinkUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PD_s1ap_DownlinkUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_DownlinkUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Print_s1ap_DownlinkUEAssociatedLPPaTransport 
   (const char* name, const s1ap_DownlinkUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkUEAssociatedLPPaTransport (const char* name, 
   s1ap_DownlinkUEAssociatedLPPaTransport* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Copy_s1ap_DownlinkUEAssociatedLPPaTransport (OSCTXT* pctxt, 
   const s1ap_DownlinkUEAssociatedLPPaTransport* pSrcValue, 
   s1ap_DownlinkUEAssociatedLPPaTransport* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkUEAssociatedLPPaTransport (
   s1ap_DownlinkUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Free_s1ap_DownlinkUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   s1ap_DownlinkUEAssociatedLPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkUEAssociatedLPPaTransport_protocolIEs_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkUEAssociatedLPPaTransport'
*/
typedef struct EXTERN s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UplinkUEAssociatedLPPaTransport_IEs_TVALUE t;

      /**
       * UplinkUEAssociatedLPPaTransport-IEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UplinkUEAssociatedLPPaTransport_IEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UplinkUEAssociatedLPPaTransport_IEs_2;
         /**
          * id: id-Routing-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Routing_ID _UplinkUEAssociatedLPPaTransport_IEs_3;
         /**
          * id: id-LPPa-PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_LPPa_PDU *_UplinkUEAssociatedLPPaTransport_IEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element;

EXTERN int asn1PE_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element 
   (const char* name, const s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element (
   const char* name, 
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element_UplinkUEAssociatedLPPaTransport_IEs_1
   (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element_UplinkUEAssociatedLPPaTransport_IEs_2
   (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element_UplinkUEAssociatedLPPaTransport_IEs_3
   (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_Routing_ID value);

EXTERN void asn1SetTC_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element_UplinkUEAssociatedLPPaTransport_IEs_4
   (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_LPPa_PDU *pvalue);

EXTERN void asn1Copy_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pSrcValue, 
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element (
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkUEAssociatedLPPaTransport_protocolIEs               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkUEAssociatedLPPaTransport'
*/
/* List of s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element */
typedef OSRTDList s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs;

EXTERN int asn1PE_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs 
   (const char* name, const s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs (
   const char* name, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Routing_ID to list */
EXTERN int asn1Append_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* plist, 
   s1ap_Routing_ID value);

/* Append IE with value type s1ap_LPPa_PDU to list */
EXTERN int asn1Append_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* plist, 
   s1ap_LPPa_PDU *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs_element* 
   asn1Get_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pSrcValue, 
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs (
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkUEAssociatedLPPaTransport                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UPLINK UE ASSOCIATED LPPA TRANSPORT

 **************************************************************
UplinkUEAssociatedLPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UplinkUEAssociatedLPPaTransport-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UplinkUEAssociatedLPPaTransport-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UplinkUEAssociatedLPPaTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UplinkUEAssociatedLPPaTransport {
   s1ap_UplinkUEAssociatedLPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UplinkUEAssociatedLPPaTransport;

EXTERN int asn1PE_s1ap_UplinkUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PD_s1ap_UplinkUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_UplinkUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Print_s1ap_UplinkUEAssociatedLPPaTransport 
   (const char* name, const s1ap_UplinkUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkUEAssociatedLPPaTransport (const char* name, 
   s1ap_UplinkUEAssociatedLPPaTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Copy_s1ap_UplinkUEAssociatedLPPaTransport (OSCTXT* pctxt, 
   const s1ap_UplinkUEAssociatedLPPaTransport* pSrcValue, 
   s1ap_UplinkUEAssociatedLPPaTransport* pDstValue);

EXTERN int asn1Init_s1ap_UplinkUEAssociatedLPPaTransport (
   s1ap_UplinkUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Free_s1ap_UplinkUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   s1ap_UplinkUEAssociatedLPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNonUEAssociatedLPPaTransport'
*/
typedef struct EXTERN s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      DownlinkNonUEAssociatedLPPaTransport_IEs_TVALUE t;

      /**
       * DownlinkNonUEAssociatedLPPaTransport-IEs information objects
       */
      union {
         /**
          * id: id-Routing-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Routing_ID _DownlinkNonUEAssociatedLPPaTransport_IEs_1;
         /**
          * id: id-LPPa-PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_LPPa_PDU *_DownlinkNonUEAssociatedLPPaTransport_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element;

EXTERN int asn1PE_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element 
   (const char* name, const s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element (
   const char* name, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element_DownlinkNonUEAssociatedLPPaTransport_IEs_1
   (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_Routing_ID value);

EXTERN void asn1SetTC_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element_DownlinkNonUEAssociatedLPPaTransport_IEs_2
   (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_LPPa_PDU *pvalue);

EXTERN void asn1Copy_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pSrcValue, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element (
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNonUEAssociatedLPPaTransport_protocolIEs          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNonUEAssociatedLPPaTransport'
*/
/* List of s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element */
typedef OSRTDList s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs;

EXTERN int asn1PE_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs 
   (const char* name, const s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs (
   const char* name, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

/* Append IE with value type s1ap_Routing_ID to list */
EXTERN int asn1Append_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_1
      (OSCTXT* pctxt, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* plist, 
   s1ap_Routing_ID value);

/* Append IE with value type s1ap_LPPa_PDU to list */
EXTERN int asn1Append_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_2
      (OSCTXT* pctxt, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* plist, s1ap_LPPa_PDU 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs_element* 
   asn1Get_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pSrcValue, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs (
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNonUEAssociatedLPPaTransport                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 DOWNLINK NON UE ASSOCIATED LPPA TRANSPORT

 **************************************************************
DownlinkNonUEAssociatedLPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({DownlinkNonUEAssociatedLPPaTransport-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({DownlinkNonUEAssociatedLPPaTransport-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({DownlinkNonUEAssociatedLPPaTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_DownlinkNonUEAssociatedLPPaTransport {
   s1ap_DownlinkNonUEAssociatedLPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_DownlinkNonUEAssociatedLPPaTransport;

EXTERN int asn1PE_s1ap_DownlinkNonUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PD_s1ap_DownlinkNonUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_DownlinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Print_s1ap_DownlinkNonUEAssociatedLPPaTransport 
   (const char* name, const s1ap_DownlinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PrtToStr_s1ap_DownlinkNonUEAssociatedLPPaTransport (const char* name, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_DownlinkNonUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   const char* name, const s1ap_DownlinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Copy_s1ap_DownlinkNonUEAssociatedLPPaTransport (OSCTXT* pctxt, 
   const s1ap_DownlinkNonUEAssociatedLPPaTransport* pSrcValue, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport* pDstValue);

EXTERN int asn1Init_s1ap_DownlinkNonUEAssociatedLPPaTransport (
   s1ap_DownlinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Free_s1ap_DownlinkNonUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNonUEAssociatedLPPaTransport_protocolIEs_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNonUEAssociatedLPPaTransport'
*/
typedef struct EXTERN s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UplinkNonUEAssociatedLPPaTransport_IEs_TVALUE t;

      /**
       * UplinkNonUEAssociatedLPPaTransport-IEs information objects
       */
      union {
         /**
          * id: id-Routing-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Routing_ID _UplinkNonUEAssociatedLPPaTransport_IEs_1;
         /**
          * id: id-LPPa-PDU
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_LPPa_PDU *_UplinkNonUEAssociatedLPPaTransport_IEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element;

EXTERN int asn1PE_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element 
   (const char* name, const s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element (
   const char* name, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element_UplinkNonUEAssociatedLPPaTransport_IEs_1
   (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_Routing_ID value);

EXTERN void asn1SetTC_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element_UplinkNonUEAssociatedLPPaTransport_IEs_2
   (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pElem
   , s1ap_LPPa_PDU *pvalue);

EXTERN void asn1Copy_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pSrcValue, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element (
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNonUEAssociatedLPPaTransport_protocolIEs            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNonUEAssociatedLPPaTransport'
*/
/* List of s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element */
typedef OSRTDList s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs;

EXTERN int asn1PE_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs 
   (const char* name, const s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs (
   const char* name, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

/* Append IE with value type s1ap_Routing_ID to list */
EXTERN int asn1Append_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_1
      (OSCTXT* pctxt, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* plist, s1ap_Routing_ID 
   value);

/* Append IE with value type s1ap_LPPa_PDU to list */
EXTERN int asn1Append_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_2
      (OSCTXT* pctxt, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* plist, s1ap_LPPa_PDU 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs_element* 
   asn1Get_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pSrcValue, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs (
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs (OSCTXT *pctxt, 
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNonUEAssociatedLPPaTransport                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UPLINK NON UE ASSOCIATED LPPA TRANSPORT

 **************************************************************
UplinkNonUEAssociatedLPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UplinkNonUEAssociatedLPPaTransport-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UplinkNonUEAssociatedLPPaTransport-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UplinkNonUEAssociatedLPPaTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UplinkNonUEAssociatedLPPaTransport {
   s1ap_UplinkNonUEAssociatedLPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UplinkNonUEAssociatedLPPaTransport;

EXTERN int asn1PE_s1ap_UplinkNonUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PD_s1ap_UplinkNonUEAssociatedLPPaTransport (OSCTXT* pctxt, s1ap_UplinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Print_s1ap_UplinkNonUEAssociatedLPPaTransport 
   (const char* name, const s1ap_UplinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN int asn1PrtToStr_s1ap_UplinkNonUEAssociatedLPPaTransport (const char* name, 
   s1ap_UplinkNonUEAssociatedLPPaTransport* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UplinkNonUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   const char* name, const s1ap_UplinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Copy_s1ap_UplinkNonUEAssociatedLPPaTransport (OSCTXT* pctxt, 
   const s1ap_UplinkNonUEAssociatedLPPaTransport* pSrcValue, 
   s1ap_UplinkNonUEAssociatedLPPaTransport* pDstValue);

EXTERN int asn1Init_s1ap_UplinkNonUEAssociatedLPPaTransport (
   s1ap_UplinkNonUEAssociatedLPPaTransport* pvalue);

EXTERN void asn1Free_s1ap_UplinkNonUEAssociatedLPPaTransport (OSCTXT *pctxt, 
   s1ap_UplinkNonUEAssociatedLPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSRestartIndication_protocolIEs_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSRestartIndication'
*/
typedef struct EXTERN s1ap_PWSRestartIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      PWSRestartIndicationIEs_TVALUE t;

      /**
       * PWSRestartIndicationIEs information objects
       */
      union {
         /**
          * id: id-ECGIListForRestart
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ECGIListForRestart *_PWSRestartIndicationIEs_1;
         /**
          * id: id-Global-ENB-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Global_ENB_ID *_PWSRestartIndicationIEs_2;
         /**
          * id: id-TAIListForRestart
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_TAIListForRestart *_PWSRestartIndicationIEs_3;
         /**
          * id: id-EmergencyAreaIDListForRestart
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_EmergencyAreaIDListForRestart *_PWSRestartIndicationIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_PWSRestartIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_PWSRestartIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_PWSRestartIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_PWSRestartIndication_protocolIEs_element 
   (const char* name, const s1ap_PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PWSRestartIndication_protocolIEs_element (
   const char* name, s1ap_PWSRestartIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PWSRestartIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_1
   (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs_element* pElem, 
   s1ap_ECGIListForRestart *pvalue);

EXTERN void asn1SetTC_s1ap_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_2
   (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs_element* pElem, 
   s1ap_Global_ENB_ID *pvalue);

EXTERN void asn1SetTC_s1ap_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_3
   (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs_element* pElem, 
   s1ap_TAIListForRestart *pvalue);

EXTERN void asn1SetTC_s1ap_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_4
   (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs_element* pElem, 
   s1ap_EmergencyAreaIDListForRestart *pvalue);

EXTERN void asn1Copy_s1ap_PWSRestartIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_PWSRestartIndication_protocolIEs_element* pSrcValue, 
   s1ap_PWSRestartIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_PWSRestartIndication_protocolIEs_element (
   s1ap_PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_PWSRestartIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_PWSRestartIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSRestartIndication_protocolIEs                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSRestartIndication'
*/
/* List of s1ap_PWSRestartIndication_protocolIEs_element */
typedef OSRTDList s1ap_PWSRestartIndication_protocolIEs;

EXTERN int asn1PE_s1ap_PWSRestartIndication_protocolIEs (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_PWSRestartIndication_protocolIEs (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_PWSRestartIndication_protocolIEs 
   (const char* name, const s1ap_PWSRestartIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_PWSRestartIndication_protocolIEs (const char* name, 
   s1ap_PWSRestartIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PWSRestartIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_PWSRestartIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_ECGIListForRestart to list */
EXTERN int asn1Append_s1ap_PWSRestartIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs* plist, 
   s1ap_ECGIListForRestart *pvalue);

/* Append IE with value type s1ap_Global_ENB_ID to list */
struct s1ap_Global_ENB_ID ;
EXTERN int asn1Append_s1ap_PWSRestartIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs* plist, struct 
   s1ap_Global_ENB_ID *pvalue);

/* Append IE with value type s1ap_TAIListForRestart to list */
EXTERN int asn1Append_s1ap_PWSRestartIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs* plist, 
   s1ap_TAIListForRestart *pvalue);

/* Append IE with value type s1ap_EmergencyAreaIDListForRestart to list */
struct s1ap_EmergencyAreaIDListForRestart ;
EXTERN int asn1Append_s1ap_PWSRestartIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_PWSRestartIndication_protocolIEs* plist, struct 
   s1ap_EmergencyAreaIDListForRestart *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PWSRestartIndication_protocolIEs_element* 
   asn1Get_s1ap_PWSRestartIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_PWSRestartIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_PWSRestartIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_PWSRestartIndication_protocolIEs* pSrcValue, 
   s1ap_PWSRestartIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_PWSRestartIndication_protocolIEs (
   s1ap_PWSRestartIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_PWSRestartIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_PWSRestartIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSRestartIndication                                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 PWS RESTART INDICATION PROCEDURE

 **************************************************************
 **************************************************************

 PWS Restart Indication

 **************************************************************
PWSRestartIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({PWSRestartIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({PWSRestartIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({PWSRestartIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_PWSRestartIndication {
   s1ap_PWSRestartIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_PWSRestartIndication;

EXTERN int asn1PE_s1ap_PWSRestartIndication (OSCTXT* pctxt, s1ap_PWSRestartIndication* pvalue);

EXTERN int asn1PD_s1ap_PWSRestartIndication (OSCTXT* pctxt, s1ap_PWSRestartIndication* pvalue);

EXTERN void asn1Print_s1ap_PWSRestartIndication 
   (const char* name, const s1ap_PWSRestartIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_PWSRestartIndication (const char* name, 
   s1ap_PWSRestartIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PWSRestartIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_PWSRestartIndication* pvalue);

EXTERN void asn1Copy_s1ap_PWSRestartIndication (OSCTXT* pctxt, 
   const s1ap_PWSRestartIndication* pSrcValue, s1ap_PWSRestartIndication*
    pDstValue);

EXTERN int asn1Init_s1ap_PWSRestartIndication (s1ap_PWSRestartIndication* pvalue);

EXTERN void asn1Free_s1ap_PWSRestartIndication (OSCTXT *pctxt, 
   s1ap_PWSRestartIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  _RerouteNASRequest_IEs_Value                              */
/*                                                            */
/**************************************************************/
typedef OSDynOctStr s1ap__RerouteNASRequest_IEs_Value;

EXTERN int asn1PE_s1ap__RerouteNASRequest_IEs_Value (OSCTXT* pctxt, void* pvalue_);

EXTERN int asn1PD_s1ap__RerouteNASRequest_IEs_Value (OSCTXT* pctxt, void* pvalue_);

EXTERN void asn1Print_s1ap__RerouteNASRequest_IEs_Value 
   (const char* name, const void* pvalue_);

EXTERN int asn1PrtToStr_s1ap__RerouteNASRequest_IEs_Value (const char* name, 
   const void* pvalue_, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap__RerouteNASRequest_IEs_Value (OSCTXT *pctxt, 
   const char* name, const void* pvalue_);

EXTERN void asn1Copy_s1ap__RerouteNASRequest_IEs_Value (OSCTXT* pctxt, 
   const void* pSrcValue_, void* pDstValue_);

EXTERN int asn1Init_s1ap__RerouteNASRequest_IEs_Value (void* pvalue_);

EXTERN void asn1Free_s1ap__RerouteNASRequest_IEs_Value (OSCTXT *pctxt, void* pvalue_);

/**************************************************************/
/*                                                            */
/*  RerouteNASRequest_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RerouteNASRequest'
*/
typedef struct EXTERN s1ap_RerouteNASRequest_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      RerouteNASRequest_IEs_TVALUE t;

      /**
       * RerouteNASRequest-IEs information objects
       */
      union {
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _RerouteNASRequest_IEs_1;
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MME_UE_S1AP_ID _RerouteNASRequest_IEs_2;
         /**
          * id: id-S1-Message
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap__RerouteNASRequest_IEs_Value *_RerouteNASRequest_IEs_3;
         /**
          * id: id-MME-Group-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_Group_ID *_RerouteNASRequest_IEs_4;
         /**
          * id: id-Additional-GUTI
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Additional_GUTI *_RerouteNASRequest_IEs_5;
         /**
          * id: id-UE-Usage-Type
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_Usage_Type _RerouteNASRequest_IEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_RerouteNASRequest_protocolIEs_element;

EXTERN int asn1PE_s1ap_RerouteNASRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_RerouteNASRequest_protocolIEs_element (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_RerouteNASRequest_protocolIEs_element 
   (const char* name, const s1ap_RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RerouteNASRequest_protocolIEs_element (const char* name, 
   s1ap_RerouteNASRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RerouteNASRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_1
   (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_2
   (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_3
   (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pElem, 
   s1ap__RerouteNASRequest_IEs_Value *pvalue);

EXTERN void asn1SetTC_s1ap_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_4
   (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pElem, 
   s1ap_MME_Group_ID *pvalue);

EXTERN void asn1SetTC_s1ap_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_5
   (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pElem, 
   s1ap_Additional_GUTI *pvalue);

EXTERN void asn1SetTC_s1ap_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_6
   (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs_element* pElem, 
   s1ap_UE_Usage_Type value);

EXTERN void asn1Copy_s1ap_RerouteNASRequest_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_RerouteNASRequest_protocolIEs_element* pSrcValue, 
   s1ap_RerouteNASRequest_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_RerouteNASRequest_protocolIEs_element (
   s1ap_RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_RerouteNASRequest_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_RerouteNASRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RerouteNASRequest_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RerouteNASRequest'
*/
/* List of s1ap_RerouteNASRequest_protocolIEs_element */
typedef OSRTDList s1ap_RerouteNASRequest_protocolIEs;

EXTERN int asn1PE_s1ap_RerouteNASRequest_protocolIEs (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_RerouteNASRequest_protocolIEs (OSCTXT* pctxt, s1ap_RerouteNASRequest_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_RerouteNASRequest_protocolIEs 
   (const char* name, const s1ap_RerouteNASRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_RerouteNASRequest_protocolIEs (const char* name, 
   s1ap_RerouteNASRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RerouteNASRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_RerouteNASRequest_protocolIEs* pvalue);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_RerouteNASRequest_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_RerouteNASRequest_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_RerouteNASRequest_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_RerouteNASRequest_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap__RerouteNASRequest_IEs_Value to list */
EXTERN int asn1Append_s1ap_RerouteNASRequest_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_RerouteNASRequest_protocolIEs* plist, 
   s1ap__RerouteNASRequest_IEs_Value *pvalue);

/* Append IE with value type s1ap_MME_Group_ID to list */
struct s1ap_MME_Group_ID ;
EXTERN int asn1Append_s1ap_RerouteNASRequest_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_RerouteNASRequest_protocolIEs* plist, struct s1ap_MME_Group_ID *pvalue)
   ;

/* Append IE with value type s1ap_Additional_GUTI to list */
struct s1ap_Additional_GUTI ;
EXTERN int asn1Append_s1ap_RerouteNASRequest_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_RerouteNASRequest_protocolIEs* plist, struct s1ap_Additional_GUTI 
   *pvalue);

/* Append IE with value type s1ap_UE_Usage_Type to list */
EXTERN int asn1Append_s1ap_RerouteNASRequest_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_RerouteNASRequest_protocolIEs* plist, s1ap_UE_Usage_Type value);

/* Get IE using id key value */
EXTERN struct s1ap_RerouteNASRequest_protocolIEs_element* 
   asn1Get_s1ap_RerouteNASRequest_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_RerouteNASRequest_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_RerouteNASRequest_protocolIEs (OSCTXT* pctxt, 
   const s1ap_RerouteNASRequest_protocolIEs* pSrcValue, 
   s1ap_RerouteNASRequest_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_RerouteNASRequest_protocolIEs (
   s1ap_RerouteNASRequest_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_RerouteNASRequest_protocolIEs (OSCTXT *pctxt, 
   s1ap_RerouteNASRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  RerouteNASRequest                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 REROUTE NAS REQUEST

 **************************************************************
RerouteNASRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({RerouteNASRequest-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({RerouteNASRequest-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({RerouteNASRequest-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_RerouteNASRequest {
   s1ap_RerouteNASRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_RerouteNASRequest;

EXTERN int asn1PE_s1ap_RerouteNASRequest (OSCTXT* pctxt, s1ap_RerouteNASRequest* pvalue);

EXTERN int asn1PD_s1ap_RerouteNASRequest (OSCTXT* pctxt, s1ap_RerouteNASRequest* pvalue);

EXTERN void asn1Print_s1ap_RerouteNASRequest 
   (const char* name, const s1ap_RerouteNASRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_RerouteNASRequest (const char* name, 
   s1ap_RerouteNASRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RerouteNASRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_RerouteNASRequest* pvalue);

EXTERN void asn1Copy_s1ap_RerouteNASRequest (OSCTXT* pctxt, 
   const s1ap_RerouteNASRequest* pSrcValue, s1ap_RerouteNASRequest* pDstValue);

EXTERN int asn1Init_s1ap_RerouteNASRequest (s1ap_RerouteNASRequest* pvalue);

EXTERN void asn1Free_s1ap_RerouteNASRequest (OSCTXT *pctxt, 
   s1ap_RerouteNASRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailureIndication_protocolIEs_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSFailureIndication'
*/
typedef struct EXTERN s1ap_PWSFailureIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      PWSFailureIndicationIEs_TVALUE t;

      /**
       * PWSFailureIndicationIEs information objects
       */
      union {
         /**
          * id: id-PWSfailedECGIList
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_PWSfailedECGIList *_PWSFailureIndicationIEs_1;
         /**
          * id: id-Global-ENB-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Global_ENB_ID *_PWSFailureIndicationIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_PWSFailureIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_PWSFailureIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_PWSFailureIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_PWSFailureIndication_protocolIEs_element 
   (const char* name, const s1ap_PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PWSFailureIndication_protocolIEs_element (
   const char* name, s1ap_PWSFailureIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PWSFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_PWSFailureIndication_protocolIEs_element_PWSFailureIndicationIEs_1
   (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs_element* pElem, 
   s1ap_PWSfailedECGIList *pvalue);

EXTERN void asn1SetTC_s1ap_PWSFailureIndication_protocolIEs_element_PWSFailureIndicationIEs_2
   (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs_element* pElem, 
   s1ap_Global_ENB_ID *pvalue);

EXTERN void asn1Copy_s1ap_PWSFailureIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_PWSFailureIndication_protocolIEs_element* pSrcValue, 
   s1ap_PWSFailureIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_PWSFailureIndication_protocolIEs_element (
   s1ap_PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_PWSFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_PWSFailureIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailureIndication_protocolIEs                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSFailureIndication'
*/
/* List of s1ap_PWSFailureIndication_protocolIEs_element */
typedef OSRTDList s1ap_PWSFailureIndication_protocolIEs;

EXTERN int asn1PE_s1ap_PWSFailureIndication_protocolIEs (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_PWSFailureIndication_protocolIEs (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_PWSFailureIndication_protocolIEs 
   (const char* name, const s1ap_PWSFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_PWSFailureIndication_protocolIEs (const char* name, 
   s1ap_PWSFailureIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PWSFailureIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_PWSFailureIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_PWSfailedECGIList to list */
EXTERN int asn1Append_s1ap_PWSFailureIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs* plist, 
   s1ap_PWSfailedECGIList *pvalue);

/* Append IE with value type s1ap_Global_ENB_ID to list */
struct s1ap_Global_ENB_ID ;
EXTERN int asn1Append_s1ap_PWSFailureIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_PWSFailureIndication_protocolIEs* plist, struct 
   s1ap_Global_ENB_ID *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PWSFailureIndication_protocolIEs_element* 
   asn1Get_s1ap_PWSFailureIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_PWSFailureIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_PWSFailureIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_PWSFailureIndication_protocolIEs* pSrcValue, 
   s1ap_PWSFailureIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_PWSFailureIndication_protocolIEs (
   s1ap_PWSFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_PWSFailureIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_PWSFailureIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailureIndication                                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 PWS Failure Indication

 **************************************************************
PWSFailureIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({PWSFailureIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({PWSFailureIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({PWSFailureIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_PWSFailureIndication {
   s1ap_PWSFailureIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_PWSFailureIndication;

EXTERN int asn1PE_s1ap_PWSFailureIndication (OSCTXT* pctxt, s1ap_PWSFailureIndication* pvalue);

EXTERN int asn1PD_s1ap_PWSFailureIndication (OSCTXT* pctxt, s1ap_PWSFailureIndication* pvalue);

EXTERN void asn1Print_s1ap_PWSFailureIndication 
   (const char* name, const s1ap_PWSFailureIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_PWSFailureIndication (const char* name, 
   s1ap_PWSFailureIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PWSFailureIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_PWSFailureIndication* pvalue);

EXTERN void asn1Copy_s1ap_PWSFailureIndication (OSCTXT* pctxt, 
   const s1ap_PWSFailureIndication* pSrcValue, s1ap_PWSFailureIndication*
    pDstValue);

EXTERN int asn1Init_s1ap_PWSFailureIndication (s1ap_PWSFailureIndication* pvalue);

EXTERN void asn1Free_s1ap_PWSFailureIndication (OSCTXT *pctxt, 
   s1ap_PWSFailureIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectionEstablishmentIndication_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ConnectionEstablishmentIndication'
*/
typedef struct EXTERN s1ap_ConnectionEstablishmentIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ConnectionEstablishmentIndicationIEs_TVALUE t;

      /**
       * ConnectionEstablishmentIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _ConnectionEstablishmentIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _ConnectionEstablishmentIndicationIEs_2;
         /**
          * id: id-UERadioCapability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UERadioCapability *_ConnectionEstablishmentIndicationIEs_3;
         /**
          * id: id-EnhancedCoverageRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EnhancedCoverageRestricted _ConnectionEstablishmentIndicationIEs_4;
         /**
          * id: id-DL-CP-SecurityInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_DL_CP_SecurityInformation *_ConnectionEstablishmentIndicationIEs_5;
         /**
          * id: id-CE-ModeBRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_ModeBRestricted _ConnectionEstablishmentIndicationIEs_6;
         /**
          * id: id-EndIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EndIndication _ConnectionEstablishmentIndicationIEs_7;
         /**
          * id: id-Subscription-Based-UE-DifferentiationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Subscription_Based_UE_DifferentiationInfo *_ConnectionEstablishmentIndicationIEs_8;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ConnectionEstablishmentIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_ConnectionEstablishmentIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ConnectionEstablishmentIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ConnectionEstablishmentIndication_protocolIEs_element 
   (const char* name, const s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConnectionEstablishmentIndication_protocolIEs_element (
   const char* name, 
   s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConnectionEstablishmentIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_1
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_2
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_3
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_UERadioCapability *pvalue);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_4
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_EnhancedCoverageRestricted value);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_5
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_DL_CP_SecurityInformation *pvalue);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_6
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_CE_ModeBRestricted value);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_7
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_EndIndication value);

EXTERN void asn1SetTC_s1ap_ConnectionEstablishmentIndication_protocolIEs_element_ConnectionEstablishmentIndicationIEs_8
   (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pElem
   , s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

EXTERN void asn1Copy_s1ap_ConnectionEstablishmentIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pSrcValue, 
   s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ConnectionEstablishmentIndication_protocolIEs_element (
   s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ConnectionEstablishmentIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ConnectionEstablishmentIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectionEstablishmentIndication_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ConnectionEstablishmentIndication'
*/
/* List of s1ap_ConnectionEstablishmentIndication_protocolIEs_element */
typedef OSRTDList s1ap_ConnectionEstablishmentIndication_protocolIEs;

EXTERN int asn1PE_s1ap_ConnectionEstablishmentIndication_protocolIEs (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ConnectionEstablishmentIndication_protocolIEs (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ConnectionEstablishmentIndication_protocolIEs 
   (const char* name, const s1ap_ConnectionEstablishmentIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConnectionEstablishmentIndication_protocolIEs (
   const char* name, 
   s1ap_ConnectionEstablishmentIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConnectionEstablishmentIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ConnectionEstablishmentIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UERadioCapability to list */
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , s1ap_UERadioCapability *pvalue);

/* Append IE with value type s1ap_EnhancedCoverageRestricted to list */
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , s1ap_EnhancedCoverageRestricted value);

/* Append IE with value type s1ap_DL_CP_SecurityInformation to list */
struct s1ap_DL_CP_SecurityInformation ;
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_5
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , struct s1ap_DL_CP_SecurityInformation *pvalue);

/* Append IE with value type s1ap_CE_ModeBRestricted to list */
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_6
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , s1ap_CE_ModeBRestricted value);

/* Append IE with value type s1ap_EndIndication to list */
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_7
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , s1ap_EndIndication value);

/* Append IE with value type s1ap_Subscription_Based_UE_DifferentiationInfo to list */
struct s1ap_Subscription_Based_UE_DifferentiationInfo ;
EXTERN int asn1Append_s1ap_ConnectionEstablishmentIndication_protocolIEs_8
      (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication_protocolIEs* plist
   , struct s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ConnectionEstablishmentIndication_protocolIEs_element* 
   asn1Get_s1ap_ConnectionEstablishmentIndication_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_ConnectionEstablishmentIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ConnectionEstablishmentIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ConnectionEstablishmentIndication_protocolIEs* pSrcValue, 
   s1ap_ConnectionEstablishmentIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ConnectionEstablishmentIndication_protocolIEs (
   s1ap_ConnectionEstablishmentIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ConnectionEstablishmentIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_ConnectionEstablishmentIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectionEstablishmentIndication                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Connection Establishment Indication

 **************************************************************
ConnectionEstablishmentIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ConnectionEstablishmentIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ConnectionEstablishmentIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ConnectionEstablishmentIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ConnectionEstablishmentIndication {
   s1ap_ConnectionEstablishmentIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ConnectionEstablishmentIndication;

EXTERN int asn1PE_s1ap_ConnectionEstablishmentIndication (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication* pvalue);

EXTERN int asn1PD_s1ap_ConnectionEstablishmentIndication (OSCTXT* pctxt, s1ap_ConnectionEstablishmentIndication* pvalue);

EXTERN void asn1Print_s1ap_ConnectionEstablishmentIndication 
   (const char* name, const s1ap_ConnectionEstablishmentIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_ConnectionEstablishmentIndication (const char* name, 
   s1ap_ConnectionEstablishmentIndication* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ConnectionEstablishmentIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_ConnectionEstablishmentIndication* pvalue);

EXTERN void asn1Copy_s1ap_ConnectionEstablishmentIndication (OSCTXT* pctxt, 
   const s1ap_ConnectionEstablishmentIndication* pSrcValue, 
   s1ap_ConnectionEstablishmentIndication* pDstValue);

EXTERN int asn1Init_s1ap_ConnectionEstablishmentIndication (
   s1ap_ConnectionEstablishmentIndication* pvalue);

EXTERN void asn1Free_s1ap_ConnectionEstablishmentIndication (OSCTXT *pctxt, 
   s1ap_ConnectionEstablishmentIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  NASDeliveryIndication_protocolIEs_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASDeliveryIndication'
*/
typedef struct EXTERN s1ap_NASDeliveryIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      NASDeliveryIndicationIEs_TVALUE t;

      /**
       * NASDeliveryIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _NASDeliveryIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _NASDeliveryIndicationIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_NASDeliveryIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_NASDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_NASDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_NASDeliveryIndication_protocolIEs_element 
   (const char* name, const s1ap_NASDeliveryIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASDeliveryIndication_protocolIEs_element (
   const char* name, s1ap_NASDeliveryIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASDeliveryIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_NASDeliveryIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_NASDeliveryIndication_protocolIEs_element_NASDeliveryIndicationIEs_1
   (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_NASDeliveryIndication_protocolIEs_element_NASDeliveryIndicationIEs_2
   (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1Copy_s1ap_NASDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_NASDeliveryIndication_protocolIEs_element* pSrcValue, 
   s1ap_NASDeliveryIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_NASDeliveryIndication_protocolIEs_element (
   s1ap_NASDeliveryIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NASDeliveryIndication_protocolIEs                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASDeliveryIndication'
*/
/* List of s1ap_NASDeliveryIndication_protocolIEs_element */
typedef OSRTDList s1ap_NASDeliveryIndication_protocolIEs;

EXTERN int asn1PE_s1ap_NASDeliveryIndication_protocolIEs (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_NASDeliveryIndication_protocolIEs (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_NASDeliveryIndication_protocolIEs 
   (const char* name, const s1ap_NASDeliveryIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASDeliveryIndication_protocolIEs (const char* name, 
   s1ap_NASDeliveryIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASDeliveryIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_NASDeliveryIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_NASDeliveryIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_NASDeliveryIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_NASDeliveryIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Get IE using id key value */
EXTERN struct s1ap_NASDeliveryIndication_protocolIEs_element* 
   asn1Get_s1ap_NASDeliveryIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_NASDeliveryIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_NASDeliveryIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_NASDeliveryIndication_protocolIEs* pSrcValue, 
   s1ap_NASDeliveryIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_NASDeliveryIndication_protocolIEs (
   s1ap_NASDeliveryIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_NASDeliveryIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_NASDeliveryIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NASDeliveryIndication                                     */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 NAS DELIVERY INDICATION

 **************************************************************
NASDeliveryIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({NASDeliveryIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({NASDeliveryIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({NASDeliveryIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_NASDeliveryIndication {
   s1ap_NASDeliveryIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_NASDeliveryIndication;

EXTERN int asn1PE_s1ap_NASDeliveryIndication (OSCTXT* pctxt, s1ap_NASDeliveryIndication* pvalue);

EXTERN int asn1PD_s1ap_NASDeliveryIndication (OSCTXT* pctxt, s1ap_NASDeliveryIndication* pvalue);

EXTERN void asn1Print_s1ap_NASDeliveryIndication 
   (const char* name, const s1ap_NASDeliveryIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_NASDeliveryIndication (const char* name, 
   s1ap_NASDeliveryIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NASDeliveryIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_NASDeliveryIndication* pvalue);

EXTERN void asn1Copy_s1ap_NASDeliveryIndication (OSCTXT* pctxt, 
   const s1ap_NASDeliveryIndication* pSrcValue, s1ap_NASDeliveryIndication*
    pDstValue);

EXTERN int asn1Init_s1ap_NASDeliveryIndication (s1ap_NASDeliveryIndication* pvalue);

EXTERN void asn1Free_s1ap_NASDeliveryIndication (OSCTXT *pctxt, 
   s1ap_NASDeliveryIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  RetrieveUEInformation_protocolIEs_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RetrieveUEInformation'
*/
typedef struct EXTERN s1ap_RetrieveUEInformation_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      RetrieveUEInformationIEs_TVALUE t;

      /**
       * RetrieveUEInformationIEs information objects
       */
      union {
         /**
          * id: id-S-TMSI
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_S_TMSI *_RetrieveUEInformationIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_RetrieveUEInformation_protocolIEs_element;

EXTERN int asn1PE_s1ap_RetrieveUEInformation_protocolIEs_element (OSCTXT* pctxt, s1ap_RetrieveUEInformation_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_RetrieveUEInformation_protocolIEs_element (OSCTXT* pctxt, s1ap_RetrieveUEInformation_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_RetrieveUEInformation_protocolIEs_element 
   (const char* name, const s1ap_RetrieveUEInformation_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_RetrieveUEInformation_protocolIEs_element (
   const char* name, s1ap_RetrieveUEInformation_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RetrieveUEInformation_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_RetrieveUEInformation_protocolIEs_element* pvalue);

EXTERN void asn1Copy_s1ap_RetrieveUEInformation_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_RetrieveUEInformation_protocolIEs_element* pSrcValue, 
   s1ap_RetrieveUEInformation_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_RetrieveUEInformation_protocolIEs_element (
   s1ap_RetrieveUEInformation_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_RetrieveUEInformation_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_RetrieveUEInformation_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RetrieveUEInformation_protocolIEs                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RetrieveUEInformation'
*/
/* List of s1ap_RetrieveUEInformation_protocolIEs_element */
typedef OSRTDList s1ap_RetrieveUEInformation_protocolIEs;

EXTERN int asn1PE_s1ap_RetrieveUEInformation_protocolIEs (OSCTXT* pctxt, s1ap_RetrieveUEInformation_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_RetrieveUEInformation_protocolIEs (OSCTXT* pctxt, s1ap_RetrieveUEInformation_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_RetrieveUEInformation_protocolIEs 
   (const char* name, const s1ap_RetrieveUEInformation_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_RetrieveUEInformation_protocolIEs (const char* name, 
   s1ap_RetrieveUEInformation_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RetrieveUEInformation_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_RetrieveUEInformation_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_RetrieveUEInformation_protocolIEs_element* 
   asn1Get_s1ap_RetrieveUEInformation_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_RetrieveUEInformation_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_RetrieveUEInformation_protocolIEs (OSCTXT* pctxt, 
   const s1ap_RetrieveUEInformation_protocolIEs* pSrcValue, 
   s1ap_RetrieveUEInformation_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_RetrieveUEInformation_protocolIEs (
   s1ap_RetrieveUEInformation_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_RetrieveUEInformation_protocolIEs (OSCTXT *pctxt, 
   s1ap_RetrieveUEInformation_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  RetrieveUEInformation                                     */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Retrieve UE Information 

 **************************************************************
RetrieveUEInformation ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({RetrieveUEInformationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({RetrieveUEInformationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({RetrieveUEInformationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_RetrieveUEInformation {
   s1ap_RetrieveUEInformation_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_RetrieveUEInformation;

EXTERN int asn1PE_s1ap_RetrieveUEInformation (OSCTXT* pctxt, s1ap_RetrieveUEInformation* pvalue);

EXTERN int asn1PD_s1ap_RetrieveUEInformation (OSCTXT* pctxt, s1ap_RetrieveUEInformation* pvalue);

EXTERN void asn1Print_s1ap_RetrieveUEInformation 
   (const char* name, const s1ap_RetrieveUEInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_RetrieveUEInformation (const char* name, 
   s1ap_RetrieveUEInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RetrieveUEInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_RetrieveUEInformation* pvalue);

EXTERN void asn1Copy_s1ap_RetrieveUEInformation (OSCTXT* pctxt, 
   const s1ap_RetrieveUEInformation* pSrcValue, s1ap_RetrieveUEInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_RetrieveUEInformation (s1ap_RetrieveUEInformation* pvalue);

EXTERN void asn1Free_s1ap_RetrieveUEInformation (OSCTXT *pctxt, 
   s1ap_RetrieveUEInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  UEInformationTransfer_protocolIEs_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEInformationTransfer'
*/
typedef struct EXTERN s1ap_UEInformationTransfer_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEInformationTransferIEs_TVALUE t;

      /**
       * UEInformationTransferIEs information objects
       */
      union {
         /**
          * id: id-S-TMSI
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_S_TMSI *_UEInformationTransferIEs_1;
         /**
          * id: id-UE-Level-QoS-Parameters
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABLevelQoSParameters *_UEInformationTransferIEs_2;
         /**
          * id: id-UERadioCapability
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UERadioCapability *_UEInformationTransferIEs_3;
         /**
          * id: id-Subscription-Based-UE-DifferentiationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Subscription_Based_UE_DifferentiationInfo *_UEInformationTransferIEs_4;
         /**
          * id: id-PendingDataIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PendingDataIndication _UEInformationTransferIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEInformationTransfer_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEInformationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEInformationTransfer_protocolIEs_element (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEInformationTransfer_protocolIEs_element 
   (const char* name, const s1ap_UEInformationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEInformationTransfer_protocolIEs_element (
   const char* name, s1ap_UEInformationTransfer_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEInformationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEInformationTransfer_protocolIEs_element_UEInformationTransferIEs_1
   (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs_element* pElem, 
   s1ap_S_TMSI *pvalue);

EXTERN void asn1SetTC_s1ap_UEInformationTransfer_protocolIEs_element_UEInformationTransferIEs_2
   (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs_element* pElem, 
   s1ap_E_RABLevelQoSParameters *pvalue);

EXTERN void asn1SetTC_s1ap_UEInformationTransfer_protocolIEs_element_UEInformationTransferIEs_3
   (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs_element* pElem, 
   s1ap_UERadioCapability *pvalue);

EXTERN void asn1SetTC_s1ap_UEInformationTransfer_protocolIEs_element_UEInformationTransferIEs_4
   (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs_element* pElem, 
   s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

EXTERN void asn1SetTC_s1ap_UEInformationTransfer_protocolIEs_element_UEInformationTransferIEs_5
   (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs_element* pElem, 
   s1ap_PendingDataIndication value);

EXTERN void asn1Copy_s1ap_UEInformationTransfer_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEInformationTransfer_protocolIEs_element* pSrcValue, 
   s1ap_UEInformationTransfer_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEInformationTransfer_protocolIEs_element (
   s1ap_UEInformationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEInformationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEInformationTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEInformationTransfer_protocolIEs                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEInformationTransfer'
*/
/* List of s1ap_UEInformationTransfer_protocolIEs_element */
typedef OSRTDList s1ap_UEInformationTransfer_protocolIEs;

EXTERN int asn1PE_s1ap_UEInformationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEInformationTransfer_protocolIEs (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEInformationTransfer_protocolIEs 
   (const char* name, const s1ap_UEInformationTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEInformationTransfer_protocolIEs (const char* name, 
   s1ap_UEInformationTransfer_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEInformationTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEInformationTransfer_protocolIEs* pvalue);

/* Append IE with value type s1ap_S_TMSI to list */
struct s1ap_S_TMSI ;
EXTERN int asn1Append_s1ap_UEInformationTransfer_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs* plist, struct 
   s1ap_S_TMSI *pvalue);

/* Append IE with value type s1ap_E_RABLevelQoSParameters to list */
struct s1ap_E_RABLevelQoSParameters ;
EXTERN int asn1Append_s1ap_UEInformationTransfer_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs* plist, struct 
   s1ap_E_RABLevelQoSParameters *pvalue);

/* Append IE with value type s1ap_UERadioCapability to list */
EXTERN int asn1Append_s1ap_UEInformationTransfer_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs* plist, 
   s1ap_UERadioCapability *pvalue);

/* Append IE with value type s1ap_Subscription_Based_UE_DifferentiationInfo to list */
struct s1ap_Subscription_Based_UE_DifferentiationInfo ;
EXTERN int asn1Append_s1ap_UEInformationTransfer_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs* plist, struct 
   s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

/* Append IE with value type s1ap_PendingDataIndication to list */
EXTERN int asn1Append_s1ap_UEInformationTransfer_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UEInformationTransfer_protocolIEs* plist, 
   s1ap_PendingDataIndication value);

/* Get IE using id key value */
EXTERN struct s1ap_UEInformationTransfer_protocolIEs_element* 
   asn1Get_s1ap_UEInformationTransfer_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEInformationTransfer_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEInformationTransfer_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEInformationTransfer_protocolIEs* pSrcValue, 
   s1ap_UEInformationTransfer_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEInformationTransfer_protocolIEs (
   s1ap_UEInformationTransfer_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEInformationTransfer_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEInformationTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEInformationTransfer                                     */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE Information Transfer

 **************************************************************
UEInformationTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEInformationTransferIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEInformationTransferIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEInformationTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEInformationTransfer {
   s1ap_UEInformationTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEInformationTransfer;

EXTERN int asn1PE_s1ap_UEInformationTransfer (OSCTXT* pctxt, s1ap_UEInformationTransfer* pvalue);

EXTERN int asn1PD_s1ap_UEInformationTransfer (OSCTXT* pctxt, s1ap_UEInformationTransfer* pvalue);

EXTERN void asn1Print_s1ap_UEInformationTransfer 
   (const char* name, const s1ap_UEInformationTransfer* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEInformationTransfer (const char* name, 
   s1ap_UEInformationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEInformationTransfer (OSCTXT *pctxt, 
   const char* name, const s1ap_UEInformationTransfer* pvalue);

EXTERN void asn1Copy_s1ap_UEInformationTransfer (OSCTXT* pctxt, 
   const s1ap_UEInformationTransfer* pSrcValue, s1ap_UEInformationTransfer*
    pDstValue);

EXTERN int asn1Init_s1ap_UEInformationTransfer (s1ap_UEInformationTransfer* pvalue);

EXTERN void asn1Free_s1ap_UEInformationTransfer (OSCTXT *pctxt, 
   s1ap_UEInformationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBCPRelocationIndication_protocolIEs_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBCPRelocationIndication'
*/
typedef struct EXTERN s1ap_ENBCPRelocationIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ENBCPRelocationIndicationIEs_TVALUE t;

      /**
       * ENBCPRelocationIndicationIEs information objects
       */
      union {
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _ENBCPRelocationIndicationIEs_1;
         /**
          * id: id-S-TMSI
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_S_TMSI *_ENBCPRelocationIndicationIEs_2;
         /**
          * id: id-EUTRAN-CGI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_EUTRAN_CGI *_ENBCPRelocationIndicationIEs_3;
         /**
          * id: id-TAI
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_TAI *_ENBCPRelocationIndicationIEs_4;
         /**
          * id: id-UL-CP-SecurityInformation
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_UL_CP_SecurityInformation *_ENBCPRelocationIndicationIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ENBCPRelocationIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_ENBCPRelocationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ENBCPRelocationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ENBCPRelocationIndication_protocolIEs_element 
   (const char* name, const s1ap_ENBCPRelocationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBCPRelocationIndication_protocolIEs_element (
   const char* name, 
   s1ap_ENBCPRelocationIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBCPRelocationIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBCPRelocationIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ENBCPRelocationIndication_protocolIEs_element_ENBCPRelocationIndicationIEs_1
   (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_ENBCPRelocationIndication_protocolIEs_element_ENBCPRelocationIndicationIEs_2
   (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs_element* pElem, 
   s1ap_S_TMSI *pvalue);

EXTERN void asn1SetTC_s1ap_ENBCPRelocationIndication_protocolIEs_element_ENBCPRelocationIndicationIEs_3
   (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs_element* pElem, 
   s1ap_EUTRAN_CGI *pvalue);

EXTERN void asn1SetTC_s1ap_ENBCPRelocationIndication_protocolIEs_element_ENBCPRelocationIndicationIEs_4
   (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs_element* pElem, 
   s1ap_TAI *pvalue);

EXTERN void asn1SetTC_s1ap_ENBCPRelocationIndication_protocolIEs_element_ENBCPRelocationIndicationIEs_5
   (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs_element* pElem, 
   s1ap_UL_CP_SecurityInformation *pvalue);

EXTERN void asn1Copy_s1ap_ENBCPRelocationIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ENBCPRelocationIndication_protocolIEs_element* pSrcValue, 
   s1ap_ENBCPRelocationIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBCPRelocationIndication_protocolIEs_element (
   s1ap_ENBCPRelocationIndication_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ENBCPRelocationIndication_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ENBCPRelocationIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBCPRelocationIndication_protocolIEs                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBCPRelocationIndication'
*/
/* List of s1ap_ENBCPRelocationIndication_protocolIEs_element */
typedef OSRTDList s1ap_ENBCPRelocationIndication_protocolIEs;

EXTERN int asn1PE_s1ap_ENBCPRelocationIndication_protocolIEs (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ENBCPRelocationIndication_protocolIEs (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ENBCPRelocationIndication_protocolIEs 
   (const char* name, const s1ap_ENBCPRelocationIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBCPRelocationIndication_protocolIEs (const char* name, 
   s1ap_ENBCPRelocationIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBCPRelocationIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBCPRelocationIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_ENBCPRelocationIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_S_TMSI to list */
struct s1ap_S_TMSI ;
EXTERN int asn1Append_s1ap_ENBCPRelocationIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs* plist, 
   struct s1ap_S_TMSI *pvalue);

/* Append IE with value type s1ap_EUTRAN_CGI to list */
struct s1ap_EUTRAN_CGI ;
EXTERN int asn1Append_s1ap_ENBCPRelocationIndication_protocolIEs_3
      (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs* plist, 
   struct s1ap_EUTRAN_CGI *pvalue);

/* Append IE with value type s1ap_TAI to list */
struct s1ap_TAI ;
EXTERN int asn1Append_s1ap_ENBCPRelocationIndication_protocolIEs_4
      (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs* plist, 
   struct s1ap_TAI *pvalue);

/* Append IE with value type s1ap_UL_CP_SecurityInformation to list */
struct s1ap_UL_CP_SecurityInformation ;
EXTERN int asn1Append_s1ap_ENBCPRelocationIndication_protocolIEs_5
      (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication_protocolIEs* plist, 
   struct s1ap_UL_CP_SecurityInformation *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBCPRelocationIndication_protocolIEs_element* 
   asn1Get_s1ap_ENBCPRelocationIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_ENBCPRelocationIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ENBCPRelocationIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ENBCPRelocationIndication_protocolIEs* pSrcValue, 
   s1ap_ENBCPRelocationIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ENBCPRelocationIndication_protocolIEs (
   s1ap_ENBCPRelocationIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ENBCPRelocationIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_ENBCPRelocationIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBCPRelocationIndication                                 */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 eNB CP Relocation Indication

 **************************************************************
ENBCPRelocationIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ENBCPRelocationIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ENBCPRelocationIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ENBCPRelocationIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ENBCPRelocationIndication {
   s1ap_ENBCPRelocationIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ENBCPRelocationIndication;

EXTERN int asn1PE_s1ap_ENBCPRelocationIndication (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication* pvalue);

EXTERN int asn1PD_s1ap_ENBCPRelocationIndication (OSCTXT* pctxt, s1ap_ENBCPRelocationIndication* pvalue);

EXTERN void asn1Print_s1ap_ENBCPRelocationIndication 
   (const char* name, const s1ap_ENBCPRelocationIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBCPRelocationIndication (const char* name, 
   s1ap_ENBCPRelocationIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBCPRelocationIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBCPRelocationIndication* pvalue);

EXTERN void asn1Copy_s1ap_ENBCPRelocationIndication (OSCTXT* pctxt, 
   const s1ap_ENBCPRelocationIndication* pSrcValue, 
   s1ap_ENBCPRelocationIndication* pDstValue);

EXTERN int asn1Init_s1ap_ENBCPRelocationIndication (
   s1ap_ENBCPRelocationIndication* pvalue);

EXTERN void asn1Free_s1ap_ENBCPRelocationIndication (OSCTXT *pctxt, 
   s1ap_ENBCPRelocationIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  MMECPRelocationIndication_protocolIEs_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMECPRelocationIndication'
*/
typedef struct EXTERN s1ap_MMECPRelocationIndication_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MMECPRelocationIndicationIEs_TVALUE t;

      /**
       * MMECPRelocationIndicationIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _MMECPRelocationIndicationIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _MMECPRelocationIndicationIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_MMECPRelocationIndication_protocolIEs_element;

EXTERN int asn1PE_s1ap_MMECPRelocationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_MMECPRelocationIndication_protocolIEs_element (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_MMECPRelocationIndication_protocolIEs_element 
   (const char* name, const s1ap_MMECPRelocationIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMECPRelocationIndication_protocolIEs_element (
   const char* name, 
   s1ap_MMECPRelocationIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMECPRelocationIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MMECPRelocationIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_MMECPRelocationIndication_protocolIEs_element_MMECPRelocationIndicationIEs_1
   (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_MMECPRelocationIndication_protocolIEs_element_MMECPRelocationIndicationIEs_2
   (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1Copy_s1ap_MMECPRelocationIndication_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_MMECPRelocationIndication_protocolIEs_element* pSrcValue, 
   s1ap_MMECPRelocationIndication_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_MMECPRelocationIndication_protocolIEs_element (
   s1ap_MMECPRelocationIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MMECPRelocationIndication_protocolIEs                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMECPRelocationIndication'
*/
/* List of s1ap_MMECPRelocationIndication_protocolIEs_element */
typedef OSRTDList s1ap_MMECPRelocationIndication_protocolIEs;

EXTERN int asn1PE_s1ap_MMECPRelocationIndication_protocolIEs (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_MMECPRelocationIndication_protocolIEs (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_MMECPRelocationIndication_protocolIEs 
   (const char* name, const s1ap_MMECPRelocationIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMECPRelocationIndication_protocolIEs (const char* name, 
   s1ap_MMECPRelocationIndication_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMECPRelocationIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_MMECPRelocationIndication_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_MMECPRelocationIndication_protocolIEs_1
      (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_MMECPRelocationIndication_protocolIEs_2
      (OSCTXT* pctxt, s1ap_MMECPRelocationIndication_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Get IE using id key value */
EXTERN struct s1ap_MMECPRelocationIndication_protocolIEs_element* 
   asn1Get_s1ap_MMECPRelocationIndication_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_MMECPRelocationIndication_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_MMECPRelocationIndication_protocolIEs (OSCTXT* pctxt, 
   const s1ap_MMECPRelocationIndication_protocolIEs* pSrcValue, 
   s1ap_MMECPRelocationIndication_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_MMECPRelocationIndication_protocolIEs (
   s1ap_MMECPRelocationIndication_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_MMECPRelocationIndication_protocolIEs (OSCTXT *pctxt, 
   s1ap_MMECPRelocationIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMECPRelocationIndication                                 */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 MME CP Relocation Indication

 **************************************************************
MMECPRelocationIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({MMECPRelocationIndicationIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({MMECPRelocationIndicationIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MMECPRelocationIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_MMECPRelocationIndication {
   s1ap_MMECPRelocationIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_MMECPRelocationIndication;

EXTERN int asn1PE_s1ap_MMECPRelocationIndication (OSCTXT* pctxt, s1ap_MMECPRelocationIndication* pvalue);

EXTERN int asn1PD_s1ap_MMECPRelocationIndication (OSCTXT* pctxt, s1ap_MMECPRelocationIndication* pvalue);

EXTERN void asn1Print_s1ap_MMECPRelocationIndication 
   (const char* name, const s1ap_MMECPRelocationIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMECPRelocationIndication (const char* name, 
   s1ap_MMECPRelocationIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMECPRelocationIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_MMECPRelocationIndication* pvalue);

EXTERN void asn1Copy_s1ap_MMECPRelocationIndication (OSCTXT* pctxt, 
   const s1ap_MMECPRelocationIndication* pSrcValue, 
   s1ap_MMECPRelocationIndication* pDstValue);

EXTERN int asn1Init_s1ap_MMECPRelocationIndication (
   s1ap_MMECPRelocationIndication* pvalue);

EXTERN void asn1Free_s1ap_MMECPRelocationIndication (OSCTXT *pctxt, 
   s1ap_MMECPRelocationIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReport_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReport'
*/
typedef struct EXTERN s1ap_SecondaryRATDataUsageReport_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      SecondaryRATDataUsageReportIEs_TVALUE t;

      /**
       * SecondaryRATDataUsageReportIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _SecondaryRATDataUsageReportIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _SecondaryRATDataUsageReportIEs_2;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_SecondaryRATDataUsageReportList *_SecondaryRATDataUsageReportIEs_3;
         /**
          * id: id-HandoverFlag
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_HandoverFlag _SecondaryRATDataUsageReportIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_SecondaryRATDataUsageReport_protocolIEs_element;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReport_protocolIEs_element 
   (const char* name, const s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReport_protocolIEs_element (
   const char* name, 
   s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_1
   (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_2
   (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_3
   (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pElem
   , s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1SetTC_s1ap_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_4
   (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pElem
   , s1ap_HandoverFlag value);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pSrcValue, 
   s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReport_protocolIEs_element (
   s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReport_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReport'
*/
/* List of s1ap_SecondaryRATDataUsageReport_protocolIEs_element */
typedef OSRTDList s1ap_SecondaryRATDataUsageReport_protocolIEs;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReport_protocolIEs (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReport_protocolIEs (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReport_protocolIEs 
   (const char* name, const s1ap_SecondaryRATDataUsageReport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReport_protocolIEs (
   const char* name, s1ap_SecondaryRATDataUsageReport_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReport_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_SecondaryRATDataUsageReport_protocolIEs_1
      (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_SecondaryRATDataUsageReport_protocolIEs_2
      (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_SecondaryRATDataUsageReport_protocolIEs_3
      (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Append IE with value type s1ap_HandoverFlag to list */
EXTERN int asn1Append_s1ap_SecondaryRATDataUsageReport_protocolIEs_4
      (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport_protocolIEs* plist, 
   s1ap_HandoverFlag value);

/* Get IE using id key value */
EXTERN struct s1ap_SecondaryRATDataUsageReport_protocolIEs_element* 
   asn1Get_s1ap_SecondaryRATDataUsageReport_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_SecondaryRATDataUsageReport_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReport_protocolIEs (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReport_protocolIEs* pSrcValue, 
   s1ap_SecondaryRATDataUsageReport_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReport_protocolIEs (
   s1ap_SecondaryRATDataUsageReport_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReport_protocolIEs (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReport                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Secondary RAT Data Usage Report

 **************************************************************
SecondaryRATDataUsageReport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({SecondaryRATDataUsageReportIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({SecondaryRATDataUsageReportIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({SecondaryRATDataUsageReportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_SecondaryRATDataUsageReport {
   s1ap_SecondaryRATDataUsageReport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_SecondaryRATDataUsageReport;

EXTERN int asn1PE_s1ap_SecondaryRATDataUsageReport (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport* pvalue);

EXTERN int asn1PD_s1ap_SecondaryRATDataUsageReport (OSCTXT* pctxt, s1ap_SecondaryRATDataUsageReport* pvalue);

EXTERN void asn1Print_s1ap_SecondaryRATDataUsageReport 
   (const char* name, const s1ap_SecondaryRATDataUsageReport* pvalue);

EXTERN int asn1PrtToStr_s1ap_SecondaryRATDataUsageReport (const char* name, 
   s1ap_SecondaryRATDataUsageReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SecondaryRATDataUsageReport (OSCTXT *pctxt, 
   const char* name, const s1ap_SecondaryRATDataUsageReport* pvalue);

EXTERN void asn1Copy_s1ap_SecondaryRATDataUsageReport (OSCTXT* pctxt, 
   const s1ap_SecondaryRATDataUsageReport* pSrcValue, 
   s1ap_SecondaryRATDataUsageReport* pDstValue);

EXTERN int asn1Init_s1ap_SecondaryRATDataUsageReport (
   s1ap_SecondaryRATDataUsageReport* pvalue);

EXTERN void asn1Free_s1ap_SecondaryRATDataUsageReport (OSCTXT *pctxt, 
   s1ap_SecondaryRATDataUsageReport* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommand_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCommand'
*/
typedef struct EXTERN s1ap_HandoverCommand_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverCommandIEs_TVALUE t;

      /**
       * HandoverCommandIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverCommandIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _HandoverCommandIEs_2;
         /**
          * id: id-HandoverType
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_HandoverType _HandoverCommandIEs_3;
         /**
          * id: id-NASSecurityParametersfromE-UTRAN
          * criticality: s1ap_reject
          * presence: s1ap_conditional
          */
         s1ap_NASSecurityParametersfromE_UTRAN *_HandoverCommandIEs_4;
         /**
          * id: id-E-RABSubjecttoDataForwardingList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABSubjecttoDataForwardingList *_HandoverCommandIEs_5;
         /**
          * id: id-E-RABtoReleaseListHOCmd
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_HandoverCommandIEs_6;
         /**
          * id: id-Target-ToSource-TransparentContainer
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Target_ToSource_TransparentContainer *_HandoverCommandIEs_7;
         /**
          * id: id-Target-ToSource-TransparentContainer-Secondary
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_Target_ToSource_TransparentContainer *_HandoverCommandIEs_8;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_HandoverCommandIEs_9;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverCommand_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverCommand_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverCommand_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverCommand_protocolIEs_element 
   (const char* name, const s1ap_HandoverCommand_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCommand_protocolIEs_element (const char* name, 
   s1ap_HandoverCommand_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCommand_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCommand_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_1
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_2
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_3
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_HandoverType value);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_4
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_NASSecurityParametersfromE_UTRAN *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_5
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_E_RABSubjecttoDataForwardingList *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_6
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_7
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_Target_ToSource_TransparentContainer *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_8
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_Target_ToSource_TransparentContainer *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCommand_protocolIEs_element_HandoverCommandIEs_9
   (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_HandoverCommand_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverCommand_protocolIEs_element* pSrcValue, 
   s1ap_HandoverCommand_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCommand_protocolIEs_element (
   s1ap_HandoverCommand_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverCommand_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverCommand_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommand_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCommand'
*/
/* List of s1ap_HandoverCommand_protocolIEs_element */
typedef OSRTDList s1ap_HandoverCommand_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverCommand_protocolIEs (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverCommand_protocolIEs (OSCTXT* pctxt, s1ap_HandoverCommand_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverCommand_protocolIEs 
   (const char* name, const s1ap_HandoverCommand_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCommand_protocolIEs (const char* name, 
   s1ap_HandoverCommand_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCommand_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCommand_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_HandoverType to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, s1ap_HandoverType value);

/* Append IE with value type s1ap_NASSecurityParametersfromE_UTRAN to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, 
   s1ap_NASSecurityParametersfromE_UTRAN *pvalue);

/* Append IE with value type s1ap_E_RABSubjecttoDataForwardingList to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, 
   s1ap_E_RABSubjecttoDataForwardingList *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_Target_ToSource_TransparentContainer to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, 
   s1ap_Target_ToSource_TransparentContainer *pvalue);

/* Append IE with value type s1ap_Target_ToSource_TransparentContainer to list */
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_8   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, 
   s1ap_Target_ToSource_TransparentContainer *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_HandoverCommand_protocolIEs_9   (OSCTXT* pctxt, 
   s1ap_HandoverCommand_protocolIEs* plist, struct s1ap_CriticalityDiagnostics 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverCommand_protocolIEs_element* 
   asn1Get_s1ap_HandoverCommand_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverCommand_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverCommand_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverCommand_protocolIEs* pSrcValue, 
   s1ap_HandoverCommand_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCommand_protocolIEs (
   s1ap_HandoverCommand_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverCommand_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverCommand_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommand                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Handover Command

 **************************************************************
HandoverCommand ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverCommandIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverCommandIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverCommandIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverCommand {
   s1ap_HandoverCommand_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverCommand;

EXTERN int asn1PE_s1ap_HandoverCommand (OSCTXT* pctxt, s1ap_HandoverCommand* pvalue);

EXTERN int asn1PD_s1ap_HandoverCommand (OSCTXT* pctxt, s1ap_HandoverCommand* pvalue);

EXTERN void asn1Print_s1ap_HandoverCommand 
   (const char* name, const s1ap_HandoverCommand* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCommand (const char* name, 
   s1ap_HandoverCommand* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCommand (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCommand* pvalue);

EXTERN void asn1Copy_s1ap_HandoverCommand (OSCTXT* pctxt, 
   const s1ap_HandoverCommand* pSrcValue, s1ap_HandoverCommand* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCommand (s1ap_HandoverCommand* pvalue);

EXTERN void asn1Free_s1ap_HandoverCommand (OSCTXT *pctxt, 
   s1ap_HandoverCommand* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABAdmittedItem_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABAdmittedItem'
*/
typedef struct EXTERN s1ap_E_RABAdmittedItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABAdmittedItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABAdmittedItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABAdmittedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABAdmittedItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABAdmittedItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABAdmittedItem_iE_Extensions_element 
   (const char* name, const s1ap_E_RABAdmittedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABAdmittedItem_iE_Extensions_element (
   const char* name, s1ap_E_RABAdmittedItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABAdmittedItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABAdmittedItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABAdmittedItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABAdmittedItem_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABAdmittedItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABAdmittedItem_iE_Extensions_element (
   s1ap_E_RABAdmittedItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABAdmittedItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABAdmittedItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABAdmittedItem_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABAdmittedItem'
*/
/* List of s1ap_E_RABAdmittedItem_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABAdmittedItem_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABAdmittedItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABAdmittedItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABAdmittedItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABAdmittedItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABAdmittedItem_iE_Extensions 
   (const char* name, const s1ap_E_RABAdmittedItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABAdmittedItem_iE_Extensions (const char* name, 
   s1ap_E_RABAdmittedItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABAdmittedItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABAdmittedItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABAdmittedItem_iE_Extensions_element* 
   asn1Get_s1ap_E_RABAdmittedItem_iE_Extensions (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABAdmittedItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABAdmittedItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABAdmittedItem_iE_Extensions* pSrcValue, 
   s1ap_E_RABAdmittedItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABAdmittedItem_iE_Extensions (
   s1ap_E_RABAdmittedItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABAdmittedItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABAdmittedItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABAdmittedItem                                         */
/*                                                            */
/**************************************************************/
/*
E-RABAdmittedItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   gTP-TEID [2] GTP-TEID,
   dL-transportLayerAddress [3] TransportLayerAddress OPTIONAL,
   dL-gTP-TEID [4] GTP-TEID OPTIONAL,
   uL-TransportLayerAddress [5] TransportLayerAddress OPTIONAL,
   uL-GTP-TEID [6] GTP-TEID OPTIONAL,
   iE-Extensions [7] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABAdmittedItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABAdmittedItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABAdmittedItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABAdmittedItem {
   struct {
      unsigned dL_transportLayerAddressPresent : 1;
      unsigned dL_gTP_TEIDPresent : 1;
      unsigned uL_TransportLayerAddressPresent : 1;
      unsigned uL_GTP_TEIDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_TransportLayerAddress dL_transportLayerAddress;
   s1ap_GTP_TEID dL_gTP_TEID;
   s1ap_TransportLayerAddress uL_TransportLayerAddress;
   s1ap_GTP_TEID uL_GTP_TEID;
   s1ap_E_RABAdmittedItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABAdmittedItem;

EXTERN int asn1PE_s1ap_E_RABAdmittedItem (OSCTXT* pctxt, s1ap_E_RABAdmittedItem* pvalue);

EXTERN int asn1PD_s1ap_E_RABAdmittedItem (OSCTXT* pctxt, s1ap_E_RABAdmittedItem* pvalue);

EXTERN void asn1Print_s1ap_E_RABAdmittedItem 
   (const char* name, const s1ap_E_RABAdmittedItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABAdmittedItem (const char* name, 
   s1ap_E_RABAdmittedItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABAdmittedItem (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABAdmittedItem* pvalue);

EXTERN void asn1Copy_s1ap_E_RABAdmittedItem (OSCTXT* pctxt, 
   const s1ap_E_RABAdmittedItem* pSrcValue, s1ap_E_RABAdmittedItem* pDstValue);

EXTERN int asn1Init_s1ap_E_RABAdmittedItem (s1ap_E_RABAdmittedItem* pvalue);

EXTERN void asn1Free_s1ap_E_RABAdmittedItem (OSCTXT *pctxt, 
   s1ap_E_RABAdmittedItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABAdmittedList_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABAdmittedList'
*/
typedef struct EXTERN s1ap_E_RABAdmittedList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABAdmittedItemIEs_TVALUE t;

      /**
       * E-RABAdmittedItemIEs information objects
       */
      union {
         /**
          * id: id-E-RABAdmittedItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABAdmittedItem *_E_RABAdmittedItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABAdmittedList_element;

EXTERN int asn1PE_s1ap_E_RABAdmittedList_element (OSCTXT* pctxt, s1ap_E_RABAdmittedList_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABAdmittedList_element (OSCTXT* pctxt, s1ap_E_RABAdmittedList_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABAdmittedList_element 
   (const char* name, const s1ap_E_RABAdmittedList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABAdmittedList_element (const char* name, 
   s1ap_E_RABAdmittedList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABAdmittedList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABAdmittedList_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABAdmittedList_element (OSCTXT* pctxt, 
   const s1ap_E_RABAdmittedList_element* pSrcValue, 
   s1ap_E_RABAdmittedList_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABAdmittedList_element (
   s1ap_E_RABAdmittedList_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABAdmittedList_element (OSCTXT *pctxt, 
   s1ap_E_RABAdmittedList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABAdmittedList                                         */
/*                                                            */
/**************************************************************/
/*
E-RABAdmittedList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABAdmittedItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABAdmittedItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABAdmittedItemIEs}{@id})
}
*/
/* List of s1ap_E_RABAdmittedList_element */
typedef OSRTDList s1ap_E_RABAdmittedList;

EXTERN int asn1PE_s1ap_E_RABAdmittedList (OSCTXT* pctxt, s1ap_E_RABAdmittedList* pvalue);

EXTERN int asn1PD_s1ap_E_RABAdmittedList (OSCTXT* pctxt, s1ap_E_RABAdmittedList* pvalue);

EXTERN void asn1Print_s1ap_E_RABAdmittedList 
   (const char* name, const s1ap_E_RABAdmittedList* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABAdmittedList (const char* name, 
   s1ap_E_RABAdmittedList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABAdmittedList (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABAdmittedList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABAdmittedList_element* asn1Get_s1ap_E_RABAdmittedList 
   (s1ap_ProtocolIE_ID id, s1ap_E_RABAdmittedList* plist);

EXTERN void asn1Copy_s1ap_E_RABAdmittedList (OSCTXT* pctxt, 
   const s1ap_E_RABAdmittedList* pSrcValue, s1ap_E_RABAdmittedList* pDstValue);

EXTERN int asn1Init_s1ap_E_RABAdmittedList (s1ap_E_RABAdmittedList* pvalue);

EXTERN void asn1Free_s1ap_E_RABAdmittedList (OSCTXT *pctxt, 
   s1ap_E_RABAdmittedList* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToSetupItemHOReqAck_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToSetupItemHOReqAck'
*/
typedef struct EXTERN s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element 
   (const char* name, const s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element (
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToSetupItemHOReqAck_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToSetupItemHOReqAck'
*/
/* List of s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions 
   (const char* name, const s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions (
   const char* name, 
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions_element* 
   asn1Get_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pSrcValue, 
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions (
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToSetupItemHOReqAck                            */
/*                                                            */
/**************************************************************/
/*
E-RABFailedToSetupItemHOReqAck ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   cause [1] EXPLICIT Cause,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABFailedToSetupItemHOReqAckExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABFailedToSetupItemHOReqAckExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABFailedToSetupItemHOReqAckExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABFailedToSetupItemHOReqAck {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_Cause cause;
   s1ap_E_RABFailedToSetupItemHOReqAck_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABFailedToSetupItemHOReqAck;

EXTERN int asn1PE_s1ap_E_RABFailedToSetupItemHOReqAck (OSCTXT* pctxt, s1ap_E_RABFailedToSetupItemHOReqAck* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToSetupItemHOReqAck (OSCTXT* pctxt, s1ap_E_RABFailedToSetupItemHOReqAck* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToSetupItemHOReqAck 
   (const char* name, const s1ap_E_RABFailedToSetupItemHOReqAck* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToSetupItemHOReqAck (const char* name, 
   s1ap_E_RABFailedToSetupItemHOReqAck* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToSetupItemHOReqAck (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToSetupItemHOReqAck* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToSetupItemHOReqAck (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToSetupItemHOReqAck* pSrcValue, 
   s1ap_E_RABFailedToSetupItemHOReqAck* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToSetupItemHOReqAck (
   s1ap_E_RABFailedToSetupItemHOReqAck* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToSetupItemHOReqAck (OSCTXT *pctxt, 
   s1ap_E_RABFailedToSetupItemHOReqAck* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedtoSetupListHOReqAck_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedtoSetupListHOReqAck'
*/
typedef struct EXTERN s1ap_E_RABFailedtoSetupListHOReqAck_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABFailedtoSetupItemHOReqAckIEs_TVALUE t;

      /**
       * E-RABFailedtoSetupItemHOReqAckIEs information objects
       */
      union {
         /**
          * id: id-E-RABFailedtoSetupItemHOReqAck
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABFailedToSetupItemHOReqAck *_E_RABFailedtoSetupItemHOReqAckIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABFailedtoSetupListHOReqAck_element;

EXTERN int asn1PE_s1ap_E_RABFailedtoSetupListHOReqAck_element (OSCTXT* pctxt, s1ap_E_RABFailedtoSetupListHOReqAck_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedtoSetupListHOReqAck_element (OSCTXT* pctxt, s1ap_E_RABFailedtoSetupListHOReqAck_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedtoSetupListHOReqAck_element 
   (const char* name, const s1ap_E_RABFailedtoSetupListHOReqAck_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedtoSetupListHOReqAck_element (
   const char* name, s1ap_E_RABFailedtoSetupListHOReqAck_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedtoSetupListHOReqAck_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedtoSetupListHOReqAck_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedtoSetupListHOReqAck_element (OSCTXT* pctxt, 
   const s1ap_E_RABFailedtoSetupListHOReqAck_element* pSrcValue, 
   s1ap_E_RABFailedtoSetupListHOReqAck_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedtoSetupListHOReqAck_element (
   s1ap_E_RABFailedtoSetupListHOReqAck_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedtoSetupListHOReqAck_element (OSCTXT *pctxt, 
   s1ap_E_RABFailedtoSetupListHOReqAck_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedtoSetupListHOReqAck                            */
/*                                                            */
/**************************************************************/
/*
E-RABFailedtoSetupListHOReqAck ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABFailedtoSetupItemHOReqAckIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABFailedtoSetupItemHOReqAckIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABFailedtoSetupItemHOReqAckIEs}{@id})
}
*/
/* List of s1ap_E_RABFailedtoSetupListHOReqAck_element */
typedef OSRTDList s1ap_E_RABFailedtoSetupListHOReqAck;

EXTERN int asn1PE_s1ap_E_RABFailedtoSetupListHOReqAck (OSCTXT* pctxt, s1ap_E_RABFailedtoSetupListHOReqAck* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedtoSetupListHOReqAck (OSCTXT* pctxt, s1ap_E_RABFailedtoSetupListHOReqAck* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedtoSetupListHOReqAck 
   (const char* name, const s1ap_E_RABFailedtoSetupListHOReqAck* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedtoSetupListHOReqAck (const char* name, 
   s1ap_E_RABFailedtoSetupListHOReqAck* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedtoSetupListHOReqAck (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedtoSetupListHOReqAck* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABFailedtoSetupListHOReqAck_element* 
   asn1Get_s1ap_E_RABFailedtoSetupListHOReqAck (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABFailedtoSetupListHOReqAck* plist);

EXTERN void asn1Copy_s1ap_E_RABFailedtoSetupListHOReqAck (OSCTXT* pctxt, 
   const s1ap_E_RABFailedtoSetupListHOReqAck* pSrcValue, 
   s1ap_E_RABFailedtoSetupListHOReqAck* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedtoSetupListHOReqAck (
   s1ap_E_RABFailedtoSetupListHOReqAck* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedtoSetupListHOReqAck (OSCTXT *pctxt, 
   s1ap_E_RABFailedtoSetupListHOReqAck* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledge_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequestAcknowledge'
*/
typedef struct EXTERN s1ap_HandoverRequestAcknowledge_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverRequestAcknowledgeIEs_TVALUE t;

      /**
       * HandoverRequestAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverRequestAcknowledgeIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _HandoverRequestAcknowledgeIEs_2;
         /**
          * id: id-E-RABAdmittedList
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABAdmittedList *_HandoverRequestAcknowledgeIEs_3;
         /**
          * id: id-E-RABFailedToSetupListHOReqAck
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABFailedtoSetupListHOReqAck *_HandoverRequestAcknowledgeIEs_4;
         /**
          * id: id-Target-ToSource-TransparentContainer
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_Target_ToSource_TransparentContainer *_HandoverRequestAcknowledgeIEs_5;
         /**
          * id: id-CSG-Id
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSG_Id *_HandoverRequestAcknowledgeIEs_6;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_HandoverRequestAcknowledgeIEs_7;
         /**
          * id: id-CellAccessMode
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CellAccessMode _HandoverRequestAcknowledgeIEs_8;
         /**
          * id: id-CE-mode-B-SupportIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_mode_B_SupportIndicator _HandoverRequestAcknowledgeIEs_9;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverRequestAcknowledge_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequestAcknowledge_protocolIEs_element 
   (const char* name, const s1ap_HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequestAcknowledge_protocolIEs_element (
   const char* name, 
   s1ap_HandoverRequestAcknowledge_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_1
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_2
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_3
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_E_RABAdmittedList *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_4
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_E_RABFailedtoSetupListHOReqAck *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_5
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_Target_ToSource_TransparentContainer *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_6
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_CSG_Id *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_7
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_8
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_CellAccessMode value);

EXTERN void asn1SetTC_s1ap_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_9
   (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   s1ap_CE_mode_B_SupportIndicator value);

EXTERN void asn1Copy_s1ap_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverRequestAcknowledge_protocolIEs_element* pSrcValue, 
   s1ap_HandoverRequestAcknowledge_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequestAcknowledge_protocolIEs_element (
   s1ap_HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverRequestAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledge_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequestAcknowledge'
*/
/* List of s1ap_HandoverRequestAcknowledge_protocolIEs_element */
typedef OSRTDList s1ap_HandoverRequestAcknowledge_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverRequestAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequestAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequestAcknowledge_protocolIEs 
   (const char* name, const s1ap_HandoverRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequestAcknowledge_protocolIEs (
   const char* name, s1ap_HandoverRequestAcknowledge_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequestAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequestAcknowledge_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_1
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_2
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABAdmittedList to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_3
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_E_RABAdmittedList *pvalue);

/* Append IE with value type s1ap_E_RABFailedtoSetupListHOReqAck to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_4
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_E_RABFailedtoSetupListHOReqAck *pvalue);

/* Append IE with value type s1ap_Target_ToSource_TransparentContainer to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_5
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_Target_ToSource_TransparentContainer *pvalue);

/* Append IE with value type s1ap_CSG_Id to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_6
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_CSG_Id *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_7
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_CellAccessMode to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_8
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_CellAccessMode value);

/* Append IE with value type s1ap_CE_mode_B_SupportIndicator to list */
EXTERN int asn1Append_s1ap_HandoverRequestAcknowledge_protocolIEs_9
      (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge_protocolIEs* plist, 
   s1ap_CE_mode_B_SupportIndicator value);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverRequestAcknowledge_protocolIEs_element* 
   asn1Get_s1ap_HandoverRequestAcknowledge_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverRequestAcknowledge_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverRequestAcknowledge_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverRequestAcknowledge_protocolIEs* pSrcValue, 
   s1ap_HandoverRequestAcknowledge_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequestAcknowledge_protocolIEs (
   s1ap_HandoverRequestAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequestAcknowledge_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverRequestAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledge                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Handover Request Acknowledge

 **************************************************************
HandoverRequestAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverRequestAcknowledgeIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverRequestAcknowledgeIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverRequestAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverRequestAcknowledge {
   s1ap_HandoverRequestAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverRequestAcknowledge;

EXTERN int asn1PE_s1ap_HandoverRequestAcknowledge (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge* pvalue);

EXTERN int asn1PD_s1ap_HandoverRequestAcknowledge (OSCTXT* pctxt, s1ap_HandoverRequestAcknowledge* pvalue);

EXTERN void asn1Print_s1ap_HandoverRequestAcknowledge 
   (const char* name, const s1ap_HandoverRequestAcknowledge* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverRequestAcknowledge (const char* name, 
   s1ap_HandoverRequestAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverRequestAcknowledge (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverRequestAcknowledge* pvalue);

EXTERN void asn1Copy_s1ap_HandoverRequestAcknowledge (OSCTXT* pctxt, 
   const s1ap_HandoverRequestAcknowledge* pSrcValue, 
   s1ap_HandoverRequestAcknowledge* pDstValue);

EXTERN int asn1Init_s1ap_HandoverRequestAcknowledge (
   s1ap_HandoverRequestAcknowledge* pvalue);

EXTERN void asn1Free_s1ap_HandoverRequestAcknowledge (OSCTXT *pctxt, 
   s1ap_HandoverRequestAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedULItem_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSwitchedULItem'
*/
typedef struct EXTERN s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element 
   (const char* name, const s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element (
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedULItem_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSwitchedULItem'
*/
/* List of s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABToBeSwitchedULItem_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedULItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedULItem_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedULItem_iE_Extensions 
   (const char* name, const s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedULItem_iE_Extensions (const char* name, 
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedULItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSwitchedULItem_iE_Extensions_element* 
   asn1Get_s1ap_E_RABToBeSwitchedULItem_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedULItem_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pSrcValue, 
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedULItem_iE_Extensions (
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedULItem_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedULItem                                   */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSwitchedULItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   gTP-TEID [2] GTP-TEID,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABToBeSwitchedULItem-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABToBeSwitchedULItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABToBeSwitchedULItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABToBeSwitchedULItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_E_RABToBeSwitchedULItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABToBeSwitchedULItem;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedULItem (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULItem* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedULItem (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULItem* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedULItem 
   (const char* name, const s1ap_E_RABToBeSwitchedULItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedULItem (const char* name, 
   s1ap_E_RABToBeSwitchedULItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedULItem (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedULItem* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedULItem (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedULItem* pSrcValue, s1ap_E_RABToBeSwitchedULItem*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedULItem (
   s1ap_E_RABToBeSwitchedULItem* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedULItem (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedULItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedULList_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABToBeSwitchedULList'
*/
typedef struct EXTERN s1ap_E_RABToBeSwitchedULList_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABToBeSwitchedULItemIEs_TVALUE t;

      /**
       * E-RABToBeSwitchedULItemIEs information objects
       */
      union {
         /**
          * id: id-E-RABToBeSwitchedULItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABToBeSwitchedULItem *_E_RABToBeSwitchedULItemIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABToBeSwitchedULList_element;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedULList_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULList_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedULList_element (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULList_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedULList_element 
   (const char* name, const s1ap_E_RABToBeSwitchedULList_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedULList_element (const char* name, 
   s1ap_E_RABToBeSwitchedULList_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedULList_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedULList_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedULList_element (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedULList_element* pSrcValue, 
   s1ap_E_RABToBeSwitchedULList_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedULList_element (
   s1ap_E_RABToBeSwitchedULList_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedULList_element (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedULList_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABToBeSwitchedULList                                   */
/*                                                            */
/**************************************************************/
/*
E-RABToBeSwitchedULList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABToBeSwitchedULItemIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABToBeSwitchedULItemIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABToBeSwitchedULItemIEs}{@id})
}
*/
/* List of s1ap_E_RABToBeSwitchedULList_element */
typedef OSRTDList s1ap_E_RABToBeSwitchedULList;

EXTERN int asn1PE_s1ap_E_RABToBeSwitchedULList (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULList* pvalue);

EXTERN int asn1PD_s1ap_E_RABToBeSwitchedULList (OSCTXT* pctxt, s1ap_E_RABToBeSwitchedULList* pvalue);

EXTERN void asn1Print_s1ap_E_RABToBeSwitchedULList 
   (const char* name, const s1ap_E_RABToBeSwitchedULList* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABToBeSwitchedULList (const char* name, 
   s1ap_E_RABToBeSwitchedULList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABToBeSwitchedULList (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABToBeSwitchedULList* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABToBeSwitchedULList_element* 
   asn1Get_s1ap_E_RABToBeSwitchedULList (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABToBeSwitchedULList* plist);

EXTERN void asn1Copy_s1ap_E_RABToBeSwitchedULList (OSCTXT* pctxt, 
   const s1ap_E_RABToBeSwitchedULList* pSrcValue, s1ap_E_RABToBeSwitchedULList*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABToBeSwitchedULList (
   s1ap_E_RABToBeSwitchedULList* pvalue);

EXTERN void asn1Free_s1ap_E_RABToBeSwitchedULList (OSCTXT *pctxt, 
   s1ap_E_RABToBeSwitchedULList* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledge_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestAcknowledge'
*/
typedef struct EXTERN s1ap_PathSwitchRequestAcknowledge_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      PathSwitchRequestAcknowledgeIEs_TVALUE t;

      /**
       * PathSwitchRequestAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _PathSwitchRequestAcknowledgeIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _PathSwitchRequestAcknowledgeIEs_2;
         /**
          * id: id-uEaggregateMaximumBitrate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UEAggregateMaximumBitrate *_PathSwitchRequestAcknowledgeIEs_3;
         /**
          * id: id-E-RABToBeSwitchedULList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABToBeSwitchedULList *_PathSwitchRequestAcknowledgeIEs_4;
         /**
          * id: id-E-RABToBeReleasedList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_PathSwitchRequestAcknowledgeIEs_5;
         /**
          * id: id-SecurityContext
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SecurityContext *_PathSwitchRequestAcknowledgeIEs_6;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_PathSwitchRequestAcknowledgeIEs_7;
         /**
          * id: id-MME-UE-S1AP-ID-2
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MME_UE_S1AP_ID _PathSwitchRequestAcknowledgeIEs_8;
         /**
          * id: id-CSGMembershipStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipStatus _PathSwitchRequestAcknowledgeIEs_9;
         /**
          * id: id-ProSeAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ProSeAuthorized *_PathSwitchRequestAcknowledgeIEs_10;
         /**
          * id: id-UEUserPlaneCIoTSupportIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UEUserPlaneCIoTSupportIndicator _PathSwitchRequestAcknowledgeIEs_11;
         /**
          * id: id-V2XServicesAuthorized
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_V2XServicesAuthorized *_PathSwitchRequestAcknowledgeIEs_12;
         /**
          * id: id-UESidelinkAggregateMaximumBitrate
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UESidelinkAggregateMaximumBitrate *_PathSwitchRequestAcknowledgeIEs_13;
         /**
          * id: id-EnhancedCoverageRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_EnhancedCoverageRestricted _PathSwitchRequestAcknowledgeIEs_14;
         /**
          * id: id-NRUESecurityCapabilities
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_NRUESecurityCapabilities *_PathSwitchRequestAcknowledgeIEs_15;
         /**
          * id: id-CE-ModeBRestricted
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CE_ModeBRestricted _PathSwitchRequestAcknowledgeIEs_16;
         /**
          * id: id-AerialUEsubscriptionInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_AerialUEsubscriptionInformation _PathSwitchRequestAcknowledgeIEs_17;
         /**
          * id: id-PendingDataIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PendingDataIndication _PathSwitchRequestAcknowledgeIEs_18;
         /**
          * id: id-Subscription-Based-UE-DifferentiationInfo
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_Subscription_Based_UE_DifferentiationInfo *_PathSwitchRequestAcknowledgeIEs_19;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_PathSwitchRequestAcknowledge_protocolIEs_element;

EXTERN int asn1PE_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element 
   (const char* name, const s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element (
   const char* name, 
   s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_1
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_2
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_3
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_UEAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_4
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_E_RABToBeSwitchedULList *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_5
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_6
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_SecurityContext *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_7
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_8
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_9
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_CSGMembershipStatus value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_10
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_ProSeAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_11
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_UEUserPlaneCIoTSupportIndicator value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_12
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_V2XServicesAuthorized *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_13
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_14
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_EnhancedCoverageRestricted value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_15
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_NRUESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_16
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_CE_ModeBRestricted value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_17
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_AerialUEsubscriptionInformation value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_18
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_PendingDataIndication value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_19
   (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pElem
   , s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

EXTERN void asn1Copy_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pSrcValue, 
   s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element (
   s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledge_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestAcknowledge'
*/
/* List of s1ap_PathSwitchRequestAcknowledge_protocolIEs_element */
typedef OSRTDList s1ap_PathSwitchRequestAcknowledge_protocolIEs;

EXTERN int asn1PE_s1ap_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequestAcknowledge_protocolIEs 
   (const char* name, const s1ap_PathSwitchRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequestAcknowledge_protocolIEs (
   const char* name, s1ap_PathSwitchRequestAcknowledge_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequestAcknowledge_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_1
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_2
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_UEAggregateMaximumBitrate to list */
struct s1ap_UEAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_3
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_UEAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_E_RABToBeSwitchedULList to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_4
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_E_RABToBeSwitchedULList *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_5
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_SecurityContext to list */
struct s1ap_SecurityContext ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_6
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_SecurityContext *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_7
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_8
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_CSGMembershipStatus to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_9
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_CSGMembershipStatus value);

/* Append IE with value type s1ap_ProSeAuthorized to list */
struct s1ap_ProSeAuthorized ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_10
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_ProSeAuthorized *pvalue);

/* Append IE with value type s1ap_UEUserPlaneCIoTSupportIndicator to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_11
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_UEUserPlaneCIoTSupportIndicator value);

/* Append IE with value type s1ap_V2XServicesAuthorized to list */
struct s1ap_V2XServicesAuthorized ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_12
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_V2XServicesAuthorized *pvalue);

/* Append IE with value type s1ap_UESidelinkAggregateMaximumBitrate to list */
struct s1ap_UESidelinkAggregateMaximumBitrate ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_13
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_UESidelinkAggregateMaximumBitrate *pvalue);

/* Append IE with value type s1ap_EnhancedCoverageRestricted to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_14
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_EnhancedCoverageRestricted value);

/* Append IE with value type s1ap_NRUESecurityCapabilities to list */
struct s1ap_NRUESecurityCapabilities ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_15
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_NRUESecurityCapabilities *pvalue);

/* Append IE with value type s1ap_CE_ModeBRestricted to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_16
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_CE_ModeBRestricted value);

/* Append IE with value type s1ap_AerialUEsubscriptionInformation to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_17
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_AerialUEsubscriptionInformation value);

/* Append IE with value type s1ap_PendingDataIndication to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_18
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   s1ap_PendingDataIndication value);

/* Append IE with value type s1ap_Subscription_Based_UE_DifferentiationInfo to list */
struct s1ap_Subscription_Based_UE_DifferentiationInfo ;
EXTERN int asn1Append_s1ap_PathSwitchRequestAcknowledge_protocolIEs_19
      (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist, 
   struct s1ap_Subscription_Based_UE_DifferentiationInfo *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PathSwitchRequestAcknowledge_protocolIEs_element* 
   asn1Get_s1ap_PathSwitchRequestAcknowledge_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_PathSwitchRequestAcknowledge_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequestAcknowledge_protocolIEs* pSrcValue, 
   s1ap_PathSwitchRequestAcknowledge_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequestAcknowledge_protocolIEs (
   s1ap_PathSwitchRequestAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT *pctxt, 
   s1ap_PathSwitchRequestAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledge                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Path Switch Request Acknowledge

 **************************************************************
PathSwitchRequestAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({PathSwitchRequestAcknowledgeIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({PathSwitchRequestAcknowledgeIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({PathSwitchRequestAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_PathSwitchRequestAcknowledge {
   s1ap_PathSwitchRequestAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_PathSwitchRequestAcknowledge;

EXTERN int asn1PE_s1ap_PathSwitchRequestAcknowledge (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequestAcknowledge (OSCTXT* pctxt, s1ap_PathSwitchRequestAcknowledge* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequestAcknowledge 
   (const char* name, const s1ap_PathSwitchRequestAcknowledge* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequestAcknowledge (const char* name, 
   s1ap_PathSwitchRequestAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequestAcknowledge (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequestAcknowledge* pvalue);

EXTERN void asn1Copy_s1ap_PathSwitchRequestAcknowledge (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequestAcknowledge* pSrcValue, 
   s1ap_PathSwitchRequestAcknowledge* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequestAcknowledge (
   s1ap_PathSwitchRequestAcknowledge* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequestAcknowledge (OSCTXT *pctxt, 
   s1ap_PathSwitchRequestAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupItemBearerSURes_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupItemBearerSURes'
*/
typedef struct EXTERN s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element 
   (const char* name, const s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element (
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupItemBearerSURes_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupItemBearerSURes'
*/
/* List of s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABSetupItemBearerSURes_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABSetupItemBearerSURes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupItemBearerSURes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupItemBearerSURes_iE_Extensions 
   (const char* name, const s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupItemBearerSURes_iE_Extensions (
   const char* name, s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupItemBearerSURes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABSetupItemBearerSURes_iE_Extensions_element* 
   asn1Get_s1ap_E_RABSetupItemBearerSURes_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABSetupItemBearerSURes_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pSrcValue, 
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupItemBearerSURes_iE_Extensions (
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupItemBearerSURes_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupItemBearerSURes                                 */
/*                                                            */
/**************************************************************/
/*
E-RABSetupItemBearerSURes ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   gTP-TEID [2] GTP-TEID,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABSetupItemBearerSUResExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABSetupItemBearerSUResExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABSetupItemBearerSUResExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABSetupItemBearerSURes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_E_RABSetupItemBearerSURes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABSetupItemBearerSURes;

EXTERN int asn1PE_s1ap_E_RABSetupItemBearerSURes (OSCTXT* pctxt, s1ap_E_RABSetupItemBearerSURes* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupItemBearerSURes (OSCTXT* pctxt, s1ap_E_RABSetupItemBearerSURes* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupItemBearerSURes 
   (const char* name, const s1ap_E_RABSetupItemBearerSURes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupItemBearerSURes (const char* name, 
   s1ap_E_RABSetupItemBearerSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupItemBearerSURes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupItemBearerSURes* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupItemBearerSURes (OSCTXT* pctxt, 
   const s1ap_E_RABSetupItemBearerSURes* pSrcValue, 
   s1ap_E_RABSetupItemBearerSURes* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupItemBearerSURes (
   s1ap_E_RABSetupItemBearerSURes* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupItemBearerSURes (OSCTXT *pctxt, 
   s1ap_E_RABSetupItemBearerSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupListBearerSURes_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupListBearerSURes'
*/
typedef struct EXTERN s1ap_E_RABSetupListBearerSURes_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABSetupItemBearerSUResIEs_TVALUE t;

      /**
       * E-RABSetupItemBearerSUResIEs information objects
       */
      union {
         /**
          * id: id-E-RABSetupItemBearerSURes
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABSetupItemBearerSURes *_E_RABSetupItemBearerSUResIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABSetupListBearerSURes_element;

EXTERN int asn1PE_s1ap_E_RABSetupListBearerSURes_element (OSCTXT* pctxt, s1ap_E_RABSetupListBearerSURes_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupListBearerSURes_element (OSCTXT* pctxt, s1ap_E_RABSetupListBearerSURes_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupListBearerSURes_element 
   (const char* name, const s1ap_E_RABSetupListBearerSURes_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupListBearerSURes_element (const char* name, 
   s1ap_E_RABSetupListBearerSURes_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupListBearerSURes_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupListBearerSURes_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupListBearerSURes_element (OSCTXT* pctxt, 
   const s1ap_E_RABSetupListBearerSURes_element* pSrcValue, 
   s1ap_E_RABSetupListBearerSURes_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupListBearerSURes_element (
   s1ap_E_RABSetupListBearerSURes_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupListBearerSURes_element (OSCTXT *pctxt, 
   s1ap_E_RABSetupListBearerSURes_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupListBearerSURes                                 */
/*                                                            */
/**************************************************************/
/*
E-RABSetupListBearerSURes ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABSetupItemBearerSUResIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABSetupItemBearerSUResIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABSetupItemBearerSUResIEs}{@id})
}
*/
/* List of s1ap_E_RABSetupListBearerSURes_element */
typedef OSRTDList s1ap_E_RABSetupListBearerSURes;

EXTERN int asn1PE_s1ap_E_RABSetupListBearerSURes (OSCTXT* pctxt, s1ap_E_RABSetupListBearerSURes* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupListBearerSURes (OSCTXT* pctxt, s1ap_E_RABSetupListBearerSURes* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupListBearerSURes 
   (const char* name, const s1ap_E_RABSetupListBearerSURes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupListBearerSURes (const char* name, 
   s1ap_E_RABSetupListBearerSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupListBearerSURes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupListBearerSURes* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABSetupListBearerSURes_element* 
   asn1Get_s1ap_E_RABSetupListBearerSURes (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABSetupListBearerSURes* plist);

EXTERN void asn1Copy_s1ap_E_RABSetupListBearerSURes (OSCTXT* pctxt, 
   const s1ap_E_RABSetupListBearerSURes* pSrcValue, 
   s1ap_E_RABSetupListBearerSURes* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupListBearerSURes (
   s1ap_E_RABSetupListBearerSURes* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupListBearerSURes (OSCTXT *pctxt, 
   s1ap_E_RABSetupListBearerSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupResponse_protocolIEs_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupResponse'
*/
typedef struct EXTERN s1ap_E_RABSetupResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABSetupResponseIEs_TVALUE t;

      /**
       * E-RABSetupResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABSetupResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABSetupResponseIEs_2;
         /**
          * id: id-E-RABSetupListBearerSURes
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABSetupListBearerSURes *_E_RABSetupResponseIEs_3;
         /**
          * id: id-E-RABFailedToSetupListBearerSURes
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_E_RABSetupResponseIEs_4;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_E_RABSetupResponseIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABSetupResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABSetupResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupResponse_protocolIEs_element 
   (const char* name, const s1ap_E_RABSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupResponse_protocolIEs_element (
   const char* name, s1ap_E_RABSetupResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABSetupResponse_protocolIEs_element_E_RABSetupResponseIEs_1
   (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABSetupResponse_protocolIEs_element_E_RABSetupResponseIEs_2
   (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABSetupResponse_protocolIEs_element_E_RABSetupResponseIEs_3
   (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs_element* pElem, 
   s1ap_E_RABSetupListBearerSURes *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABSetupResponse_protocolIEs_element_E_RABSetupResponseIEs_4
   (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABSetupResponse_protocolIEs_element_E_RABSetupResponseIEs_5
   (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABSetupResponse_protocolIEs_element* pSrcValue, 
   s1ap_E_RABSetupResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupResponse_protocolIEs_element (
   s1ap_E_RABSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABSetupResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupResponse_protocolIEs                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupResponse'
*/
/* List of s1ap_E_RABSetupResponse_protocolIEs_element */
typedef OSRTDList s1ap_E_RABSetupResponse_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABSetupResponse_protocolIEs (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupResponse_protocolIEs (OSCTXT* pctxt, s1ap_E_RABSetupResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupResponse_protocolIEs 
   (const char* name, const s1ap_E_RABSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupResponse_protocolIEs (const char* name, 
   s1ap_E_RABSetupResponse_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABSetupResponse_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_E_RABSetupResponse_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABSetupResponse_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_E_RABSetupResponse_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABSetupListBearerSURes to list */
EXTERN int asn1Append_s1ap_E_RABSetupResponse_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_E_RABSetupResponse_protocolIEs* plist, s1ap_E_RABSetupListBearerSURes 
   *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_E_RABSetupResponse_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_E_RABSetupResponse_protocolIEs* plist, s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_E_RABSetupResponse_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_E_RABSetupResponse_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABSetupResponse_protocolIEs_element* 
   asn1Get_s1ap_E_RABSetupResponse_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABSetupResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABSetupResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABSetupResponse_protocolIEs* pSrcValue, 
   s1ap_E_RABSetupResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupResponse_protocolIEs (
   s1ap_E_RABSetupResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABSetupResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupResponse                                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB Setup Response

 **************************************************************
E-RABSetupResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABSetupResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABSetupResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABSetupResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABSetupResponse {
   s1ap_E_RABSetupResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABSetupResponse;

EXTERN int asn1PE_s1ap_E_RABSetupResponse (OSCTXT* pctxt, s1ap_E_RABSetupResponse* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupResponse (OSCTXT* pctxt, s1ap_E_RABSetupResponse* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupResponse 
   (const char* name, const s1ap_E_RABSetupResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupResponse (const char* name, 
   s1ap_E_RABSetupResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupResponse* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupResponse (OSCTXT* pctxt, 
   const s1ap_E_RABSetupResponse* pSrcValue, s1ap_E_RABSetupResponse*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupResponse (s1ap_E_RABSetupResponse* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupResponse (OSCTXT *pctxt, 
   s1ap_E_RABSetupResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyItemBearerModRes_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyItemBearerModRes'
*/
typedef struct EXTERN s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element 
   (const char* name, const s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element (
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyItemBearerModRes_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyItemBearerModRes'
*/
/* List of s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABModifyItemBearerModRes_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABModifyItemBearerModRes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyItemBearerModRes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyItemBearerModRes_iE_Extensions 
   (const char* name, const s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyItemBearerModRes_iE_Extensions (
   const char* name, s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyItemBearerModRes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModifyItemBearerModRes_iE_Extensions_element* 
   asn1Get_s1ap_E_RABModifyItemBearerModRes_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABModifyItemBearerModRes_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pSrcValue, 
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyItemBearerModRes_iE_Extensions (
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyItemBearerModRes_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyItemBearerModRes                               */
/*                                                            */
/**************************************************************/
/*
E-RABModifyItemBearerModRes ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABModifyItemBearerModResExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABModifyItemBearerModResExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABModifyItemBearerModResExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABModifyItemBearerModRes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_E_RABModifyItemBearerModRes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABModifyItemBearerModRes;

EXTERN int asn1PE_s1ap_E_RABModifyItemBearerModRes (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModRes* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyItemBearerModRes (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModRes* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyItemBearerModRes 
   (const char* name, const s1ap_E_RABModifyItemBearerModRes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyItemBearerModRes (const char* name, 
   s1ap_E_RABModifyItemBearerModRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyItemBearerModRes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyItemBearerModRes* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyItemBearerModRes (OSCTXT* pctxt, 
   const s1ap_E_RABModifyItemBearerModRes* pSrcValue, 
   s1ap_E_RABModifyItemBearerModRes* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyItemBearerModRes (
   s1ap_E_RABModifyItemBearerModRes* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyItemBearerModRes (OSCTXT *pctxt, 
   s1ap_E_RABModifyItemBearerModRes* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyListBearerModRes_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyListBearerModRes'
*/
typedef struct EXTERN s1ap_E_RABModifyListBearerModRes_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABModifyItemBearerModResIEs_TVALUE t;

      /**
       * E-RABModifyItemBearerModResIEs information objects
       */
      union {
         /**
          * id: id-E-RABModifyItemBearerModRes
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABModifyItemBearerModRes *_E_RABModifyItemBearerModResIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABModifyListBearerModRes_element;

EXTERN int asn1PE_s1ap_E_RABModifyListBearerModRes_element (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModRes_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyListBearerModRes_element (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModRes_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyListBearerModRes_element 
   (const char* name, const s1ap_E_RABModifyListBearerModRes_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyListBearerModRes_element (const char* name, 
   s1ap_E_RABModifyListBearerModRes_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyListBearerModRes_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyListBearerModRes_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyListBearerModRes_element (OSCTXT* pctxt, 
   const s1ap_E_RABModifyListBearerModRes_element* pSrcValue, 
   s1ap_E_RABModifyListBearerModRes_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyListBearerModRes_element (
   s1ap_E_RABModifyListBearerModRes_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyListBearerModRes_element (OSCTXT *pctxt, 
   s1ap_E_RABModifyListBearerModRes_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyListBearerModRes                               */
/*                                                            */
/**************************************************************/
/*
E-RABModifyListBearerModRes ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABModifyItemBearerModResIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABModifyItemBearerModResIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABModifyItemBearerModResIEs}{@id})
}
*/
/* List of s1ap_E_RABModifyListBearerModRes_element */
typedef OSRTDList s1ap_E_RABModifyListBearerModRes;

EXTERN int asn1PE_s1ap_E_RABModifyListBearerModRes (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModRes* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyListBearerModRes (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModRes* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyListBearerModRes 
   (const char* name, const s1ap_E_RABModifyListBearerModRes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyListBearerModRes (const char* name, 
   s1ap_E_RABModifyListBearerModRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyListBearerModRes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyListBearerModRes* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModifyListBearerModRes_element* 
   asn1Get_s1ap_E_RABModifyListBearerModRes (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABModifyListBearerModRes* plist);

EXTERN void asn1Copy_s1ap_E_RABModifyListBearerModRes (OSCTXT* pctxt, 
   const s1ap_E_RABModifyListBearerModRes* pSrcValue, 
   s1ap_E_RABModifyListBearerModRes* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyListBearerModRes (
   s1ap_E_RABModifyListBearerModRes* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyListBearerModRes (OSCTXT *pctxt, 
   s1ap_E_RABModifyListBearerModRes* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyResponse_protocolIEs_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyResponse'
*/
typedef struct EXTERN s1ap_E_RABModifyResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABModifyResponseIEs_TVALUE t;

      /**
       * E-RABModifyResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABModifyResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABModifyResponseIEs_2;
         /**
          * id: id-E-RABModifyListBearerModRes
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABModifyListBearerModRes *_E_RABModifyResponseIEs_3;
         /**
          * id: id-E-RABFailedToModifyList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_E_RABModifyResponseIEs_4;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_E_RABModifyResponseIEs_5;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageReportList *_E_RABModifyResponseIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABModifyResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABModifyResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyResponse_protocolIEs_element 
   (const char* name, const s1ap_E_RABModifyResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyResponse_protocolIEs_element (
   const char* name, s1ap_E_RABModifyResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModifyResponse_protocolIEs_element_E_RABModifyResponseIEs_1
   (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModifyResponse_protocolIEs_element_E_RABModifyResponseIEs_2
   (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModifyResponse_protocolIEs_element_E_RABModifyResponseIEs_3
   (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pElem, 
   s1ap_E_RABModifyListBearerModRes *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModifyResponse_protocolIEs_element_E_RABModifyResponseIEs_4
   (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModifyResponse_protocolIEs_element_E_RABModifyResponseIEs_5
   (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModifyResponse_protocolIEs_element_E_RABModifyResponseIEs_6
   (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs_element* pElem, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABModifyResponse_protocolIEs_element* pSrcValue, 
   s1ap_E_RABModifyResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyResponse_protocolIEs_element (
   s1ap_E_RABModifyResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyResponse_protocolIEs                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyResponse'
*/
/* List of s1ap_E_RABModifyResponse_protocolIEs_element */
typedef OSRTDList s1ap_E_RABModifyResponse_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABModifyResponse_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyResponse_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModifyResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyResponse_protocolIEs 
   (const char* name, const s1ap_E_RABModifyResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyResponse_protocolIEs (const char* name, 
   s1ap_E_RABModifyResponse_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModifyResponse_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModifyResponse_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs* plist, s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABModifyListBearerModRes to list */
EXTERN int asn1Append_s1ap_E_RABModifyResponse_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs* plist, 
   s1ap_E_RABModifyListBearerModRes *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_E_RABModifyResponse_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs* plist, s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_E_RABModifyResponse_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_E_RABModifyResponse_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModifyResponse_protocolIEs_element* 
   asn1Get_s1ap_E_RABModifyResponse_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABModifyResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABModifyResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABModifyResponse_protocolIEs* pSrcValue, 
   s1ap_E_RABModifyResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyResponse_protocolIEs (
   s1ap_E_RABModifyResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABModifyResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyResponse                                       */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB Modify Response

 **************************************************************
E-RABModifyResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABModifyResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABModifyResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABModifyResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABModifyResponse {
   s1ap_E_RABModifyResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABModifyResponse;

EXTERN int asn1PE_s1ap_E_RABModifyResponse (OSCTXT* pctxt, s1ap_E_RABModifyResponse* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyResponse (OSCTXT* pctxt, s1ap_E_RABModifyResponse* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyResponse 
   (const char* name, const s1ap_E_RABModifyResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyResponse (const char* name, 
   s1ap_E_RABModifyResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyResponse* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyResponse (OSCTXT* pctxt, 
   const s1ap_E_RABModifyResponse* pSrcValue, s1ap_E_RABModifyResponse*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyResponse (s1ap_E_RABModifyResponse* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyResponse (OSCTXT *pctxt, 
   s1ap_E_RABModifyResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseItemBearerRelComp_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseItemBearerRelComp'
*/
typedef struct EXTERN s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element 
   (const char* name, const s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element (
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseItemBearerRelComp_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseItemBearerRelComp'
*/
/* List of s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions 
   (const char* name, const s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions (
   const char* name, s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions_element* 
   asn1Get_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pSrcValue, 
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions (
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseItemBearerRelComp                             */
/*                                                            */
/**************************************************************/
/*
E-RABReleaseItemBearerRelComp ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABReleaseItemBearerRelCompExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABReleaseItemBearerRelCompExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABReleaseItemBearerRelCompExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABReleaseItemBearerRelComp {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_E_RABReleaseItemBearerRelComp_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABReleaseItemBearerRelComp;

EXTERN int asn1PE_s1ap_E_RABReleaseItemBearerRelComp (OSCTXT* pctxt, s1ap_E_RABReleaseItemBearerRelComp* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseItemBearerRelComp (OSCTXT* pctxt, s1ap_E_RABReleaseItemBearerRelComp* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseItemBearerRelComp 
   (const char* name, const s1ap_E_RABReleaseItemBearerRelComp* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseItemBearerRelComp (const char* name, 
   s1ap_E_RABReleaseItemBearerRelComp* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseItemBearerRelComp (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseItemBearerRelComp* pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseItemBearerRelComp (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseItemBearerRelComp* pSrcValue, 
   s1ap_E_RABReleaseItemBearerRelComp* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseItemBearerRelComp (
   s1ap_E_RABReleaseItemBearerRelComp* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseItemBearerRelComp (OSCTXT *pctxt, 
   s1ap_E_RABReleaseItemBearerRelComp* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseListBearerRelComp_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseListBearerRelComp'
*/
typedef struct EXTERN s1ap_E_RABReleaseListBearerRelComp_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABReleaseItemBearerRelCompIEs_TVALUE t;

      /**
       * E-RABReleaseItemBearerRelCompIEs information objects
       */
      union {
         /**
          * id: id-E-RABReleaseItemBearerRelComp
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABReleaseItemBearerRelComp *_E_RABReleaseItemBearerRelCompIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABReleaseListBearerRelComp_element;

EXTERN int asn1PE_s1ap_E_RABReleaseListBearerRelComp_element (OSCTXT* pctxt, s1ap_E_RABReleaseListBearerRelComp_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseListBearerRelComp_element (OSCTXT* pctxt, s1ap_E_RABReleaseListBearerRelComp_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseListBearerRelComp_element 
   (const char* name, const s1ap_E_RABReleaseListBearerRelComp_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseListBearerRelComp_element (const char* name, 
   s1ap_E_RABReleaseListBearerRelComp_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseListBearerRelComp_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseListBearerRelComp_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseListBearerRelComp_element (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseListBearerRelComp_element* pSrcValue, 
   s1ap_E_RABReleaseListBearerRelComp_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseListBearerRelComp_element (
   s1ap_E_RABReleaseListBearerRelComp_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseListBearerRelComp_element (OSCTXT *pctxt, 
   s1ap_E_RABReleaseListBearerRelComp_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseListBearerRelComp                             */
/*                                                            */
/**************************************************************/
/*
E-RABReleaseListBearerRelComp ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABReleaseItemBearerRelCompIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABReleaseItemBearerRelCompIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABReleaseItemBearerRelCompIEs}{@id})
}
*/
/* List of s1ap_E_RABReleaseListBearerRelComp_element */
typedef OSRTDList s1ap_E_RABReleaseListBearerRelComp;

EXTERN int asn1PE_s1ap_E_RABReleaseListBearerRelComp (OSCTXT* pctxt, s1ap_E_RABReleaseListBearerRelComp* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseListBearerRelComp (OSCTXT* pctxt, s1ap_E_RABReleaseListBearerRelComp* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseListBearerRelComp 
   (const char* name, const s1ap_E_RABReleaseListBearerRelComp* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseListBearerRelComp (const char* name, 
   s1ap_E_RABReleaseListBearerRelComp* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseListBearerRelComp (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseListBearerRelComp* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABReleaseListBearerRelComp_element* 
   asn1Get_s1ap_E_RABReleaseListBearerRelComp (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABReleaseListBearerRelComp* plist);

EXTERN void asn1Copy_s1ap_E_RABReleaseListBearerRelComp (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseListBearerRelComp* pSrcValue, 
   s1ap_E_RABReleaseListBearerRelComp* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseListBearerRelComp (
   s1ap_E_RABReleaseListBearerRelComp* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseListBearerRelComp (OSCTXT *pctxt, 
   s1ap_E_RABReleaseListBearerRelComp* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseResponse_protocolIEs_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseResponse'
*/
typedef struct EXTERN s1ap_E_RABReleaseResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABReleaseResponseIEs_TVALUE t;

      /**
       * E-RABReleaseResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABReleaseResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABReleaseResponseIEs_2;
         /**
          * id: id-E-RABReleaseListBearerRelComp
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABReleaseListBearerRelComp *_E_RABReleaseResponseIEs_3;
         /**
          * id: id-E-RABFailedToReleaseList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_E_RABReleaseResponseIEs_4;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_E_RABReleaseResponseIEs_5;
         /**
          * id: id-UserLocationInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UserLocationInformation *_E_RABReleaseResponseIEs_6;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageReportList *_E_RABReleaseResponseIEs_7;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABReleaseResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABReleaseResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseResponse_protocolIEs_element 
   (const char* name, const s1ap_E_RABReleaseResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseResponse_protocolIEs_element (
   const char* name, s1ap_E_RABReleaseResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseResponse_protocolIEs_element_E_RABReleaseResponseIEs_1
   (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABReleaseResponse_protocolIEs_element_E_RABReleaseResponseIEs_2
   (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABReleaseResponse_protocolIEs_element_E_RABReleaseResponseIEs_3
   (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pElem, 
   s1ap_E_RABReleaseListBearerRelComp *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseResponse_protocolIEs_element_E_RABReleaseResponseIEs_4
   (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseResponse_protocolIEs_element_E_RABReleaseResponseIEs_5
   (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseResponse_protocolIEs_element_E_RABReleaseResponseIEs_6
   (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pElem, 
   s1ap_UserLocationInformation *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABReleaseResponse_protocolIEs_element_E_RABReleaseResponseIEs_7
   (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs_element* pElem, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseResponse_protocolIEs_element* pSrcValue, 
   s1ap_E_RABReleaseResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseResponse_protocolIEs_element (
   s1ap_E_RABReleaseResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABReleaseResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseResponse_protocolIEs                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABReleaseResponse'
*/
/* List of s1ap_E_RABReleaseResponse_protocolIEs_element */
typedef OSRTDList s1ap_E_RABReleaseResponse_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABReleaseResponse_protocolIEs (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseResponse_protocolIEs (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseResponse_protocolIEs 
   (const char* name, const s1ap_E_RABReleaseResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseResponse_protocolIEs (const char* name, 
   s1ap_E_RABReleaseResponse_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABReleaseResponse_protocolIEs_1
      (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABReleaseResponse_protocolIEs_2
      (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABReleaseListBearerRelComp to list */
EXTERN int asn1Append_s1ap_E_RABReleaseResponse_protocolIEs_3
      (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* plist, 
   s1ap_E_RABReleaseListBearerRelComp *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_E_RABReleaseResponse_protocolIEs_4
      (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* plist, 
   s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_E_RABReleaseResponse_protocolIEs_5
      (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_UserLocationInformation to list */
struct s1ap_UserLocationInformation ;
EXTERN int asn1Append_s1ap_E_RABReleaseResponse_protocolIEs_6
      (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* plist, struct 
   s1ap_UserLocationInformation *pvalue);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_E_RABReleaseResponse_protocolIEs_7
      (OSCTXT* pctxt, s1ap_E_RABReleaseResponse_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABReleaseResponse_protocolIEs_element* 
   asn1Get_s1ap_E_RABReleaseResponse_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABReleaseResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABReleaseResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseResponse_protocolIEs* pSrcValue, 
   s1ap_E_RABReleaseResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseResponse_protocolIEs (
   s1ap_E_RABReleaseResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABReleaseResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABReleaseResponse                                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB Release Response

 **************************************************************
E-RABReleaseResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABReleaseResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABReleaseResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABReleaseResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABReleaseResponse {
   s1ap_E_RABReleaseResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABReleaseResponse;

EXTERN int asn1PE_s1ap_E_RABReleaseResponse (OSCTXT* pctxt, s1ap_E_RABReleaseResponse* pvalue);

EXTERN int asn1PD_s1ap_E_RABReleaseResponse (OSCTXT* pctxt, s1ap_E_RABReleaseResponse* pvalue);

EXTERN void asn1Print_s1ap_E_RABReleaseResponse 
   (const char* name, const s1ap_E_RABReleaseResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABReleaseResponse (const char* name, 
   s1ap_E_RABReleaseResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABReleaseResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABReleaseResponse* pvalue);

EXTERN void asn1Copy_s1ap_E_RABReleaseResponse (OSCTXT* pctxt, 
   const s1ap_E_RABReleaseResponse* pSrcValue, s1ap_E_RABReleaseResponse*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABReleaseResponse (s1ap_E_RABReleaseResponse* pvalue);

EXTERN void asn1Free_s1ap_E_RABReleaseResponse (OSCTXT *pctxt, 
   s1ap_E_RABReleaseResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupItemCtxtSURes_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupItemCtxtSURes'
*/
typedef struct EXTERN s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element 
   (const char* name, const s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element (
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupItemCtxtSURes_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupItemCtxtSURes'
*/
/* List of s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABSetupItemCtxtSURes_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions 
   (const char* name, const s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions (const char* name, 
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABSetupItemCtxtSURes_iE_Extensions_element* 
   asn1Get_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pSrcValue, 
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions (
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupItemCtxtSURes_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupItemCtxtSURes                                   */
/*                                                            */
/**************************************************************/
/*
E-RABSetupItemCtxtSURes ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   transportLayerAddress [1] TransportLayerAddress,
   gTP-TEID [2] GTP-TEID,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABSetupItemCtxtSUResExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABSetupItemCtxtSUResExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABSetupItemCtxtSUResExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABSetupItemCtxtSURes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_TransportLayerAddress transportLayerAddress;
   s1ap_GTP_TEID gTP_TEID;
   s1ap_E_RABSetupItemCtxtSURes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABSetupItemCtxtSURes;

EXTERN int asn1PE_s1ap_E_RABSetupItemCtxtSURes (OSCTXT* pctxt, s1ap_E_RABSetupItemCtxtSURes* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupItemCtxtSURes (OSCTXT* pctxt, s1ap_E_RABSetupItemCtxtSURes* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupItemCtxtSURes 
   (const char* name, const s1ap_E_RABSetupItemCtxtSURes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupItemCtxtSURes (const char* name, 
   s1ap_E_RABSetupItemCtxtSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupItemCtxtSURes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupItemCtxtSURes* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupItemCtxtSURes (OSCTXT* pctxt, 
   const s1ap_E_RABSetupItemCtxtSURes* pSrcValue, s1ap_E_RABSetupItemCtxtSURes*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupItemCtxtSURes (
   s1ap_E_RABSetupItemCtxtSURes* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupItemCtxtSURes (OSCTXT *pctxt, 
   s1ap_E_RABSetupItemCtxtSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupListCtxtSURes_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABSetupListCtxtSURes'
*/
typedef struct EXTERN s1ap_E_RABSetupListCtxtSURes_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABSetupItemCtxtSUResIEs_TVALUE t;

      /**
       * E-RABSetupItemCtxtSUResIEs information objects
       */
      union {
         /**
          * id: id-E-RABSetupItemCtxtSURes
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABSetupItemCtxtSURes *_E_RABSetupItemCtxtSUResIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABSetupListCtxtSURes_element;

EXTERN int asn1PE_s1ap_E_RABSetupListCtxtSURes_element (OSCTXT* pctxt, s1ap_E_RABSetupListCtxtSURes_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupListCtxtSURes_element (OSCTXT* pctxt, s1ap_E_RABSetupListCtxtSURes_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupListCtxtSURes_element 
   (const char* name, const s1ap_E_RABSetupListCtxtSURes_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupListCtxtSURes_element (const char* name, 
   s1ap_E_RABSetupListCtxtSURes_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupListCtxtSURes_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupListCtxtSURes_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABSetupListCtxtSURes_element (OSCTXT* pctxt, 
   const s1ap_E_RABSetupListCtxtSURes_element* pSrcValue, 
   s1ap_E_RABSetupListCtxtSURes_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupListCtxtSURes_element (
   s1ap_E_RABSetupListCtxtSURes_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupListCtxtSURes_element (OSCTXT *pctxt, 
   s1ap_E_RABSetupListCtxtSURes_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABSetupListCtxtSURes                                   */
/*                                                            */
/**************************************************************/
/*
E-RABSetupListCtxtSURes ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABSetupItemCtxtSUResIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABSetupItemCtxtSUResIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABSetupItemCtxtSUResIEs}{@id})
}
*/
/* List of s1ap_E_RABSetupListCtxtSURes_element */
typedef OSRTDList s1ap_E_RABSetupListCtxtSURes;

EXTERN int asn1PE_s1ap_E_RABSetupListCtxtSURes (OSCTXT* pctxt, s1ap_E_RABSetupListCtxtSURes* pvalue);

EXTERN int asn1PD_s1ap_E_RABSetupListCtxtSURes (OSCTXT* pctxt, s1ap_E_RABSetupListCtxtSURes* pvalue);

EXTERN void asn1Print_s1ap_E_RABSetupListCtxtSURes 
   (const char* name, const s1ap_E_RABSetupListCtxtSURes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABSetupListCtxtSURes (const char* name, 
   s1ap_E_RABSetupListCtxtSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABSetupListCtxtSURes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABSetupListCtxtSURes* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABSetupListCtxtSURes_element* 
   asn1Get_s1ap_E_RABSetupListCtxtSURes (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABSetupListCtxtSURes* plist);

EXTERN void asn1Copy_s1ap_E_RABSetupListCtxtSURes (OSCTXT* pctxt, 
   const s1ap_E_RABSetupListCtxtSURes* pSrcValue, s1ap_E_RABSetupListCtxtSURes*
    pDstValue);

EXTERN int asn1Init_s1ap_E_RABSetupListCtxtSURes (
   s1ap_E_RABSetupListCtxtSURes* pvalue);

EXTERN void asn1Free_s1ap_E_RABSetupListCtxtSURes (OSCTXT *pctxt, 
   s1ap_E_RABSetupListCtxtSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupResponse_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupResponse'
*/
typedef struct EXTERN s1ap_InitialContextSetupResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      InitialContextSetupResponseIEs_TVALUE t;

      /**
       * InitialContextSetupResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _InitialContextSetupResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _InitialContextSetupResponseIEs_2;
         /**
          * id: id-E-RABSetupListCtxtSURes
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABSetupListCtxtSURes *_InitialContextSetupResponseIEs_3;
         /**
          * id: id-E-RABFailedToSetupListCtxtSURes
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_InitialContextSetupResponseIEs_4;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_InitialContextSetupResponseIEs_5;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_InitialContextSetupResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_InitialContextSetupResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupResponse_protocolIEs_element 
   (const char* name, const s1ap_InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupResponse_protocolIEs_element (
   const char* name, 
   s1ap_InitialContextSetupResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_1
   (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_2
   (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_3
   (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs_element* pElem
   , s1ap_E_RABSetupListCtxtSURes *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_4
   (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs_element* pElem
   , s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_5
   (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_InitialContextSetupResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupResponse_protocolIEs_element* pSrcValue, 
   s1ap_InitialContextSetupResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupResponse_protocolIEs_element (
   s1ap_InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_InitialContextSetupResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupResponse_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupResponse'
*/
/* List of s1ap_InitialContextSetupResponse_protocolIEs_element */
typedef OSRTDList s1ap_InitialContextSetupResponse_protocolIEs;

EXTERN int asn1PE_s1ap_InitialContextSetupResponse_protocolIEs (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupResponse_protocolIEs (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupResponse_protocolIEs 
   (const char* name, const s1ap_InitialContextSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupResponse_protocolIEs (
   const char* name, s1ap_InitialContextSetupResponse_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialContextSetupResponse_protocolIEs_1
      (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialContextSetupResponse_protocolIEs_2
      (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABSetupListCtxtSURes to list */
EXTERN int asn1Append_s1ap_InitialContextSetupResponse_protocolIEs_3
      (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs* plist, 
   s1ap_E_RABSetupListCtxtSURes *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_InitialContextSetupResponse_protocolIEs_4
      (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs* plist, 
   s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_InitialContextSetupResponse_protocolIEs_5
      (OSCTXT* pctxt, s1ap_InitialContextSetupResponse_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_InitialContextSetupResponse_protocolIEs_element* 
   asn1Get_s1ap_InitialContextSetupResponse_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_InitialContextSetupResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_InitialContextSetupResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupResponse_protocolIEs* pSrcValue, 
   s1ap_InitialContextSetupResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupResponse_protocolIEs (
   s1ap_InitialContextSetupResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_InitialContextSetupResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupResponse                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Initial Context Setup Response

 **************************************************************
InitialContextSetupResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({InitialContextSetupResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({InitialContextSetupResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({InitialContextSetupResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_InitialContextSetupResponse {
   s1ap_InitialContextSetupResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_InitialContextSetupResponse;

EXTERN int asn1PE_s1ap_InitialContextSetupResponse (OSCTXT* pctxt, s1ap_InitialContextSetupResponse* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupResponse (OSCTXT* pctxt, s1ap_InitialContextSetupResponse* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupResponse 
   (const char* name, const s1ap_InitialContextSetupResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupResponse (const char* name, 
   s1ap_InitialContextSetupResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupResponse* pvalue);

EXTERN void asn1Copy_s1ap_InitialContextSetupResponse (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupResponse* pSrcValue, 
   s1ap_InitialContextSetupResponse* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupResponse (
   s1ap_InitialContextSetupResponse* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupResponse (OSCTXT *pctxt, 
   s1ap_InitialContextSetupResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancelAcknowledge_protocolIEs_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancelAcknowledge'
*/
typedef struct EXTERN s1ap_HandoverCancelAcknowledge_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverCancelAcknowledgeIEs_TVALUE t;

      /**
       * HandoverCancelAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverCancelAcknowledgeIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _HandoverCancelAcknowledgeIEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_HandoverCancelAcknowledgeIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverCancelAcknowledge_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverCancelAcknowledge_protocolIEs_element 
   (const char* name, const s1ap_HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCancelAcknowledge_protocolIEs_element (
   const char* name, 
   s1ap_HandoverCancelAcknowledge_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverCancelAcknowledge_protocolIEs_element_HandoverCancelAcknowledgeIEs_1
   (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverCancelAcknowledge_protocolIEs_element_HandoverCancelAcknowledgeIEs_2
   (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverCancelAcknowledge_protocolIEs_element_HandoverCancelAcknowledgeIEs_3
   (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverCancelAcknowledge_protocolIEs_element* pSrcValue, 
   s1ap_HandoverCancelAcknowledge_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCancelAcknowledge_protocolIEs_element (
   s1ap_HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverCancelAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancelAcknowledge_protocolIEs                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancelAcknowledge'
*/
/* List of s1ap_HandoverCancelAcknowledge_protocolIEs_element */
typedef OSRTDList s1ap_HandoverCancelAcknowledge_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverCancelAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverCancelAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverCancelAcknowledge_protocolIEs 
   (const char* name, const s1ap_HandoverCancelAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCancelAcknowledge_protocolIEs (const char* name, 
   s1ap_HandoverCancelAcknowledge_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCancelAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCancelAcknowledge_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverCancelAcknowledge_protocolIEs_1
      (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverCancelAcknowledge_protocolIEs_2
      (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_HandoverCancelAcknowledge_protocolIEs_3
      (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverCancelAcknowledge_protocolIEs_element* 
   asn1Get_s1ap_HandoverCancelAcknowledge_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverCancelAcknowledge_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverCancelAcknowledge_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverCancelAcknowledge_protocolIEs* pSrcValue, 
   s1ap_HandoverCancelAcknowledge_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCancelAcknowledge_protocolIEs (
   s1ap_HandoverCancelAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverCancelAcknowledge_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverCancelAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancelAcknowledge                                 */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Handover Cancel Request Acknowledge

 **************************************************************
HandoverCancelAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverCancelAcknowledgeIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverCancelAcknowledgeIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverCancelAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverCancelAcknowledge {
   s1ap_HandoverCancelAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverCancelAcknowledge;

EXTERN int asn1PE_s1ap_HandoverCancelAcknowledge (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge* pvalue);

EXTERN int asn1PD_s1ap_HandoverCancelAcknowledge (OSCTXT* pctxt, s1ap_HandoverCancelAcknowledge* pvalue);

EXTERN void asn1Print_s1ap_HandoverCancelAcknowledge 
   (const char* name, const s1ap_HandoverCancelAcknowledge* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverCancelAcknowledge (const char* name, 
   s1ap_HandoverCancelAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverCancelAcknowledge (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverCancelAcknowledge* pvalue);

EXTERN void asn1Copy_s1ap_HandoverCancelAcknowledge (OSCTXT* pctxt, 
   const s1ap_HandoverCancelAcknowledge* pSrcValue, 
   s1ap_HandoverCancelAcknowledge* pDstValue);

EXTERN int asn1Init_s1ap_HandoverCancelAcknowledge (
   s1ap_HandoverCancelAcknowledge* pvalue);

EXTERN void asn1Free_s1ap_HandoverCancelAcknowledge (OSCTXT *pctxt, 
   s1ap_HandoverCancelAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  KillResponse_protocolIEs_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'KillResponse'
*/
typedef struct EXTERN s1ap_KillResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      KillResponseIEs_TVALUE t;

      /**
       * KillResponseIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MessageIdentifier *_KillResponseIEs_1;
         /**
          * id: id-SerialNumber
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SerialNumber *_KillResponseIEs_2;
         /**
          * id: id-BroadcastCancelledAreaList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_BroadcastCancelledAreaList *_KillResponseIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_KillResponseIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_KillResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_KillResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_KillResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_KillResponse_protocolIEs_element 
   (const char* name, const s1ap_KillResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_KillResponse_protocolIEs_element (const char* name, 
   s1ap_KillResponse_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_KillResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_KillResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_KillResponse_protocolIEs_element_KillResponseIEs_1
   (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs_element* pElem, 
   s1ap_MessageIdentifier *pvalue);

EXTERN void asn1SetTC_s1ap_KillResponse_protocolIEs_element_KillResponseIEs_2
   (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs_element* pElem, 
   s1ap_SerialNumber *pvalue);

EXTERN void asn1SetTC_s1ap_KillResponse_protocolIEs_element_KillResponseIEs_3
   (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs_element* pElem, 
   s1ap_BroadcastCancelledAreaList *pvalue);

EXTERN void asn1SetTC_s1ap_KillResponse_protocolIEs_element_KillResponseIEs_4
   (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_KillResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_KillResponse_protocolIEs_element* pSrcValue, 
   s1ap_KillResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_KillResponse_protocolIEs_element (
   s1ap_KillResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_KillResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_KillResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  KillResponse_protocolIEs                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'KillResponse'
*/
/* List of s1ap_KillResponse_protocolIEs_element */
typedef OSRTDList s1ap_KillResponse_protocolIEs;

EXTERN int asn1PE_s1ap_KillResponse_protocolIEs (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_KillResponse_protocolIEs (OSCTXT* pctxt, s1ap_KillResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_KillResponse_protocolIEs 
   (const char* name, const s1ap_KillResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_KillResponse_protocolIEs (const char* name, 
   s1ap_KillResponse_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_KillResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_KillResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MessageIdentifier to list */
EXTERN int asn1Append_s1ap_KillResponse_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_KillResponse_protocolIEs* plist, s1ap_MessageIdentifier *pvalue);

/* Append IE with value type s1ap_SerialNumber to list */
EXTERN int asn1Append_s1ap_KillResponse_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_KillResponse_protocolIEs* plist, s1ap_SerialNumber *pvalue);

/* Append IE with value type s1ap_BroadcastCancelledAreaList to list */
struct s1ap_BroadcastCancelledAreaList ;
EXTERN int asn1Append_s1ap_KillResponse_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_KillResponse_protocolIEs* plist, struct 
   s1ap_BroadcastCancelledAreaList *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_KillResponse_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_KillResponse_protocolIEs* plist, struct s1ap_CriticalityDiagnostics 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_KillResponse_protocolIEs_element* 
   asn1Get_s1ap_KillResponse_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_KillResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_KillResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_KillResponse_protocolIEs* pSrcValue, 
   s1ap_KillResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_KillResponse_protocolIEs (
   s1ap_KillResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_KillResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_KillResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  KillResponse                                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Kill Response

 **************************************************************
KillResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({KillResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({KillResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({KillResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_KillResponse {
   s1ap_KillResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_KillResponse;

EXTERN int asn1PE_s1ap_KillResponse (OSCTXT* pctxt, s1ap_KillResponse* pvalue);

EXTERN int asn1PD_s1ap_KillResponse (OSCTXT* pctxt, s1ap_KillResponse* pvalue);

EXTERN void asn1Print_s1ap_KillResponse 
   (const char* name, const s1ap_KillResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_KillResponse (const char* name, 
   s1ap_KillResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_KillResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_KillResponse* pvalue);

EXTERN void asn1Copy_s1ap_KillResponse (OSCTXT* pctxt, 
   const s1ap_KillResponse* pSrcValue, s1ap_KillResponse* pDstValue);

EXTERN int asn1Init_s1ap_KillResponse (s1ap_KillResponse* pvalue);

EXTERN void asn1Free_s1ap_KillResponse (OSCTXT *pctxt, s1ap_KillResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalS1_ConnectionListResAck_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-associatedLogicalS1-ConnectionListResAck'
*/
typedef struct EXTERN s1ap_UE_associatedLogicalS1_ConnectionListResAck_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UE_associatedLogicalS1_ConnectionItemResAck_TVALUE t;

      /**
       * UE-associatedLogicalS1-ConnectionItemResAck information objects
       */
      union {
         /**
          * id: id-UE-associatedLogicalS1-ConnectionItem
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_UE_associatedLogicalS1_ConnectionItem *_UE_associatedLogicalS1_ConnectionItemResAck_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UE_associatedLogicalS1_ConnectionListResAck_element;

EXTERN int asn1PE_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pvalue);

EXTERN int asn1PD_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pvalue);

EXTERN void asn1Print_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element 
   (const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element (
   const char* name, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pvalue);

EXTERN void asn1Copy_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element (OSCTXT* pctxt, 
   const s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pSrcValue, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pDstValue);

EXTERN int asn1Init_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element (
   s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pvalue);

EXTERN void asn1Free_s1ap_UE_associatedLogicalS1_ConnectionListResAck_element (OSCTXT *pctxt, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalS1_ConnectionListResAck               */
/*                                                            */
/**************************************************************/
/*
UE-associatedLogicalS1-ConnectionListResAck ::= SEQUENCE (SIZE (1..maxnoofIndividualS1ConnectionsToReset)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({UE-associatedLogicalS1-ConnectionItemResAck}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({UE-associatedLogicalS1-ConnectionItemResAck}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UE-associatedLogicalS1-ConnectionItemResAck}{@id})
}
*/
/* List of s1ap_UE_associatedLogicalS1_ConnectionListResAck_element */
typedef OSRTDList s1ap_UE_associatedLogicalS1_ConnectionListResAck;

EXTERN int asn1PE_s1ap_UE_associatedLogicalS1_ConnectionListResAck (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListResAck* pvalue);

EXTERN int asn1PD_s1ap_UE_associatedLogicalS1_ConnectionListResAck (OSCTXT* pctxt, s1ap_UE_associatedLogicalS1_ConnectionListResAck* pvalue);

EXTERN void asn1Print_s1ap_UE_associatedLogicalS1_ConnectionListResAck 
   (const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListResAck* pvalue);

EXTERN int asn1PrtToStr_s1ap_UE_associatedLogicalS1_ConnectionListResAck (
   const char* name, s1ap_UE_associatedLogicalS1_ConnectionListResAck* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UE_associatedLogicalS1_ConnectionListResAck (OSCTXT *pctxt, 
   const char* name, const s1ap_UE_associatedLogicalS1_ConnectionListResAck* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UE_associatedLogicalS1_ConnectionListResAck_element* 
   asn1Get_s1ap_UE_associatedLogicalS1_ConnectionListResAck 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck* plist);

EXTERN void asn1Copy_s1ap_UE_associatedLogicalS1_ConnectionListResAck (OSCTXT* pctxt, 
   const s1ap_UE_associatedLogicalS1_ConnectionListResAck* pSrcValue, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck* pDstValue);

EXTERN int asn1Init_s1ap_UE_associatedLogicalS1_ConnectionListResAck (
   s1ap_UE_associatedLogicalS1_ConnectionListResAck* pvalue);

EXTERN void asn1Free_s1ap_UE_associatedLogicalS1_ConnectionListResAck (OSCTXT *pctxt, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetAcknowledge_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResetAcknowledge'
*/
typedef struct EXTERN s1ap_ResetAcknowledge_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ResetAcknowledgeIEs_TVALUE t;

      /**
       * ResetAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-UE-associatedLogicalS1-ConnectionListResAck
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_associatedLogicalS1_ConnectionListResAck *_ResetAcknowledgeIEs_1;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_ResetAcknowledgeIEs_2;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ResetAcknowledge_protocolIEs_element;

EXTERN int asn1PE_s1ap_ResetAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_ResetAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ResetAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_ResetAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ResetAcknowledge_protocolIEs_element 
   (const char* name, const s1ap_ResetAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ResetAcknowledge_protocolIEs_element (const char* name, 
   s1ap_ResetAcknowledge_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ResetAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ResetAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ResetAcknowledge_protocolIEs_element_ResetAcknowledgeIEs_1
   (OSCTXT* pctxt, s1ap_ResetAcknowledge_protocolIEs_element* pElem, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck *pvalue);

EXTERN void asn1SetTC_s1ap_ResetAcknowledge_protocolIEs_element_ResetAcknowledgeIEs_2
   (OSCTXT* pctxt, s1ap_ResetAcknowledge_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_ResetAcknowledge_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ResetAcknowledge_protocolIEs_element* pSrcValue, 
   s1ap_ResetAcknowledge_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ResetAcknowledge_protocolIEs_element (
   s1ap_ResetAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ResetAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ResetAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetAcknowledge_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResetAcknowledge'
*/
/* List of s1ap_ResetAcknowledge_protocolIEs_element */
typedef OSRTDList s1ap_ResetAcknowledge_protocolIEs;

EXTERN int asn1PE_s1ap_ResetAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_ResetAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ResetAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_ResetAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ResetAcknowledge_protocolIEs 
   (const char* name, const s1ap_ResetAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ResetAcknowledge_protocolIEs (const char* name, 
   s1ap_ResetAcknowledge_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ResetAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ResetAcknowledge_protocolIEs* pvalue);

/* Append IE with value type s1ap_UE_associatedLogicalS1_ConnectionListResAck to list */
EXTERN int asn1Append_s1ap_ResetAcknowledge_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_ResetAcknowledge_protocolIEs* plist, 
   s1ap_UE_associatedLogicalS1_ConnectionListResAck *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_ResetAcknowledge_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_ResetAcknowledge_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ResetAcknowledge_protocolIEs_element* 
   asn1Get_s1ap_ResetAcknowledge_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_ResetAcknowledge_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ResetAcknowledge_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ResetAcknowledge_protocolIEs* pSrcValue, 
   s1ap_ResetAcknowledge_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ResetAcknowledge_protocolIEs (
   s1ap_ResetAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ResetAcknowledge_protocolIEs (OSCTXT *pctxt, 
   s1ap_ResetAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetAcknowledge                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Reset Acknowledge

 **************************************************************
ResetAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ResetAcknowledgeIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ResetAcknowledgeIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ResetAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ResetAcknowledge {
   s1ap_ResetAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ResetAcknowledge;

EXTERN int asn1PE_s1ap_ResetAcknowledge (OSCTXT* pctxt, s1ap_ResetAcknowledge* pvalue);

EXTERN int asn1PD_s1ap_ResetAcknowledge (OSCTXT* pctxt, s1ap_ResetAcknowledge* pvalue);

EXTERN void asn1Print_s1ap_ResetAcknowledge 
   (const char* name, const s1ap_ResetAcknowledge* pvalue);

EXTERN int asn1PrtToStr_s1ap_ResetAcknowledge (const char* name, 
   s1ap_ResetAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ResetAcknowledge (OSCTXT *pctxt, 
   const char* name, const s1ap_ResetAcknowledge* pvalue);

EXTERN void asn1Copy_s1ap_ResetAcknowledge (OSCTXT* pctxt, 
   const s1ap_ResetAcknowledge* pSrcValue, s1ap_ResetAcknowledge* pDstValue);

EXTERN int asn1Init_s1ap_ResetAcknowledge (s1ap_ResetAcknowledge* pvalue);

EXTERN void asn1Free_s1ap_ResetAcknowledge (OSCTXT *pctxt, 
   s1ap_ResetAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupResponse_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S1SetupResponse'
*/
typedef struct EXTERN s1ap_S1SetupResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      S1SetupResponseIEs_TVALUE t;

      /**
       * S1SetupResponseIEs information objects
       */
      union {
         /**
          * id: id-MMEname
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MMEname _S1SetupResponseIEs_1;
         /**
          * id: id-ServedGUMMEIs
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_ServedGUMMEIs *_S1SetupResponseIEs_2;
         /**
          * id: id-RelativeMMECapacity
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_RelativeMMECapacity _S1SetupResponseIEs_3;
         /**
          * id: id-MMERelaySupportIndicator
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_MMERelaySupportIndicator _S1SetupResponseIEs_4;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_S1SetupResponseIEs_5;
         /**
          * id: id-UE-RetentionInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UE_RetentionInformation _S1SetupResponseIEs_6;
         /**
          * id: id-ServedDCNs
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_ServedDCNs *_S1SetupResponseIEs_7;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_S1SetupResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_S1SetupResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_S1SetupResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_S1SetupResponse_protocolIEs_element 
   (const char* name, const s1ap_S1SetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupResponse_protocolIEs_element (const char* name, 
   s1ap_S1SetupResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupResponse_protocolIEs_element_S1SetupResponseIEs_1
   (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pElem, 
   s1ap_MMEname value);

EXTERN void asn1SetTC_s1ap_S1SetupResponse_protocolIEs_element_S1SetupResponseIEs_2
   (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pElem, 
   s1ap_ServedGUMMEIs *pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupResponse_protocolIEs_element_S1SetupResponseIEs_3
   (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pElem, 
   s1ap_RelativeMMECapacity value);

EXTERN void asn1SetTC_s1ap_S1SetupResponse_protocolIEs_element_S1SetupResponseIEs_4
   (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pElem, 
   s1ap_MMERelaySupportIndicator value);

EXTERN void asn1SetTC_s1ap_S1SetupResponse_protocolIEs_element_S1SetupResponseIEs_5
   (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupResponse_protocolIEs_element_S1SetupResponseIEs_6
   (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pElem, 
   s1ap_UE_RetentionInformation value);

EXTERN void asn1SetTC_s1ap_S1SetupResponse_protocolIEs_element_S1SetupResponseIEs_7
   (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs_element* pElem, 
   s1ap_ServedDCNs *pvalue);

EXTERN void asn1Copy_s1ap_S1SetupResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_S1SetupResponse_protocolIEs_element* pSrcValue, 
   s1ap_S1SetupResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupResponse_protocolIEs_element (
   s1ap_S1SetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_S1SetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_S1SetupResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupResponse_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S1SetupResponse'
*/
/* List of s1ap_S1SetupResponse_protocolIEs_element */
typedef OSRTDList s1ap_S1SetupResponse_protocolIEs;

EXTERN int asn1PE_s1ap_S1SetupResponse_protocolIEs (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_S1SetupResponse_protocolIEs (OSCTXT* pctxt, s1ap_S1SetupResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_S1SetupResponse_protocolIEs 
   (const char* name, const s1ap_S1SetupResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupResponse_protocolIEs (const char* name, 
   s1ap_S1SetupResponse_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MMEname to list */
EXTERN int asn1Append_s1ap_S1SetupResponse_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_S1SetupResponse_protocolIEs* plist, s1ap_MMEname value);

/* Append IE with value type s1ap_ServedGUMMEIs to list */
EXTERN int asn1Append_s1ap_S1SetupResponse_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_S1SetupResponse_protocolIEs* plist, s1ap_ServedGUMMEIs *pvalue);

/* Append IE with value type s1ap_RelativeMMECapacity to list */
EXTERN int asn1Append_s1ap_S1SetupResponse_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_S1SetupResponse_protocolIEs* plist, s1ap_RelativeMMECapacity value);

/* Append IE with value type s1ap_MMERelaySupportIndicator to list */
EXTERN int asn1Append_s1ap_S1SetupResponse_protocolIEs_4   (OSCTXT* pctxt, 
   s1ap_S1SetupResponse_protocolIEs* plist, s1ap_MMERelaySupportIndicator 
   value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_S1SetupResponse_protocolIEs_5   (OSCTXT* pctxt, 
   s1ap_S1SetupResponse_protocolIEs* plist, struct s1ap_CriticalityDiagnostics 
   *pvalue);

/* Append IE with value type s1ap_UE_RetentionInformation to list */
EXTERN int asn1Append_s1ap_S1SetupResponse_protocolIEs_6   (OSCTXT* pctxt, 
   s1ap_S1SetupResponse_protocolIEs* plist, s1ap_UE_RetentionInformation value)
   ;

/* Append IE with value type s1ap_ServedDCNs to list */
EXTERN int asn1Append_s1ap_S1SetupResponse_protocolIEs_7   (OSCTXT* pctxt, 
   s1ap_S1SetupResponse_protocolIEs* plist, s1ap_ServedDCNs *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_S1SetupResponse_protocolIEs_element* 
   asn1Get_s1ap_S1SetupResponse_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_S1SetupResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_S1SetupResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_S1SetupResponse_protocolIEs* pSrcValue, 
   s1ap_S1SetupResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupResponse_protocolIEs (
   s1ap_S1SetupResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_S1SetupResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_S1SetupResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupResponse                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 S1 Setup Response

 **************************************************************
S1SetupResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({S1SetupResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({S1SetupResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({S1SetupResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_S1SetupResponse {
   s1ap_S1SetupResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_S1SetupResponse;

EXTERN int asn1PE_s1ap_S1SetupResponse (OSCTXT* pctxt, s1ap_S1SetupResponse* pvalue);

EXTERN int asn1PD_s1ap_S1SetupResponse (OSCTXT* pctxt, s1ap_S1SetupResponse* pvalue);

EXTERN void asn1Print_s1ap_S1SetupResponse 
   (const char* name, const s1ap_S1SetupResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupResponse (const char* name, 
   s1ap_S1SetupResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupResponse* pvalue);

EXTERN void asn1Copy_s1ap_S1SetupResponse (OSCTXT* pctxt, 
   const s1ap_S1SetupResponse* pSrcValue, s1ap_S1SetupResponse* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupResponse (s1ap_S1SetupResponse* pvalue);

EXTERN void asn1Free_s1ap_S1SetupResponse (OSCTXT *pctxt, 
   s1ap_S1SetupResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationResponse_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationResponse'
*/
typedef struct EXTERN s1ap_UEContextModificationResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextModificationResponseIEs_TVALUE t;

      /**
       * UEContextModificationResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextModificationResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextModificationResponseIEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UEContextModificationResponseIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextModificationResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextModificationResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationResponse_protocolIEs_element 
   (const char* name, const s1ap_UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationResponse_protocolIEs_element (
   const char* name, 
   s1ap_UEContextModificationResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_1
   (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_2
   (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_3
   (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextModificationResponse_protocolIEs_element* pSrcValue, 
   s1ap_UEContextModificationResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationResponse_protocolIEs_element (
   s1ap_UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextModificationResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationResponse_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationResponse'
*/
/* List of s1ap_UEContextModificationResponse_protocolIEs_element */
typedef OSRTDList s1ap_UEContextModificationResponse_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextModificationResponse_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationResponse_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationResponse_protocolIEs 
   (const char* name, const s1ap_UEContextModificationResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationResponse_protocolIEs (
   const char* name, s1ap_UEContextModificationResponse_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationResponse_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationResponse_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UEContextModificationResponse_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextModificationResponse_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextModificationResponse_protocolIEs_element* 
   asn1Get_s1ap_UEContextModificationResponse_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextModificationResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextModificationResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextModificationResponse_protocolIEs* pSrcValue, 
   s1ap_UEContextModificationResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationResponse_protocolIEs (
   s1ap_UEContextModificationResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextModificationResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationResponse                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Modification Response

 **************************************************************
UEContextModificationResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextModificationResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextModificationResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextModificationResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextModificationResponse {
   s1ap_UEContextModificationResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextModificationResponse;

EXTERN int asn1PE_s1ap_UEContextModificationResponse (OSCTXT* pctxt, s1ap_UEContextModificationResponse* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationResponse (OSCTXT* pctxt, s1ap_UEContextModificationResponse* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationResponse 
   (const char* name, const s1ap_UEContextModificationResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationResponse (const char* name, 
   s1ap_UEContextModificationResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationResponse* pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationResponse (OSCTXT* pctxt, 
   const s1ap_UEContextModificationResponse* pSrcValue, 
   s1ap_UEContextModificationResponse* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationResponse (
   s1ap_UEContextModificationResponse* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationResponse (OSCTXT *pctxt, 
   s1ap_UEContextModificationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseComplete_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseComplete'
*/
typedef struct EXTERN s1ap_UEContextReleaseComplete_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextReleaseComplete_IEs_TVALUE t;

      /**
       * UEContextReleaseComplete-IEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextReleaseComplete_IEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextReleaseComplete_IEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UEContextReleaseComplete_IEs_3;
         /**
          * id: id-UserLocationInformation
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_UserLocationInformation *_UEContextReleaseComplete_IEs_4;
         /**
          * id: id-InformationOnRecommendedCellsAndENBsForPaging
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_InformationOnRecommendedCellsAndENBsForPaging *_UEContextReleaseComplete_IEs_5;
         /**
          * id: id-CellIdentifierAndCELevelForCECapableUEs
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CellIdentifierAndCELevelForCECapableUEs *_UEContextReleaseComplete_IEs_6;
         /**
          * id: id-SecondaryRATDataUsageReportList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_SecondaryRATDataUsageReportList *_UEContextReleaseComplete_IEs_7;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextReleaseComplete_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextReleaseComplete_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseComplete_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseComplete_protocolIEs_element 
   (const char* name, const s1ap_UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseComplete_protocolIEs_element (
   const char* name, 
   s1ap_UEContextReleaseComplete_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseComplete_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_1
   (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_2
   (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_3
   (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_4
   (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pElem, 
   s1ap_UserLocationInformation *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_5
   (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pElem, 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_6
   (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pElem, 
   s1ap_CellIdentifierAndCELevelForCECapableUEs *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_7
   (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs_element* pElem, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

EXTERN void asn1Copy_s1ap_UEContextReleaseComplete_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseComplete_protocolIEs_element* pSrcValue, 
   s1ap_UEContextReleaseComplete_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseComplete_protocolIEs_element (
   s1ap_UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseComplete_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextReleaseComplete_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseComplete_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseComplete'
*/
/* List of s1ap_UEContextReleaseComplete_protocolIEs_element */
typedef OSRTDList s1ap_UEContextReleaseComplete_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextReleaseComplete_protocolIEs (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseComplete_protocolIEs (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseComplete_protocolIEs 
   (const char* name, const s1ap_UEContextReleaseComplete_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseComplete_protocolIEs (const char* name, 
   s1ap_UEContextReleaseComplete_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseComplete_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseComplete_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextReleaseComplete_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextReleaseComplete_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UEContextReleaseComplete_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_UserLocationInformation to list */
struct s1ap_UserLocationInformation ;
EXTERN int asn1Append_s1ap_UEContextReleaseComplete_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* plist, struct 
   s1ap_UserLocationInformation *pvalue);

/* Append IE with value type s1ap_InformationOnRecommendedCellsAndENBsForPaging to list */
struct s1ap_InformationOnRecommendedCellsAndENBsForPaging ;
EXTERN int asn1Append_s1ap_UEContextReleaseComplete_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* plist, struct 
   s1ap_InformationOnRecommendedCellsAndENBsForPaging *pvalue);

/* Append IE with value type s1ap_CellIdentifierAndCELevelForCECapableUEs to list */
struct s1ap_CellIdentifierAndCELevelForCECapableUEs ;
EXTERN int asn1Append_s1ap_UEContextReleaseComplete_protocolIEs_6
      (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* plist, struct 
   s1ap_CellIdentifierAndCELevelForCECapableUEs *pvalue);

/* Append IE with value type s1ap_SecondaryRATDataUsageReportList to list */
EXTERN int asn1Append_s1ap_UEContextReleaseComplete_protocolIEs_7
      (OSCTXT* pctxt, s1ap_UEContextReleaseComplete_protocolIEs* plist, 
   s1ap_SecondaryRATDataUsageReportList *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextReleaseComplete_protocolIEs_element* 
   asn1Get_s1ap_UEContextReleaseComplete_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextReleaseComplete_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextReleaseComplete_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseComplete_protocolIEs* pSrcValue, 
   s1ap_UEContextReleaseComplete_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseComplete_protocolIEs (
   s1ap_UEContextReleaseComplete_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseComplete_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextReleaseComplete_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseComplete                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Release Complete

 **************************************************************
UEContextReleaseComplete ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextReleaseComplete-IEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextReleaseComplete-IEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextReleaseComplete-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextReleaseComplete {
   s1ap_UEContextReleaseComplete_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextReleaseComplete;

EXTERN int asn1PE_s1ap_UEContextReleaseComplete (OSCTXT* pctxt, s1ap_UEContextReleaseComplete* pvalue);

EXTERN int asn1PD_s1ap_UEContextReleaseComplete (OSCTXT* pctxt, s1ap_UEContextReleaseComplete* pvalue);

EXTERN void asn1Print_s1ap_UEContextReleaseComplete 
   (const char* name, const s1ap_UEContextReleaseComplete* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextReleaseComplete (const char* name, 
   s1ap_UEContextReleaseComplete* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextReleaseComplete (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextReleaseComplete* pvalue);

EXTERN void asn1Copy_s1ap_UEContextReleaseComplete (OSCTXT* pctxt, 
   const s1ap_UEContextReleaseComplete* pSrcValue, 
   s1ap_UEContextReleaseComplete* pDstValue);

EXTERN int asn1Init_s1ap_UEContextReleaseComplete (
   s1ap_UEContextReleaseComplete* pvalue);

EXTERN void asn1Free_s1ap_UEContextReleaseComplete (OSCTXT *pctxt, 
   s1ap_UEContextReleaseComplete* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdateAcknowledge_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationUpdateAcknowledge'
*/
typedef struct EXTERN s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ENBConfigurationUpdateAcknowledgeIEs_TVALUE t;

      /**
       * ENBConfigurationUpdateAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_ENBConfigurationUpdateAcknowledgeIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element 
   (const char* name, const s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element (
   const char* name, 
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pSrcValue, 
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element (
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdateAcknowledge_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationUpdateAcknowledge'
*/
/* List of s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element */
typedef OSRTDList s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs 
   (const char* name, const s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs (
   const char* name, 
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs_element* 
   asn1Get_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pSrcValue, 
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs (
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdateAcknowledge                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 eNB Configuration Update Acknowledge

 **************************************************************
ENBConfigurationUpdateAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ENBConfigurationUpdateAcknowledgeIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ENBConfigurationUpdateAcknowledgeIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ENBConfigurationUpdateAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ENBConfigurationUpdateAcknowledge {
   s1ap_ENBConfigurationUpdateAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ENBConfigurationUpdateAcknowledge;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdateAcknowledge (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdateAcknowledge (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdateAcknowledge 
   (const char* name, const s1ap_ENBConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdateAcknowledge (const char* name, 
   s1ap_ENBConfigurationUpdateAcknowledge* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdateAcknowledge (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdateAcknowledge (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdateAcknowledge* pSrcValue, 
   s1ap_ENBConfigurationUpdateAcknowledge* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdateAcknowledge (
   s1ap_ENBConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdateAcknowledge (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdateAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdateAcknowledge_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationUpdateAcknowledge'
*/
typedef struct EXTERN s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MMEConfigurationUpdateAcknowledgeIEs_TVALUE t;

      /**
       * MMEConfigurationUpdateAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_MMEConfigurationUpdateAcknowledgeIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element 
   (const char* name, const s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element (
   const char* name, 
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pSrcValue, 
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element (
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdateAcknowledge_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationUpdateAcknowledge'
*/
/* List of s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element */
typedef OSRTDList s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs 
   (const char* name, const s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs (
   const char* name, 
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs_element* 
   asn1Get_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pSrcValue, 
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs (
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdateAcknowledge                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 MME Configuration Update Acknowledge

 **************************************************************
MMEConfigurationUpdateAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({MMEConfigurationUpdateAcknowledgeIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({MMEConfigurationUpdateAcknowledgeIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MMEConfigurationUpdateAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_MMEConfigurationUpdateAcknowledge {
   s1ap_MMEConfigurationUpdateAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_MMEConfigurationUpdateAcknowledge;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdateAcknowledge (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdateAcknowledge (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdateAcknowledge 
   (const char* name, const s1ap_MMEConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdateAcknowledge (const char* name, 
   s1ap_MMEConfigurationUpdateAcknowledge* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdateAcknowledge (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdateAcknowledge (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdateAcknowledge* pSrcValue, 
   s1ap_MMEConfigurationUpdateAcknowledge* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdateAcknowledge (
   s1ap_MMEConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdateAcknowledge (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdateAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningResponse_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningResponse'
*/
typedef struct EXTERN s1ap_WriteReplaceWarningResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      WriteReplaceWarningResponseIEs_TVALUE t;

      /**
       * WriteReplaceWarningResponseIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_MessageIdentifier *_WriteReplaceWarningResponseIEs_1;
         /**
          * id: id-SerialNumber
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_SerialNumber *_WriteReplaceWarningResponseIEs_2;
         /**
          * id: id-BroadcastCompletedAreaList
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_BroadcastCompletedAreaList *_WriteReplaceWarningResponseIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_WriteReplaceWarningResponseIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_WriteReplaceWarningResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_WriteReplaceWarningResponse_protocolIEs_element 
   (const char* name, const s1ap_WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_WriteReplaceWarningResponse_protocolIEs_element (
   const char* name, 
   s1ap_WriteReplaceWarningResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_1
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs_element* pElem
   , s1ap_MessageIdentifier *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_2
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs_element* pElem
   , s1ap_SerialNumber *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_3
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs_element* pElem
   , s1ap_BroadcastCompletedAreaList *pvalue);

EXTERN void asn1SetTC_s1ap_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_4
   (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_WriteReplaceWarningResponse_protocolIEs_element* pSrcValue, 
   s1ap_WriteReplaceWarningResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_WriteReplaceWarningResponse_protocolIEs_element (
   s1ap_WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_WriteReplaceWarningResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningResponse_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningResponse'
*/
/* List of s1ap_WriteReplaceWarningResponse_protocolIEs_element */
typedef OSRTDList s1ap_WriteReplaceWarningResponse_protocolIEs;

EXTERN int asn1PE_s1ap_WriteReplaceWarningResponse_protocolIEs (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_WriteReplaceWarningResponse_protocolIEs (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_WriteReplaceWarningResponse_protocolIEs 
   (const char* name, const s1ap_WriteReplaceWarningResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_WriteReplaceWarningResponse_protocolIEs (
   const char* name, s1ap_WriteReplaceWarningResponse_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WriteReplaceWarningResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_WriteReplaceWarningResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MessageIdentifier to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningResponse_protocolIEs_1
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs* plist, 
   s1ap_MessageIdentifier *pvalue);

/* Append IE with value type s1ap_SerialNumber to list */
EXTERN int asn1Append_s1ap_WriteReplaceWarningResponse_protocolIEs_2
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs* plist, 
   s1ap_SerialNumber *pvalue);

/* Append IE with value type s1ap_BroadcastCompletedAreaList to list */
struct s1ap_BroadcastCompletedAreaList ;
EXTERN int asn1Append_s1ap_WriteReplaceWarningResponse_protocolIEs_3
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs* plist, 
   struct s1ap_BroadcastCompletedAreaList *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_WriteReplaceWarningResponse_protocolIEs_4
      (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_WriteReplaceWarningResponse_protocolIEs_element* 
   asn1Get_s1ap_WriteReplaceWarningResponse_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_WriteReplaceWarningResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_WriteReplaceWarningResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_WriteReplaceWarningResponse_protocolIEs* pSrcValue, 
   s1ap_WriteReplaceWarningResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_WriteReplaceWarningResponse_protocolIEs (
   s1ap_WriteReplaceWarningResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_WriteReplaceWarningResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_WriteReplaceWarningResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningResponse                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Write-Replace Warning Response

 **************************************************************
WriteReplaceWarningResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({WriteReplaceWarningResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({WriteReplaceWarningResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({WriteReplaceWarningResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_WriteReplaceWarningResponse {
   s1ap_WriteReplaceWarningResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_WriteReplaceWarningResponse;

EXTERN int asn1PE_s1ap_WriteReplaceWarningResponse (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse* pvalue);

EXTERN int asn1PD_s1ap_WriteReplaceWarningResponse (OSCTXT* pctxt, s1ap_WriteReplaceWarningResponse* pvalue);

EXTERN void asn1Print_s1ap_WriteReplaceWarningResponse 
   (const char* name, const s1ap_WriteReplaceWarningResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_WriteReplaceWarningResponse (const char* name, 
   s1ap_WriteReplaceWarningResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_WriteReplaceWarningResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_WriteReplaceWarningResponse* pvalue);

EXTERN void asn1Copy_s1ap_WriteReplaceWarningResponse (OSCTXT* pctxt, 
   const s1ap_WriteReplaceWarningResponse* pSrcValue, 
   s1ap_WriteReplaceWarningResponse* pDstValue);

EXTERN int asn1Init_s1ap_WriteReplaceWarningResponse (
   s1ap_WriteReplaceWarningResponse* pvalue);

EXTERN void asn1Free_s1ap_WriteReplaceWarningResponse (OSCTXT *pctxt, 
   s1ap_WriteReplaceWarningResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityMatchResponse_protocolIEs_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityMatchResponse'
*/
typedef struct EXTERN s1ap_UERadioCapabilityMatchResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UERadioCapabilityMatchResponseIEs_TVALUE t;

      /**
       * UERadioCapabilityMatchResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UERadioCapabilityMatchResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UERadioCapabilityMatchResponseIEs_2;
         /**
          * id: id-VoiceSupportMatchIndicator
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_VoiceSupportMatchIndicator _UERadioCapabilityMatchResponseIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UERadioCapabilityMatchResponseIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UERadioCapabilityMatchResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element 
   (const char* name, const s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element (
   const char* name, 
   s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element_UERadioCapabilityMatchResponseIEs_1
   (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element_UERadioCapabilityMatchResponseIEs_2
   (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element_UERadioCapabilityMatchResponseIEs_3
   (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pElem
   , s1ap_VoiceSupportMatchIndicator value);

EXTERN void asn1SetTC_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element_UERadioCapabilityMatchResponseIEs_4
   (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pSrcValue, 
   s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element (
   s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapabilityMatchResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityMatchResponse_protocolIEs                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityMatchResponse'
*/
/* List of s1ap_UERadioCapabilityMatchResponse_protocolIEs_element */
typedef OSRTDList s1ap_UERadioCapabilityMatchResponse_protocolIEs;

EXTERN int asn1PE_s1ap_UERadioCapabilityMatchResponse_protocolIEs (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UERadioCapabilityMatchResponse_protocolIEs (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapabilityMatchResponse_protocolIEs 
   (const char* name, const s1ap_UERadioCapabilityMatchResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapabilityMatchResponse_protocolIEs (
   const char* name, s1ap_UERadioCapabilityMatchResponse_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapabilityMatchResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapabilityMatchResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UERadioCapabilityMatchResponse_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UERadioCapabilityMatchResponse_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_VoiceSupportMatchIndicator to list */
EXTERN int asn1Append_s1ap_UERadioCapabilityMatchResponse_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs* plist, 
   s1ap_VoiceSupportMatchIndicator value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UERadioCapabilityMatchResponse_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UERadioCapabilityMatchResponse_protocolIEs_element* 
   asn1Get_s1ap_UERadioCapabilityMatchResponse_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UERadioCapabilityMatchResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UERadioCapabilityMatchResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UERadioCapabilityMatchResponse_protocolIEs* pSrcValue, 
   s1ap_UERadioCapabilityMatchResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapabilityMatchResponse_protocolIEs (
   s1ap_UERadioCapabilityMatchResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapabilityMatchResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_UERadioCapabilityMatchResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityMatchResponse                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Radio Capability Match Response

 **************************************************************
UERadioCapabilityMatchResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UERadioCapabilityMatchResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UERadioCapabilityMatchResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UERadioCapabilityMatchResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UERadioCapabilityMatchResponse {
   s1ap_UERadioCapabilityMatchResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UERadioCapabilityMatchResponse;

EXTERN int asn1PE_s1ap_UERadioCapabilityMatchResponse (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse* pvalue);

EXTERN int asn1PD_s1ap_UERadioCapabilityMatchResponse (OSCTXT* pctxt, s1ap_UERadioCapabilityMatchResponse* pvalue);

EXTERN void asn1Print_s1ap_UERadioCapabilityMatchResponse 
   (const char* name, const s1ap_UERadioCapabilityMatchResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_UERadioCapabilityMatchResponse (const char* name, 
   s1ap_UERadioCapabilityMatchResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UERadioCapabilityMatchResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_UERadioCapabilityMatchResponse* pvalue);

EXTERN void asn1Copy_s1ap_UERadioCapabilityMatchResponse (OSCTXT* pctxt, 
   const s1ap_UERadioCapabilityMatchResponse* pSrcValue, 
   s1ap_UERadioCapabilityMatchResponse* pDstValue);

EXTERN int asn1Init_s1ap_UERadioCapabilityMatchResponse (
   s1ap_UERadioCapabilityMatchResponse* pvalue);

EXTERN void asn1Free_s1ap_UERadioCapabilityMatchResponse (OSCTXT *pctxt, 
   s1ap_UERadioCapabilityMatchResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyItemBearerModConf_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyItemBearerModConf'
*/
typedef struct EXTERN s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element 
   (const char* name, const s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element (
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyItemBearerModConf_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyItemBearerModConf'
*/
/* List of s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABModifyItemBearerModConf_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABModifyItemBearerModConf_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyItemBearerModConf_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyItemBearerModConf_iE_Extensions 
   (const char* name, const s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyItemBearerModConf_iE_Extensions (
   const char* name, s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyItemBearerModConf_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModifyItemBearerModConf_iE_Extensions_element* 
   asn1Get_s1ap_E_RABModifyItemBearerModConf_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABModifyItemBearerModConf_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pSrcValue, 
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyItemBearerModConf_iE_Extensions (
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyItemBearerModConf_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyItemBearerModConf                              */
/*                                                            */
/**************************************************************/
/*
E-RABModifyItemBearerModConf ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABModifyItemBearerModConfExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABModifyItemBearerModConfExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABModifyItemBearerModConfExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABModifyItemBearerModConf {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_E_RABModifyItemBearerModConf_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABModifyItemBearerModConf;

EXTERN int asn1PE_s1ap_E_RABModifyItemBearerModConf (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModConf* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyItemBearerModConf (OSCTXT* pctxt, s1ap_E_RABModifyItemBearerModConf* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyItemBearerModConf 
   (const char* name, const s1ap_E_RABModifyItemBearerModConf* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyItemBearerModConf (const char* name, 
   s1ap_E_RABModifyItemBearerModConf* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyItemBearerModConf (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyItemBearerModConf* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyItemBearerModConf (OSCTXT* pctxt, 
   const s1ap_E_RABModifyItemBearerModConf* pSrcValue, 
   s1ap_E_RABModifyItemBearerModConf* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyItemBearerModConf (
   s1ap_E_RABModifyItemBearerModConf* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyItemBearerModConf (OSCTXT *pctxt, 
   s1ap_E_RABModifyItemBearerModConf* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyListBearerModConf_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModifyListBearerModConf'
*/
typedef struct EXTERN s1ap_E_RABModifyListBearerModConf_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABModifyItemBearerModConfIEs_TVALUE t;

      /**
       * E-RABModifyItemBearerModConfIEs information objects
       */
      union {
         /**
          * id: id-E-RABModifyItemBearerModConf
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_E_RABModifyItemBearerModConf *_E_RABModifyItemBearerModConfIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABModifyListBearerModConf_element;

EXTERN int asn1PE_s1ap_E_RABModifyListBearerModConf_element (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModConf_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyListBearerModConf_element (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModConf_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyListBearerModConf_element 
   (const char* name, const s1ap_E_RABModifyListBearerModConf_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyListBearerModConf_element (const char* name, 
   s1ap_E_RABModifyListBearerModConf_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyListBearerModConf_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyListBearerModConf_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModifyListBearerModConf_element (OSCTXT* pctxt, 
   const s1ap_E_RABModifyListBearerModConf_element* pSrcValue, 
   s1ap_E_RABModifyListBearerModConf_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyListBearerModConf_element (
   s1ap_E_RABModifyListBearerModConf_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyListBearerModConf_element (OSCTXT *pctxt, 
   s1ap_E_RABModifyListBearerModConf_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModifyListBearerModConf                              */
/*                                                            */
/**************************************************************/
/*
E-RABModifyListBearerModConf ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABModifyItemBearerModConfIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABModifyItemBearerModConfIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABModifyItemBearerModConfIEs}{@id})
}
*/
/* List of s1ap_E_RABModifyListBearerModConf_element */
typedef OSRTDList s1ap_E_RABModifyListBearerModConf;

EXTERN int asn1PE_s1ap_E_RABModifyListBearerModConf (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModConf* pvalue);

EXTERN int asn1PD_s1ap_E_RABModifyListBearerModConf (OSCTXT* pctxt, s1ap_E_RABModifyListBearerModConf* pvalue);

EXTERN void asn1Print_s1ap_E_RABModifyListBearerModConf 
   (const char* name, const s1ap_E_RABModifyListBearerModConf* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModifyListBearerModConf (const char* name, 
   s1ap_E_RABModifyListBearerModConf* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModifyListBearerModConf (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModifyListBearerModConf* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModifyListBearerModConf_element* 
   asn1Get_s1ap_E_RABModifyListBearerModConf (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABModifyListBearerModConf* plist);

EXTERN void asn1Copy_s1ap_E_RABModifyListBearerModConf (OSCTXT* pctxt, 
   const s1ap_E_RABModifyListBearerModConf* pSrcValue, 
   s1ap_E_RABModifyListBearerModConf* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModifyListBearerModConf (
   s1ap_E_RABModifyListBearerModConf* pvalue);

EXTERN void asn1Free_s1ap_E_RABModifyListBearerModConf (OSCTXT *pctxt, 
   s1ap_E_RABModifyListBearerModConf* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModificationConfirm_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModificationConfirm'
*/
typedef struct EXTERN s1ap_E_RABModificationConfirm_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABModificationConfirmIEs_TVALUE t;

      /**
       * E-RABModificationConfirmIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _E_RABModificationConfirmIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _E_RABModificationConfirmIEs_2;
         /**
          * id: id-E-RABModifyListBearerModConf
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABModifyListBearerModConf *_E_RABModificationConfirmIEs_3;
         /**
          * id: id-E-RABFailedToModifyListBearerModConf
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_E_RABModificationConfirmIEs_4;
         /**
          * id: id-E-RABToBeReleasedListBearerModConf
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_E_RABList *_E_RABModificationConfirmIEs_5;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_E_RABModificationConfirmIEs_6;
         /**
          * id: id-CSGMembershipStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipStatus _E_RABModificationConfirmIEs_7;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABModificationConfirm_protocolIEs_element;

EXTERN int asn1PE_s1ap_E_RABModificationConfirm_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABModificationConfirm_protocolIEs_element (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABModificationConfirm_protocolIEs_element 
   (const char* name, const s1ap_E_RABModificationConfirm_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModificationConfirm_protocolIEs_element (
   const char* name, 
   s1ap_E_RABModificationConfirm_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModificationConfirm_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModificationConfirm_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationConfirm_protocolIEs_element_E_RABModificationConfirmIEs_1
   (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModificationConfirm_protocolIEs_element_E_RABModificationConfirmIEs_2
   (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_E_RABModificationConfirm_protocolIEs_element_E_RABModificationConfirmIEs_3
   (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pElem, 
   s1ap_E_RABModifyListBearerModConf *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationConfirm_protocolIEs_element_E_RABModificationConfirmIEs_4
   (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationConfirm_protocolIEs_element_E_RABModificationConfirmIEs_5
   (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pElem, 
   s1ap_E_RABList *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationConfirm_protocolIEs_element_E_RABModificationConfirmIEs_6
   (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_E_RABModificationConfirm_protocolIEs_element_E_RABModificationConfirmIEs_7
   (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs_element* pElem, 
   s1ap_CSGMembershipStatus value);

EXTERN void asn1Copy_s1ap_E_RABModificationConfirm_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_E_RABModificationConfirm_protocolIEs_element* pSrcValue, 
   s1ap_E_RABModificationConfirm_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModificationConfirm_protocolIEs_element (
   s1ap_E_RABModificationConfirm_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABModificationConfirm_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_E_RABModificationConfirm_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModificationConfirm_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABModificationConfirm'
*/
/* List of s1ap_E_RABModificationConfirm_protocolIEs_element */
typedef OSRTDList s1ap_E_RABModificationConfirm_protocolIEs;

EXTERN int asn1PE_s1ap_E_RABModificationConfirm_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_E_RABModificationConfirm_protocolIEs (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_E_RABModificationConfirm_protocolIEs 
   (const char* name, const s1ap_E_RABModificationConfirm_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModificationConfirm_protocolIEs (const char* name, 
   s1ap_E_RABModificationConfirm_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModificationConfirm_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModificationConfirm_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModificationConfirm_protocolIEs_1
      (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_E_RABModificationConfirm_protocolIEs_2
      (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABModifyListBearerModConf to list */
EXTERN int asn1Append_s1ap_E_RABModificationConfirm_protocolIEs_3
      (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* plist, 
   s1ap_E_RABModifyListBearerModConf *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_E_RABModificationConfirm_protocolIEs_4
      (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* plist, 
   s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_E_RABList to list */
EXTERN int asn1Append_s1ap_E_RABModificationConfirm_protocolIEs_5
      (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* plist, 
   s1ap_E_RABList *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_E_RABModificationConfirm_protocolIEs_6
      (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_CSGMembershipStatus to list */
EXTERN int asn1Append_s1ap_E_RABModificationConfirm_protocolIEs_7
      (OSCTXT* pctxt, s1ap_E_RABModificationConfirm_protocolIEs* plist, 
   s1ap_CSGMembershipStatus value);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABModificationConfirm_protocolIEs_element* 
   asn1Get_s1ap_E_RABModificationConfirm_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABModificationConfirm_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_E_RABModificationConfirm_protocolIEs (OSCTXT* pctxt, 
   const s1ap_E_RABModificationConfirm_protocolIEs* pSrcValue, 
   s1ap_E_RABModificationConfirm_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModificationConfirm_protocolIEs (
   s1ap_E_RABModificationConfirm_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_E_RABModificationConfirm_protocolIEs (OSCTXT *pctxt, 
   s1ap_E_RABModificationConfirm_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABModificationConfirm                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 E-RAB Modification Confirm

 **************************************************************
E-RABModificationConfirm ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({E-RABModificationConfirmIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABModificationConfirmIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABModificationConfirmIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_E_RABModificationConfirm {
   s1ap_E_RABModificationConfirm_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_E_RABModificationConfirm;

EXTERN int asn1PE_s1ap_E_RABModificationConfirm (OSCTXT* pctxt, s1ap_E_RABModificationConfirm* pvalue);

EXTERN int asn1PD_s1ap_E_RABModificationConfirm (OSCTXT* pctxt, s1ap_E_RABModificationConfirm* pvalue);

EXTERN void asn1Print_s1ap_E_RABModificationConfirm 
   (const char* name, const s1ap_E_RABModificationConfirm* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABModificationConfirm (const char* name, 
   s1ap_E_RABModificationConfirm* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABModificationConfirm (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABModificationConfirm* pvalue);

EXTERN void asn1Copy_s1ap_E_RABModificationConfirm (OSCTXT* pctxt, 
   const s1ap_E_RABModificationConfirm* pSrcValue, 
   s1ap_E_RABModificationConfirm* pDstValue);

EXTERN int asn1Init_s1ap_E_RABModificationConfirm (
   s1ap_E_RABModificationConfirm* pvalue);

EXTERN void asn1Free_s1ap_E_RABModificationConfirm (OSCTXT *pctxt, 
   s1ap_E_RABModificationConfirm* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationConfirm_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationConfirm'
*/
typedef struct EXTERN s1ap_UEContextModificationConfirm_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextModificationConfirmIEs_TVALUE t;

      /**
       * UEContextModificationConfirmIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextModificationConfirmIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextModificationConfirmIEs_2;
         /**
          * id: id-CSGMembershipStatus
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CSGMembershipStatus _UEContextModificationConfirmIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UEContextModificationConfirmIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextModificationConfirm_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextModificationConfirm_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationConfirm_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationConfirm_protocolIEs_element 
   (const char* name, const s1ap_UEContextModificationConfirm_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationConfirm_protocolIEs_element (
   const char* name, 
   s1ap_UEContextModificationConfirm_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationConfirm_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationConfirm_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationConfirm_protocolIEs_element_UEContextModificationConfirmIEs_1
   (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationConfirm_protocolIEs_element_UEContextModificationConfirmIEs_2
   (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationConfirm_protocolIEs_element_UEContextModificationConfirmIEs_3
   (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs_element* pElem
   , s1ap_CSGMembershipStatus value);

EXTERN void asn1SetTC_s1ap_UEContextModificationConfirm_protocolIEs_element_UEContextModificationConfirmIEs_4
   (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationConfirm_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextModificationConfirm_protocolIEs_element* pSrcValue, 
   s1ap_UEContextModificationConfirm_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationConfirm_protocolIEs_element (
   s1ap_UEContextModificationConfirm_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationConfirm_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextModificationConfirm_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationConfirm_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationConfirm'
*/
/* List of s1ap_UEContextModificationConfirm_protocolIEs_element */
typedef OSRTDList s1ap_UEContextModificationConfirm_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextModificationConfirm_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationConfirm_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationConfirm_protocolIEs 
   (const char* name, const s1ap_UEContextModificationConfirm_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationConfirm_protocolIEs (
   const char* name, s1ap_UEContextModificationConfirm_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationConfirm_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationConfirm_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationConfirm_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationConfirm_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_CSGMembershipStatus to list */
EXTERN int asn1Append_s1ap_UEContextModificationConfirm_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs* plist, 
   s1ap_CSGMembershipStatus value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UEContextModificationConfirm_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextModificationConfirm_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextModificationConfirm_protocolIEs_element* 
   asn1Get_s1ap_UEContextModificationConfirm_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextModificationConfirm_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextModificationConfirm_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextModificationConfirm_protocolIEs* pSrcValue, 
   s1ap_UEContextModificationConfirm_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationConfirm_protocolIEs (
   s1ap_UEContextModificationConfirm_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationConfirm_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextModificationConfirm_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationConfirm                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Modification Confirm

 **************************************************************
UEContextModificationConfirm ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextModificationConfirmIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextModificationConfirmIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextModificationConfirmIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextModificationConfirm {
   s1ap_UEContextModificationConfirm_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextModificationConfirm;

EXTERN int asn1PE_s1ap_UEContextModificationConfirm (OSCTXT* pctxt, s1ap_UEContextModificationConfirm* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationConfirm (OSCTXT* pctxt, s1ap_UEContextModificationConfirm* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationConfirm 
   (const char* name, const s1ap_UEContextModificationConfirm* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationConfirm (const char* name, 
   s1ap_UEContextModificationConfirm* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationConfirm (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationConfirm* pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationConfirm (OSCTXT* pctxt, 
   const s1ap_UEContextModificationConfirm* pSrcValue, 
   s1ap_UEContextModificationConfirm* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationConfirm (
   s1ap_UEContextModificationConfirm* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationConfirm (OSCTXT *pctxt, 
   s1ap_UEContextModificationConfirm* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextSuspendResponse_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextSuspendResponse'
*/
typedef struct EXTERN s1ap_UEContextSuspendResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextSuspendResponseIEs_TVALUE t;

      /**
       * UEContextSuspendResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextSuspendResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextSuspendResponseIEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UEContextSuspendResponseIEs_3;
         /**
          * id: id-SecurityContext
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_SecurityContext *_UEContextSuspendResponseIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextSuspendResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextSuspendResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextSuspendResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextSuspendResponse_protocolIEs_element 
   (const char* name, const s1ap_UEContextSuspendResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextSuspendResponse_protocolIEs_element (
   const char* name, 
   s1ap_UEContextSuspendResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextSuspendResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextSuspendResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextSuspendResponse_protocolIEs_element_UEContextSuspendResponseIEs_1
   (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextSuspendResponse_protocolIEs_element_UEContextSuspendResponseIEs_2
   (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextSuspendResponse_protocolIEs_element_UEContextSuspendResponseIEs_3
   (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextSuspendResponse_protocolIEs_element_UEContextSuspendResponseIEs_4
   (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs_element* pElem, 
   s1ap_SecurityContext *pvalue);

EXTERN void asn1Copy_s1ap_UEContextSuspendResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextSuspendResponse_protocolIEs_element* pSrcValue, 
   s1ap_UEContextSuspendResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextSuspendResponse_protocolIEs_element (
   s1ap_UEContextSuspendResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextSuspendResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextSuspendResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextSuspendResponse_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextSuspendResponse'
*/
/* List of s1ap_UEContextSuspendResponse_protocolIEs_element */
typedef OSRTDList s1ap_UEContextSuspendResponse_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextSuspendResponse_protocolIEs (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextSuspendResponse_protocolIEs (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextSuspendResponse_protocolIEs 
   (const char* name, const s1ap_UEContextSuspendResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextSuspendResponse_protocolIEs (const char* name, 
   s1ap_UEContextSuspendResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextSuspendResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextSuspendResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextSuspendResponse_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextSuspendResponse_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UEContextSuspendResponse_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_SecurityContext to list */
struct s1ap_SecurityContext ;
EXTERN int asn1Append_s1ap_UEContextSuspendResponse_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextSuspendResponse_protocolIEs* plist, struct 
   s1ap_SecurityContext *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextSuspendResponse_protocolIEs_element* 
   asn1Get_s1ap_UEContextSuspendResponse_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextSuspendResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextSuspendResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextSuspendResponse_protocolIEs* pSrcValue, 
   s1ap_UEContextSuspendResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextSuspendResponse_protocolIEs (
   s1ap_UEContextSuspendResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextSuspendResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextSuspendResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextSuspendResponse                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Suspend Response

 **************************************************************
UEContextSuspendResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextSuspendResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextSuspendResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextSuspendResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextSuspendResponse {
   s1ap_UEContextSuspendResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextSuspendResponse;

EXTERN int asn1PE_s1ap_UEContextSuspendResponse (OSCTXT* pctxt, s1ap_UEContextSuspendResponse* pvalue);

EXTERN int asn1PD_s1ap_UEContextSuspendResponse (OSCTXT* pctxt, s1ap_UEContextSuspendResponse* pvalue);

EXTERN void asn1Print_s1ap_UEContextSuspendResponse 
   (const char* name, const s1ap_UEContextSuspendResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextSuspendResponse (const char* name, 
   s1ap_UEContextSuspendResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextSuspendResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextSuspendResponse* pvalue);

EXTERN void asn1Copy_s1ap_UEContextSuspendResponse (OSCTXT* pctxt, 
   const s1ap_UEContextSuspendResponse* pSrcValue, 
   s1ap_UEContextSuspendResponse* pDstValue);

EXTERN int asn1Init_s1ap_UEContextSuspendResponse (
   s1ap_UEContextSuspendResponse* pvalue);

EXTERN void asn1Free_s1ap_UEContextSuspendResponse (OSCTXT *pctxt, 
   s1ap_UEContextSuspendResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeItemResumeRes_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToResumeItemResumeRes'
*/
typedef struct EXTERN s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element {
   s1ap_ProtocolExtensionID id;
   s1ap_Criticality criticality;
   ASN1OpenType extensionValue;
} s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element 
   (const char* name, const s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element (
   const char* name, 
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pSrcValue, 
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element (
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeItemResumeRes_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToResumeItemResumeRes'
*/
/* List of s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element */
typedef OSRTDList s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions 
   (const char* name, const s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions (
   const char* name, 
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions_element* 
   asn1Get_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions 
   (s1ap_ProtocolExtensionID id, 
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* plist);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pSrcValue, 
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions (
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeItemResumeRes                          */
/*                                                            */
/**************************************************************/
/*
E-RABFailedToResumeItemResumeRes ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   cause [1] EXPLICIT Cause,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-EXTENSION.&id ({E-RABFailedToResumeItemResumeRes-ExtIEs}),
      criticality [1] S1AP-PROTOCOL-EXTENSION.&criticality ({E-RABFailedToResumeItemResumeRes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT S1AP-PROTOCOL-EXTENSION.&Extension ({E-RABFailedToResumeItemResumeRes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_E_RABFailedToResumeItemResumeRes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   s1ap_E_RAB_ID e_RAB_ID;
   s1ap_Cause cause;
   s1ap_E_RABFailedToResumeItemResumeRes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} s1ap_E_RABFailedToResumeItemResumeRes;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeItemResumeRes (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeRes* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeItemResumeRes (OSCTXT* pctxt, s1ap_E_RABFailedToResumeItemResumeRes* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeItemResumeRes 
   (const char* name, const s1ap_E_RABFailedToResumeItemResumeRes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeItemResumeRes (const char* name, 
   s1ap_E_RABFailedToResumeItemResumeRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeItemResumeRes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeItemResumeRes* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeItemResumeRes (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeItemResumeRes* pSrcValue, 
   s1ap_E_RABFailedToResumeItemResumeRes* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeItemResumeRes (
   s1ap_E_RABFailedToResumeItemResumeRes* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeItemResumeRes (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeItemResumeRes* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeListResumeRes_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABFailedToResumeListResumeRes'
*/
typedef struct EXTERN s1ap_E_RABFailedToResumeListResumeRes_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      E_RABFailedToResumeItemResumeResIEs_TVALUE t;

      /**
       * E-RABFailedToResumeItemResumeResIEs information objects
       */
      union {
         /**
          * id: id-E-RABFailedToResumeItemResumeRes
          * criticality: s1ap_reject
          * presence: s1ap_mandatory
          */
         s1ap_E_RABFailedToResumeItemResumeRes *_E_RABFailedToResumeItemResumeResIEs_1;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_E_RABFailedToResumeListResumeRes_element;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeListResumeRes_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeRes_element* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeListResumeRes_element (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeRes_element* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeListResumeRes_element 
   (const char* name, const s1ap_E_RABFailedToResumeListResumeRes_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeListResumeRes_element (
   const char* name, s1ap_E_RABFailedToResumeListResumeRes_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeListResumeRes_element (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeListResumeRes_element* pvalue);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeListResumeRes_element (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeListResumeRes_element* pSrcValue, 
   s1ap_E_RABFailedToResumeListResumeRes_element* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeListResumeRes_element (
   s1ap_E_RABFailedToResumeListResumeRes_element* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeListResumeRes_element (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeListResumeRes_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABFailedToResumeListResumeRes                          */
/*                                                            */
/**************************************************************/
/*
E-RABFailedToResumeListResumeRes ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF SEQUENCE {
   id [0] S1AP-PROTOCOL-IES.&id ({E-RABFailedToResumeItemResumeResIEs}),
   criticality [1] S1AP-PROTOCOL-IES.&criticality ({E-RABFailedToResumeItemResumeResIEs}{@id}),
   value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({E-RABFailedToResumeItemResumeResIEs}{@id})
}
*/
/* List of s1ap_E_RABFailedToResumeListResumeRes_element */
typedef OSRTDList s1ap_E_RABFailedToResumeListResumeRes;

EXTERN int asn1PE_s1ap_E_RABFailedToResumeListResumeRes (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeRes* pvalue);

EXTERN int asn1PD_s1ap_E_RABFailedToResumeListResumeRes (OSCTXT* pctxt, s1ap_E_RABFailedToResumeListResumeRes* pvalue);

EXTERN void asn1Print_s1ap_E_RABFailedToResumeListResumeRes 
   (const char* name, const s1ap_E_RABFailedToResumeListResumeRes* pvalue);

EXTERN int asn1PrtToStr_s1ap_E_RABFailedToResumeListResumeRes (const char* name, 
   s1ap_E_RABFailedToResumeListResumeRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_E_RABFailedToResumeListResumeRes (OSCTXT *pctxt, 
   const char* name, const s1ap_E_RABFailedToResumeListResumeRes* pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_E_RABFailedToResumeListResumeRes_element* 
   asn1Get_s1ap_E_RABFailedToResumeListResumeRes (s1ap_ProtocolIE_ID id, 
   s1ap_E_RABFailedToResumeListResumeRes* plist);

EXTERN void asn1Copy_s1ap_E_RABFailedToResumeListResumeRes (OSCTXT* pctxt, 
   const s1ap_E_RABFailedToResumeListResumeRes* pSrcValue, 
   s1ap_E_RABFailedToResumeListResumeRes* pDstValue);

EXTERN int asn1Init_s1ap_E_RABFailedToResumeListResumeRes (
   s1ap_E_RABFailedToResumeListResumeRes* pvalue);

EXTERN void asn1Free_s1ap_E_RABFailedToResumeListResumeRes (OSCTXT *pctxt, 
   s1ap_E_RABFailedToResumeListResumeRes* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeResponse_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextResumeResponse'
*/
typedef struct EXTERN s1ap_UEContextResumeResponse_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextResumeResponseIEs_TVALUE t;

      /**
       * UEContextResumeResponseIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextResumeResponseIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextResumeResponseIEs_2;
         /**
          * id: id-E-RABFailedToResumeListResumeRes
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_E_RABFailedToResumeListResumeRes *_UEContextResumeResponseIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UEContextResumeResponseIEs_4;
         /**
          * id: id-SecurityContext
          * criticality: s1ap_reject
          * presence: s1ap_optional
          */
         s1ap_SecurityContext *_UEContextResumeResponseIEs_5;
         /**
          * id: id-PendingDataIndication
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_PendingDataIndication _UEContextResumeResponseIEs_6;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextResumeResponse_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextResumeResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeResponse_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeResponse_protocolIEs_element 
   (const char* name, const s1ap_UEContextResumeResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeResponse_protocolIEs_element (
   const char* name, s1ap_UEContextResumeResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeResponse_protocolIEs_element_UEContextResumeResponseIEs_1
   (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextResumeResponse_protocolIEs_element_UEContextResumeResponseIEs_2
   (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextResumeResponse_protocolIEs_element_UEContextResumeResponseIEs_3
   (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pElem, 
   s1ap_E_RABFailedToResumeListResumeRes *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeResponse_protocolIEs_element_UEContextResumeResponseIEs_4
   (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeResponse_protocolIEs_element_UEContextResumeResponseIEs_5
   (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pElem, 
   s1ap_SecurityContext *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeResponse_protocolIEs_element_UEContextResumeResponseIEs_6
   (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs_element* pElem, 
   s1ap_PendingDataIndication value);

EXTERN void asn1Copy_s1ap_UEContextResumeResponse_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextResumeResponse_protocolIEs_element* pSrcValue, 
   s1ap_UEContextResumeResponse_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeResponse_protocolIEs_element (
   s1ap_UEContextResumeResponse_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeResponse_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextResumeResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeResponse_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextResumeResponse'
*/
/* List of s1ap_UEContextResumeResponse_protocolIEs_element */
typedef OSRTDList s1ap_UEContextResumeResponse_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextResumeResponse_protocolIEs (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeResponse_protocolIEs (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeResponse_protocolIEs 
   (const char* name, const s1ap_UEContextResumeResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeResponse_protocolIEs (const char* name, 
   s1ap_UEContextResumeResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeResponse_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextResumeResponse_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextResumeResponse_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_E_RABFailedToResumeListResumeRes to list */
EXTERN int asn1Append_s1ap_UEContextResumeResponse_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* plist, 
   s1ap_E_RABFailedToResumeListResumeRes *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UEContextResumeResponse_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Append IE with value type s1ap_SecurityContext to list */
struct s1ap_SecurityContext ;
EXTERN int asn1Append_s1ap_UEContextResumeResponse_protocolIEs_5
      (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* plist, struct 
   s1ap_SecurityContext *pvalue);

/* Append IE with value type s1ap_PendingDataIndication to list */
EXTERN int asn1Append_s1ap_UEContextResumeResponse_protocolIEs_6
      (OSCTXT* pctxt, s1ap_UEContextResumeResponse_protocolIEs* plist, 
   s1ap_PendingDataIndication value);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextResumeResponse_protocolIEs_element* 
   asn1Get_s1ap_UEContextResumeResponse_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextResumeResponse_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextResumeResponse_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextResumeResponse_protocolIEs* pSrcValue, 
   s1ap_UEContextResumeResponse_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeResponse_protocolIEs (
   s1ap_UEContextResumeResponse_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeResponse_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextResumeResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeResponse                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Resume Response

 **************************************************************
UEContextResumeResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextResumeResponseIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextResumeResponseIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextResumeResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextResumeResponse {
   s1ap_UEContextResumeResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextResumeResponse;

EXTERN int asn1PE_s1ap_UEContextResumeResponse (OSCTXT* pctxt, s1ap_UEContextResumeResponse* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeResponse (OSCTXT* pctxt, s1ap_UEContextResumeResponse* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeResponse 
   (const char* name, const s1ap_UEContextResumeResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeResponse (const char* name, 
   s1ap_UEContextResumeResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeResponse* pvalue);

EXTERN void asn1Copy_s1ap_UEContextResumeResponse (OSCTXT* pctxt, 
   const s1ap_UEContextResumeResponse* pSrcValue, s1ap_UEContextResumeResponse*
    pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeResponse (
   s1ap_UEContextResumeResponse* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeResponse (OSCTXT *pctxt, 
   s1ap_UEContextResumeResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationFailure_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverPreparationFailure'
*/
typedef struct EXTERN s1ap_HandoverPreparationFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverPreparationFailureIEs_TVALUE t;

      /**
       * HandoverPreparationFailureIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverPreparationFailureIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _HandoverPreparationFailureIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_HandoverPreparationFailureIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_HandoverPreparationFailureIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverPreparationFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverPreparationFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverPreparationFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverPreparationFailure_protocolIEs_element 
   (const char* name, const s1ap_HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverPreparationFailure_protocolIEs_element (
   const char* name, 
   s1ap_HandoverPreparationFailure_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverPreparationFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_1
   (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_2
   (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_3
   (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_4
   (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_HandoverPreparationFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverPreparationFailure_protocolIEs_element* pSrcValue, 
   s1ap_HandoverPreparationFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverPreparationFailure_protocolIEs_element (
   s1ap_HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverPreparationFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverPreparationFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationFailure_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverPreparationFailure'
*/
/* List of s1ap_HandoverPreparationFailure_protocolIEs_element */
typedef OSRTDList s1ap_HandoverPreparationFailure_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverPreparationFailure_protocolIEs (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverPreparationFailure_protocolIEs (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverPreparationFailure_protocolIEs 
   (const char* name, const s1ap_HandoverPreparationFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverPreparationFailure_protocolIEs (
   const char* name, s1ap_HandoverPreparationFailure_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverPreparationFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverPreparationFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverPreparationFailure_protocolIEs_1
      (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverPreparationFailure_protocolIEs_2
      (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_HandoverPreparationFailure_protocolIEs_3
      (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs* plist, 
   struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_HandoverPreparationFailure_protocolIEs_4
      (OSCTXT* pctxt, s1ap_HandoverPreparationFailure_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverPreparationFailure_protocolIEs_element* 
   asn1Get_s1ap_HandoverPreparationFailure_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverPreparationFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverPreparationFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverPreparationFailure_protocolIEs* pSrcValue, 
   s1ap_HandoverPreparationFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverPreparationFailure_protocolIEs (
   s1ap_HandoverPreparationFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverPreparationFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverPreparationFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationFailure                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Handover Preparation Failure

 **************************************************************
HandoverPreparationFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverPreparationFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverPreparationFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverPreparationFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverPreparationFailure {
   s1ap_HandoverPreparationFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverPreparationFailure;

EXTERN int asn1PE_s1ap_HandoverPreparationFailure (OSCTXT* pctxt, s1ap_HandoverPreparationFailure* pvalue);

EXTERN int asn1PD_s1ap_HandoverPreparationFailure (OSCTXT* pctxt, s1ap_HandoverPreparationFailure* pvalue);

EXTERN void asn1Print_s1ap_HandoverPreparationFailure 
   (const char* name, const s1ap_HandoverPreparationFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverPreparationFailure (const char* name, 
   s1ap_HandoverPreparationFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverPreparationFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverPreparationFailure* pvalue);

EXTERN void asn1Copy_s1ap_HandoverPreparationFailure (OSCTXT* pctxt, 
   const s1ap_HandoverPreparationFailure* pSrcValue, 
   s1ap_HandoverPreparationFailure* pDstValue);

EXTERN int asn1Init_s1ap_HandoverPreparationFailure (
   s1ap_HandoverPreparationFailure* pvalue);

EXTERN void asn1Free_s1ap_HandoverPreparationFailure (OSCTXT *pctxt, 
   s1ap_HandoverPreparationFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFailure_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverFailure'
*/
typedef struct EXTERN s1ap_HandoverFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      HandoverFailureIEs_TVALUE t;

      /**
       * HandoverFailureIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _HandoverFailureIEs_1;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_HandoverFailureIEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_HandoverFailureIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_HandoverFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_HandoverFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_HandoverFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_HandoverFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_HandoverFailure_protocolIEs_element 
   (const char* name, const s1ap_HandoverFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverFailure_protocolIEs_element (const char* name, 
   s1ap_HandoverFailure_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_HandoverFailure_protocolIEs_element_HandoverFailureIEs_1
   (OSCTXT* pctxt, s1ap_HandoverFailure_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_HandoverFailure_protocolIEs_element_HandoverFailureIEs_2
   (OSCTXT* pctxt, s1ap_HandoverFailure_protocolIEs_element* pElem, s1ap_Cause 
   *pvalue);

EXTERN void asn1SetTC_s1ap_HandoverFailure_protocolIEs_element_HandoverFailureIEs_3
   (OSCTXT* pctxt, s1ap_HandoverFailure_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_HandoverFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_HandoverFailure_protocolIEs_element* pSrcValue, 
   s1ap_HandoverFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_HandoverFailure_protocolIEs_element (
   s1ap_HandoverFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_HandoverFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_HandoverFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFailure_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverFailure'
*/
/* List of s1ap_HandoverFailure_protocolIEs_element */
typedef OSRTDList s1ap_HandoverFailure_protocolIEs;

EXTERN int asn1PE_s1ap_HandoverFailure_protocolIEs (OSCTXT* pctxt, s1ap_HandoverFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_HandoverFailure_protocolIEs (OSCTXT* pctxt, s1ap_HandoverFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_HandoverFailure_protocolIEs 
   (const char* name, const s1ap_HandoverFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverFailure_protocolIEs (const char* name, 
   s1ap_HandoverFailure_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_HandoverFailure_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_HandoverFailure_protocolIEs* plist, s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_HandoverFailure_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_HandoverFailure_protocolIEs* plist, struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_HandoverFailure_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_HandoverFailure_protocolIEs* plist, struct s1ap_CriticalityDiagnostics 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_HandoverFailure_protocolIEs_element* 
   asn1Get_s1ap_HandoverFailure_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_HandoverFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_HandoverFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_HandoverFailure_protocolIEs* pSrcValue, 
   s1ap_HandoverFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_HandoverFailure_protocolIEs (
   s1ap_HandoverFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_HandoverFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_HandoverFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFailure                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Handover Failure

 **************************************************************
HandoverFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({HandoverFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({HandoverFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({HandoverFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_HandoverFailure {
   s1ap_HandoverFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_HandoverFailure;

EXTERN int asn1PE_s1ap_HandoverFailure (OSCTXT* pctxt, s1ap_HandoverFailure* pvalue);

EXTERN int asn1PD_s1ap_HandoverFailure (OSCTXT* pctxt, s1ap_HandoverFailure* pvalue);

EXTERN void asn1Print_s1ap_HandoverFailure 
   (const char* name, const s1ap_HandoverFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_HandoverFailure (const char* name, 
   s1ap_HandoverFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HandoverFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_HandoverFailure* pvalue);

EXTERN void asn1Copy_s1ap_HandoverFailure (OSCTXT* pctxt, 
   const s1ap_HandoverFailure* pSrcValue, s1ap_HandoverFailure* pDstValue);

EXTERN int asn1Init_s1ap_HandoverFailure (s1ap_HandoverFailure* pvalue);

EXTERN void asn1Free_s1ap_HandoverFailure (OSCTXT *pctxt, 
   s1ap_HandoverFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestFailure_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestFailure'
*/
typedef struct EXTERN s1ap_PathSwitchRequestFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      PathSwitchRequestFailureIEs_TVALUE t;

      /**
       * PathSwitchRequestFailureIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _PathSwitchRequestFailureIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _PathSwitchRequestFailureIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_PathSwitchRequestFailureIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_PathSwitchRequestFailureIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_PathSwitchRequestFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_PathSwitchRequestFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequestFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequestFailure_protocolIEs_element 
   (const char* name, const s1ap_PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequestFailure_protocolIEs_element (
   const char* name, 
   s1ap_PathSwitchRequestFailure_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequestFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_1
   (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_2
   (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_3
   (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_4
   (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_PathSwitchRequestFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequestFailure_protocolIEs_element* pSrcValue, 
   s1ap_PathSwitchRequestFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequestFailure_protocolIEs_element (
   s1ap_PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequestFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_PathSwitchRequestFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestFailure_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestFailure'
*/
/* List of s1ap_PathSwitchRequestFailure_protocolIEs_element */
typedef OSRTDList s1ap_PathSwitchRequestFailure_protocolIEs;

EXTERN int asn1PE_s1ap_PathSwitchRequestFailure_protocolIEs (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequestFailure_protocolIEs (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequestFailure_protocolIEs 
   (const char* name, const s1ap_PathSwitchRequestFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequestFailure_protocolIEs (const char* name, 
   s1ap_PathSwitchRequestFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequestFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequestFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestFailure_protocolIEs_1
      (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_PathSwitchRequestFailure_protocolIEs_2
      (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_PathSwitchRequestFailure_protocolIEs_3
      (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs* plist, struct 
   s1ap_Cause *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_PathSwitchRequestFailure_protocolIEs_4
      (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_PathSwitchRequestFailure_protocolIEs_element* 
   asn1Get_s1ap_PathSwitchRequestFailure_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_PathSwitchRequestFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_PathSwitchRequestFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequestFailure_protocolIEs* pSrcValue, 
   s1ap_PathSwitchRequestFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequestFailure_protocolIEs (
   s1ap_PathSwitchRequestFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequestFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_PathSwitchRequestFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestFailure                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Path Switch Request Failure

 **************************************************************
PathSwitchRequestFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({PathSwitchRequestFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({PathSwitchRequestFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({PathSwitchRequestFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_PathSwitchRequestFailure {
   s1ap_PathSwitchRequestFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_PathSwitchRequestFailure;

EXTERN int asn1PE_s1ap_PathSwitchRequestFailure (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure* pvalue);

EXTERN int asn1PD_s1ap_PathSwitchRequestFailure (OSCTXT* pctxt, s1ap_PathSwitchRequestFailure* pvalue);

EXTERN void asn1Print_s1ap_PathSwitchRequestFailure 
   (const char* name, const s1ap_PathSwitchRequestFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_PathSwitchRequestFailure (const char* name, 
   s1ap_PathSwitchRequestFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_PathSwitchRequestFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_PathSwitchRequestFailure* pvalue);

EXTERN void asn1Copy_s1ap_PathSwitchRequestFailure (OSCTXT* pctxt, 
   const s1ap_PathSwitchRequestFailure* pSrcValue, 
   s1ap_PathSwitchRequestFailure* pDstValue);

EXTERN int asn1Init_s1ap_PathSwitchRequestFailure (
   s1ap_PathSwitchRequestFailure* pvalue);

EXTERN void asn1Free_s1ap_PathSwitchRequestFailure (OSCTXT *pctxt, 
   s1ap_PathSwitchRequestFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupFailure_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupFailure'
*/
typedef struct EXTERN s1ap_InitialContextSetupFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      InitialContextSetupFailureIEs_TVALUE t;

      /**
       * InitialContextSetupFailureIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _InitialContextSetupFailureIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _InitialContextSetupFailureIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_InitialContextSetupFailureIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_InitialContextSetupFailureIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_InitialContextSetupFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_InitialContextSetupFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupFailure_protocolIEs_element 
   (const char* name, const s1ap_InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupFailure_protocolIEs_element (
   const char* name, 
   s1ap_InitialContextSetupFailure_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_1
   (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_2
   (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_3
   (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_4
   (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_InitialContextSetupFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupFailure_protocolIEs_element* pSrcValue, 
   s1ap_InitialContextSetupFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupFailure_protocolIEs_element (
   s1ap_InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_InitialContextSetupFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupFailure_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupFailure'
*/
/* List of s1ap_InitialContextSetupFailure_protocolIEs_element */
typedef OSRTDList s1ap_InitialContextSetupFailure_protocolIEs;

EXTERN int asn1PE_s1ap_InitialContextSetupFailure_protocolIEs (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupFailure_protocolIEs (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupFailure_protocolIEs 
   (const char* name, const s1ap_InitialContextSetupFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupFailure_protocolIEs (
   const char* name, s1ap_InitialContextSetupFailure_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialContextSetupFailure_protocolIEs_1
      (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_InitialContextSetupFailure_protocolIEs_2
      (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_InitialContextSetupFailure_protocolIEs_3
      (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs* plist, 
   struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_InitialContextSetupFailure_protocolIEs_4
      (OSCTXT* pctxt, s1ap_InitialContextSetupFailure_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_InitialContextSetupFailure_protocolIEs_element* 
   asn1Get_s1ap_InitialContextSetupFailure_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_InitialContextSetupFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_InitialContextSetupFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupFailure_protocolIEs* pSrcValue, 
   s1ap_InitialContextSetupFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupFailure_protocolIEs (
   s1ap_InitialContextSetupFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_InitialContextSetupFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupFailure                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Initial Context Setup Failure

 **************************************************************
InitialContextSetupFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({InitialContextSetupFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({InitialContextSetupFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({InitialContextSetupFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_InitialContextSetupFailure {
   s1ap_InitialContextSetupFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_InitialContextSetupFailure;

EXTERN int asn1PE_s1ap_InitialContextSetupFailure (OSCTXT* pctxt, s1ap_InitialContextSetupFailure* pvalue);

EXTERN int asn1PD_s1ap_InitialContextSetupFailure (OSCTXT* pctxt, s1ap_InitialContextSetupFailure* pvalue);

EXTERN void asn1Print_s1ap_InitialContextSetupFailure 
   (const char* name, const s1ap_InitialContextSetupFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_InitialContextSetupFailure (const char* name, 
   s1ap_InitialContextSetupFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_InitialContextSetupFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_InitialContextSetupFailure* pvalue);

EXTERN void asn1Copy_s1ap_InitialContextSetupFailure (OSCTXT* pctxt, 
   const s1ap_InitialContextSetupFailure* pSrcValue, 
   s1ap_InitialContextSetupFailure* pDstValue);

EXTERN int asn1Init_s1ap_InitialContextSetupFailure (
   s1ap_InitialContextSetupFailure* pvalue);

EXTERN void asn1Free_s1ap_InitialContextSetupFailure (OSCTXT *pctxt, 
   s1ap_InitialContextSetupFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupFailure_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S1SetupFailure'
*/
typedef struct EXTERN s1ap_S1SetupFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      S1SetupFailureIEs_TVALUE t;

      /**
       * S1SetupFailureIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_S1SetupFailureIEs_1;
         /**
          * id: id-TimeToWait
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TimeToWait _S1SetupFailureIEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_S1SetupFailureIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_S1SetupFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_S1SetupFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_S1SetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_S1SetupFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_S1SetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_S1SetupFailure_protocolIEs_element 
   (const char* name, const s1ap_S1SetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupFailure_protocolIEs_element (const char* name, 
   s1ap_S1SetupFailure_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupFailure_protocolIEs_element_S1SetupFailureIEs_1
   (OSCTXT* pctxt, s1ap_S1SetupFailure_protocolIEs_element* pElem, s1ap_Cause 
   *pvalue);

EXTERN void asn1SetTC_s1ap_S1SetupFailure_protocolIEs_element_S1SetupFailureIEs_2
   (OSCTXT* pctxt, s1ap_S1SetupFailure_protocolIEs_element* pElem, 
   s1ap_TimeToWait value);

EXTERN void asn1SetTC_s1ap_S1SetupFailure_protocolIEs_element_S1SetupFailureIEs_3
   (OSCTXT* pctxt, s1ap_S1SetupFailure_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_S1SetupFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_S1SetupFailure_protocolIEs_element* pSrcValue, 
   s1ap_S1SetupFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupFailure_protocolIEs_element (
   s1ap_S1SetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_S1SetupFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_S1SetupFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupFailure_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S1SetupFailure'
*/
/* List of s1ap_S1SetupFailure_protocolIEs_element */
typedef OSRTDList s1ap_S1SetupFailure_protocolIEs;

EXTERN int asn1PE_s1ap_S1SetupFailure_protocolIEs (OSCTXT* pctxt, s1ap_S1SetupFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_S1SetupFailure_protocolIEs (OSCTXT* pctxt, s1ap_S1SetupFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_S1SetupFailure_protocolIEs 
   (const char* name, const s1ap_S1SetupFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupFailure_protocolIEs (const char* name, 
   s1ap_S1SetupFailure_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_S1SetupFailure_protocolIEs_1   (OSCTXT* pctxt, 
   s1ap_S1SetupFailure_protocolIEs* plist, struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_TimeToWait to list */
EXTERN int asn1Append_s1ap_S1SetupFailure_protocolIEs_2   (OSCTXT* pctxt, 
   s1ap_S1SetupFailure_protocolIEs* plist, s1ap_TimeToWait value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_S1SetupFailure_protocolIEs_3   (OSCTXT* pctxt, 
   s1ap_S1SetupFailure_protocolIEs* plist, struct s1ap_CriticalityDiagnostics 
   *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_S1SetupFailure_protocolIEs_element* 
   asn1Get_s1ap_S1SetupFailure_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_S1SetupFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_S1SetupFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_S1SetupFailure_protocolIEs* pSrcValue, 
   s1ap_S1SetupFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupFailure_protocolIEs (
   s1ap_S1SetupFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_S1SetupFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_S1SetupFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  S1SetupFailure                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 S1 Setup Failure

 **************************************************************
S1SetupFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({S1SetupFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({S1SetupFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({S1SetupFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_S1SetupFailure {
   s1ap_S1SetupFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_S1SetupFailure;

EXTERN int asn1PE_s1ap_S1SetupFailure (OSCTXT* pctxt, s1ap_S1SetupFailure* pvalue);

EXTERN int asn1PD_s1ap_S1SetupFailure (OSCTXT* pctxt, s1ap_S1SetupFailure* pvalue);

EXTERN void asn1Print_s1ap_S1SetupFailure 
   (const char* name, const s1ap_S1SetupFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_S1SetupFailure (const char* name, 
   s1ap_S1SetupFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_S1SetupFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_S1SetupFailure* pvalue);

EXTERN void asn1Copy_s1ap_S1SetupFailure (OSCTXT* pctxt, 
   const s1ap_S1SetupFailure* pSrcValue, s1ap_S1SetupFailure* pDstValue);

EXTERN int asn1Init_s1ap_S1SetupFailure (s1ap_S1SetupFailure* pvalue);

EXTERN void asn1Free_s1ap_S1SetupFailure (OSCTXT *pctxt, s1ap_S1SetupFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationFailure_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationFailure'
*/
typedef struct EXTERN s1ap_UEContextModificationFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextModificationFailureIEs_TVALUE t;

      /**
       * UEContextModificationFailureIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextModificationFailureIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextModificationFailureIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_UEContextModificationFailureIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UEContextModificationFailureIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextModificationFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextModificationFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationFailure_protocolIEs_element 
   (const char* name, const s1ap_UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationFailure_protocolIEs_element (
   const char* name, 
   s1ap_UEContextModificationFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_1
   (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs_element* pElem
   , s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_2
   (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs_element* pElem
   , s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_3
   (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs_element* pElem
   , s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_4
   (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextModificationFailure_protocolIEs_element* pSrcValue, 
   s1ap_UEContextModificationFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationFailure_protocolIEs_element (
   s1ap_UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextModificationFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationFailure_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationFailure'
*/
/* List of s1ap_UEContextModificationFailure_protocolIEs_element */
typedef OSRTDList s1ap_UEContextModificationFailure_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextModificationFailure_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationFailure_protocolIEs (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationFailure_protocolIEs 
   (const char* name, const s1ap_UEContextModificationFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationFailure_protocolIEs (
   const char* name, s1ap_UEContextModificationFailure_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationFailure_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextModificationFailure_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_UEContextModificationFailure_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs* plist, 
   struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UEContextModificationFailure_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextModificationFailure_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextModificationFailure_protocolIEs_element* 
   asn1Get_s1ap_UEContextModificationFailure_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextModificationFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextModificationFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextModificationFailure_protocolIEs* pSrcValue, 
   s1ap_UEContextModificationFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationFailure_protocolIEs (
   s1ap_UEContextModificationFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextModificationFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationFailure                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Modification Failure

 **************************************************************
UEContextModificationFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextModificationFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextModificationFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextModificationFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextModificationFailure {
   s1ap_UEContextModificationFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextModificationFailure;

EXTERN int asn1PE_s1ap_UEContextModificationFailure (OSCTXT* pctxt, s1ap_UEContextModificationFailure* pvalue);

EXTERN int asn1PD_s1ap_UEContextModificationFailure (OSCTXT* pctxt, s1ap_UEContextModificationFailure* pvalue);

EXTERN void asn1Print_s1ap_UEContextModificationFailure 
   (const char* name, const s1ap_UEContextModificationFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextModificationFailure (const char* name, 
   s1ap_UEContextModificationFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextModificationFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextModificationFailure* pvalue);

EXTERN void asn1Copy_s1ap_UEContextModificationFailure (OSCTXT* pctxt, 
   const s1ap_UEContextModificationFailure* pSrcValue, 
   s1ap_UEContextModificationFailure* pDstValue);

EXTERN int asn1Init_s1ap_UEContextModificationFailure (
   s1ap_UEContextModificationFailure* pvalue);

EXTERN void asn1Free_s1ap_UEContextModificationFailure (OSCTXT *pctxt, 
   s1ap_UEContextModificationFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdateFailure_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationUpdateFailure'
*/
typedef struct EXTERN s1ap_ENBConfigurationUpdateFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      ENBConfigurationUpdateFailureIEs_TVALUE t;

      /**
       * ENBConfigurationUpdateFailureIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_ENBConfigurationUpdateFailureIEs_1;
         /**
          * id: id-TimeToWait
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TimeToWait _ENBConfigurationUpdateFailureIEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_ENBConfigurationUpdateFailureIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_ENBConfigurationUpdateFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element 
   (const char* name, const s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element (
   const char* name, 
   s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element_ENBConfigurationUpdateFailureIEs_1
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pElem
   , s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element_ENBConfigurationUpdateFailureIEs_2
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pElem
   , s1ap_TimeToWait value);

EXTERN void asn1SetTC_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element_ENBConfigurationUpdateFailureIEs_3
   (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pSrcValue, 
   s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element (
   s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdateFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdateFailure_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ENBConfigurationUpdateFailure'
*/
/* List of s1ap_ENBConfigurationUpdateFailure_protocolIEs_element */
typedef OSRTDList s1ap_ENBConfigurationUpdateFailure_protocolIEs;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdateFailure_protocolIEs 
   (const char* name, const s1ap_ENBConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdateFailure_protocolIEs (
   const char* name, s1ap_ENBConfigurationUpdateFailure_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdateFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdateFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_ENBConfigurationUpdateFailure_protocolIEs_1
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs* plist, 
   struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_TimeToWait to list */
EXTERN int asn1Append_s1ap_ENBConfigurationUpdateFailure_protocolIEs_2
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs* plist, 
   s1ap_TimeToWait value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_ENBConfigurationUpdateFailure_protocolIEs_3
      (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_ENBConfigurationUpdateFailure_protocolIEs_element* 
   asn1Get_s1ap_ENBConfigurationUpdateFailure_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_ENBConfigurationUpdateFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdateFailure_protocolIEs* pSrcValue, 
   s1ap_ENBConfigurationUpdateFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdateFailure_protocolIEs (
   s1ap_ENBConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdateFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdateFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ENBConfigurationUpdateFailure                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 eNB Configuration Update Failure

 **************************************************************
ENBConfigurationUpdateFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({ENBConfigurationUpdateFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({ENBConfigurationUpdateFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({ENBConfigurationUpdateFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_ENBConfigurationUpdateFailure {
   s1ap_ENBConfigurationUpdateFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_ENBConfigurationUpdateFailure;

EXTERN int asn1PE_s1ap_ENBConfigurationUpdateFailure (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure* pvalue);

EXTERN int asn1PD_s1ap_ENBConfigurationUpdateFailure (OSCTXT* pctxt, s1ap_ENBConfigurationUpdateFailure* pvalue);

EXTERN void asn1Print_s1ap_ENBConfigurationUpdateFailure 
   (const char* name, const s1ap_ENBConfigurationUpdateFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_ENBConfigurationUpdateFailure (const char* name, 
   s1ap_ENBConfigurationUpdateFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ENBConfigurationUpdateFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_ENBConfigurationUpdateFailure* pvalue);

EXTERN void asn1Copy_s1ap_ENBConfigurationUpdateFailure (OSCTXT* pctxt, 
   const s1ap_ENBConfigurationUpdateFailure* pSrcValue, 
   s1ap_ENBConfigurationUpdateFailure* pDstValue);

EXTERN int asn1Init_s1ap_ENBConfigurationUpdateFailure (
   s1ap_ENBConfigurationUpdateFailure* pvalue);

EXTERN void asn1Free_s1ap_ENBConfigurationUpdateFailure (OSCTXT *pctxt, 
   s1ap_ENBConfigurationUpdateFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdateFailure_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationUpdateFailure'
*/
typedef struct EXTERN s1ap_MMEConfigurationUpdateFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      MMEConfigurationUpdateFailureIEs_TVALUE t;

      /**
       * MMEConfigurationUpdateFailureIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_MMEConfigurationUpdateFailureIEs_1;
         /**
          * id: id-TimeToWait
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_TimeToWait _MMEConfigurationUpdateFailureIEs_2;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_MMEConfigurationUpdateFailureIEs_3;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_MMEConfigurationUpdateFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element 
   (const char* name, const s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element (
   const char* name, 
   s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element_MMEConfigurationUpdateFailureIEs_1
   (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pElem
   , s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element_MMEConfigurationUpdateFailureIEs_2
   (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pElem
   , s1ap_TimeToWait value);

EXTERN void asn1SetTC_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element_MMEConfigurationUpdateFailureIEs_3
   (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pElem
   , s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pSrcValue, 
   s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element (
   s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdateFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdateFailure_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMEConfigurationUpdateFailure'
*/
/* List of s1ap_MMEConfigurationUpdateFailure_protocolIEs_element */
typedef OSRTDList s1ap_MMEConfigurationUpdateFailure_protocolIEs;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdateFailure_protocolIEs 
   (const char* name, const s1ap_MMEConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdateFailure_protocolIEs (
   const char* name, s1ap_MMEConfigurationUpdateFailure_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdateFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdateFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_MMEConfigurationUpdateFailure_protocolIEs_1
      (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs* plist, 
   struct s1ap_Cause *pvalue);

/* Append IE with value type s1ap_TimeToWait to list */
EXTERN int asn1Append_s1ap_MMEConfigurationUpdateFailure_protocolIEs_2
      (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs* plist, 
   s1ap_TimeToWait value);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_MMEConfigurationUpdateFailure_protocolIEs_3
      (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure_protocolIEs* plist, 
   struct s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_MMEConfigurationUpdateFailure_protocolIEs_element* 
   asn1Get_s1ap_MMEConfigurationUpdateFailure_protocolIEs 
   (s1ap_ProtocolIE_ID id, 
   s1ap_MMEConfigurationUpdateFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdateFailure_protocolIEs* pSrcValue, 
   s1ap_MMEConfigurationUpdateFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdateFailure_protocolIEs (
   s1ap_MMEConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdateFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdateFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  MMEConfigurationUpdateFailure                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 MME Configuration Update Failure

 **************************************************************
MMEConfigurationUpdateFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({MMEConfigurationUpdateFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({MMEConfigurationUpdateFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({MMEConfigurationUpdateFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_MMEConfigurationUpdateFailure {
   s1ap_MMEConfigurationUpdateFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_MMEConfigurationUpdateFailure;

EXTERN int asn1PE_s1ap_MMEConfigurationUpdateFailure (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure* pvalue);

EXTERN int asn1PD_s1ap_MMEConfigurationUpdateFailure (OSCTXT* pctxt, s1ap_MMEConfigurationUpdateFailure* pvalue);

EXTERN void asn1Print_s1ap_MMEConfigurationUpdateFailure 
   (const char* name, const s1ap_MMEConfigurationUpdateFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_MMEConfigurationUpdateFailure (const char* name, 
   s1ap_MMEConfigurationUpdateFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MMEConfigurationUpdateFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_MMEConfigurationUpdateFailure* pvalue);

EXTERN void asn1Copy_s1ap_MMEConfigurationUpdateFailure (OSCTXT* pctxt, 
   const s1ap_MMEConfigurationUpdateFailure* pSrcValue, 
   s1ap_MMEConfigurationUpdateFailure* pDstValue);

EXTERN int asn1Init_s1ap_MMEConfigurationUpdateFailure (
   s1ap_MMEConfigurationUpdateFailure* pvalue);

EXTERN void asn1Free_s1ap_MMEConfigurationUpdateFailure (OSCTXT *pctxt, 
   s1ap_MMEConfigurationUpdateFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeFailure_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextResumeFailure'
*/
typedef struct EXTERN s1ap_UEContextResumeFailure_protocolIEs_element {
   s1ap_ProtocolIE_ID id;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      UEContextResumeFailureIEs_TVALUE t;

      /**
       * UEContextResumeFailureIEs information objects
       */
      union {
         /**
          * id: id-MME-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_MME_UE_S1AP_ID _UEContextResumeFailureIEs_1;
         /**
          * id: id-eNB-UE-S1AP-ID
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_ENB_UE_S1AP_ID _UEContextResumeFailureIEs_2;
         /**
          * id: id-Cause
          * criticality: s1ap_ignore
          * presence: s1ap_mandatory
          */
         s1ap_Cause *_UEContextResumeFailureIEs_3;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: s1ap_ignore
          * presence: s1ap_optional
          */
         s1ap_CriticalityDiagnostics *_UEContextResumeFailureIEs_4;

         ASN1OpenType* extElem1;
      } u;
   } value;
} s1ap_UEContextResumeFailure_protocolIEs_element;

EXTERN int asn1PE_s1ap_UEContextResumeFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeFailure_protocolIEs_element (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeFailure_protocolIEs_element 
   (const char* name, const s1ap_UEContextResumeFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeFailure_protocolIEs_element (
   const char* name, s1ap_UEContextResumeFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeFailure_protocolIEs_element_UEContextResumeFailureIEs_1
   (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs_element* pElem, 
   s1ap_MME_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextResumeFailure_protocolIEs_element_UEContextResumeFailureIEs_2
   (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs_element* pElem, 
   s1ap_ENB_UE_S1AP_ID value);

EXTERN void asn1SetTC_s1ap_UEContextResumeFailure_protocolIEs_element_UEContextResumeFailureIEs_3
   (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs_element* pElem, 
   s1ap_Cause *pvalue);

EXTERN void asn1SetTC_s1ap_UEContextResumeFailure_protocolIEs_element_UEContextResumeFailureIEs_4
   (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs_element* pElem, 
   s1ap_CriticalityDiagnostics *pvalue);

EXTERN void asn1Copy_s1ap_UEContextResumeFailure_protocolIEs_element (OSCTXT* pctxt, 
   const s1ap_UEContextResumeFailure_protocolIEs_element* pSrcValue, 
   s1ap_UEContextResumeFailure_protocolIEs_element* pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeFailure_protocolIEs_element (
   s1ap_UEContextResumeFailure_protocolIEs_element* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeFailure_protocolIEs_element (OSCTXT *pctxt, 
   s1ap_UEContextResumeFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeFailure_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextResumeFailure'
*/
/* List of s1ap_UEContextResumeFailure_protocolIEs_element */
typedef OSRTDList s1ap_UEContextResumeFailure_protocolIEs;

EXTERN int asn1PE_s1ap_UEContextResumeFailure_protocolIEs (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeFailure_protocolIEs (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeFailure_protocolIEs 
   (const char* name, const s1ap_UEContextResumeFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeFailure_protocolIEs (const char* name, 
   s1ap_UEContextResumeFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeFailure_protocolIEs* pvalue);

/* Append IE with value type s1ap_MME_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextResumeFailure_protocolIEs_1
      (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs* plist, 
   s1ap_MME_UE_S1AP_ID value);

/* Append IE with value type s1ap_ENB_UE_S1AP_ID to list */
EXTERN int asn1Append_s1ap_UEContextResumeFailure_protocolIEs_2
      (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs* plist, 
   s1ap_ENB_UE_S1AP_ID value);

/* Append IE with value type s1ap_Cause to list */
struct s1ap_Cause ;
EXTERN int asn1Append_s1ap_UEContextResumeFailure_protocolIEs_3
      (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs* plist, struct 
   s1ap_Cause *pvalue);

/* Append IE with value type s1ap_CriticalityDiagnostics to list */
struct s1ap_CriticalityDiagnostics ;
EXTERN int asn1Append_s1ap_UEContextResumeFailure_protocolIEs_4
      (OSCTXT* pctxt, s1ap_UEContextResumeFailure_protocolIEs* plist, struct 
   s1ap_CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct s1ap_UEContextResumeFailure_protocolIEs_element* 
   asn1Get_s1ap_UEContextResumeFailure_protocolIEs (s1ap_ProtocolIE_ID id, 
   s1ap_UEContextResumeFailure_protocolIEs* plist);

EXTERN void asn1Copy_s1ap_UEContextResumeFailure_protocolIEs (OSCTXT* pctxt, 
   const s1ap_UEContextResumeFailure_protocolIEs* pSrcValue, 
   s1ap_UEContextResumeFailure_protocolIEs* pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeFailure_protocolIEs (
   s1ap_UEContextResumeFailure_protocolIEs* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeFailure_protocolIEs (OSCTXT *pctxt, 
   s1ap_UEContextResumeFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextResumeFailure                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 UE Context Resume Failure

 **************************************************************
UEContextResumeFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] S1AP-PROTOCOL-IES.&id ({UEContextResumeFailureIEs}),
      criticality [1] S1AP-PROTOCOL-IES.&criticality ({UEContextResumeFailureIEs}{@id}),
      value [2] EXPLICIT S1AP-PROTOCOL-IES.&Value ({UEContextResumeFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN s1ap_UEContextResumeFailure {
   s1ap_UEContextResumeFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} s1ap_UEContextResumeFailure;

EXTERN int asn1PE_s1ap_UEContextResumeFailure (OSCTXT* pctxt, s1ap_UEContextResumeFailure* pvalue);

EXTERN int asn1PD_s1ap_UEContextResumeFailure (OSCTXT* pctxt, s1ap_UEContextResumeFailure* pvalue);

EXTERN void asn1Print_s1ap_UEContextResumeFailure 
   (const char* name, const s1ap_UEContextResumeFailure* pvalue);

EXTERN int asn1PrtToStr_s1ap_UEContextResumeFailure (const char* name, 
   s1ap_UEContextResumeFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_UEContextResumeFailure (OSCTXT *pctxt, 
   const char* name, const s1ap_UEContextResumeFailure* pvalue);

EXTERN void asn1Copy_s1ap_UEContextResumeFailure (OSCTXT* pctxt, 
   const s1ap_UEContextResumeFailure* pSrcValue, s1ap_UEContextResumeFailure*
    pDstValue);

EXTERN int asn1Init_s1ap_UEContextResumeFailure (s1ap_UEContextResumeFailure* pvalue);

EXTERN void asn1Free_s1ap_UEContextResumeFailure (OSCTXT *pctxt, 
   s1ap_UEContextResumeFailure* pvalue);

/**
 * Header file for ASN.1 module S1AP-PDU-Descriptions
 */
typedef enum {
   T1_UNDEF_,
   T1_handoverPreparation,
   T1_handoverResourceAllocation,
   T1_pathSwitchRequest,
   T1_e_RABSetup,
   T1_e_RABModify,
   T1_e_RABRelease,
   T1_initialContextSetup,
   T1_handoverCancel,
   T1_kill,
   T1_reset,
   T1_s1Setup,
   T1_uEContextModification,
   T1_uEContextRelease,
   T1_eNBConfigurationUpdate,
   T1_mMEConfigurationUpdate,
   T1_writeReplaceWarning,
   T1_uERadioCapabilityMatch,
   T1_e_RABModificationIndication,
   T1_uEContextModificationIndication,
   T1_uEContextSuspend,
   T1_uEContextResume,
   T1_handoverNotification,
   T1_e_RABReleaseIndication,
   T1_paging,
   T1_downlinkNASTransport,
   T1_initialUEMessage,
   T1_uplinkNASTransport,
   T1_errorIndication,
   T1_nASNonDeliveryIndication,
   T1_uEContextReleaseRequest,
   T1_downlinkS1cdma2000tunnelling,
   T1_uplinkS1cdma2000tunnelling,
   T1_uECapabilityInfoIndication,
   T1_eNBStatusTransfer,
   T1_mMEStatusTransfer,
   T1_deactivateTrace,
   T1_traceStart,
   T1_traceFailureIndication,
   T1_cellTrafficTrace,
   T1_locationReportingControl,
   T1_locationReportingFailureIndication,
   T1_locationReport,
   T1_overloadStart,
   T1_overloadStop,
   T1_eNBDirectInformationTransfer,
   T1_mMEDirectInformationTransfer,
   T1_eNBConfigurationTransfer,
   T1_mMEConfigurationTransfer,
   T1_privateMessage,
   T1_downlinkUEAssociatedLPPaTransport,
   T1_uplinkUEAssociatedLPPaTransport,
   T1_downlinkNonUEAssociatedLPPaTransport,
   T1_uplinkNonUEAssociatedLPPaTransport,
   T1_pWSRestartIndication,
   T1_rerouteNASRequest,
   T1_pWSFailureIndication,
   T1_connectionEstablishmentIndication,
   T1_nASDeliveryIndication,
   T1_retrieveUEInformation,
   T1_uEInformationTransfer,
   T1_eNBCPRelocationIndication,
   T1_mMECPRelocationIndication,
   T1_secondaryRATDataUsageReport
} S1AP_ELEMENTARY_PROCEDURES_TVALUE;

typedef enum {
   T2_UNDEF_,
   T2_handoverPreparation,
   T2_handoverResourceAllocation,
   T2_pathSwitchRequest,
   T2_e_RABSetup,
   T2_e_RABModify,
   T2_e_RABRelease,
   T2_initialContextSetup,
   T2_handoverCancel,
   T2_kill,
   T2_reset,
   T2_s1Setup,
   T2_uEContextModification,
   T2_uEContextRelease,
   T2_eNBConfigurationUpdate,
   T2_mMEConfigurationUpdate,
   T2_writeReplaceWarning,
   T2_uERadioCapabilityMatch,
   T2_e_RABModificationIndication,
   T2_uEContextModificationIndication,
   T2_uEContextSuspend,
   T2_uEContextResume
} S1AP_ELEMENTARY_PROCEDURES_CLASS_1_TVALUE;

typedef enum {
   T3_UNDEF_,
   T3_handoverNotification,
   T3_e_RABReleaseIndication,
   T3_paging,
   T3_downlinkNASTransport,
   T3_initialUEMessage,
   T3_uplinkNASTransport,
   T3_errorIndication,
   T3_nASNonDeliveryIndication,
   T3_uEContextReleaseRequest,
   T3_downlinkS1cdma2000tunnelling,
   T3_uplinkS1cdma2000tunnelling,
   T3_uECapabilityInfoIndication,
   T3_eNBStatusTransfer,
   T3_mMEStatusTransfer,
   T3_deactivateTrace,
   T3_traceStart,
   T3_traceFailureIndication,
   T3_cellTrafficTrace,
   T3_locationReportingControl,
   T3_locationReportingFailureIndication,
   T3_locationReport,
   T3_overloadStart,
   T3_overloadStop,
   T3_eNBDirectInformationTransfer,
   T3_mMEDirectInformationTransfer,
   T3_eNBConfigurationTransfer,
   T3_mMEConfigurationTransfer,
   T3_privateMessage,
   T3_downlinkUEAssociatedLPPaTransport,
   T3_uplinkUEAssociatedLPPaTransport,
   T3_downlinkNonUEAssociatedLPPaTransport,
   T3_uplinkNonUEAssociatedLPPaTransport,
   T3_pWSRestartIndication,
   T3_rerouteNASRequest,
   T3_pWSFailureIndication,
   T3_connectionEstablishmentIndication,
   T3_nASDeliveryIndication,
   T3_retrieveUEInformation,
   T3_uEInformationTransfer,
   T3_eNBCPRelocationIndication,
   T3_mMECPRelocationIndication,
   T3_secondaryRATDataUsageReport
} S1AP_ELEMENTARY_PROCEDURES_CLASS_2_TVALUE;

/**************************************************************/
/*                                                            */
/*  InitiatingMessage                                         */
/*                                                            */
/**************************************************************/
/*
InitiatingMessage ::= SEQUENCE {
   procedureCode [0] S1AP-ELEMENTARY-PROCEDURE.&procedureCode ({S1AP-ELEMENTARY-PROCEDURES}),
   criticality [1] S1AP-ELEMENTARY-PROCEDURE.&criticality ({S1AP-ELEMENTARY-PROCEDURES}{@procedureCode}),
   value [2] EXPLICIT S1AP-ELEMENTARY-PROCEDURE.&InitiatingMessage ({S1AP-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN InitiatingMessage {
   s1ap_ProcedureCode procedureCode;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      S1AP_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * S1AP-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-HandoverPreparation
          * criticality: s1ap_reject
          */
         s1ap_HandoverRequired *handoverPreparation;
         /**
          * procedureCode: id-HandoverResourceAllocation
          * criticality: s1ap_reject
          */
         s1ap_HandoverRequest *handoverResourceAllocation;
         /**
          * procedureCode: id-PathSwitchRequest
          * criticality: s1ap_reject
          */
         s1ap_PathSwitchRequest *pathSwitchRequest;
         /**
          * procedureCode: id-E-RABSetup
          * criticality: s1ap_reject
          */
         s1ap_E_RABSetupRequest *e_RABSetup;
         /**
          * procedureCode: id-E-RABModify
          * criticality: s1ap_reject
          */
         s1ap_E_RABModifyRequest *e_RABModify;
         /**
          * procedureCode: id-E-RABRelease
          * criticality: s1ap_reject
          */
         s1ap_E_RABReleaseCommand *e_RABRelease;
         /**
          * procedureCode: id-InitialContextSetup
          * criticality: s1ap_reject
          */
         s1ap_InitialContextSetupRequest *initialContextSetup;
         /**
          * procedureCode: id-HandoverCancel
          * criticality: s1ap_reject
          */
         s1ap_HandoverCancel *handoverCancel;
         /**
          * procedureCode: id-Kill
          * criticality: s1ap_reject
          */
         s1ap_KillRequest *kill;
         /**
          * procedureCode: id-Reset
          * criticality: s1ap_reject
          */
         s1ap_Reset *reset;
         /**
          * procedureCode: id-S1Setup
          * criticality: s1ap_reject
          */
         s1ap_S1SetupRequest *s1Setup;
         /**
          * procedureCode: id-UEContextModification
          * criticality: s1ap_reject
          */
         s1ap_UEContextModificationRequest *uEContextModification;
         /**
          * procedureCode: id-UEContextRelease
          * criticality: s1ap_reject
          */
         s1ap_UEContextReleaseCommand *uEContextRelease;
         /**
          * procedureCode: id-ENBConfigurationUpdate
          * criticality: s1ap_reject
          */
         s1ap_ENBConfigurationUpdate *eNBConfigurationUpdate;
         /**
          * procedureCode: id-MMEConfigurationUpdate
          * criticality: s1ap_reject
          */
         s1ap_MMEConfigurationUpdate *mMEConfigurationUpdate;
         /**
          * procedureCode: id-WriteReplaceWarning
          * criticality: s1ap_reject
          */
         s1ap_WriteReplaceWarningRequest *writeReplaceWarning;
         /**
          * procedureCode: id-UERadioCapabilityMatch
          * criticality: s1ap_reject
          */
         s1ap_UERadioCapabilityMatchRequest *uERadioCapabilityMatch;
         /**
          * procedureCode: id-E-RABModificationIndication
          * criticality: s1ap_reject
          */
         s1ap_E_RABModificationIndication *e_RABModificationIndication;
         /**
          * procedureCode: id-UEContextModificationIndication
          * criticality: s1ap_reject
          */
         s1ap_UEContextModificationIndication *uEContextModificationIndication;
         /**
          * procedureCode: id-UEContextSuspend
          * criticality: s1ap_reject
          */
         s1ap_UEContextSuspendRequest *uEContextSuspend;
         /**
          * procedureCode: id-UEContextResume
          * criticality: s1ap_reject
          */
         s1ap_UEContextResumeRequest *uEContextResume;
         /**
          * procedureCode: id-HandoverNotification
          * criticality: s1ap_ignore
          */
         s1ap_HandoverNotify *handoverNotification;
         /**
          * procedureCode: id-E-RABReleaseIndication
          * criticality: s1ap_ignore
          */
         s1ap_E_RABReleaseIndication *e_RABReleaseIndication;
         /**
          * procedureCode: id-Paging
          * criticality: s1ap_ignore
          */
         s1ap_Paging *paging;
         /**
          * procedureCode: id-downlinkNASTransport
          * criticality: s1ap_ignore
          */
         s1ap_DownlinkNASTransport *downlinkNASTransport;
         /**
          * procedureCode: id-initialUEMessage
          * criticality: s1ap_ignore
          */
         s1ap_InitialUEMessage *initialUEMessage;
         /**
          * procedureCode: id-uplinkNASTransport
          * criticality: s1ap_ignore
          */
         s1ap_UplinkNASTransport *uplinkNASTransport;
         /**
          * procedureCode: id-ErrorIndication
          * criticality: s1ap_ignore
          */
         s1ap_ErrorIndication *errorIndication;
         /**
          * procedureCode: id-NASNonDeliveryIndication
          * criticality: s1ap_ignore
          */
         s1ap_NASNonDeliveryIndication *nASNonDeliveryIndication;
         /**
          * procedureCode: id-UEContextReleaseRequest
          * criticality: s1ap_ignore
          */
         s1ap_UEContextReleaseRequest *uEContextReleaseRequest;
         /**
          * procedureCode: id-DownlinkS1cdma2000tunnelling
          * criticality: s1ap_ignore
          */
         s1ap_DownlinkS1cdma2000tunnelling *downlinkS1cdma2000tunnelling;
         /**
          * procedureCode: id-UplinkS1cdma2000tunnelling
          * criticality: s1ap_ignore
          */
         s1ap_UplinkS1cdma2000tunnelling *uplinkS1cdma2000tunnelling;
         /**
          * procedureCode: id-UECapabilityInfoIndication
          * criticality: s1ap_ignore
          */
         s1ap_UECapabilityInfoIndication *uECapabilityInfoIndication;
         /**
          * procedureCode: id-eNBStatusTransfer
          * criticality: s1ap_ignore
          */
         s1ap_ENBStatusTransfer *eNBStatusTransfer;
         /**
          * procedureCode: id-MMEStatusTransfer
          * criticality: s1ap_ignore
          */
         s1ap_MMEStatusTransfer *mMEStatusTransfer;
         /**
          * procedureCode: id-DeactivateTrace
          * criticality: s1ap_ignore
          */
         s1ap_DeactivateTrace *deactivateTrace;
         /**
          * procedureCode: id-TraceStart
          * criticality: s1ap_ignore
          */
         s1ap_TraceStart *traceStart;
         /**
          * procedureCode: id-TraceFailureIndication
          * criticality: s1ap_ignore
          */
         s1ap_TraceFailureIndication *traceFailureIndication;
         /**
          * procedureCode: id-CellTrafficTrace
          * criticality: s1ap_ignore
          */
         s1ap_CellTrafficTrace *cellTrafficTrace;
         /**
          * procedureCode: id-LocationReportingControl
          * criticality: s1ap_ignore
          */
         s1ap_LocationReportingControl *locationReportingControl;
         /**
          * procedureCode: id-LocationReportingFailureIndication
          * criticality: s1ap_ignore
          */
         s1ap_LocationReportingFailureIndication *locationReportingFailureIndication;
         /**
          * procedureCode: id-LocationReport
          * criticality: s1ap_ignore
          */
         s1ap_LocationReport *locationReport;
         /**
          * procedureCode: id-OverloadStart
          * criticality: s1ap_ignore
          */
         s1ap_OverloadStart *overloadStart;
         /**
          * procedureCode: id-OverloadStop
          * criticality: s1ap_reject
          */
         s1ap_OverloadStop *overloadStop;
         /**
          * procedureCode: id-eNBDirectInformationTransfer
          * criticality: s1ap_ignore
          */
         s1ap_ENBDirectInformationTransfer *eNBDirectInformationTransfer;
         /**
          * procedureCode: id-MMEDirectInformationTransfer
          * criticality: s1ap_ignore
          */
         s1ap_MMEDirectInformationTransfer *mMEDirectInformationTransfer;
         /**
          * procedureCode: id-eNBConfigurationTransfer
          * criticality: s1ap_ignore
          */
         s1ap_ENBConfigurationTransfer *eNBConfigurationTransfer;
         /**
          * procedureCode: id-MMEConfigurationTransfer
          * criticality: s1ap_ignore
          */
         s1ap_MMEConfigurationTransfer *mMEConfigurationTransfer;
         /**
          * procedureCode: id-PrivateMessage
          * criticality: s1ap_ignore
          */
         s1ap_PrivateMessage *privateMessage;
         /**
          * procedureCode: id-downlinkUEAssociatedLPPaTransport
          * criticality: s1ap_ignore
          */
         s1ap_DownlinkUEAssociatedLPPaTransport *downlinkUEAssociatedLPPaTransport;
         /**
          * procedureCode: id-uplinkUEAssociatedLPPaTransport
          * criticality: s1ap_ignore
          */
         s1ap_UplinkUEAssociatedLPPaTransport *uplinkUEAssociatedLPPaTransport;
         /**
          * procedureCode: id-downlinkNonUEAssociatedLPPaTransport
          * criticality: s1ap_ignore
          */
         s1ap_DownlinkNonUEAssociatedLPPaTransport *downlinkNonUEAssociatedLPPaTransport;
         /**
          * procedureCode: id-uplinkNonUEAssociatedLPPaTransport
          * criticality: s1ap_ignore
          */
         s1ap_UplinkNonUEAssociatedLPPaTransport *uplinkNonUEAssociatedLPPaTransport;
         /**
          * procedureCode: id-PWSRestartIndication
          * criticality: s1ap_ignore
          */
         s1ap_PWSRestartIndication *pWSRestartIndication;
         /**
          * procedureCode: id-RerouteNASRequest
          * criticality: s1ap_reject
          */
         s1ap_RerouteNASRequest *rerouteNASRequest;
         /**
          * procedureCode: id-PWSFailureIndication
          * criticality: s1ap_ignore
          */
         s1ap_PWSFailureIndication *pWSFailureIndication;
         /**
          * procedureCode: id-ConnectionEstablishmentIndication
          * criticality: s1ap_reject
          */
         s1ap_ConnectionEstablishmentIndication *connectionEstablishmentIndication;
         /**
          * procedureCode: id-NASDeliveryIndication
          * criticality: s1ap_ignore
          */
         s1ap_NASDeliveryIndication *nASDeliveryIndication;
         /**
          * procedureCode: id-RetrieveUEInformation
          * criticality: s1ap_reject
          */
         s1ap_RetrieveUEInformation *retrieveUEInformation;
         /**
          * procedureCode: id-UEInformationTransfer
          * criticality: s1ap_reject
          */
         s1ap_UEInformationTransfer *uEInformationTransfer;
         /**
          * procedureCode: id-eNBCPRelocationIndication
          * criticality: s1ap_reject
          */
         s1ap_ENBCPRelocationIndication *eNBCPRelocationIndication;
         /**
          * procedureCode: id-MMECPRelocationIndication
          * criticality: s1ap_reject
          */
         s1ap_MMECPRelocationIndication *mMECPRelocationIndication;
         /**
          * procedureCode: id-SecondaryRATDataUsageReport
          * criticality: s1ap_ignore
          */
         s1ap_SecondaryRATDataUsageReport *secondaryRATDataUsageReport;

         ASN1OpenType* extElem1;
      } u;
   } value;
} InitiatingMessage;

EXTERN int asn1PE_InitiatingMessage (OSCTXT* pctxt, InitiatingMessage* pvalue);

EXTERN int asn1PD_InitiatingMessage (OSCTXT* pctxt, InitiatingMessage* pvalue);

EXTERN void asn1Print_InitiatingMessage 
   (const char* name, const InitiatingMessage* pvalue);

EXTERN int asn1PrtToStr_InitiatingMessage (const char* name, 
   InitiatingMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitiatingMessage (OSCTXT *pctxt, 
   const char* name, const InitiatingMessage* pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverPreparation
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_HandoverRequired *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverResourceAllocation
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_HandoverRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pathSwitchRequest
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_PathSwitchRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_e_RABSetup
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_E_RABSetupRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_e_RABModify
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_E_RABModifyRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_e_RABRelease
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_E_RABReleaseCommand *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_initialContextSetup
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_InitialContextSetupRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverCancel
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_HandoverCancel *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_kill
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_KillRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_reset
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_Reset *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_s1Setup
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_S1SetupRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextModification
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UEContextModificationRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextRelease
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UEContextReleaseCommand 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_eNBConfigurationUpdate
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_ENBConfigurationUpdate 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_mMEConfigurationUpdate
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_MMEConfigurationUpdate 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_writeReplaceWarning
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_WriteReplaceWarningRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uERadioCapabilityMatch
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_UERadioCapabilityMatchRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_e_RABModificationIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_E_RABModificationIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextModificationIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_UEContextModificationIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextSuspend
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UEContextSuspendRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextResume
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UEContextResumeRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverNotification
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_HandoverNotify *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_e_RABReleaseIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_E_RABReleaseIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_paging
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_Paging *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkNASTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_DownlinkNASTransport *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_initialUEMessage
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_InitialUEMessage *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkNASTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UplinkNASTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_errorIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_ErrorIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_nASNonDeliveryIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_NASNonDeliveryIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextReleaseRequest
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UEContextReleaseRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkS1cdma2000tunnelling
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_DownlinkS1cdma2000tunnelling 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkS1cdma2000tunnelling
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UplinkS1cdma2000tunnelling 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uECapabilityInfoIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UECapabilityInfoIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_eNBStatusTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_ENBStatusTransfer *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_mMEStatusTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_MMEStatusTransfer *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_deactivateTrace
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_DeactivateTrace *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_traceStart
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_TraceStart *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_traceFailureIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_TraceFailureIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_cellTrafficTrace
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_CellTrafficTrace *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_locationReportingControl
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_LocationReportingControl 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_locationReportingFailureIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_LocationReportingFailureIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_locationReport
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_LocationReport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_overloadStart
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_OverloadStart *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_overloadStop
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_OverloadStop *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_eNBDirectInformationTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_ENBDirectInformationTransfer 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_mMEDirectInformationTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_MMEDirectInformationTransfer 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_eNBConfigurationTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_ENBConfigurationTransfer 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_mMEConfigurationTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_MMEConfigurationTransfer 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_privateMessage
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_PrivateMessage *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkUEAssociatedLPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_DownlinkUEAssociatedLPPaTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkUEAssociatedLPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_UplinkUEAssociatedLPPaTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkNonUEAssociatedLPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_DownlinkNonUEAssociatedLPPaTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkNonUEAssociatedLPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_UplinkNonUEAssociatedLPPaTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pWSRestartIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_PWSRestartIndication *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_rerouteNASRequest
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_RerouteNASRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pWSFailureIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_PWSFailureIndication *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_connectionEstablishmentIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   s1ap_ConnectionEstablishmentIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_nASDeliveryIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_NASDeliveryIndication *pvalue
   );

EXTERN void asn1SetTC_InitiatingMessage_retrieveUEInformation
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_RetrieveUEInformation *pvalue
   );

EXTERN void asn1SetTC_InitiatingMessage_uEInformationTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_UEInformationTransfer *pvalue
   );

EXTERN void asn1SetTC_InitiatingMessage_eNBCPRelocationIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_ENBCPRelocationIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_mMECPRelocationIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_MMECPRelocationIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_secondaryRATDataUsageReport
   (OSCTXT* pctxt, InitiatingMessage* pElem, s1ap_SecondaryRATDataUsageReport 
   *pvalue);

EXTERN void asn1Copy_InitiatingMessage (OSCTXT* pctxt, 
   const InitiatingMessage* pSrcValue, InitiatingMessage* pDstValue);

EXTERN int asn1Init_InitiatingMessage (InitiatingMessage* pvalue);

EXTERN void asn1Free_InitiatingMessage (OSCTXT *pctxt, InitiatingMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  SuccessfulOutcome                                         */
/*                                                            */
/**************************************************************/
/*
SuccessfulOutcome ::= SEQUENCE {
   procedureCode [0] S1AP-ELEMENTARY-PROCEDURE.&procedureCode ({S1AP-ELEMENTARY-PROCEDURES}),
   criticality [1] S1AP-ELEMENTARY-PROCEDURE.&criticality ({S1AP-ELEMENTARY-PROCEDURES}{@procedureCode}),
   value [2] EXPLICIT S1AP-ELEMENTARY-PROCEDURE.&SuccessfulOutcome ({S1AP-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN SuccessfulOutcome {
   s1ap_ProcedureCode procedureCode;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      S1AP_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * S1AP-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-HandoverPreparation
          * criticality: s1ap_reject
          */
         s1ap_HandoverCommand *handoverPreparation;
         /**
          * procedureCode: id-HandoverResourceAllocation
          * criticality: s1ap_reject
          */
         s1ap_HandoverRequestAcknowledge *handoverResourceAllocation;
         /**
          * procedureCode: id-PathSwitchRequest
          * criticality: s1ap_reject
          */
         s1ap_PathSwitchRequestAcknowledge *pathSwitchRequest;
         /**
          * procedureCode: id-E-RABSetup
          * criticality: s1ap_reject
          */
         s1ap_E_RABSetupResponse *e_RABSetup;
         /**
          * procedureCode: id-E-RABModify
          * criticality: s1ap_reject
          */
         s1ap_E_RABModifyResponse *e_RABModify;
         /**
          * procedureCode: id-E-RABRelease
          * criticality: s1ap_reject
          */
         s1ap_E_RABReleaseResponse *e_RABRelease;
         /**
          * procedureCode: id-InitialContextSetup
          * criticality: s1ap_reject
          */
         s1ap_InitialContextSetupResponse *initialContextSetup;
         /**
          * procedureCode: id-HandoverCancel
          * criticality: s1ap_reject
          */
         s1ap_HandoverCancelAcknowledge *handoverCancel;
         /**
          * procedureCode: id-Kill
          * criticality: s1ap_reject
          */
         s1ap_KillResponse *kill;
         /**
          * procedureCode: id-Reset
          * criticality: s1ap_reject
          */
         s1ap_ResetAcknowledge *reset;
         /**
          * procedureCode: id-S1Setup
          * criticality: s1ap_reject
          */
         s1ap_S1SetupResponse *s1Setup;
         /**
          * procedureCode: id-UEContextModification
          * criticality: s1ap_reject
          */
         s1ap_UEContextModificationResponse *uEContextModification;
         /**
          * procedureCode: id-UEContextRelease
          * criticality: s1ap_reject
          */
         s1ap_UEContextReleaseComplete *uEContextRelease;
         /**
          * procedureCode: id-ENBConfigurationUpdate
          * criticality: s1ap_reject
          */
         s1ap_ENBConfigurationUpdateAcknowledge *eNBConfigurationUpdate;
         /**
          * procedureCode: id-MMEConfigurationUpdate
          * criticality: s1ap_reject
          */
         s1ap_MMEConfigurationUpdateAcknowledge *mMEConfigurationUpdate;
         /**
          * procedureCode: id-WriteReplaceWarning
          * criticality: s1ap_reject
          */
         s1ap_WriteReplaceWarningResponse *writeReplaceWarning;
         /**
          * procedureCode: id-UERadioCapabilityMatch
          * criticality: s1ap_reject
          */
         s1ap_UERadioCapabilityMatchResponse *uERadioCapabilityMatch;
         /**
          * procedureCode: id-E-RABModificationIndication
          * criticality: s1ap_reject
          */
         s1ap_E_RABModificationConfirm *e_RABModificationIndication;
         /**
          * procedureCode: id-UEContextModificationIndication
          * criticality: s1ap_reject
          */
         s1ap_UEContextModificationConfirm *uEContextModificationIndication;
         /**
          * procedureCode: id-UEContextSuspend
          * criticality: s1ap_reject
          */
         s1ap_UEContextSuspendResponse *uEContextSuspend;
         /**
          * procedureCode: id-UEContextResume
          * criticality: s1ap_reject
          */
         s1ap_UEContextResumeResponse *uEContextResume;

         ASN1OpenType* extElem1;
      } u;
   } value;
} SuccessfulOutcome;

EXTERN int asn1PE_SuccessfulOutcome (OSCTXT* pctxt, SuccessfulOutcome* pvalue);

EXTERN int asn1PD_SuccessfulOutcome (OSCTXT* pctxt, SuccessfulOutcome* pvalue);

EXTERN void asn1Print_SuccessfulOutcome 
   (const char* name, const SuccessfulOutcome* pvalue);

EXTERN int asn1PrtToStr_SuccessfulOutcome (const char* name, 
   SuccessfulOutcome* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SuccessfulOutcome (OSCTXT *pctxt, 
   const char* name, const SuccessfulOutcome* pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_handoverPreparation
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_HandoverCommand *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_handoverResourceAllocation
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_HandoverRequestAcknowledge 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_pathSwitchRequest
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_PathSwitchRequestAcknowledge 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_e_RABSetup
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_E_RABSetupResponse *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_e_RABModify
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_E_RABModifyResponse *pvalue)
   ;

EXTERN void asn1SetTC_SuccessfulOutcome_e_RABRelease
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_E_RABReleaseResponse *pvalue)
   ;

EXTERN void asn1SetTC_SuccessfulOutcome_initialContextSetup
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_InitialContextSetupResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_handoverCancel
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_HandoverCancelAcknowledge 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_kill
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_KillResponse *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_reset
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_ResetAcknowledge *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_s1Setup
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_S1SetupResponse *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uEContextModification
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, 
   s1ap_UEContextModificationResponse *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uEContextRelease
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_UEContextReleaseComplete 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_eNBConfigurationUpdate
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, 
   s1ap_ENBConfigurationUpdateAcknowledge *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_mMEConfigurationUpdate
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, 
   s1ap_MMEConfigurationUpdateAcknowledge *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_writeReplaceWarning
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_WriteReplaceWarningResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uERadioCapabilityMatch
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, 
   s1ap_UERadioCapabilityMatchResponse *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_e_RABModificationIndication
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_E_RABModificationConfirm 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uEContextModificationIndication
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_UEContextModificationConfirm 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uEContextSuspend
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_UEContextSuspendResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uEContextResume
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, s1ap_UEContextResumeResponse 
   *pvalue);

EXTERN void asn1Copy_SuccessfulOutcome (OSCTXT* pctxt, 
   const SuccessfulOutcome* pSrcValue, SuccessfulOutcome* pDstValue);

EXTERN int asn1Init_SuccessfulOutcome (SuccessfulOutcome* pvalue);

EXTERN void asn1Free_SuccessfulOutcome (OSCTXT *pctxt, SuccessfulOutcome* pvalue);

/**************************************************************/
/*                                                            */
/*  UnsuccessfulOutcome                                       */
/*                                                            */
/**************************************************************/
/*
UnsuccessfulOutcome ::= SEQUENCE {
   procedureCode [0] S1AP-ELEMENTARY-PROCEDURE.&procedureCode ({S1AP-ELEMENTARY-PROCEDURES}),
   criticality [1] S1AP-ELEMENTARY-PROCEDURE.&criticality ({S1AP-ELEMENTARY-PROCEDURES}{@procedureCode}),
   value [2] EXPLICIT S1AP-ELEMENTARY-PROCEDURE.&UnsuccessfulOutcome ({S1AP-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN UnsuccessfulOutcome {
   s1ap_ProcedureCode procedureCode;
   s1ap_Criticality criticality;
   struct {
      /**
       * information object selector
       */
      S1AP_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * S1AP-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-HandoverPreparation
          * criticality: s1ap_reject
          */
         s1ap_HandoverPreparationFailure *handoverPreparation;
         /**
          * procedureCode: id-HandoverResourceAllocation
          * criticality: s1ap_reject
          */
         s1ap_HandoverFailure *handoverResourceAllocation;
         /**
          * procedureCode: id-PathSwitchRequest
          * criticality: s1ap_reject
          */
         s1ap_PathSwitchRequestFailure *pathSwitchRequest;
         /**
          * procedureCode: id-InitialContextSetup
          * criticality: s1ap_reject
          */
         s1ap_InitialContextSetupFailure *initialContextSetup;
         /**
          * procedureCode: id-S1Setup
          * criticality: s1ap_reject
          */
         s1ap_S1SetupFailure *s1Setup;
         /**
          * procedureCode: id-UEContextModification
          * criticality: s1ap_reject
          */
         s1ap_UEContextModificationFailure *uEContextModification;
         /**
          * procedureCode: id-ENBConfigurationUpdate
          * criticality: s1ap_reject
          */
         s1ap_ENBConfigurationUpdateFailure *eNBConfigurationUpdate;
         /**
          * procedureCode: id-MMEConfigurationUpdate
          * criticality: s1ap_reject
          */
         s1ap_MMEConfigurationUpdateFailure *mMEConfigurationUpdate;
         /**
          * procedureCode: id-UEContextResume
          * criticality: s1ap_reject
          */
         s1ap_UEContextResumeFailure *uEContextResume;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UnsuccessfulOutcome;

EXTERN int asn1PE_UnsuccessfulOutcome (OSCTXT* pctxt, UnsuccessfulOutcome* pvalue);

EXTERN int asn1PD_UnsuccessfulOutcome (OSCTXT* pctxt, UnsuccessfulOutcome* pvalue);

EXTERN void asn1Print_UnsuccessfulOutcome 
   (const char* name, const UnsuccessfulOutcome* pvalue);

EXTERN int asn1PrtToStr_UnsuccessfulOutcome (const char* name, 
   UnsuccessfulOutcome* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UnsuccessfulOutcome (OSCTXT *pctxt, 
   const char* name, const UnsuccessfulOutcome* pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_handoverPreparation
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, s1ap_HandoverPreparationFailure 
   *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_handoverResourceAllocation
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, s1ap_HandoverFailure *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_pathSwitchRequest
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, s1ap_PathSwitchRequestFailure 
   *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_initialContextSetup
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, s1ap_InitialContextSetupFailure 
   *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_s1Setup
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, s1ap_S1SetupFailure *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_uEContextModification
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, 
   s1ap_UEContextModificationFailure *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_eNBConfigurationUpdate
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, 
   s1ap_ENBConfigurationUpdateFailure *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_mMEConfigurationUpdate
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, 
   s1ap_MMEConfigurationUpdateFailure *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_uEContextResume
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, s1ap_UEContextResumeFailure 
   *pvalue);

EXTERN void asn1Copy_UnsuccessfulOutcome (OSCTXT* pctxt, 
   const UnsuccessfulOutcome* pSrcValue, UnsuccessfulOutcome* pDstValue);

EXTERN int asn1Init_UnsuccessfulOutcome (UnsuccessfulOutcome* pvalue);

EXTERN void asn1Free_UnsuccessfulOutcome (OSCTXT *pctxt, UnsuccessfulOutcome* pvalue);

/**************************************************************/
/*                                                            */
/*  S1AP_PDU                                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************

 Interface PDU Definition

 **************************************************************
S1AP-PDU ::= CHOICE {
   initiatingMessage [0] InitiatingMessage,
   successfulOutcome [1] SuccessfulOutcome,
   unsuccessfulOutcome [2] UnsuccessfulOutcome,
   ...
}
*/
/* Choice tag constants */

#define T_S1AP_PDU_initiatingMessage    1
#define T_S1AP_PDU_successfulOutcome    2
#define T_S1AP_PDU_unsuccessfulOutcome  3
#define T_S1AP_PDU_extElem1             4

typedef struct EXTERN S1AP_PDU {
   OSINT32 t;
   union {
      /* t = 1 */
      InitiatingMessage *initiatingMessage;
      /* t = 2 */
      SuccessfulOutcome *successfulOutcome;
      /* t = 3 */
      UnsuccessfulOutcome *unsuccessfulOutcome;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} S1AP_PDU;

EXTERN int asn1PE_S1AP_PDU (OSCTXT* pctxt, S1AP_PDU* pvalue);

EXTERN int asn1PD_S1AP_PDU (OSCTXT* pctxt, S1AP_PDU* pvalue);

EXTERN void asn1Print_S1AP_PDU (const char* name, const S1AP_PDU* pvalue);

EXTERN int asn1PrtToStr_S1AP_PDU (const char* name, S1AP_PDU* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_S1AP_PDU (OSCTXT *pctxt, 
   const char* name, const S1AP_PDU* pvalue);

EXTERN void asn1Copy_S1AP_PDU (OSCTXT* pctxt, const S1AP_PDU* pSrcValue, S1AP_PDU*
    pDstValue);

EXTERN int asn1Init_S1AP_PDU (S1AP_PDU* pvalue);

EXTERN void asn1Free_S1AP_PDU (OSCTXT *pctxt, S1AP_PDU* pvalue);

/**
 * Header file for ASN.1 module S1AP-Constants
 */
/* Value definitions */

#define ASN1V_s1ap_id_HandoverPreparation 0
#define ASN1V_s1ap_id_HandoverResourceAllocation 1
#define ASN1V_s1ap_id_HandoverNotification 2
#define ASN1V_s1ap_id_PathSwitchRequest 3
#define ASN1V_s1ap_id_HandoverCancel 4
#define ASN1V_s1ap_id_E_RABSetup 5
#define ASN1V_s1ap_id_E_RABModify 6
#define ASN1V_s1ap_id_E_RABRelease 7
#define ASN1V_s1ap_id_E_RABReleaseIndication 8
#define ASN1V_s1ap_id_InitialContextSetup 9
#define ASN1V_s1ap_id_Paging 10
#define ASN1V_s1ap_id_downlinkNASTransport 11
#define ASN1V_s1ap_id_initialUEMessage 12
#define ASN1V_s1ap_id_uplinkNASTransport 13
#define ASN1V_s1ap_id_Reset 14
#define ASN1V_s1ap_id_ErrorIndication 15
#define ASN1V_s1ap_id_NASNonDeliveryIndication 16
#define ASN1V_s1ap_id_S1Setup 17
#define ASN1V_s1ap_id_UEContextReleaseRequest 18
#define ASN1V_s1ap_id_DownlinkS1cdma2000tunnelling 19
#define ASN1V_s1ap_id_UplinkS1cdma2000tunnelling 20
#define ASN1V_s1ap_id_UEContextModification 21
#define ASN1V_s1ap_id_UECapabilityInfoIndication 22
#define ASN1V_s1ap_id_UEContextRelease 23
#define ASN1V_s1ap_id_eNBStatusTransfer 24
#define ASN1V_s1ap_id_MMEStatusTransfer 25
#define ASN1V_s1ap_id_DeactivateTrace 26
#define ASN1V_s1ap_id_TraceStart 27
#define ASN1V_s1ap_id_TraceFailureIndication 28
#define ASN1V_s1ap_id_ENBConfigurationUpdate 29
#define ASN1V_s1ap_id_MMEConfigurationUpdate 30
#define ASN1V_s1ap_id_LocationReportingControl 31
#define ASN1V_s1ap_id_LocationReportingFailureIndication 32
#define ASN1V_s1ap_id_LocationReport 33
#define ASN1V_s1ap_id_OverloadStart 34
#define ASN1V_s1ap_id_OverloadStop 35
#define ASN1V_s1ap_id_WriteReplaceWarning 36
#define ASN1V_s1ap_id_eNBDirectInformationTransfer 37
#define ASN1V_s1ap_id_MMEDirectInformationTransfer 38
#define ASN1V_s1ap_id_PrivateMessage 39
#define ASN1V_s1ap_id_eNBConfigurationTransfer 40
#define ASN1V_s1ap_id_MMEConfigurationTransfer 41
#define ASN1V_s1ap_id_CellTrafficTrace 42
#define ASN1V_s1ap_id_Kill 43
#define ASN1V_s1ap_id_downlinkUEAssociatedLPPaTransport 44
#define ASN1V_s1ap_id_uplinkUEAssociatedLPPaTransport 45
#define ASN1V_s1ap_id_downlinkNonUEAssociatedLPPaTransport 46
#define ASN1V_s1ap_id_uplinkNonUEAssociatedLPPaTransport 47
#define ASN1V_s1ap_id_UERadioCapabilityMatch 48
#define ASN1V_s1ap_id_PWSRestartIndication 49
#define ASN1V_s1ap_id_E_RABModificationIndication 50
#define ASN1V_s1ap_id_PWSFailureIndication 51
#define ASN1V_s1ap_id_RerouteNASRequest 52
#define ASN1V_s1ap_id_UEContextModificationIndication 53
#define ASN1V_s1ap_id_ConnectionEstablishmentIndication 54
#define ASN1V_s1ap_id_UEContextSuspend 55
#define ASN1V_s1ap_id_UEContextResume 56
#define ASN1V_s1ap_id_NASDeliveryIndication 57
#define ASN1V_s1ap_id_RetrieveUEInformation 58
#define ASN1V_s1ap_id_UEInformationTransfer 59
#define ASN1V_s1ap_id_eNBCPRelocationIndication 60
#define ASN1V_s1ap_id_MMECPRelocationIndication 61
#define ASN1V_s1ap_id_SecondaryRATDataUsageReport 62
#define ASN1V_s1ap_maxPrivateIEs 65535
#define ASN1V_s1ap_maxProtocolExtensions 65535
#define ASN1V_s1ap_maxProtocolIEs 65535
#define ASN1V_s1ap_maxnoofCSGs 256
#define ASN1V_s1ap_maxnoofE_RABs 256
#define ASN1V_s1ap_maxnoofTAIs 256
#define ASN1V_s1ap_maxnoofTACs 256
#define ASN1V_s1ap_maxnoofErrors 256
#define ASN1V_s1ap_maxnoofBPLMNs 6
#define ASN1V_s1ap_maxnoofPLMNsPerMME 32
#define ASN1V_s1ap_maxnoofEPLMNs 15
#define ASN1V_s1ap_maxnoofEPLMNsPlusOne 16
#define ASN1V_s1ap_maxnoofForbLACs 4096
#define ASN1V_s1ap_maxnoofForbTACs 4096
#define ASN1V_s1ap_maxnoofIndividualS1ConnectionsToReset 256
#define ASN1V_s1ap_maxnoofCellsinUEHistoryInfo 16
#define ASN1V_s1ap_maxnoofCellsineNB 256
#define ASN1V_s1ap_maxnoofTAIforWarning 65535
#define ASN1V_s1ap_maxnoofCellID 65535
#define ASN1V_s1ap_maxnoofDCNs 32
#define ASN1V_s1ap_maxnoofEmergencyAreaID 65535
#define ASN1V_s1ap_maxnoofCellinTAI 65535
#define ASN1V_s1ap_maxnoofCellinEAI 65535
#define ASN1V_s1ap_maxnoofeNBX2TLAs 2
#define ASN1V_s1ap_maxnoofeNBX2ExtTLAs 16
#define ASN1V_s1ap_maxnoofeNBX2GTPTLAs 16
#define ASN1V_s1ap_maxnoofRATs 8
#define ASN1V_s1ap_maxnoofGroupIDs 65535
#define ASN1V_s1ap_maxnoofMMECs 256
#define ASN1V_s1ap_maxnoofCellIDforMDT 32
#define ASN1V_s1ap_maxnoofTAforMDT 8
#define ASN1V_s1ap_maxnoofMDTPLMNs 16
#define ASN1V_s1ap_maxnoofCellsforRestart 256
#define ASN1V_s1ap_maxnoofRestartTAIs 2048
#define ASN1V_s1ap_maxnoofRestartEmergencyAreaIDs 256
#define ASN1V_s1ap_maxEARFCN 262143
#define ASN1V_s1ap_maxnoofMBSFNAreaMDT 8
#define ASN1V_s1ap_maxnoofRecommendedCells 16
#define ASN1V_s1ap_maxnoofRecommendedENBs 16
#define ASN1V_s1ap_maxnooftimeperiods 2
#define ASN1V_s1ap_maxnoofCellIDforQMC 32
#define ASN1V_s1ap_maxnoofTAforQMC 8
#define ASN1V_s1ap_maxnoofPLMNforQMC 16
#define ASN1V_s1ap_maxnoofBluetoothName 4
#define ASN1V_s1ap_maxnoofWLANName 4
#define ASN1V_s1ap_maxnoofConnectedengNBs 256
#define ASN1V_s1ap_id_MME_UE_S1AP_ID 0
#define ASN1V_s1ap_id_HandoverType 1
#define ASN1V_s1ap_id_Cause 2
#define ASN1V_s1ap_id_SourceID 3
#define ASN1V_s1ap_id_TargetID 4
#define ASN1V_s1ap_id_eNB_UE_S1AP_ID 8
#define ASN1V_s1ap_id_E_RABSubjecttoDataForwardingList 12
#define ASN1V_s1ap_id_E_RABtoReleaseListHOCmd 13
#define ASN1V_s1ap_id_E_RABDataForwardingItem 14
#define ASN1V_s1ap_id_E_RABReleaseItemBearerRelComp 15
#define ASN1V_s1ap_id_E_RABToBeSetupListBearerSUReq 16
#define ASN1V_s1ap_id_E_RABToBeSetupItemBearerSUReq 17
#define ASN1V_s1ap_id_E_RABAdmittedList 18
#define ASN1V_s1ap_id_E_RABFailedToSetupListHOReqAck 19
#define ASN1V_s1ap_id_E_RABAdmittedItem 20
#define ASN1V_s1ap_id_E_RABFailedtoSetupItemHOReqAck 21
#define ASN1V_s1ap_id_E_RABToBeSwitchedDLList 22
#define ASN1V_s1ap_id_E_RABToBeSwitchedDLItem 23
#define ASN1V_s1ap_id_E_RABToBeSetupListCtxtSUReq 24
#define ASN1V_s1ap_id_TraceActivation 25
#define ASN1V_s1ap_id_NAS_PDU 26
#define ASN1V_s1ap_id_E_RABToBeSetupItemHOReq 27
#define ASN1V_s1ap_id_E_RABSetupListBearerSURes 28
#define ASN1V_s1ap_id_E_RABFailedToSetupListBearerSURes 29
#define ASN1V_s1ap_id_E_RABToBeModifiedListBearerModReq 30
#define ASN1V_s1ap_id_E_RABModifyListBearerModRes 31
#define ASN1V_s1ap_id_E_RABFailedToModifyList 32
#define ASN1V_s1ap_id_E_RABToBeReleasedList 33
#define ASN1V_s1ap_id_E_RABFailedToReleaseList 34
#define ASN1V_s1ap_id_E_RABItem 35
#define ASN1V_s1ap_id_E_RABToBeModifiedItemBearerModReq 36
#define ASN1V_s1ap_id_E_RABModifyItemBearerModRes 37
#define ASN1V_s1ap_id_E_RABReleaseItem 38
#define ASN1V_s1ap_id_E_RABSetupItemBearerSURes 39
#define ASN1V_s1ap_id_SecurityContext 40
#define ASN1V_s1ap_id_HandoverRestrictionList 41
#define ASN1V_s1ap_id_UEPagingID 43
#define ASN1V_s1ap_id_pagingDRX 44
#define ASN1V_s1ap_id_TAIList 46
#define ASN1V_s1ap_id_TAIItem 47
#define ASN1V_s1ap_id_E_RABFailedToSetupListCtxtSURes 48
#define ASN1V_s1ap_id_E_RABReleaseItemHOCmd 49
#define ASN1V_s1ap_id_E_RABSetupItemCtxtSURes 50
#define ASN1V_s1ap_id_E_RABSetupListCtxtSURes 51
#define ASN1V_s1ap_id_E_RABToBeSetupItemCtxtSUReq 52
#define ASN1V_s1ap_id_E_RABToBeSetupListHOReq 53
#define ASN1V_s1ap_id_GERANtoLTEHOInformationRes 55
#define ASN1V_s1ap_id_UTRANtoLTEHOInformationRes 57
#define ASN1V_s1ap_id_CriticalityDiagnostics 58
#define ASN1V_s1ap_id_Global_ENB_ID 59
#define ASN1V_s1ap_id_eNBname 60
#define ASN1V_s1ap_id_MMEname 61
#define ASN1V_s1ap_id_ServedPLMNs 63
#define ASN1V_s1ap_id_SupportedTAs 64
#define ASN1V_s1ap_id_TimeToWait 65
#define ASN1V_s1ap_id_uEaggregateMaximumBitrate 66
#define ASN1V_s1ap_id_TAI 67
#define ASN1V_s1ap_id_E_RABReleaseListBearerRelComp 69
#define ASN1V_s1ap_id_cdma2000PDU 70
#define ASN1V_s1ap_id_cdma2000RATType 71
#define ASN1V_s1ap_id_cdma2000SectorID 72
#define ASN1V_s1ap_id_SecurityKey 73
#define ASN1V_s1ap_id_UERadioCapability 74
#define ASN1V_s1ap_id_GUMMEI_ID 75
#define ASN1V_s1ap_id_E_RABInformationListItem 78
#define ASN1V_s1ap_id_Direct_Forwarding_Path_Availability 79
#define ASN1V_s1ap_id_UEIdentityIndexValue 80
#define ASN1V_s1ap_id_cdma2000HOStatus 83
#define ASN1V_s1ap_id_cdma2000HORequiredIndication 84
#define ASN1V_s1ap_id_E_UTRAN_Trace_ID 86
#define ASN1V_s1ap_id_RelativeMMECapacity 87
#define ASN1V_s1ap_id_SourceMME_UE_S1AP_ID 88
#define ASN1V_s1ap_id_Bearers_SubjectToStatusTransfer_Item 89
#define ASN1V_s1ap_id_eNB_StatusTransfer_TransparentContainer 90
#define ASN1V_s1ap_id_UE_associatedLogicalS1_ConnectionItem 91
#define ASN1V_s1ap_id_ResetType 92
#define ASN1V_s1ap_id_UE_associatedLogicalS1_ConnectionListResAck 93
#define ASN1V_s1ap_id_E_RABToBeSwitchedULItem 94
#define ASN1V_s1ap_id_E_RABToBeSwitchedULList 95
#define ASN1V_s1ap_id_S_TMSI 96
#define ASN1V_s1ap_id_cdma2000OneXRAND 97
#define ASN1V_s1ap_id_RequestType 98
#define ASN1V_s1ap_id_UE_S1AP_IDs 99
#define ASN1V_s1ap_id_EUTRAN_CGI 100
#define ASN1V_s1ap_id_OverloadResponse 101
#define ASN1V_s1ap_id_cdma2000OneXSRVCCInfo 102
#define ASN1V_s1ap_id_E_RABFailedToBeReleasedList 103
#define ASN1V_s1ap_id_Source_ToTarget_TransparentContainer 104
#define ASN1V_s1ap_id_ServedGUMMEIs 105
#define ASN1V_s1ap_id_SubscriberProfileIDforRFP 106
#define ASN1V_s1ap_id_UESecurityCapabilities 107
#define ASN1V_s1ap_id_CSFallbackIndicator 108
#define ASN1V_s1ap_id_CNDomain 109
#define ASN1V_s1ap_id_E_RABReleasedList 110
#define ASN1V_s1ap_id_MessageIdentifier 111
#define ASN1V_s1ap_id_SerialNumber 112
#define ASN1V_s1ap_id_WarningAreaList 113
#define ASN1V_s1ap_id_RepetitionPeriod 114
#define ASN1V_s1ap_id_NumberofBroadcastRequest 115
#define ASN1V_s1ap_id_WarningType 116
#define ASN1V_s1ap_id_WarningSecurityInfo 117
#define ASN1V_s1ap_id_DataCodingScheme 118
#define ASN1V_s1ap_id_WarningMessageContents 119
#define ASN1V_s1ap_id_BroadcastCompletedAreaList 120
#define ASN1V_s1ap_id_Inter_SystemInformationTransferTypeEDT 121
#define ASN1V_s1ap_id_Inter_SystemInformationTransferTypeMDT 122
#define ASN1V_s1ap_id_Target_ToSource_TransparentContainer 123
#define ASN1V_s1ap_id_SRVCCOperationPossible 124
#define ASN1V_s1ap_id_SRVCCHOIndication 125
#define ASN1V_s1ap_id_NAS_DownlinkCount 126
#define ASN1V_s1ap_id_CSG_Id 127
#define ASN1V_s1ap_id_CSG_IdList 128
#define ASN1V_s1ap_id_SONConfigurationTransferECT 129
#define ASN1V_s1ap_id_SONConfigurationTransferMCT 130
#define ASN1V_s1ap_id_TraceCollectionEntityIPAddress 131
#define ASN1V_s1ap_id_MSClassmark2 132
#define ASN1V_s1ap_id_MSClassmark3 133
#define ASN1V_s1ap_id_RRC_Establishment_Cause 134
#define ASN1V_s1ap_id_NASSecurityParametersfromE_UTRAN 135
#define ASN1V_s1ap_id_NASSecurityParameterstoE_UTRAN 136
#define ASN1V_s1ap_id_DefaultPagingDRX 137
#define ASN1V_s1ap_id_Source_ToTarget_TransparentContainer_Secondary 138
#define ASN1V_s1ap_id_Target_ToSource_TransparentContainer_Secondary 139
#define ASN1V_s1ap_id_EUTRANRoundTripDelayEstimationInfo 140
#define ASN1V_s1ap_id_BroadcastCancelledAreaList 141
#define ASN1V_s1ap_id_ConcurrentWarningMessageIndicator 142
#define ASN1V_s1ap_id_Data_Forwarding_Not_Possible 143
#define ASN1V_s1ap_id_ExtendedRepetitionPeriod 144
#define ASN1V_s1ap_id_CellAccessMode 145
#define ASN1V_s1ap_id_CSGMembershipStatus 146
#define ASN1V_s1ap_id_LPPa_PDU 147
#define ASN1V_s1ap_id_Routing_ID 148
#define ASN1V_s1ap_id_Time_Synchronisation_Info 149
#define ASN1V_s1ap_id_PS_ServiceNotAvailable 150
#define ASN1V_s1ap_id_PagingPriority 151
#define ASN1V_s1ap_id_x2TNLConfigurationInfo 152
#define ASN1V_s1ap_id_eNBX2ExtendedTransportLayerAddresses 153
#define ASN1V_s1ap_id_GUMMEIList 154
#define ASN1V_s1ap_id_GW_TransportLayerAddress 155
#define ASN1V_s1ap_id_Correlation_ID 156
#define ASN1V_s1ap_id_SourceMME_GUMMEI 157
#define ASN1V_s1ap_id_MME_UE_S1AP_ID_2 158
#define ASN1V_s1ap_id_RegisteredLAI 159
#define ASN1V_s1ap_id_RelayNode_Indicator 160
#define ASN1V_s1ap_id_TrafficLoadReductionIndication 161
#define ASN1V_s1ap_id_MDTConfiguration 162
#define ASN1V_s1ap_id_MMERelaySupportIndicator 163
#define ASN1V_s1ap_id_GWContextReleaseIndication 164
#define ASN1V_s1ap_id_ManagementBasedMDTAllowed 165
#define ASN1V_s1ap_id_PrivacyIndicator 166
#define ASN1V_s1ap_id_Time_UE_StayedInCell_EnhancedGranularity 167
#define ASN1V_s1ap_id_HO_Cause 168
#define ASN1V_s1ap_id_VoiceSupportMatchIndicator 169
#define ASN1V_s1ap_id_GUMMEIType 170
#define ASN1V_s1ap_id_M3Configuration 171
#define ASN1V_s1ap_id_M4Configuration 172
#define ASN1V_s1ap_id_M5Configuration 173
#define ASN1V_s1ap_id_MDT_Location_Info 174
#define ASN1V_s1ap_id_MobilityInformation 175
#define ASN1V_s1ap_id_Tunnel_Information_for_BBF 176
#define ASN1V_s1ap_id_ManagementBasedMDTPLMNList 177
#define ASN1V_s1ap_id_SignallingBasedMDTPLMNList 178
#define ASN1V_s1ap_id_ULCOUNTValueExtended 179
#define ASN1V_s1ap_id_DLCOUNTValueExtended 180
#define ASN1V_s1ap_id_ReceiveStatusOfULPDCPSDUsExtended 181
#define ASN1V_s1ap_id_ECGIListForRestart 182
#define ASN1V_s1ap_id_SIPTO_Correlation_ID 183
#define ASN1V_s1ap_id_SIPTO_L_GW_TransportLayerAddress 184
#define ASN1V_s1ap_id_TransportInformation 185
#define ASN1V_s1ap_id_LHN_ID 186
#define ASN1V_s1ap_id_AdditionalCSFallbackIndicator 187
#define ASN1V_s1ap_id_TAIListForRestart 188
#define ASN1V_s1ap_id_UserLocationInformation 189
#define ASN1V_s1ap_id_EmergencyAreaIDListForRestart 190
#define ASN1V_s1ap_id_KillAllWarningMessages 191
#define ASN1V_s1ap_id_Masked_IMEISV 192
#define ASN1V_s1ap_id_eNBIndirectX2TransportLayerAddresses 193
#define ASN1V_s1ap_id_uE_HistoryInformationFromTheUE 194
#define ASN1V_s1ap_id_ProSeAuthorized 195
#define ASN1V_s1ap_id_ExpectedUEBehaviour 196
#define ASN1V_s1ap_id_LoggedMBSFNMDT 197
#define ASN1V_s1ap_id_UERadioCapabilityForPaging 198
#define ASN1V_s1ap_id_E_RABToBeModifiedListBearerModInd 199
#define ASN1V_s1ap_id_E_RABToBeModifiedItemBearerModInd 200
#define ASN1V_s1ap_id_E_RABNotToBeModifiedListBearerModInd 201
#define ASN1V_s1ap_id_E_RABNotToBeModifiedItemBearerModInd 202
#define ASN1V_s1ap_id_E_RABModifyListBearerModConf 203
#define ASN1V_s1ap_id_E_RABModifyItemBearerModConf 204
#define ASN1V_s1ap_id_E_RABFailedToModifyListBearerModConf 205
#define ASN1V_s1ap_id_SON_Information_Report 206
#define ASN1V_s1ap_id_Muting_Availability_Indication 207
#define ASN1V_s1ap_id_Muting_Pattern_Information 208
#define ASN1V_s1ap_id_Synchronisation_Information 209
#define ASN1V_s1ap_id_E_RABToBeReleasedListBearerModConf 210
#define ASN1V_s1ap_id_AssistanceDataForPaging 211
#define ASN1V_s1ap_id_CellIdentifierAndCELevelForCECapableUEs 212
#define ASN1V_s1ap_id_InformationOnRecommendedCellsAndENBsForPaging 213
#define ASN1V_s1ap_id_RecommendedCellItem 214
#define ASN1V_s1ap_id_RecommendedENBItem 215
#define ASN1V_s1ap_id_ProSeUEtoNetworkRelaying 216
#define ASN1V_s1ap_id_ULCOUNTValuePDCP_SNlength18 217
#define ASN1V_s1ap_id_DLCOUNTValuePDCP_SNlength18 218
#define ASN1V_s1ap_id_ReceiveStatusOfULPDCPSDUsPDCP_SNlength18 219
#define ASN1V_s1ap_id_M6Configuration 220
#define ASN1V_s1ap_id_M7Configuration 221
#define ASN1V_s1ap_id_PWSfailedECGIList 222
#define ASN1V_s1ap_id_MME_Group_ID 223
#define ASN1V_s1ap_id_Additional_GUTI 224
#define ASN1V_s1ap_id_S1_Message 225
#define ASN1V_s1ap_id_CSGMembershipInfo 226
#define ASN1V_s1ap_id_Paging_eDRXInformation 227
#define ASN1V_s1ap_id_UE_RetentionInformation 228
#define ASN1V_s1ap_id_UE_Usage_Type 230
#define ASN1V_s1ap_id_extended_UEIdentityIndexValue 231
#define ASN1V_s1ap_id_RAT_Type 232
#define ASN1V_s1ap_id_BearerType 233
#define ASN1V_s1ap_id_NB_IoT_DefaultPagingDRX 234
#define ASN1V_s1ap_id_E_RABFailedToResumeListResumeReq 235
#define ASN1V_s1ap_id_E_RABFailedToResumeItemResumeReq 236
#define ASN1V_s1ap_id_E_RABFailedToResumeListResumeRes 237
#define ASN1V_s1ap_id_E_RABFailedToResumeItemResumeRes 238
#define ASN1V_s1ap_id_NB_IoT_Paging_eDRXInformation 239
#define ASN1V_s1ap_id_V2XServicesAuthorized 240
#define ASN1V_s1ap_id_UEUserPlaneCIoTSupportIndicator 241
#define ASN1V_s1ap_id_CE_mode_B_SupportIndicator 242
#define ASN1V_s1ap_id_SRVCCOperationNotPossible 243
#define ASN1V_s1ap_id_NB_IoT_UEIdentityIndexValue 244
#define ASN1V_s1ap_id_RRC_Resume_Cause 245
#define ASN1V_s1ap_id_DCN_ID 246
#define ASN1V_s1ap_id_ServedDCNs 247
#define ASN1V_s1ap_id_UESidelinkAggregateMaximumBitrate 248
#define ASN1V_s1ap_id_DLNASPDUDeliveryAckRequest 249
#define ASN1V_s1ap_id_Coverage_Level 250
#define ASN1V_s1ap_id_EnhancedCoverageRestricted 251
#define ASN1V_s1ap_id_UE_Level_QoS_Parameters 252
#define ASN1V_s1ap_id_DL_CP_SecurityInformation 253
#define ASN1V_s1ap_id_UL_CP_SecurityInformation 254
#define ASN1V_s1ap_id_extended_e_RAB_MaximumBitrateDL 255
#define ASN1V_s1ap_id_extended_e_RAB_MaximumBitrateUL 256
#define ASN1V_s1ap_id_extended_e_RAB_GuaranteedBitrateDL 257
#define ASN1V_s1ap_id_extended_e_RAB_GuaranteedBitrateUL 258
#define ASN1V_s1ap_id_extended_uEaggregateMaximumBitRateDL 259
#define ASN1V_s1ap_id_extended_uEaggregateMaximumBitRateUL 260
#define ASN1V_s1ap_id_NRrestrictioninEPSasSecondaryRAT 261
#define ASN1V_s1ap_id_UEAppLayerMeasConfig 262
#define ASN1V_s1ap_id_UE_Application_Layer_Measurement_Capability 263
#define ASN1V_s1ap_id_SecondaryRATDataUsageReportList 264
#define ASN1V_s1ap_id_SecondaryRATDataUsageReportItem 265
#define ASN1V_s1ap_id_HandoverFlag 266
#define ASN1V_s1ap_id_E_RABUsageReportItem 267
#define ASN1V_s1ap_id_SecondaryRATDataUsageRequest 268
#define ASN1V_s1ap_id_NRUESecurityCapabilities 269
#define ASN1V_s1ap_id_UnlicensedSpectrumRestriction 270
#define ASN1V_s1ap_id_CE_ModeBRestricted 271
#define ASN1V_s1ap_id_LTE_M_Indication 272
#define ASN1V_s1ap_id_DownlinkPacketLossRate 273
#define ASN1V_s1ap_id_UplinkPacketLossRate 274
#define ASN1V_s1ap_id_UECapabilityInfoRequest 275
#define ASN1V_s1ap_id_serviceType 276
#define ASN1V_s1ap_id_AerialUEsubscriptionInformation 277
#define ASN1V_s1ap_id_Subscription_Based_UE_DifferentiationInfo 278
#define ASN1V_s1ap_id_EndIndication 280
#define ASN1V_s1ap_id_EDT_Session 281
#define ASN1V_s1ap_id_CNTypeRestrictions 282
#define ASN1V_s1ap_id_PendingDataIndication 283
#define ASN1V_s1ap_id_BluetoothMeasurementConfiguration 284
#define ASN1V_s1ap_id_WLANMeasurementConfiguration 285
#define ASN1V_s1ap_id_WarningAreaCoordinates 286
#define ASN1V_s1ap_id_NRrestrictionin5GS 287
#define ASN1V_s1ap_id_PSCellInformation 288
#define ASN1V_s1ap_id_LastNG_RANPLMNIdentity 290
#define ASN1V_s1ap_id_ConnectedengNBList 291
#define ASN1V_s1ap_id_ConnectedengNBToAddList 292
#define ASN1V_s1ap_id_ConnectedengNBToRemoveList 293
#define ASN1V_s1ap_id_EN_DCSONConfigurationTransfer_ECT 294
#define ASN1V_s1ap_id_EN_DCSONConfigurationTransfer_MCT 295

/**
 * Header file for ASN.1 module SonTransfer-IEs
 */
/**************************************************************/
/*                                                            */
/*  SONtransferApplicationIdentity                            */
/*                                                            */
/**************************************************************/
/*

 Generic IEs for the SON Transfer application

SONtransferApplicationIdentity ::= ENUMERATED { cell-load-reporting(0), ..., multi-cell-load-reporting(1), event-triggered-cell-load-reporting(2), ho-reporting(3), eutran-cell-activation(4), energy-savings-indication(5), failure-event-reporting(6) }
*/
typedef enum {
   s1ap_cell_load_reporting = 0
} s1ap_SONtransferApplicationIdentity_Root;

typedef enum {
   s1ap_multi_cell_load_reporting = 1,
   s1ap_event_triggered_cell_load_reporting = 2,
   s1ap_ho_reporting = 3,
   s1ap_eutran_cell_activation = 4,
   s1ap_energy_savings_indication = 5,
   s1ap_failure_event_reporting = 6
} s1ap_SONtransferApplicationIdentity_Ext;

typedef OSUINT32 s1ap_SONtransferApplicationIdentity;

EXTERN int asn1PE_s1ap_SONtransferApplicationIdentity (OSCTXT* pctxt, s1ap_SONtransferApplicationIdentity value);

EXTERN int asn1PD_s1ap_SONtransferApplicationIdentity (OSCTXT* pctxt, s1ap_SONtransferApplicationIdentity* pvalue);

EXTERN void asn1Print_s1ap_SONtransferApplicationIdentity 
   (const char* name, const s1ap_SONtransferApplicationIdentity* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONtransferApplicationIdentity (const char* name, 
   s1ap_SONtransferApplicationIdentity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONtransferApplicationIdentity (OSCTXT *pctxt, 
   const char* name, const s1ap_SONtransferApplicationIdentity* pvalue);

EXTERN extern const OSEnumItem s1ap_SONtransferApplicationIdentity_ENUMTAB[];
#define s1ap_SONtransferApplicationIdentity_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* s1ap_SONtransferApplicationIdentity_ToString (OSINT32 value);

EXTERN int s1ap_SONtransferApplicationIdentity_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_SONtransferApplicationIdentity* pvalue);

EXTERN int s1ap_SONtransferApplicationIdentity_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_SONtransferApplicationIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  CellLoadReportingCause                                    */
/*                                                            */
/**************************************************************/
/*
CellLoadReportingCause ::= ENUMERATED { application-container-syntax-error(0), inconsistent-reporting-cell-identifier(1), unspecified(2), ... }
*/
typedef enum {
   s1ap_application_container_syntax_error = 0,
   s1ap_inconsistent_reporting_cell_identifier = 1,
   s1ap_unspecified_5 = 2
} s1ap_CellLoadReportingCause_Root;

typedef OSUINT32 s1ap_CellLoadReportingCause;

EXTERN int asn1PE_s1ap_CellLoadReportingCause (OSCTXT* pctxt, s1ap_CellLoadReportingCause value);

EXTERN int asn1PD_s1ap_CellLoadReportingCause (OSCTXT* pctxt, s1ap_CellLoadReportingCause* pvalue);

EXTERN void asn1Print_s1ap_CellLoadReportingCause 
   (const char* name, const s1ap_CellLoadReportingCause* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellLoadReportingCause (const char* name, 
   s1ap_CellLoadReportingCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellLoadReportingCause (OSCTXT *pctxt, 
   const char* name, const s1ap_CellLoadReportingCause* pvalue);

EXTERN extern const OSEnumItem s1ap_CellLoadReportingCause_ENUMTAB[];
#define s1ap_CellLoadReportingCause_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_CellLoadReportingCause_ToString (OSINT32 value);

EXTERN int s1ap_CellLoadReportingCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CellLoadReportingCause* pvalue);

EXTERN int s1ap_CellLoadReportingCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_CellLoadReportingCause* pvalue);

/**************************************************************/
/*                                                            */
/*  HOReportingCause                                          */
/*                                                            */
/**************************************************************/
/*
HOReportingCause ::= ENUMERATED { application-container-syntax-error(0), inconsistent-reporting-cell-identifier(1), unspecified(2), ... }
*/
typedef enum {
   s1ap_application_container_syntax_error_1 = 0,
   s1ap_inconsistent_reporting_cell_identifier_1 = 1,
   s1ap_unspecified_6 = 2
} s1ap_HOReportingCause_Root;

typedef OSUINT32 s1ap_HOReportingCause;

EXTERN int asn1PE_s1ap_HOReportingCause (OSCTXT* pctxt, s1ap_HOReportingCause value);

EXTERN int asn1PD_s1ap_HOReportingCause (OSCTXT* pctxt, s1ap_HOReportingCause* pvalue);

EXTERN void asn1Print_s1ap_HOReportingCause 
   (const char* name, const s1ap_HOReportingCause* pvalue);

EXTERN int asn1PrtToStr_s1ap_HOReportingCause (const char* name, 
   s1ap_HOReportingCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HOReportingCause (OSCTXT *pctxt, 
   const char* name, const s1ap_HOReportingCause* pvalue);

EXTERN extern const OSEnumItem s1ap_HOReportingCause_ENUMTAB[];
#define s1ap_HOReportingCause_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_HOReportingCause_ToString (OSINT32 value);

EXTERN int s1ap_HOReportingCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_HOReportingCause* pvalue);

EXTERN int s1ap_HOReportingCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_HOReportingCause* pvalue);

/**************************************************************/
/*                                                            */
/*  CellActivationCause                                       */
/*                                                            */
/**************************************************************/
/*
CellActivationCause ::= ENUMERATED { application-container-syntax-error(0), inconsistent-reporting-cell-identifier(1), unspecified(2), ... }
*/
typedef enum {
   s1ap_application_container_syntax_error_2 = 0,
   s1ap_inconsistent_reporting_cell_identifier_2 = 1,
   s1ap_unspecified_7 = 2
} s1ap_CellActivationCause_Root;

typedef OSUINT32 s1ap_CellActivationCause;

EXTERN int asn1PE_s1ap_CellActivationCause (OSCTXT* pctxt, s1ap_CellActivationCause value);

EXTERN int asn1PD_s1ap_CellActivationCause (OSCTXT* pctxt, s1ap_CellActivationCause* pvalue);

EXTERN void asn1Print_s1ap_CellActivationCause 
   (const char* name, const s1ap_CellActivationCause* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellActivationCause (const char* name, 
   s1ap_CellActivationCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellActivationCause (OSCTXT *pctxt, 
   const char* name, const s1ap_CellActivationCause* pvalue);

EXTERN extern const OSEnumItem s1ap_CellActivationCause_ENUMTAB[];
#define s1ap_CellActivationCause_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_CellActivationCause_ToString (OSINT32 value);

EXTERN int s1ap_CellActivationCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CellActivationCause* pvalue);

EXTERN int s1ap_CellActivationCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_CellActivationCause* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  CellStateIndicationCause                                  */
/*                                                            */
/**************************************************************/
/*
CellStateIndicationCause ::= ENUMERATED { application-container-syntax-error(0), inconsistent-reporting-cell-identifier(1), unspecified(2), ... }
*/
typedef enum {
   s1ap_application_container_syntax_error_3 = 0,
   s1ap_inconsistent_reporting_cell_identifier_3 = 1,
   s1ap_unspecified_8 = 2
} s1ap_CellStateIndicationCause_Root;

typedef OSUINT32 s1ap_CellStateIndicationCause;

EXTERN int asn1PE_s1ap_CellStateIndicationCause (OSCTXT* pctxt, s1ap_CellStateIndicationCause value);

EXTERN int asn1PD_s1ap_CellStateIndicationCause (OSCTXT* pctxt, s1ap_CellStateIndicationCause* pvalue);

EXTERN void asn1Print_s1ap_CellStateIndicationCause 
   (const char* name, const s1ap_CellStateIndicationCause* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellStateIndicationCause (const char* name, 
   s1ap_CellStateIndicationCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellStateIndicationCause (OSCTXT *pctxt, 
   const char* name, const s1ap_CellStateIndicationCause* pvalue);

EXTERN extern const OSEnumItem s1ap_CellStateIndicationCause_ENUMTAB[];
#define s1ap_CellStateIndicationCause_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_CellStateIndicationCause_ToString (OSINT32 value);

EXTERN int s1ap_CellStateIndicationCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_CellStateIndicationCause* pvalue);

EXTERN int s1ap_CellStateIndicationCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_CellStateIndicationCause* pvalue);

/**************************************************************/
/*                                                            */
/*  FailureEventReportingCause                                */
/*                                                            */
/**************************************************************/
/*
FailureEventReportingCause ::= ENUMERATED { application-container-syntax-error(0), inconsistent-reporting-cell-identifier(1), unspecified(2), ... }
*/
typedef enum {
   s1ap_application_container_syntax_error_4 = 0,
   s1ap_inconsistent_reporting_cell_identifier_4 = 1,
   s1ap_unspecified_9 = 2
} s1ap_FailureEventReportingCause_Root;

typedef OSUINT32 s1ap_FailureEventReportingCause;

EXTERN int asn1PE_s1ap_FailureEventReportingCause (OSCTXT* pctxt, s1ap_FailureEventReportingCause value);

EXTERN int asn1PD_s1ap_FailureEventReportingCause (OSCTXT* pctxt, s1ap_FailureEventReportingCause* pvalue);

EXTERN void asn1Print_s1ap_FailureEventReportingCause 
   (const char* name, const s1ap_FailureEventReportingCause* pvalue);

EXTERN int asn1PrtToStr_s1ap_FailureEventReportingCause (const char* name, 
   s1ap_FailureEventReportingCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_FailureEventReportingCause (OSCTXT *pctxt, 
   const char* name, const s1ap_FailureEventReportingCause* pvalue);

EXTERN extern const OSEnumItem s1ap_FailureEventReportingCause_ENUMTAB[];
#define s1ap_FailureEventReportingCause_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* s1ap_FailureEventReportingCause_ToString (OSINT32 value);

EXTERN int s1ap_FailureEventReportingCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_FailureEventReportingCause* pvalue);

EXTERN int s1ap_FailureEventReportingCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_FailureEventReportingCause* pvalue);

/**************************************************************/
/*                                                            */
/*  CompositeAvailableCapacityGroup                           */
/*                                                            */
/**************************************************************/
/*
CompositeAvailableCapacityGroup ::= OCTET STRING
*/
typedef OSDynOctStr s1ap_CompositeAvailableCapacityGroup;

EXTERN int asn1PE_s1ap_CompositeAvailableCapacityGroup (OSCTXT* pctxt, s1ap_CompositeAvailableCapacityGroup value);

EXTERN int asn1PD_s1ap_CompositeAvailableCapacityGroup (OSCTXT* pctxt, s1ap_CompositeAvailableCapacityGroup* pvalue);

EXTERN void asn1Print_s1ap_CompositeAvailableCapacityGroup 
   (const char* name, const s1ap_CompositeAvailableCapacityGroup* pvalue);

EXTERN int asn1PrtToStr_s1ap_CompositeAvailableCapacityGroup (const char* name, 
   s1ap_CompositeAvailableCapacityGroup* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CompositeAvailableCapacityGroup (OSCTXT *pctxt, 
   const char* name, const s1ap_CompositeAvailableCapacityGroup* pvalue);

EXTERN void asn1Copy_s1ap_CompositeAvailableCapacityGroup (OSCTXT* pctxt, 
   const s1ap_CompositeAvailableCapacityGroup* pSrcValue, 
   s1ap_CompositeAvailableCapacityGroup* pDstValue);

EXTERN int asn1Init_s1ap_CompositeAvailableCapacityGroup (
   s1ap_CompositeAvailableCapacityGroup* pvalue);

EXTERN void asn1Free_s1ap_CompositeAvailableCapacityGroup (OSCTXT *pctxt, 
   s1ap_CompositeAvailableCapacityGroup* pvalue);

/**************************************************************/
/*                                                            */
/*  EHRPD_Sector_ID                                           */
/*                                                            */
/**************************************************************/
/*
EHRPD-Sector-ID ::= OCTET STRING (SIZE (16))
*/
typedef struct EXTERN s1ap_EHRPD_Sector_ID {
   OSUINT32 numocts;
   OSOCTET data[16];
} s1ap_EHRPD_Sector_ID;

EXTERN int asn1PE_s1ap_EHRPD_Sector_ID (OSCTXT* pctxt, s1ap_EHRPD_Sector_ID* pvalue);

EXTERN int asn1PD_s1ap_EHRPD_Sector_ID (OSCTXT* pctxt, s1ap_EHRPD_Sector_ID* pvalue);

EXTERN void asn1Print_s1ap_EHRPD_Sector_ID 
   (const char* name, const s1ap_EHRPD_Sector_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_EHRPD_Sector_ID (const char* name, 
   s1ap_EHRPD_Sector_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EHRPD_Sector_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_EHRPD_Sector_ID* pvalue);

EXTERN void asn1Copy_s1ap_EHRPD_Sector_ID (OSCTXT* pctxt, 
   const s1ap_EHRPD_Sector_ID* pSrcValue, s1ap_EHRPD_Sector_ID* pDstValue);

EXTERN int asn1Init_s1ap_EHRPD_Sector_ID (s1ap_EHRPD_Sector_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  NumberOfMeasurementReportingLevels                        */
/*                                                            */
/**************************************************************/
/*

 IEs for Event-triggered Cell Load Reporting application

NumberOfMeasurementReportingLevels ::= ENUMERATED { rl2(0), rl3(1), rl4(2), rl5(3), rl10(4), ... }
*/
typedef enum {
   s1ap_rl2 = 0,
   s1ap_rl3 = 1,
   s1ap_rl4 = 2,
   s1ap_rl5 = 3,
   s1ap_rl10 = 4
} s1ap_NumberOfMeasurementReportingLevels_Root;

typedef OSUINT32 s1ap_NumberOfMeasurementReportingLevels;

EXTERN int asn1PE_s1ap_NumberOfMeasurementReportingLevels (OSCTXT* pctxt, s1ap_NumberOfMeasurementReportingLevels value);

EXTERN int asn1PD_s1ap_NumberOfMeasurementReportingLevels (OSCTXT* pctxt, s1ap_NumberOfMeasurementReportingLevels* pvalue);

EXTERN void asn1Print_s1ap_NumberOfMeasurementReportingLevels 
   (const char* name, const s1ap_NumberOfMeasurementReportingLevels* pvalue);

EXTERN int asn1PrtToStr_s1ap_NumberOfMeasurementReportingLevels (const char* name, 
   s1ap_NumberOfMeasurementReportingLevels* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NumberOfMeasurementReportingLevels (OSCTXT *pctxt, 
   const char* name, const s1ap_NumberOfMeasurementReportingLevels* pvalue);

EXTERN extern const OSEnumItem s1ap_NumberOfMeasurementReportingLevels_ENUMTAB[];
#define s1ap_NumberOfMeasurementReportingLevels_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* s1ap_NumberOfMeasurementReportingLevels_ToString (OSINT32 value);

EXTERN int s1ap_NumberOfMeasurementReportingLevels_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NumberOfMeasurementReportingLevels* pvalue);

EXTERN int s1ap_NumberOfMeasurementReportingLevels_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      s1ap_NumberOfMeasurementReportingLevels* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadFlag                                              */
/*                                                            */
/**************************************************************/
/*
OverloadFlag ::= ENUMERATED { overload(0), ... }
*/
typedef enum {
   s1ap_overload = 0
} s1ap_OverloadFlag_Root;

typedef OSUINT32 s1ap_OverloadFlag;

EXTERN int asn1PE_s1ap_OverloadFlag (OSCTXT* pctxt, s1ap_OverloadFlag value);

EXTERN int asn1PD_s1ap_OverloadFlag (OSCTXT* pctxt, s1ap_OverloadFlag* pvalue);

EXTERN void asn1Print_s1ap_OverloadFlag 
   (const char* name, const s1ap_OverloadFlag* pvalue);

EXTERN int asn1PrtToStr_s1ap_OverloadFlag (const char* name, 
   s1ap_OverloadFlag* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_OverloadFlag (OSCTXT *pctxt, 
   const char* name, const s1ap_OverloadFlag* pvalue);

EXTERN extern const OSEnumItem s1ap_OverloadFlag_ENUMTAB[];
#define s1ap_OverloadFlag_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* s1ap_OverloadFlag_ToString (OSINT32 value);

EXTERN int s1ap_OverloadFlag_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_OverloadFlag* pvalue);

EXTERN int s1ap_OverloadFlag_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_OverloadFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  HoType                                                    */
/*                                                            */
/**************************************************************/
/*
HoType ::= ENUMERATED { ltetoutran(0), ltetogeran(1), ... }
*/
typedef enum {
   s1ap_ltetoutran_1 = 0,
   s1ap_ltetogeran_1 = 1
} s1ap_HoType_Root;

typedef OSUINT32 s1ap_HoType;

EXTERN int asn1PE_s1ap_HoType (OSCTXT* pctxt, s1ap_HoType value);

EXTERN int asn1PD_s1ap_HoType (OSCTXT* pctxt, s1ap_HoType* pvalue);

EXTERN void asn1Print_s1ap_HoType (const char* name, const s1ap_HoType* pvalue);

EXTERN int asn1PrtToStr_s1ap_HoType (const char* name, s1ap_HoType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HoType (OSCTXT *pctxt, 
   const char* name, const s1ap_HoType* pvalue);

EXTERN extern const OSEnumItem s1ap_HoType_ENUMTAB[];
#define s1ap_HoType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_HoType_ToString (OSINT32 value);

EXTERN int s1ap_HoType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_HoType* pvalue);

EXTERN int s1ap_HoType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_HoType* pvalue);

/**************************************************************/
/*                                                            */
/*  HoReportType                                              */
/*                                                            */
/**************************************************************/
/*
HoReportType ::= ENUMERATED { unnecessaryhotoanotherrat(0), ..., earlyirathandover(1) }
*/
typedef enum {
   s1ap_unnecessaryhotoanotherrat = 0
} s1ap_HoReportType_Root;

typedef enum {
   s1ap_earlyirathandover = 1
} s1ap_HoReportType_Ext;

typedef OSUINT32 s1ap_HoReportType;

EXTERN int asn1PE_s1ap_HoReportType (OSCTXT* pctxt, s1ap_HoReportType value);

EXTERN int asn1PD_s1ap_HoReportType (OSCTXT* pctxt, s1ap_HoReportType* pvalue);

EXTERN void asn1Print_s1ap_HoReportType 
   (const char* name, const s1ap_HoReportType* pvalue);

EXTERN int asn1PrtToStr_s1ap_HoReportType (const char* name, 
   s1ap_HoReportType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HoReportType (OSCTXT *pctxt, 
   const char* name, const s1ap_HoReportType* pvalue);

EXTERN extern const OSEnumItem s1ap_HoReportType_ENUMTAB[];
#define s1ap_HoReportType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_HoReportType_ToString (OSINT32 value);

EXTERN int s1ap_HoReportType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_HoReportType* pvalue);

EXTERN int s1ap_HoReportType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_HoReportType* pvalue);

/**************************************************************/
/*                                                            */
/*  NotifyFlag                                                */
/*                                                            */
/**************************************************************/
/*
NotifyFlag ::= ENUMERATED { activated(0), deactivated(1), ... }
*/
typedef enum {
   s1ap_activated = 0,
   s1ap_deactivated = 1
} s1ap_NotifyFlag_Root;

typedef OSUINT32 s1ap_NotifyFlag;

EXTERN int asn1PE_s1ap_NotifyFlag (OSCTXT* pctxt, s1ap_NotifyFlag value);

EXTERN int asn1PD_s1ap_NotifyFlag (OSCTXT* pctxt, s1ap_NotifyFlag* pvalue);

EXTERN void asn1Print_s1ap_NotifyFlag 
   (const char* name, const s1ap_NotifyFlag* pvalue);

EXTERN int asn1PrtToStr_s1ap_NotifyFlag (const char* name, s1ap_NotifyFlag* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NotifyFlag (OSCTXT *pctxt, 
   const char* name, const s1ap_NotifyFlag* pvalue);

EXTERN extern const OSEnumItem s1ap_NotifyFlag_ENUMTAB[];
#define s1ap_NotifyFlag_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* s1ap_NotifyFlag_ToString (OSINT32 value);

EXTERN int s1ap_NotifyFlag_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, s1ap_NotifyFlag* pvalue);

EXTERN int s1ap_NotifyFlag_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, s1ap_NotifyFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  MobilityInformation                                       */
/*                                                            */
/**************************************************************/
/*
MobilityInformation ::= BIT STRING  (SIZE (32))
*/
typedef ASN1BitStr32 s1ap_son_MobilityInformation;

EXTERN int asn1PE_s1ap_son_MobilityInformation (OSCTXT* pctxt, s1ap_son_MobilityInformation value);

EXTERN int asn1PD_s1ap_son_MobilityInformation (OSCTXT* pctxt, s1ap_son_MobilityInformation* pvalue);

EXTERN void asn1Print_s1ap_son_MobilityInformation 
   (const char* name, const s1ap_son_MobilityInformation* pvalue);

EXTERN int asn1PrtToStr_s1ap_son_MobilityInformation (const char* name, 
   s1ap_son_MobilityInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_son_MobilityInformation (OSCTXT *pctxt, 
   const char* name, const s1ap_son_MobilityInformation* pvalue);

EXTERN void asn1Copy_s1ap_son_MobilityInformation (OSCTXT* pctxt, 
   const s1ap_son_MobilityInformation* pSrcValue, s1ap_son_MobilityInformation*
    pDstValue);

EXTERN int asn1Init_s1ap_son_MobilityInformation (
   s1ap_son_MobilityInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  EHRPDCapacityValue                                        */
/*                                                            */
/**************************************************************/
/*

 IEs for reporting of eHRPD load

EHRPDCapacityValue ::= INTEGER (0..100)
*/
typedef OSUINT8 s1ap_EHRPDCapacityValue;

EXTERN int asn1PE_s1ap_EHRPDCapacityValue (OSCTXT* pctxt, s1ap_EHRPDCapacityValue value);

EXTERN int asn1PD_s1ap_EHRPDCapacityValue (OSCTXT* pctxt, s1ap_EHRPDCapacityValue* pvalue);

EXTERN void asn1Print_s1ap_EHRPDCapacityValue 
   (const char* name, const s1ap_EHRPDCapacityValue* pvalue);

EXTERN int asn1PrtToStr_s1ap_EHRPDCapacityValue (const char* name, 
   s1ap_EHRPDCapacityValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EHRPDCapacityValue (OSCTXT *pctxt, 
   const char* name, const s1ap_EHRPDCapacityValue* pvalue);

/**************************************************************/
/*                                                            */
/*  EHRPDSectorCapacityClassValue                             */
/*                                                            */
/**************************************************************/
/*
EHRPDSectorCapacityClassValue ::= INTEGER (1..100, ...)
*/
typedef OSUINT32 s1ap_EHRPDSectorCapacityClassValue;

EXTERN int asn1PE_s1ap_EHRPDSectorCapacityClassValue (OSCTXT* pctxt, s1ap_EHRPDSectorCapacityClassValue value);

EXTERN int asn1PD_s1ap_EHRPDSectorCapacityClassValue (OSCTXT* pctxt, s1ap_EHRPDSectorCapacityClassValue* pvalue);

EXTERN void asn1Print_s1ap_EHRPDSectorCapacityClassValue 
   (const char* name, const s1ap_EHRPDSectorCapacityClassValue* pvalue);

EXTERN int asn1PrtToStr_s1ap_EHRPDSectorCapacityClassValue (const char* name, 
   s1ap_EHRPDSectorCapacityClassValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EHRPDSectorCapacityClassValue (OSCTXT *pctxt, 
   const char* name, const s1ap_EHRPDSectorCapacityClassValue* pvalue);

/**************************************************************/
/*                                                            */
/*  IRAT_Cell_ID                                              */
/*                                                            */
/**************************************************************/
/*
IRAT-Cell-ID ::= CHOICE {
   eUTRAN [0] OCTET STRING,
   uTRAN [1] OCTET STRING,
   gERAN [2] OCTET STRING,
   ...,
   eHRPD [3] EHRPD-Sector-ID
}
*/
/* Choice tag constants */

#define T_s1ap_IRAT_Cell_ID_eUTRAN      1
#define T_s1ap_IRAT_Cell_ID_uTRAN       2
#define T_s1ap_IRAT_Cell_ID_gERAN       3
#define T_s1ap_IRAT_Cell_ID_eHRPD       4
#define T_s1ap_IRAT_Cell_ID_extElem1    5

typedef struct EXTERN s1ap_IRAT_Cell_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      OSDynOctStr *eUTRAN;
      /* t = 2 */
      OSDynOctStr *uTRAN;
      /* t = 3 */
      OSDynOctStr *gERAN;
      /* t = 4 */
      s1ap_EHRPD_Sector_ID *eHRPD;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_IRAT_Cell_ID;

EXTERN int asn1PE_s1ap_IRAT_Cell_ID (OSCTXT* pctxt, s1ap_IRAT_Cell_ID* pvalue);

EXTERN int asn1PD_s1ap_IRAT_Cell_ID (OSCTXT* pctxt, s1ap_IRAT_Cell_ID* pvalue);

EXTERN void asn1Print_s1ap_IRAT_Cell_ID 
   (const char* name, const s1ap_IRAT_Cell_ID* pvalue);

EXTERN int asn1PrtToStr_s1ap_IRAT_Cell_ID (const char* name, 
   s1ap_IRAT_Cell_ID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_IRAT_Cell_ID (OSCTXT *pctxt, 
   const char* name, const s1ap_IRAT_Cell_ID* pvalue);

EXTERN void asn1Copy_s1ap_IRAT_Cell_ID (OSCTXT* pctxt, 
   const s1ap_IRAT_Cell_ID* pSrcValue, s1ap_IRAT_Cell_ID* pDstValue);

EXTERN int asn1Init_s1ap_IRAT_Cell_ID (s1ap_IRAT_Cell_ID* pvalue);

EXTERN void asn1Free_s1ap_IRAT_Cell_ID (OSCTXT *pctxt, s1ap_IRAT_Cell_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestedCellList                                         */
/*                                                            */
/**************************************************************/
/*
RequestedCellList ::= SEQUENCE (SIZE (1..maxnoofIRATReportingCells)) OF IRAT-Cell-ID
*/
/* List of s1ap_IRAT_Cell_ID */
typedef OSRTDList s1ap_RequestedCellList;

EXTERN int asn1PE_s1ap_RequestedCellList (OSCTXT* pctxt, s1ap_RequestedCellList* pvalue);

EXTERN int asn1PD_s1ap_RequestedCellList (OSCTXT* pctxt, s1ap_RequestedCellList* pvalue);

EXTERN void asn1Print_s1ap_RequestedCellList 
   (const char* name, const s1ap_RequestedCellList* pvalue);

EXTERN int asn1PrtToStr_s1ap_RequestedCellList (const char* name, 
   s1ap_RequestedCellList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_RequestedCellList (OSCTXT *pctxt, 
   const char* name, const s1ap_RequestedCellList* pvalue);

EXTERN void asn1Copy_s1ap_RequestedCellList (OSCTXT* pctxt, 
   const s1ap_RequestedCellList* pSrcValue, s1ap_RequestedCellList* pDstValue);

EXTERN int asn1Init_s1ap_RequestedCellList (s1ap_RequestedCellList* pvalue);

EXTERN void asn1Free_s1ap_RequestedCellList (OSCTXT *pctxt, 
   s1ap_RequestedCellList* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiCellLoadReportingRequest                             */
/*                                                            */
/**************************************************************/
/*
MultiCellLoadReportingRequest ::= SEQUENCE {
   requestedCellList [0] RequestedCellList,
   ...
}
*/
typedef struct EXTERN s1ap_MultiCellLoadReportingRequest {
   s1ap_RequestedCellList requestedCellList;
   OSRTDList extElem1;
} s1ap_MultiCellLoadReportingRequest;

EXTERN int asn1PE_s1ap_MultiCellLoadReportingRequest (OSCTXT* pctxt, s1ap_MultiCellLoadReportingRequest* pvalue);

EXTERN int asn1PD_s1ap_MultiCellLoadReportingRequest (OSCTXT* pctxt, s1ap_MultiCellLoadReportingRequest* pvalue);

EXTERN void asn1Print_s1ap_MultiCellLoadReportingRequest 
   (const char* name, const s1ap_MultiCellLoadReportingRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_MultiCellLoadReportingRequest (const char* name, 
   s1ap_MultiCellLoadReportingRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MultiCellLoadReportingRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_MultiCellLoadReportingRequest* pvalue);

EXTERN void asn1Copy_s1ap_MultiCellLoadReportingRequest (OSCTXT* pctxt, 
   const s1ap_MultiCellLoadReportingRequest* pSrcValue, 
   s1ap_MultiCellLoadReportingRequest* pDstValue);

EXTERN int asn1Init_s1ap_MultiCellLoadReportingRequest (
   s1ap_MultiCellLoadReportingRequest* pvalue);

EXTERN void asn1Free_s1ap_MultiCellLoadReportingRequest (OSCTXT *pctxt, 
   s1ap_MultiCellLoadReportingRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  EventTriggeredCellLoadReportingRequest                    */
/*                                                            */
/**************************************************************/
/*
EventTriggeredCellLoadReportingRequest ::= SEQUENCE {
   numberOfMeasurementReportingLevels [0] NumberOfMeasurementReportingLevels,
   ...
}
*/
typedef struct EXTERN s1ap_EventTriggeredCellLoadReportingRequest {
   s1ap_NumberOfMeasurementReportingLevels numberOfMeasurementReportingLevels;
   OSRTDList extElem1;
} s1ap_EventTriggeredCellLoadReportingRequest;

EXTERN int asn1PE_s1ap_EventTriggeredCellLoadReportingRequest (OSCTXT* pctxt, s1ap_EventTriggeredCellLoadReportingRequest* pvalue);

EXTERN int asn1PD_s1ap_EventTriggeredCellLoadReportingRequest (OSCTXT* pctxt, s1ap_EventTriggeredCellLoadReportingRequest* pvalue);

EXTERN void asn1Print_s1ap_EventTriggeredCellLoadReportingRequest 
   (const char* name, const s1ap_EventTriggeredCellLoadReportingRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_EventTriggeredCellLoadReportingRequest (
   const char* name, s1ap_EventTriggeredCellLoadReportingRequest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EventTriggeredCellLoadReportingRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_EventTriggeredCellLoadReportingRequest* pvalue);

EXTERN void asn1Copy_s1ap_EventTriggeredCellLoadReportingRequest (OSCTXT* pctxt, 
   const s1ap_EventTriggeredCellLoadReportingRequest* pSrcValue, 
   s1ap_EventTriggeredCellLoadReportingRequest* pDstValue);

EXTERN int asn1Init_s1ap_EventTriggeredCellLoadReportingRequest (
   s1ap_EventTriggeredCellLoadReportingRequest* pvalue);

EXTERN void asn1Free_s1ap_EventTriggeredCellLoadReportingRequest (OSCTXT *pctxt, 
   s1ap_EventTriggeredCellLoadReportingRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  CandidateCellList                                         */
/*                                                            */
/**************************************************************/
/*
CandidateCellList ::= SEQUENCE (SIZE (1..maxnoofcandidateCells)) OF IRAT-Cell-ID
*/
/* List of s1ap_IRAT_Cell_ID */
typedef OSRTDList s1ap_CandidateCellList;

EXTERN int asn1PE_s1ap_CandidateCellList (OSCTXT* pctxt, s1ap_CandidateCellList* pvalue);

EXTERN int asn1PD_s1ap_CandidateCellList (OSCTXT* pctxt, s1ap_CandidateCellList* pvalue);

EXTERN void asn1Print_s1ap_CandidateCellList 
   (const char* name, const s1ap_CandidateCellList* pvalue);

EXTERN int asn1PrtToStr_s1ap_CandidateCellList (const char* name, 
   s1ap_CandidateCellList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CandidateCellList (OSCTXT *pctxt, 
   const char* name, const s1ap_CandidateCellList* pvalue);

EXTERN void asn1Copy_s1ap_CandidateCellList (OSCTXT* pctxt, 
   const s1ap_CandidateCellList* pSrcValue, s1ap_CandidateCellList* pDstValue);

EXTERN int asn1Init_s1ap_CandidateCellList (s1ap_CandidateCellList* pvalue);

EXTERN void asn1Free_s1ap_CandidateCellList (OSCTXT *pctxt, 
   s1ap_CandidateCellList* pvalue);

/**************************************************************/
/*                                                            */
/*  CandidatePCI                                              */
/*                                                            */
/**************************************************************/
/*
CandidatePCI ::= SEQUENCE {
   pCI [0] INTEGER (0..503),
   eARFCN [1] OCTET STRING,
   ...
}
*/
typedef struct EXTERN s1ap_CandidatePCI {
   OSUINT16 pCI;
   OSDynOctStr eARFCN;
   OSRTDList extElem1;
} s1ap_CandidatePCI;

EXTERN int asn1PE_s1ap_CandidatePCI (OSCTXT* pctxt, s1ap_CandidatePCI* pvalue);

EXTERN int asn1PD_s1ap_CandidatePCI (OSCTXT* pctxt, s1ap_CandidatePCI* pvalue);

EXTERN void asn1Print_s1ap_CandidatePCI 
   (const char* name, const s1ap_CandidatePCI* pvalue);

EXTERN int asn1PrtToStr_s1ap_CandidatePCI (const char* name, 
   s1ap_CandidatePCI* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CandidatePCI (OSCTXT *pctxt, 
   const char* name, const s1ap_CandidatePCI* pvalue);

EXTERN void asn1Copy_s1ap_CandidatePCI (OSCTXT* pctxt, 
   const s1ap_CandidatePCI* pSrcValue, s1ap_CandidatePCI* pDstValue);

EXTERN int asn1Init_s1ap_CandidatePCI (s1ap_CandidatePCI* pvalue);

EXTERN void asn1Free_s1ap_CandidatePCI (OSCTXT *pctxt, s1ap_CandidatePCI* pvalue);

/**************************************************************/
/*                                                            */
/*  CandidatePCIList                                          */
/*                                                            */
/**************************************************************/
/*
CandidatePCIList ::= SEQUENCE (SIZE (1..maxnoofcandidateCells)) OF CandidatePCI
*/
/* List of s1ap_CandidatePCI */
typedef OSRTDList s1ap_CandidatePCIList;

EXTERN int asn1PE_s1ap_CandidatePCIList (OSCTXT* pctxt, s1ap_CandidatePCIList* pvalue);

EXTERN int asn1PD_s1ap_CandidatePCIList (OSCTXT* pctxt, s1ap_CandidatePCIList* pvalue);

EXTERN void asn1Print_s1ap_CandidatePCIList 
   (const char* name, const s1ap_CandidatePCIList* pvalue);

EXTERN int asn1PrtToStr_s1ap_CandidatePCIList (const char* name, 
   s1ap_CandidatePCIList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CandidatePCIList (OSCTXT *pctxt, 
   const char* name, const s1ap_CandidatePCIList* pvalue);

EXTERN void asn1Copy_s1ap_CandidatePCIList (OSCTXT* pctxt, 
   const s1ap_CandidatePCIList* pSrcValue, s1ap_CandidatePCIList* pDstValue);

EXTERN int asn1Init_s1ap_CandidatePCIList (s1ap_CandidatePCIList* pvalue);

EXTERN void asn1Free_s1ap_CandidatePCIList (OSCTXT *pctxt, 
   s1ap_CandidatePCIList* pvalue);

/**************************************************************/
/*                                                            */
/*  HOReport                                                  */
/*                                                            */
/**************************************************************/
/*

 IEs for HO Reporting application

HOReport ::= SEQUENCE {
   hoType [0] HoType,
   hoReportType [1] HoReportType,
   hosourceID [2] EXPLICIT IRAT-Cell-ID,
   hoTargetID [3] EXPLICIT IRAT-Cell-ID,
   candidateCellList [4] CandidateCellList,
   ...,
   candidatePCIList [5] CandidatePCIList OPTIONAL
}
*/
typedef struct EXTERN s1ap_HOReport {
   struct {
      unsigned candidatePCIListPresent : 1;
   } m;
   s1ap_HoType hoType;
   s1ap_HoReportType hoReportType;
   s1ap_IRAT_Cell_ID hosourceID;
   s1ap_IRAT_Cell_ID hoTargetID;
   s1ap_CandidateCellList candidateCellList;
   s1ap_CandidatePCIList candidatePCIList;
   OSRTDList extElem1;
} s1ap_HOReport;

EXTERN int asn1PE_s1ap_HOReport (OSCTXT* pctxt, s1ap_HOReport* pvalue);

EXTERN int asn1PD_s1ap_HOReport (OSCTXT* pctxt, s1ap_HOReport* pvalue);

EXTERN void asn1Print_s1ap_HOReport (const char* name, const s1ap_HOReport* pvalue);

EXTERN int asn1PrtToStr_s1ap_HOReport (const char* name, s1ap_HOReport* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_HOReport (OSCTXT *pctxt, 
   const char* name, const s1ap_HOReport* pvalue);

EXTERN void asn1Copy_s1ap_HOReport (OSCTXT* pctxt, const s1ap_HOReport* pSrcValue, 
   s1ap_HOReport* pDstValue);

EXTERN int asn1Init_s1ap_HOReport (s1ap_HOReport* pvalue);

EXTERN void asn1Free_s1ap_HOReport (OSCTXT *pctxt, s1ap_HOReport* pvalue);

/**************************************************************/
/*                                                            */
/*  CellsToActivateList_Item                                  */
/*                                                            */
/**************************************************************/
/*
CellsToActivateList-Item ::= SEQUENCE {
   cell-ID [0] OCTET STRING,
   ...
}
*/
typedef struct EXTERN s1ap_CellsToActivateList_Item {
   OSDynOctStr cell_ID;
   OSRTDList extElem1;
} s1ap_CellsToActivateList_Item;

EXTERN int asn1PE_s1ap_CellsToActivateList_Item (OSCTXT* pctxt, s1ap_CellsToActivateList_Item* pvalue);

EXTERN int asn1PD_s1ap_CellsToActivateList_Item (OSCTXT* pctxt, s1ap_CellsToActivateList_Item* pvalue);

EXTERN void asn1Print_s1ap_CellsToActivateList_Item 
   (const char* name, const s1ap_CellsToActivateList_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellsToActivateList_Item (const char* name, 
   s1ap_CellsToActivateList_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellsToActivateList_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_CellsToActivateList_Item* pvalue);

EXTERN void asn1Copy_s1ap_CellsToActivateList_Item (OSCTXT* pctxt, 
   const s1ap_CellsToActivateList_Item* pSrcValue, 
   s1ap_CellsToActivateList_Item* pDstValue);

EXTERN int asn1Init_s1ap_CellsToActivateList_Item (
   s1ap_CellsToActivateList_Item* pvalue);

EXTERN void asn1Free_s1ap_CellsToActivateList_Item (OSCTXT *pctxt, 
   s1ap_CellsToActivateList_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CellsToActivateList                                       */
/*                                                            */
/**************************************************************/
/*
CellsToActivateList ::= SEQUENCE (SIZE (1..maxnoofCellineNB)) OF CellsToActivateList-Item
*/
/* List of s1ap_CellsToActivateList_Item */
typedef OSRTDList s1ap_CellsToActivateList;

EXTERN int asn1PE_s1ap_CellsToActivateList (OSCTXT* pctxt, s1ap_CellsToActivateList* pvalue);

EXTERN int asn1PD_s1ap_CellsToActivateList (OSCTXT* pctxt, s1ap_CellsToActivateList* pvalue);

EXTERN void asn1Print_s1ap_CellsToActivateList 
   (const char* name, const s1ap_CellsToActivateList* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellsToActivateList (const char* name, 
   s1ap_CellsToActivateList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellsToActivateList (OSCTXT *pctxt, 
   const char* name, const s1ap_CellsToActivateList* pvalue);

EXTERN void asn1Copy_s1ap_CellsToActivateList (OSCTXT* pctxt, 
   const s1ap_CellsToActivateList* pSrcValue, s1ap_CellsToActivateList*
    pDstValue);

EXTERN int asn1Init_s1ap_CellsToActivateList (s1ap_CellsToActivateList* pvalue);

EXTERN void asn1Free_s1ap_CellsToActivateList (OSCTXT *pctxt, 
   s1ap_CellsToActivateList* pvalue);

/**************************************************************/
/*                                                            */
/*  CellActivationRequest                                     */
/*                                                            */
/**************************************************************/
/*

 IEs for E-UTRAN Cell Activation application

CellActivationRequest ::= SEQUENCE {
   cellsToActivateList [0] CellsToActivateList,
   minimumActivationTime [1] INTEGER (1..60) OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_CellActivationRequest {
   struct {
      unsigned minimumActivationTimePresent : 1;
   } m;
   s1ap_CellsToActivateList cellsToActivateList;
   OSUINT8 minimumActivationTime;
   OSRTDList extElem1;
} s1ap_CellActivationRequest;

EXTERN int asn1PE_s1ap_CellActivationRequest (OSCTXT* pctxt, s1ap_CellActivationRequest* pvalue);

EXTERN int asn1PD_s1ap_CellActivationRequest (OSCTXT* pctxt, s1ap_CellActivationRequest* pvalue);

EXTERN void asn1Print_s1ap_CellActivationRequest 
   (const char* name, const s1ap_CellActivationRequest* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellActivationRequest (const char* name, 
   s1ap_CellActivationRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellActivationRequest (OSCTXT *pctxt, 
   const char* name, const s1ap_CellActivationRequest* pvalue);

EXTERN void asn1Copy_s1ap_CellActivationRequest (OSCTXT* pctxt, 
   const s1ap_CellActivationRequest* pSrcValue, s1ap_CellActivationRequest*
    pDstValue);

EXTERN int asn1Init_s1ap_CellActivationRequest (s1ap_CellActivationRequest* pvalue);

EXTERN void asn1Free_s1ap_CellActivationRequest (OSCTXT *pctxt, 
   s1ap_CellActivationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationCellList_Item                                 */
/*                                                            */
/**************************************************************/
/*
NotificationCellList-Item ::= SEQUENCE {
   cell-ID [0] OCTET STRING,
   notifyFlag [1] NotifyFlag,
   ...
}
*/
typedef struct EXTERN s1ap_NotificationCellList_Item {
   OSDynOctStr cell_ID;
   s1ap_NotifyFlag notifyFlag;
   OSRTDList extElem1;
} s1ap_NotificationCellList_Item;

EXTERN int asn1PE_s1ap_NotificationCellList_Item (OSCTXT* pctxt, s1ap_NotificationCellList_Item* pvalue);

EXTERN int asn1PD_s1ap_NotificationCellList_Item (OSCTXT* pctxt, s1ap_NotificationCellList_Item* pvalue);

EXTERN void asn1Print_s1ap_NotificationCellList_Item 
   (const char* name, const s1ap_NotificationCellList_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_NotificationCellList_Item (const char* name, 
   s1ap_NotificationCellList_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NotificationCellList_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_NotificationCellList_Item* pvalue);

EXTERN void asn1Copy_s1ap_NotificationCellList_Item (OSCTXT* pctxt, 
   const s1ap_NotificationCellList_Item* pSrcValue, 
   s1ap_NotificationCellList_Item* pDstValue);

EXTERN int asn1Init_s1ap_NotificationCellList_Item (
   s1ap_NotificationCellList_Item* pvalue);

EXTERN void asn1Free_s1ap_NotificationCellList_Item (OSCTXT *pctxt, 
   s1ap_NotificationCellList_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationCellList                                      */
/*                                                            */
/**************************************************************/
/*
NotificationCellList ::= SEQUENCE (SIZE (1..maxnoofCellineNB)) OF NotificationCellList-Item
*/
/* List of s1ap_NotificationCellList_Item */
typedef OSRTDList s1ap_NotificationCellList;

EXTERN int asn1PE_s1ap_NotificationCellList (OSCTXT* pctxt, s1ap_NotificationCellList* pvalue);

EXTERN int asn1PD_s1ap_NotificationCellList (OSCTXT* pctxt, s1ap_NotificationCellList* pvalue);

EXTERN void asn1Print_s1ap_NotificationCellList 
   (const char* name, const s1ap_NotificationCellList* pvalue);

EXTERN int asn1PrtToStr_s1ap_NotificationCellList (const char* name, 
   s1ap_NotificationCellList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_NotificationCellList (OSCTXT *pctxt, 
   const char* name, const s1ap_NotificationCellList* pvalue);

EXTERN void asn1Copy_s1ap_NotificationCellList (OSCTXT* pctxt, 
   const s1ap_NotificationCellList* pSrcValue, s1ap_NotificationCellList*
    pDstValue);

EXTERN int asn1Init_s1ap_NotificationCellList (s1ap_NotificationCellList* pvalue);

EXTERN void asn1Free_s1ap_NotificationCellList (OSCTXT *pctxt, 
   s1ap_NotificationCellList* pvalue);

/**************************************************************/
/*                                                            */
/*  CellStateIndication                                       */
/*                                                            */
/**************************************************************/
/*

 IEs for Energy Savings Indication application

CellStateIndication ::= SEQUENCE {
   notificationCellList [0] NotificationCellList,
   ...
}
*/
typedef struct EXTERN s1ap_CellStateIndication {
   s1ap_NotificationCellList notificationCellList;
   OSRTDList extElem1;
} s1ap_CellStateIndication;

EXTERN int asn1PE_s1ap_CellStateIndication (OSCTXT* pctxt, s1ap_CellStateIndication* pvalue);

EXTERN int asn1PD_s1ap_CellStateIndication (OSCTXT* pctxt, s1ap_CellStateIndication* pvalue);

EXTERN void asn1Print_s1ap_CellStateIndication 
   (const char* name, const s1ap_CellStateIndication* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellStateIndication (const char* name, 
   s1ap_CellStateIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellStateIndication (OSCTXT *pctxt, 
   const char* name, const s1ap_CellStateIndication* pvalue);

EXTERN void asn1Copy_s1ap_CellStateIndication (OSCTXT* pctxt, 
   const s1ap_CellStateIndication* pSrcValue, s1ap_CellStateIndication*
    pDstValue);

EXTERN int asn1Init_s1ap_CellStateIndication (s1ap_CellStateIndication* pvalue);

EXTERN void asn1Free_s1ap_CellStateIndication (OSCTXT *pctxt, 
   s1ap_CellStateIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  TooEarlyInterRATHOReportReportFromEUTRAN                  */
/*                                                            */
/**************************************************************/
/*
TooEarlyInterRATHOReportReportFromEUTRAN ::= SEQUENCE {
   uERLFReportContainer [0] OCTET STRING, -- as defined in TS 36.331 [16] 
   mobilityInformation [1] MobilityInformation OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_TooEarlyInterRATHOReportReportFromEUTRAN {
   struct {
      unsigned mobilityInformationPresent : 1;
   } m;
   OSDynOctStr uERLFReportContainer;
   s1ap_son_MobilityInformation mobilityInformation;
   OSRTDList extElem1;
} s1ap_TooEarlyInterRATHOReportReportFromEUTRAN;

EXTERN int asn1PE_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN (OSCTXT* pctxt, s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pvalue);

EXTERN int asn1PD_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN (OSCTXT* pctxt, s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pvalue);

EXTERN void asn1Print_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN 
   (const char* name, const s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pvalue);

EXTERN int asn1PrtToStr_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN (
   const char* name, s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN (OSCTXT *pctxt, 
   const char* name, const s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pvalue);

EXTERN void asn1Copy_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN (OSCTXT* pctxt, 
   const s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pSrcValue, 
   s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pDstValue);

EXTERN int asn1Init_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN (
   s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pvalue);

EXTERN void asn1Free_s1ap_TooEarlyInterRATHOReportReportFromEUTRAN (OSCTXT *pctxt, 
   s1ap_TooEarlyInterRATHOReportReportFromEUTRAN* pvalue);

/**************************************************************/
/*                                                            */
/*  FailureEventReport                                        */
/*                                                            */
/**************************************************************/
/*
FailureEventReport ::= CHOICE {
   tooEarlyInterRATHOReportFromEUTRAN [0] TooEarlyInterRATHOReportReportFromEUTRAN,
   ...
}
*/
/* Choice tag constants */

#define T_s1ap_FailureEventReport_tooEarlyInterRATHOReportFromEUTRAN 1
#define T_s1ap_FailureEventReport_extElem1 2

typedef struct EXTERN s1ap_FailureEventReport {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_TooEarlyInterRATHOReportReportFromEUTRAN *tooEarlyInterRATHOReportFromEUTRAN;
      /* t = 2 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_FailureEventReport;

EXTERN int asn1PE_s1ap_FailureEventReport (OSCTXT* pctxt, s1ap_FailureEventReport* pvalue);

EXTERN int asn1PD_s1ap_FailureEventReport (OSCTXT* pctxt, s1ap_FailureEventReport* pvalue);

EXTERN void asn1Print_s1ap_FailureEventReport 
   (const char* name, const s1ap_FailureEventReport* pvalue);

EXTERN int asn1PrtToStr_s1ap_FailureEventReport (const char* name, 
   s1ap_FailureEventReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_FailureEventReport (OSCTXT *pctxt, 
   const char* name, const s1ap_FailureEventReport* pvalue);

EXTERN void asn1Copy_s1ap_FailureEventReport (OSCTXT* pctxt, 
   const s1ap_FailureEventReport* pSrcValue, s1ap_FailureEventReport*
    pDstValue);

EXTERN int asn1Init_s1ap_FailureEventReport (s1ap_FailureEventReport* pvalue);

EXTERN void asn1Free_s1ap_FailureEventReport (OSCTXT *pctxt, 
   s1ap_FailureEventReport* pvalue);

/**************************************************************/
/*                                                            */
/*  SONtransferRequestContainer                               */
/*                                                            */
/**************************************************************/
/*
SONtransferRequestContainer ::= CHOICE {
   cellLoadReporting [0] NULL,
   ...,
   multiCellLoadReporting [1] MultiCellLoadReportingRequest,
   eventTriggeredCellLoadReporting [2] EventTriggeredCellLoadReportingRequest,
   hOReporting [3] HOReport,
   eutranCellActivation [4] CellActivationRequest,
   energySavingsIndication [5] CellStateIndication,
   failureEventReporting [6] EXPLICIT FailureEventReport
}
*/
/* Choice tag constants */

#define T_s1ap_SONtransferRequestContainer_cellLoadReporting 1
#define T_s1ap_SONtransferRequestContainer_multiCellLoadReporting 2
#define T_s1ap_SONtransferRequestContainer_eventTriggeredCellLoadReporting 3
#define T_s1ap_SONtransferRequestContainer_hOReporting 4
#define T_s1ap_SONtransferRequestContainer_eutranCellActivation 5
#define T_s1ap_SONtransferRequestContainer_energySavingsIndication 6
#define T_s1ap_SONtransferRequestContainer_failureEventReporting 7
#define T_s1ap_SONtransferRequestContainer_extElem1 8

typedef struct EXTERN s1ap_SONtransferRequestContainer {
   OSINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      s1ap_MultiCellLoadReportingRequest *multiCellLoadReporting;
      /* t = 3 */
      s1ap_EventTriggeredCellLoadReportingRequest *eventTriggeredCellLoadReporting;
      /* t = 4 */
      s1ap_HOReport *hOReporting;
      /* t = 5 */
      s1ap_CellActivationRequest *eutranCellActivation;
      /* t = 6 */
      s1ap_CellStateIndication *energySavingsIndication;
      /* t = 7 */
      s1ap_FailureEventReport *failureEventReporting;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_SONtransferRequestContainer;

EXTERN int asn1PE_s1ap_SONtransferRequestContainer (OSCTXT* pctxt, s1ap_SONtransferRequestContainer* pvalue);

EXTERN int asn1PD_s1ap_SONtransferRequestContainer (OSCTXT* pctxt, s1ap_SONtransferRequestContainer* pvalue);

EXTERN void asn1Print_s1ap_SONtransferRequestContainer 
   (const char* name, const s1ap_SONtransferRequestContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONtransferRequestContainer (const char* name, 
   s1ap_SONtransferRequestContainer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONtransferRequestContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_SONtransferRequestContainer* pvalue);

EXTERN void asn1Copy_s1ap_SONtransferRequestContainer (OSCTXT* pctxt, 
   const s1ap_SONtransferRequestContainer* pSrcValue, 
   s1ap_SONtransferRequestContainer* pDstValue);

EXTERN int asn1Init_s1ap_SONtransferRequestContainer (
   s1ap_SONtransferRequestContainer* pvalue);

EXTERN void asn1Free_s1ap_SONtransferRequestContainer (OSCTXT *pctxt, 
   s1ap_SONtransferRequestContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRANcellLoadReportingResponse                           */
/*                                                            */
/**************************************************************/
/*
EUTRANcellLoadReportingResponse ::= SEQUENCE {
   compositeAvailableCapacityGroup [0] CompositeAvailableCapacityGroup,
   ...
}
*/
typedef struct EXTERN s1ap_EUTRANcellLoadReportingResponse {
   s1ap_CompositeAvailableCapacityGroup compositeAvailableCapacityGroup;
   OSRTDList extElem1;
} s1ap_EUTRANcellLoadReportingResponse;

EXTERN int asn1PE_s1ap_EUTRANcellLoadReportingResponse (OSCTXT* pctxt, s1ap_EUTRANcellLoadReportingResponse* pvalue);

EXTERN int asn1PD_s1ap_EUTRANcellLoadReportingResponse (OSCTXT* pctxt, s1ap_EUTRANcellLoadReportingResponse* pvalue);

EXTERN void asn1Print_s1ap_EUTRANcellLoadReportingResponse 
   (const char* name, const s1ap_EUTRANcellLoadReportingResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_EUTRANcellLoadReportingResponse (const char* name, 
   s1ap_EUTRANcellLoadReportingResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EUTRANcellLoadReportingResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_EUTRANcellLoadReportingResponse* pvalue);

EXTERN void asn1Copy_s1ap_EUTRANcellLoadReportingResponse (OSCTXT* pctxt, 
   const s1ap_EUTRANcellLoadReportingResponse* pSrcValue, 
   s1ap_EUTRANcellLoadReportingResponse* pDstValue);

EXTERN int asn1Init_s1ap_EUTRANcellLoadReportingResponse (
   s1ap_EUTRANcellLoadReportingResponse* pvalue);

EXTERN void asn1Free_s1ap_EUTRANcellLoadReportingResponse (OSCTXT *pctxt, 
   s1ap_EUTRANcellLoadReportingResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  EHRPDCompositeAvailableCapacity                           */
/*                                                            */
/**************************************************************/
/*
EHRPDCompositeAvailableCapacity ::= SEQUENCE {
   eHRPDSectorCapacityClassValue [0] EHRPDSectorCapacityClassValue,
   eHRPDCapacityValue [1] EHRPDCapacityValue,
   ...
}
*/
typedef struct EXTERN s1ap_EHRPDCompositeAvailableCapacity {
   s1ap_EHRPDSectorCapacityClassValue eHRPDSectorCapacityClassValue;
   s1ap_EHRPDCapacityValue eHRPDCapacityValue;
   OSRTDList extElem1;
} s1ap_EHRPDCompositeAvailableCapacity;

EXTERN int asn1PE_s1ap_EHRPDCompositeAvailableCapacity (OSCTXT* pctxt, s1ap_EHRPDCompositeAvailableCapacity* pvalue);

EXTERN int asn1PD_s1ap_EHRPDCompositeAvailableCapacity (OSCTXT* pctxt, s1ap_EHRPDCompositeAvailableCapacity* pvalue);

EXTERN void asn1Print_s1ap_EHRPDCompositeAvailableCapacity 
   (const char* name, const s1ap_EHRPDCompositeAvailableCapacity* pvalue);

EXTERN int asn1PrtToStr_s1ap_EHRPDCompositeAvailableCapacity (const char* name, 
   s1ap_EHRPDCompositeAvailableCapacity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EHRPDCompositeAvailableCapacity (OSCTXT *pctxt, 
   const char* name, const s1ap_EHRPDCompositeAvailableCapacity* pvalue);

EXTERN void asn1Copy_s1ap_EHRPDCompositeAvailableCapacity (OSCTXT* pctxt, 
   const s1ap_EHRPDCompositeAvailableCapacity* pSrcValue, 
   s1ap_EHRPDCompositeAvailableCapacity* pDstValue);

EXTERN int asn1Init_s1ap_EHRPDCompositeAvailableCapacity (
   s1ap_EHRPDCompositeAvailableCapacity* pvalue);

EXTERN void asn1Free_s1ap_EHRPDCompositeAvailableCapacity (OSCTXT *pctxt, 
   s1ap_EHRPDCompositeAvailableCapacity* pvalue);

/**************************************************************/
/*                                                            */
/*  EHRPDSectorLoadReportingResponse                          */
/*                                                            */
/**************************************************************/
/*
EHRPDSectorLoadReportingResponse ::= SEQUENCE {
   dL-EHRPD-CompositeAvailableCapacity [0] EHRPDCompositeAvailableCapacity,
   uL-EHRPD-CompositeAvailableCapacity [1] EHRPDCompositeAvailableCapacity,
   ...
}
*/
typedef struct EXTERN s1ap_EHRPDSectorLoadReportingResponse {
   s1ap_EHRPDCompositeAvailableCapacity dL_EHRPD_CompositeAvailableCapacity;
   s1ap_EHRPDCompositeAvailableCapacity uL_EHRPD_CompositeAvailableCapacity;
   OSRTDList extElem1;
} s1ap_EHRPDSectorLoadReportingResponse;

EXTERN int asn1PE_s1ap_EHRPDSectorLoadReportingResponse (OSCTXT* pctxt, s1ap_EHRPDSectorLoadReportingResponse* pvalue);

EXTERN int asn1PD_s1ap_EHRPDSectorLoadReportingResponse (OSCTXT* pctxt, s1ap_EHRPDSectorLoadReportingResponse* pvalue);

EXTERN void asn1Print_s1ap_EHRPDSectorLoadReportingResponse 
   (const char* name, const s1ap_EHRPDSectorLoadReportingResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_EHRPDSectorLoadReportingResponse (const char* name, 
   s1ap_EHRPDSectorLoadReportingResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EHRPDSectorLoadReportingResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_EHRPDSectorLoadReportingResponse* pvalue);

EXTERN void asn1Copy_s1ap_EHRPDSectorLoadReportingResponse (OSCTXT* pctxt, 
   const s1ap_EHRPDSectorLoadReportingResponse* pSrcValue, 
   s1ap_EHRPDSectorLoadReportingResponse* pDstValue);

EXTERN int asn1Init_s1ap_EHRPDSectorLoadReportingResponse (
   s1ap_EHRPDSectorLoadReportingResponse* pvalue);

EXTERN void asn1Free_s1ap_EHRPDSectorLoadReportingResponse (OSCTXT *pctxt, 
   s1ap_EHRPDSectorLoadReportingResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  CellLoadReportingResponse                                 */
/*                                                            */
/**************************************************************/
/*

 IEs for Cell Load Reporting application

CellLoadReportingResponse ::= CHOICE {
   eUTRAN [0] EUTRANcellLoadReportingResponse,
   uTRAN [1] OCTET STRING,
   gERAN [2] OCTET STRING,
   ...,
   eHRPD [3] EHRPDSectorLoadReportingResponse
}
*/
/* Choice tag constants */

#define T_s1ap_CellLoadReportingResponse_eUTRAN 1
#define T_s1ap_CellLoadReportingResponse_uTRAN 2
#define T_s1ap_CellLoadReportingResponse_gERAN 3
#define T_s1ap_CellLoadReportingResponse_eHRPD 4
#define T_s1ap_CellLoadReportingResponse_extElem1 5

typedef struct EXTERN s1ap_CellLoadReportingResponse {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_EUTRANcellLoadReportingResponse *eUTRAN;
      /* t = 2 */
      OSDynOctStr *uTRAN;
      /* t = 3 */
      OSDynOctStr *gERAN;
      /* t = 4 */
      s1ap_EHRPDSectorLoadReportingResponse *eHRPD;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_CellLoadReportingResponse;

EXTERN int asn1PE_s1ap_CellLoadReportingResponse (OSCTXT* pctxt, s1ap_CellLoadReportingResponse* pvalue);

EXTERN int asn1PD_s1ap_CellLoadReportingResponse (OSCTXT* pctxt, s1ap_CellLoadReportingResponse* pvalue);

EXTERN void asn1Print_s1ap_CellLoadReportingResponse 
   (const char* name, const s1ap_CellLoadReportingResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellLoadReportingResponse (const char* name, 
   s1ap_CellLoadReportingResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellLoadReportingResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_CellLoadReportingResponse* pvalue);

EXTERN void asn1Copy_s1ap_CellLoadReportingResponse (OSCTXT* pctxt, 
   const s1ap_CellLoadReportingResponse* pSrcValue, 
   s1ap_CellLoadReportingResponse* pDstValue);

EXTERN int asn1Init_s1ap_CellLoadReportingResponse (
   s1ap_CellLoadReportingResponse* pvalue);

EXTERN void asn1Free_s1ap_CellLoadReportingResponse (OSCTXT *pctxt, 
   s1ap_CellLoadReportingResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRANResponse                                            */
/*                                                            */
/**************************************************************/
/*

 IEs for Multi-Cell Load Reporting application

EUTRANResponse ::= SEQUENCE {
   cell-ID [0] OCTET STRING,
   eUTRANcellLoadReportingResponse [1] EUTRANcellLoadReportingResponse,
   ...
}
*/
typedef struct EXTERN s1ap_EUTRANResponse {
   OSDynOctStr cell_ID;
   s1ap_EUTRANcellLoadReportingResponse eUTRANcellLoadReportingResponse;
   OSRTDList extElem1;
} s1ap_EUTRANResponse;

EXTERN int asn1PE_s1ap_EUTRANResponse (OSCTXT* pctxt, s1ap_EUTRANResponse* pvalue);

EXTERN int asn1PD_s1ap_EUTRANResponse (OSCTXT* pctxt, s1ap_EUTRANResponse* pvalue);

EXTERN void asn1Print_s1ap_EUTRANResponse 
   (const char* name, const s1ap_EUTRANResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_EUTRANResponse (const char* name, 
   s1ap_EUTRANResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EUTRANResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_EUTRANResponse* pvalue);

EXTERN void asn1Copy_s1ap_EUTRANResponse (OSCTXT* pctxt, 
   const s1ap_EUTRANResponse* pSrcValue, s1ap_EUTRANResponse* pDstValue);

EXTERN int asn1Init_s1ap_EUTRANResponse (s1ap_EUTRANResponse* pvalue);

EXTERN void asn1Free_s1ap_EUTRANResponse (OSCTXT *pctxt, s1ap_EUTRANResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  EHRPDMultiSectorLoadReportingResponseItem                 */
/*                                                            */
/**************************************************************/
/*
EHRPDMultiSectorLoadReportingResponseItem ::= SEQUENCE {
   eHRPD-Sector-ID [0] EHRPD-Sector-ID,
   eHRPDSectorLoadReportingResponse [1] EHRPDSectorLoadReportingResponse,
   ...
}
*/
typedef struct EXTERN s1ap_EHRPDMultiSectorLoadReportingResponseItem {
   s1ap_EHRPD_Sector_ID eHRPD_Sector_ID;
   s1ap_EHRPDSectorLoadReportingResponse eHRPDSectorLoadReportingResponse;
   OSRTDList extElem1;
} s1ap_EHRPDMultiSectorLoadReportingResponseItem;

EXTERN int asn1PE_s1ap_EHRPDMultiSectorLoadReportingResponseItem (OSCTXT* pctxt, s1ap_EHRPDMultiSectorLoadReportingResponseItem* pvalue);

EXTERN int asn1PD_s1ap_EHRPDMultiSectorLoadReportingResponseItem (OSCTXT* pctxt, s1ap_EHRPDMultiSectorLoadReportingResponseItem* pvalue);

EXTERN void asn1Print_s1ap_EHRPDMultiSectorLoadReportingResponseItem 
   (const char* name, const s1ap_EHRPDMultiSectorLoadReportingResponseItem* pvalue);

EXTERN int asn1PrtToStr_s1ap_EHRPDMultiSectorLoadReportingResponseItem (
   const char* name, s1ap_EHRPDMultiSectorLoadReportingResponseItem* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EHRPDMultiSectorLoadReportingResponseItem (OSCTXT *pctxt, 
   const char* name, const s1ap_EHRPDMultiSectorLoadReportingResponseItem* pvalue);

EXTERN void asn1Copy_s1ap_EHRPDMultiSectorLoadReportingResponseItem (OSCTXT* pctxt, 
   const s1ap_EHRPDMultiSectorLoadReportingResponseItem* pSrcValue, 
   s1ap_EHRPDMultiSectorLoadReportingResponseItem* pDstValue);

EXTERN int asn1Init_s1ap_EHRPDMultiSectorLoadReportingResponseItem (
   s1ap_EHRPDMultiSectorLoadReportingResponseItem* pvalue);

EXTERN void asn1Free_s1ap_EHRPDMultiSectorLoadReportingResponseItem (OSCTXT *pctxt, 
   s1ap_EHRPDMultiSectorLoadReportingResponseItem* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiCellLoadReportingResponse_Item                       */
/*                                                            */
/**************************************************************/
/*
MultiCellLoadReportingResponse-Item ::= CHOICE {
   eUTRANResponse [0] EUTRANResponse,
   uTRANResponse [1] OCTET STRING,
   gERANResponse [2] OCTET STRING,
   ...,
   eHRPD [3] EHRPDMultiSectorLoadReportingResponseItem
}
*/
/* Choice tag constants */

#define T_s1ap_MultiCellLoadReportingResponse_Item_eUTRANResponse 1
#define T_s1ap_MultiCellLoadReportingResponse_Item_uTRANResponse 2
#define T_s1ap_MultiCellLoadReportingResponse_Item_gERANResponse 3
#define T_s1ap_MultiCellLoadReportingResponse_Item_eHRPD 4
#define T_s1ap_MultiCellLoadReportingResponse_Item_extElem1 5

typedef struct EXTERN s1ap_MultiCellLoadReportingResponse_Item {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_EUTRANResponse *eUTRANResponse;
      /* t = 2 */
      OSDynOctStr *uTRANResponse;
      /* t = 3 */
      OSDynOctStr *gERANResponse;
      /* t = 4 */
      s1ap_EHRPDMultiSectorLoadReportingResponseItem *eHRPD;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_MultiCellLoadReportingResponse_Item;

EXTERN int asn1PE_s1ap_MultiCellLoadReportingResponse_Item (OSCTXT* pctxt, s1ap_MultiCellLoadReportingResponse_Item* pvalue);

EXTERN int asn1PD_s1ap_MultiCellLoadReportingResponse_Item (OSCTXT* pctxt, s1ap_MultiCellLoadReportingResponse_Item* pvalue);

EXTERN void asn1Print_s1ap_MultiCellLoadReportingResponse_Item 
   (const char* name, const s1ap_MultiCellLoadReportingResponse_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_MultiCellLoadReportingResponse_Item (const char* name, 
   s1ap_MultiCellLoadReportingResponse_Item* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MultiCellLoadReportingResponse_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_MultiCellLoadReportingResponse_Item* pvalue);

EXTERN void asn1Copy_s1ap_MultiCellLoadReportingResponse_Item (OSCTXT* pctxt, 
   const s1ap_MultiCellLoadReportingResponse_Item* pSrcValue, 
   s1ap_MultiCellLoadReportingResponse_Item* pDstValue);

EXTERN int asn1Init_s1ap_MultiCellLoadReportingResponse_Item (
   s1ap_MultiCellLoadReportingResponse_Item* pvalue);

EXTERN void asn1Free_s1ap_MultiCellLoadReportingResponse_Item (OSCTXT *pctxt, 
   s1ap_MultiCellLoadReportingResponse_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiCellLoadReportingResponse                            */
/*                                                            */
/**************************************************************/
/*
MultiCellLoadReportingResponse ::= SEQUENCE (SIZE (1..maxnoofIRATReportingCells)) OF MultiCellLoadReportingResponse-Item
*/
/* List of s1ap_MultiCellLoadReportingResponse_Item */
typedef OSRTDList s1ap_MultiCellLoadReportingResponse;

EXTERN int asn1PE_s1ap_MultiCellLoadReportingResponse (OSCTXT* pctxt, s1ap_MultiCellLoadReportingResponse* pvalue);

EXTERN int asn1PD_s1ap_MultiCellLoadReportingResponse (OSCTXT* pctxt, s1ap_MultiCellLoadReportingResponse* pvalue);

EXTERN void asn1Print_s1ap_MultiCellLoadReportingResponse 
   (const char* name, const s1ap_MultiCellLoadReportingResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_MultiCellLoadReportingResponse (const char* name, 
   s1ap_MultiCellLoadReportingResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_MultiCellLoadReportingResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_MultiCellLoadReportingResponse* pvalue);

EXTERN void asn1Copy_s1ap_MultiCellLoadReportingResponse (OSCTXT* pctxt, 
   const s1ap_MultiCellLoadReportingResponse* pSrcValue, 
   s1ap_MultiCellLoadReportingResponse* pDstValue);

EXTERN int asn1Init_s1ap_MultiCellLoadReportingResponse (
   s1ap_MultiCellLoadReportingResponse* pvalue);

EXTERN void asn1Free_s1ap_MultiCellLoadReportingResponse (OSCTXT *pctxt, 
   s1ap_MultiCellLoadReportingResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  EventTriggeredCellLoadReportingResponse                   */
/*                                                            */
/**************************************************************/
/*
EventTriggeredCellLoadReportingResponse ::= SEQUENCE {
   cellLoadReportingResponse [0] EXPLICIT CellLoadReportingResponse,
   overloadFlag [1] OverloadFlag OPTIONAL,
   ...
}
*/
typedef struct EXTERN s1ap_EventTriggeredCellLoadReportingResponse {
   struct {
      unsigned overloadFlagPresent : 1;
   } m;
   s1ap_CellLoadReportingResponse cellLoadReportingResponse;
   s1ap_OverloadFlag overloadFlag;
   OSRTDList extElem1;
} s1ap_EventTriggeredCellLoadReportingResponse;

EXTERN int asn1PE_s1ap_EventTriggeredCellLoadReportingResponse (OSCTXT* pctxt, s1ap_EventTriggeredCellLoadReportingResponse* pvalue);

EXTERN int asn1PD_s1ap_EventTriggeredCellLoadReportingResponse (OSCTXT* pctxt, s1ap_EventTriggeredCellLoadReportingResponse* pvalue);

EXTERN void asn1Print_s1ap_EventTriggeredCellLoadReportingResponse 
   (const char* name, const s1ap_EventTriggeredCellLoadReportingResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_EventTriggeredCellLoadReportingResponse (
   const char* name, s1ap_EventTriggeredCellLoadReportingResponse* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_EventTriggeredCellLoadReportingResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_EventTriggeredCellLoadReportingResponse* pvalue);

EXTERN void asn1Copy_s1ap_EventTriggeredCellLoadReportingResponse (OSCTXT* pctxt, 
   const s1ap_EventTriggeredCellLoadReportingResponse* pSrcValue, 
   s1ap_EventTriggeredCellLoadReportingResponse* pDstValue);

EXTERN int asn1Init_s1ap_EventTriggeredCellLoadReportingResponse (
   s1ap_EventTriggeredCellLoadReportingResponse* pvalue);

EXTERN void asn1Free_s1ap_EventTriggeredCellLoadReportingResponse (OSCTXT *pctxt, 
   s1ap_EventTriggeredCellLoadReportingResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  ActivatedCellsList_Item                                   */
/*                                                            */
/**************************************************************/
/*
ActivatedCellsList-Item ::= SEQUENCE {
   cell-ID [0] OCTET STRING,
   ...
}
*/
typedef struct EXTERN s1ap_ActivatedCellsList_Item {
   OSDynOctStr cell_ID;
   OSRTDList extElem1;
} s1ap_ActivatedCellsList_Item;

EXTERN int asn1PE_s1ap_ActivatedCellsList_Item (OSCTXT* pctxt, s1ap_ActivatedCellsList_Item* pvalue);

EXTERN int asn1PD_s1ap_ActivatedCellsList_Item (OSCTXT* pctxt, s1ap_ActivatedCellsList_Item* pvalue);

EXTERN void asn1Print_s1ap_ActivatedCellsList_Item 
   (const char* name, const s1ap_ActivatedCellsList_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_ActivatedCellsList_Item (const char* name, 
   s1ap_ActivatedCellsList_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ActivatedCellsList_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_ActivatedCellsList_Item* pvalue);

EXTERN void asn1Copy_s1ap_ActivatedCellsList_Item (OSCTXT* pctxt, 
   const s1ap_ActivatedCellsList_Item* pSrcValue, s1ap_ActivatedCellsList_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_ActivatedCellsList_Item (
   s1ap_ActivatedCellsList_Item* pvalue);

EXTERN void asn1Free_s1ap_ActivatedCellsList_Item (OSCTXT *pctxt, 
   s1ap_ActivatedCellsList_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ActivatedCellsList                                        */
/*                                                            */
/**************************************************************/
/*
ActivatedCellsList ::= SEQUENCE (SIZE (0..maxnoofCellineNB)) OF ActivatedCellsList-Item
*/
/* List of s1ap_ActivatedCellsList_Item */
typedef OSRTDList s1ap_ActivatedCellsList;

EXTERN int asn1PE_s1ap_ActivatedCellsList (OSCTXT* pctxt, s1ap_ActivatedCellsList* pvalue);

EXTERN int asn1PD_s1ap_ActivatedCellsList (OSCTXT* pctxt, s1ap_ActivatedCellsList* pvalue);

EXTERN void asn1Print_s1ap_ActivatedCellsList 
   (const char* name, const s1ap_ActivatedCellsList* pvalue);

EXTERN int asn1PrtToStr_s1ap_ActivatedCellsList (const char* name, 
   s1ap_ActivatedCellsList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ActivatedCellsList (OSCTXT *pctxt, 
   const char* name, const s1ap_ActivatedCellsList* pvalue);

EXTERN void asn1Copy_s1ap_ActivatedCellsList (OSCTXT* pctxt, 
   const s1ap_ActivatedCellsList* pSrcValue, s1ap_ActivatedCellsList*
    pDstValue);

EXTERN int asn1Init_s1ap_ActivatedCellsList (s1ap_ActivatedCellsList* pvalue);

EXTERN void asn1Free_s1ap_ActivatedCellsList (OSCTXT *pctxt, 
   s1ap_ActivatedCellsList* pvalue);

/**************************************************************/
/*                                                            */
/*  CellActivationResponse                                    */
/*                                                            */
/**************************************************************/
/*
CellActivationResponse ::= SEQUENCE {
   activatedCellsList [0] ActivatedCellsList,
   ...
}
*/
typedef struct EXTERN s1ap_CellActivationResponse {
   s1ap_ActivatedCellsList activatedCellsList;
   OSRTDList extElem1;
} s1ap_CellActivationResponse;

EXTERN int asn1PE_s1ap_CellActivationResponse (OSCTXT* pctxt, s1ap_CellActivationResponse* pvalue);

EXTERN int asn1PD_s1ap_CellActivationResponse (OSCTXT* pctxt, s1ap_CellActivationResponse* pvalue);

EXTERN void asn1Print_s1ap_CellActivationResponse 
   (const char* name, const s1ap_CellActivationResponse* pvalue);

EXTERN int asn1PrtToStr_s1ap_CellActivationResponse (const char* name, 
   s1ap_CellActivationResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_CellActivationResponse (OSCTXT *pctxt, 
   const char* name, const s1ap_CellActivationResponse* pvalue);

EXTERN void asn1Copy_s1ap_CellActivationResponse (OSCTXT* pctxt, 
   const s1ap_CellActivationResponse* pSrcValue, s1ap_CellActivationResponse*
    pDstValue);

EXTERN int asn1Init_s1ap_CellActivationResponse (s1ap_CellActivationResponse* pvalue);

EXTERN void asn1Free_s1ap_CellActivationResponse (OSCTXT *pctxt, 
   s1ap_CellActivationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  SONtransferResponseContainer                              */
/*                                                            */
/**************************************************************/
/*
SONtransferResponseContainer ::= CHOICE {
   cellLoadReporting [0] EXPLICIT CellLoadReportingResponse,
   ...,
   multiCellLoadReporting [1] MultiCellLoadReportingResponse,
   eventTriggeredCellLoadReporting [2] EventTriggeredCellLoadReportingResponse,
   hOReporting [3] NULL,
   eutranCellActivation [4] CellActivationResponse,
   energySavingsIndication [5] NULL,
   failureEventReporting [6] NULL
}
*/
/* Choice tag constants */

#define T_s1ap_SONtransferResponseContainer_cellLoadReporting 1
#define T_s1ap_SONtransferResponseContainer_multiCellLoadReporting 2
#define T_s1ap_SONtransferResponseContainer_eventTriggeredCellLoadReporting 3
#define T_s1ap_SONtransferResponseContainer_hOReporting 4
#define T_s1ap_SONtransferResponseContainer_eutranCellActivation 5
#define T_s1ap_SONtransferResponseContainer_energySavingsIndication 6
#define T_s1ap_SONtransferResponseContainer_failureEventReporting 7
#define T_s1ap_SONtransferResponseContainer_extElem1 8

typedef struct EXTERN s1ap_SONtransferResponseContainer {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_CellLoadReportingResponse *cellLoadReporting;
      /* t = 2 */
      s1ap_MultiCellLoadReportingResponse *multiCellLoadReporting;
      /* t = 3 */
      s1ap_EventTriggeredCellLoadReportingResponse *eventTriggeredCellLoadReporting;
      /* t = 4 */
      /* t = 5 */
      s1ap_CellActivationResponse *eutranCellActivation;
      /* t = 6 */
      /* t = 7 */
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_SONtransferResponseContainer;

EXTERN int asn1PE_s1ap_SONtransferResponseContainer (OSCTXT* pctxt, s1ap_SONtransferResponseContainer* pvalue);

EXTERN int asn1PD_s1ap_SONtransferResponseContainer (OSCTXT* pctxt, s1ap_SONtransferResponseContainer* pvalue);

EXTERN void asn1Print_s1ap_SONtransferResponseContainer 
   (const char* name, const s1ap_SONtransferResponseContainer* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONtransferResponseContainer (const char* name, 
   s1ap_SONtransferResponseContainer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONtransferResponseContainer (OSCTXT *pctxt, 
   const char* name, const s1ap_SONtransferResponseContainer* pvalue);

EXTERN void asn1Copy_s1ap_SONtransferResponseContainer (OSCTXT* pctxt, 
   const s1ap_SONtransferResponseContainer* pSrcValue, 
   s1ap_SONtransferResponseContainer* pDstValue);

EXTERN int asn1Init_s1ap_SONtransferResponseContainer (
   s1ap_SONtransferResponseContainer* pvalue);

EXTERN void asn1Free_s1ap_SONtransferResponseContainer (OSCTXT *pctxt, 
   s1ap_SONtransferResponseContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SONtransferCause                                          */
/*                                                            */
/**************************************************************/
/*
SONtransferCause ::= CHOICE {
   cellLoadReporting [0] CellLoadReportingCause,
   ...,
   multiCellLoadReporting [1] CellLoadReportingCause,
   eventTriggeredCellLoadReporting [2] CellLoadReportingCause,
   hOReporting [3] HOReportingCause,
   eutranCellActivation [4] CellActivationCause,
   energySavingsIndication [5] CellStateIndicationCause,
   failureEventReporting [6] FailureEventReportingCause
}
*/
/* Choice tag constants */

#define T_s1ap_SONtransferCause_cellLoadReporting 1
#define T_s1ap_SONtransferCause_multiCellLoadReporting 2
#define T_s1ap_SONtransferCause_eventTriggeredCellLoadReporting 3
#define T_s1ap_SONtransferCause_hOReporting 4
#define T_s1ap_SONtransferCause_eutranCellActivation 5
#define T_s1ap_SONtransferCause_energySavingsIndication 6
#define T_s1ap_SONtransferCause_failureEventReporting 7
#define T_s1ap_SONtransferCause_extElem1 8

typedef struct EXTERN s1ap_SONtransferCause {
   OSINT32 t;
   union {
      /* t = 1 */
      s1ap_CellLoadReportingCause cellLoadReporting;
      /* t = 2 */
      s1ap_CellLoadReportingCause multiCellLoadReporting;
      /* t = 3 */
      s1ap_CellLoadReportingCause eventTriggeredCellLoadReporting;
      /* t = 4 */
      s1ap_HOReportingCause hOReporting;
      /* t = 5 */
      s1ap_CellActivationCause eutranCellActivation;
      /* t = 6 */
      s1ap_CellStateIndicationCause energySavingsIndication;
      /* t = 7 */
      s1ap_FailureEventReportingCause failureEventReporting;
      /* t = 8 */
      ASN1OpenType *extElem1;
   } u;
} s1ap_SONtransferCause;

EXTERN int asn1PE_s1ap_SONtransferCause (OSCTXT* pctxt, s1ap_SONtransferCause* pvalue);

EXTERN int asn1PD_s1ap_SONtransferCause (OSCTXT* pctxt, s1ap_SONtransferCause* pvalue);

EXTERN void asn1Print_s1ap_SONtransferCause 
   (const char* name, const s1ap_SONtransferCause* pvalue);

EXTERN int asn1PrtToStr_s1ap_SONtransferCause (const char* name, 
   s1ap_SONtransferCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_SONtransferCause (OSCTXT *pctxt, 
   const char* name, const s1ap_SONtransferCause* pvalue);

EXTERN void asn1Copy_s1ap_SONtransferCause (OSCTXT* pctxt, 
   const s1ap_SONtransferCause* pSrcValue, s1ap_SONtransferCause* pDstValue);

EXTERN int asn1Init_s1ap_SONtransferCause (s1ap_SONtransferCause* pvalue);

EXTERN void asn1Free_s1ap_SONtransferCause (OSCTXT *pctxt, 
   s1ap_SONtransferCause* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportingCellList_Item                                    */
/*                                                            */
/**************************************************************/
/*
ReportingCellList-Item ::= SEQUENCE {
   cell-ID [0] EXPLICIT IRAT-Cell-ID,
   ...
}
*/
typedef struct EXTERN s1ap_ReportingCellList_Item {
   s1ap_IRAT_Cell_ID cell_ID;
   OSRTDList extElem1;
} s1ap_ReportingCellList_Item;

EXTERN int asn1PE_s1ap_ReportingCellList_Item (OSCTXT* pctxt, s1ap_ReportingCellList_Item* pvalue);

EXTERN int asn1PD_s1ap_ReportingCellList_Item (OSCTXT* pctxt, s1ap_ReportingCellList_Item* pvalue);

EXTERN void asn1Print_s1ap_ReportingCellList_Item 
   (const char* name, const s1ap_ReportingCellList_Item* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReportingCellList_Item (const char* name, 
   s1ap_ReportingCellList_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReportingCellList_Item (OSCTXT *pctxt, 
   const char* name, const s1ap_ReportingCellList_Item* pvalue);

EXTERN void asn1Copy_s1ap_ReportingCellList_Item (OSCTXT* pctxt, 
   const s1ap_ReportingCellList_Item* pSrcValue, s1ap_ReportingCellList_Item*
    pDstValue);

EXTERN int asn1Init_s1ap_ReportingCellList_Item (s1ap_ReportingCellList_Item* pvalue);

EXTERN void asn1Free_s1ap_ReportingCellList_Item (OSCTXT *pctxt, 
   s1ap_ReportingCellList_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportingCellList                                         */
/*                                                            */
/**************************************************************/
/*
ReportingCellList ::= SEQUENCE (SIZE (1..maxnoofIRATReportingCells)) OF ReportingCellList-Item
*/
/* List of s1ap_ReportingCellList_Item */
typedef OSRTDList s1ap_ReportingCellList;

EXTERN int asn1PE_s1ap_ReportingCellList (OSCTXT* pctxt, s1ap_ReportingCellList* pvalue);

EXTERN int asn1PD_s1ap_ReportingCellList (OSCTXT* pctxt, s1ap_ReportingCellList* pvalue);

EXTERN void asn1Print_s1ap_ReportingCellList 
   (const char* name, const s1ap_ReportingCellList* pvalue);

EXTERN int asn1PrtToStr_s1ap_ReportingCellList (const char* name, 
   s1ap_ReportingCellList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_s1ap_ReportingCellList (OSCTXT *pctxt, 
   const char* name, const s1ap_ReportingCellList* pvalue);

EXTERN void asn1Copy_s1ap_ReportingCellList (OSCTXT* pctxt, 
   const s1ap_ReportingCellList* pSrcValue, s1ap_ReportingCellList* pDstValue);

EXTERN int asn1Init_s1ap_ReportingCellList (s1ap_ReportingCellList* pvalue);

EXTERN void asn1Free_s1ap_ReportingCellList (OSCTXT *pctxt, 
   s1ap_ReportingCellList* pvalue);

/* Value definitions */

#define ASN1V_s1ap_maxnoofIRATReportingCells 128
#define ASN1V_s1ap_maxnoofcandidateCells 16
#define ASN1V_s1ap_maxnoofCellineNB 256

#ifdef __cplusplus
}
#endif

#endif
