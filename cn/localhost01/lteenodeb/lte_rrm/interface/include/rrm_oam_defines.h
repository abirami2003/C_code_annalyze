
/*! \file     rrm_oam_defines.h
 *  \brief    This file contains the rrm's hash defines and enum types declaration required for OAM APIs
 *  \date     31 Jan 2012/18 May 2012
 *  \author   Aricent/gur30784
 *            Initial/Changed RRM_MAX_NUM_INT_MODULES from 10 to 3
 */
/*!
 *  \copyright {Copyright (c) 2009, Aricent Inc. All Rights Reserved}
 *
 * Revision Details
 * ----------------
 *
 * DATE         AUTHOR          REFERENCE              REASON
 * 2014/07/05   gur29990        SPR-10949           Bug Fixed.
 * 18Jun2014    gur26991        SPR-11823           update GERAN band indicator value.
 * 31Jul2014    gur30784        SPR-9464            DRX profile changes
*/

#ifndef _RRM_OAM_DEFINES_H
#define _RRM_OAM_DEFINES_H
/*! \headerfile lteTypes.h  <> 
 */
#include "lteTypes.h"
/*! \headerfile rrm_api_defines.h  <> 
 */
#include "rrm_api_defines.h"
/*! \enum rrm_oam_log_on_off_et
 *  \brief log on off enum
 */
typedef enum 
{
  RRM_OAM_LOG_OFF,
  RRM_OAM_LOG_ON
}rrm_oam_log_on_off_et;
#define OCTATE_SIZE 1
#define RRM_OAM_MAX_NUM_QCI_CLASSES      		9
/*bug_9464_changes_start*/
#define RRM_OAM_MAX_NUM_DRX_PROFILE 			9 /** assuming DRX for nine profiles only in this release- */
/*bug_9464_changes_end*/
#define RRM_OAM_MAX_NUM_INTER_FREQ_CARRIERS 		8
#define	RRM_OAM_MAX_NUM_SRBS 				2 
#define RRM_OAM_MAX_NUM_INTRA_FREQ_CELLS 		64
#define RRM_OAM_MAX_NUM_INTER_FREQ_CELLS 		64
#define RRM_OAM_MAX_NUM_PLMNS 				6
#define RRM_OAM_MAX_NUM_EAID_OCTETS		        3
#define RRM_OAM_MAX_NUM_CSG_OCTETS 			4
#define RRM_OAM_MAX_NUM_HNB_NAME_OCTETS 		48
#define RRM_MAX_NUM_INT_MODULES                          3
#define RRM_MAX_NUM_MCC_DIGITS                           3
#define RRM_MAX_NUM_MNC_DIGITS                           3
#define RRM_MAX_NUM_CELL_IDENTITY_OCTETS                 4
#define RRM_OAM_MAX_NUM_TAC_OCTETS                       2
#define RRM_MAX_NUM_EARFCN                               128
#define RRM_OAM_ZERO                                     0
    /* SPR 12929 Fix Start */
#define HO_MEAS_START_ID                                 17
    /* SPR 12929 Fix End */
#define RRM_MAX_VER_ID_LEN                               50 
/*RIM Changes begin*/
#define RRM_RIM_MAX_SI_PSI_PAYLOAD_INDIV              22
#define RRM_RIM_MAX_SI_PSI_PAYLOAD                    127
#define RRM_RIM_MAX_UTRA_SI_PAYLOAD                   200
/*RIM Changes end*/
/*BLR changes */
#define RRM_OAM_MAX_NUM_UTRAN_FREQ_CELLS 		         32
#define RRM_OAM_MAX_NUM_GERAN_FREQ_CELLS                 32
#define RRM_OAM_MAX_NUM_LAC_OCTETS                       2
#define RRM_OAM_MAX_SPID                                 256

#define  RRM_OAM_MAX_EVENT_LEN                           200
#define  RRM_MAX_NO_NEIGHBOUR_ENBS                       3
#define  RRM_OAM_MAX_NUM_SIB_MSG                         6  
#define  MAX_NO_ENB_X2_TLAS                              2
/* CSR 00070236 Fix Start */
#define  RRM_OAM_MAX_SIB                                 31
/* CSR 00070236 Fix End */
#define  RRM_MAX_CGI_CDMA2000                            16
/* SPR 20908 Start */
#define RRM_MAX_IPV4_DIGITS                              4
/* SPR 21371 Start */
#define MAX_IPV6_ADDRESS_LENGTH                          40
/* SPR 21371 End */
/* SPR 20908 End */
/* CDMA2000 changes start*/

#define RRM_MAX_CDMA_BAND_CLASS  32
#define RRM_XRTT_SID_OCTET_SIZE               2
#define RRM_XRTT_NID_OCTET_SIZE               2
#define RRM_XRTT_REG_PERIOD_OCTET_SIZE        1
#define RRM_XRTT_REG_ZONE_OCTET_SIZE          2
#define RRM_XRTT_TOTAL_ZONE_OCTET_SIZE        1
#define RRM_XRTT_ZONE_TIMER_OCTET_SIZE        1
#define RRM_PRE_REG_ZONE_ID  2
#define RRM_CDMA2000_1XRTT_CELL_ID_LENGTH 6
#define RRM_MAX_CGI_CDMA_2000_1XRTT  6
#define RRM_OAM_NUM_CDMA2000_FREQ_CELLS  72
#define RRM_CDMA2000_HRPD_CELL_ID_LENGTH 16
/* CDMA2000 changes ends */
/*4x2 mimo start*/
#define RRM_OAM_MAX_STRING_OF_CODEBOOK_SUBSET  8
/* Start fix for Coverity_ID : 83295,83286*/
#define RRM_OAM_MAX_CODEBOOK_SUBSET            5 
/* End fix for Coverity_ID : 83295,83286*/
/*4x2 mimo end*/
/*TM mode 7-8 start*/
#define RRM_OAM_MAX_TM_MODE_TABLE_ROW 8
#define RRM_MAX_BF_VECTORS_TO_AOA_VAL 360
#define RRM_MAX_BF_VECTORS_TO_SINR_VAL 256
/*TM mode 7-8 end*/
/*  DYNAMIC ICIC START  */

#define RRM_OAM_MAX_CC_REGION   2
#define RRM_OAM_MAX_AGGREGATION_LEVEL_POWER_OFFSET_COUNT    4
#define RRM_OAM_NUM_DCI_SIZE_CATEGORY   3
#define RRM_OAM_MAX_CQI_VALUE 15
#define RRM_OAM_MAX_QCI_VAL 9 
#define RRM_OAM_MAX_SPS_INTERVALS   16
#define RRM_OAM_MAX_POSSIBLE_AGGREGAITION_LEVELS 4 
#define RRM_OAM_MAX_REDUCED_MSC 32
#define RRM_OAM_MAX_NUM_PATHLOSS_TO_SINR_COUNT 10
#define RRM_OAM_MAX_NUM_ALPHA_COUNT 1 
#define RRM_OAM_MAX_MCS 32

/*  DYNAMIC ICIC END    */

/* SPS related changes start */
#define RRM_OAM_SPS_PROFILE_20_INTERVAL                 RRM_OAM_SEMI_PERSIST_INT_SF_20
#define RRM_OAM_SPS_PROFILE_20_CONF_PROCESSES           2
/* + SPR 16903 */
#define RRM_OAM_SPS_PROFILE_20_MAX_HARQ_RETX            1
/* - SPR 16903 */
#define RRM_OAM_SPS_PROFILE_20_EXPLICIT_RELEASE_AFTER   8
#define RRM_OAM_SPS_PROFILE_20_IMPLICIT_RELEASE_AFTER   RRM_OAM_IMPLICIT_RELEASE_E_8
#define RRM_OAM_SPS_PROFILE_40_INTERVAL                 RRM_OAM_SEMI_PERSIST_INT_SF_40
#define RRM_OAM_SPS_PROFILE_40_CONF_PROCESSES           2
/* + SPR 16903 */
#define RRM_OAM_SPS_PROFILE_40_MAX_HARQ_RETX            3
/* - SPR 16903 */
#define RRM_OAM_SPS_PROFILE_40_EXPLICIT_RELEASE_AFTER   4
#define RRM_OAM_SPS_PROFILE_40_IMPLICIT_RELEASE_AFTER   RRM_OAM_IMPLICIT_RELEASE_E_4
#define RRM_OAM_SPS_PROFILE_20_DRX_ON_DURATION          5
#define RRM_OAM_SPS_PROFILE_20_DRX_INACTIVITY_TIMER     5
#define RRM_OAM_SPS_PROFILE_40_DRX_ON_DURATION          5
#define RRM_OAM_SPS_PROFILE_40_DRX_INACTIVITY_TIMER     10
/* SPS related changes end */
/* CSR 00070260 FIX START */
#define RRM_CDMA2000_1XRTT_REFERENCE_CELL_ID_LENGTH      5
#define RRM_CDMA2000_HRPD_REFERENCE_CELL_ID_LENGTH      16
/* CSR 00070260 FIX END */

#define RRM_OAM_MAX_LOG_PATH_STR_LEN    256

/* SPR_10949_CHANGES_START */
#define RRM_OAM_RLC_UM_PDCP_SN_SIZE_7_BITS                7
#define RRM_OAM_RLC_UM_PDCP_SN_SIZE_12_BITS               12
#define RRM_OAM_SN_FIELD_LEN_UL_RLC_5_BIT                 5
#define RRM_OAM_SN_FIELD_LEN_UL_RLC_10_BIT                10
#define RRM_OAM_SN_FIELD_LEN_DL_RLC_5_BIT                 5
#define RRM_OAM_SN_FIELD_LEN_DL_RLC_10_BIT                10
/* SPR_10949_CHANGES_END */
#ifndef LTE_EMBMS_SUPPORTED
#define RRM_OAM_MAX_NUM_SI                                8
#else
#define RRM_OAM_MAX_NUM_SI                                9
#endif
#define MIN_SGNB_AMBR_SHARE 1
#define MAX_SGNB_AMBR_SHARE 100

#define MIN_MEAS_FREQ_SCG_NR 1
#define MAX_MEAS_FREQ_SCG_NR 32
#define MIN_MEAS_ID_SCG_NR 1
#define MAX_MEAS_ID_SCG_NR 62

typedef enum
{
  /*RRM_OAM_NONE,*/
  RRM_OAM_CRITICAL = LTE_LOG_CRITICAL,
  RRM_OAM_ERROR = LTE_LOG_ERROR,
  RRM_OAM_WARNING = LTE_LOG_WARNING,
  RRM_OAM_INFO = LTE_LOG_INFO,
  RRM_OAM_BRIEF = LTE_LOG_BRIEF,
  RRM_OAM_DETAILED = LTE_LOG_DETAILED,
  RRM_OAM_DETAILEDALL = LTE_LOG_DETAILEDALL
}rrm_oam_log_level_et;
#define RRM_OAM_NONE RRM_OAM_CRITICAL

typedef enum
{
  RRM_ALL_MODULE_ID = RRM_OAM_ZERO,
  RRM_RRM_MODULE_ID = RRM_MODULE_ID,
  RRM_OAM_MIF_MODULE_ID = RRM_MIN_INT_MODULE_ID, 
  RRM_OAM_CM_MODULE_ID,
  RRM_OAM_UEM_MODULE_ID,   
  RRM_OAM_MAX_INT_MODULE_ID = RRM_OAM_UEM_MODULE_ID + 1
}rrm_internal_module_id_et;

typedef enum
{
  RRM_SHUTDOWN_MODE_FORCED,
  RRM_SHUTDOWN_MODE_GRACEFUL
}rrm_oam_shutdown_mode_et;

typedef enum
{
  RRM_OAM_PB0,
  RRM_OAM_PB1,
  RRM_OAM_PB2,
  RRM_OAM_PB3
}rrm_oam_pdsch_config_common_pb_et;

typedef enum
{
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB_M_6      = 0, /*pick from file "lte_rrc/rrc/common/include/rrc_phy_intf.h"*/
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB_M_4DOT77 = 1,
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB_M_3      = 2,
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB_M_1DOT77 = 3,
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB0         = 4,
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB1         = 5,
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB2         = 6,
  RRM_OAM_PDSCH_CONFIGURATION_DEDICATED_P_A_DB3         = 7
}rrm_oam_pdsch_config_dedicated_p_a_et;

typedef enum
{
  RRM_OAM_HM_INTER_SF,
  RRM_OAM_HM_INTRA_AND_INTER_SF
}rrm_oam_hopping_mode_et;

typedef enum
{

  RRM_OAM_AL_0,
  RRM_OAM_AL_0_4,
  RRM_OAM_AL_0_5,
  RRM_OAM_AL_0_6,
  RRM_OAM_AL_0_7,
  RRM_OAM_AL_0_8,
  RRM_OAM_AL_0_9,
  RRM_OAM_AL_1
}rrm_oam_alpha_et;


typedef enum
{
  RRM_OAM_NUM_CONS_PRS_SF_N1,
  RRM_OAM_NUM_CONS_PRS_SF_N2,
  RRM_OAM_NUM_CONS_PRS_SF_N4,
  RRM_OAM_NUM_CONS_PRS_SF_N6
}rrm_oam_num_consecutive_prs_sf_et;

typedef enum
{
    RRM_OAM_SA0,
    RRM_OAM_SA1,
    RRM_OAM_SA2,
    RRM_OAM_SA3,
    RRM_OAM_SA4,
    RRM_OAM_SA5,
    RRM_OAM_SA6
}rrm_oam_sub_frame_asgmnt_et;

typedef enum
{
    RRM_OAM_SSP0,
    RRM_OAM_SSP1,
    RRM_OAM_SSP2,
    RRM_OAM_SSP3,
    RRM_OAM_SSP4,
    RRM_OAM_SSP5,
    RRM_OAM_SSP6,
    RRM_OAM_SSP7,
    RRM_OAM_SSP8
}rrm_oam_special_sub_frame_patterns_et;

typedef enum
{
  RRM_OAM_RA_PREAMBLE_COUNT_N4,
  RRM_OAM_RA_PREAMBLE_COUNT_N8,
  RRM_OAM_RA_PREAMBLE_COUNT_N12,
  RRM_OAM_RA_PREAMBLE_COUNT_N16,
  RRM_OAM_RA_PREAMBLE_COUNT_N20,
  RRM_OAM_RA_PREAMBLE_COUNT_N24,
  RRM_OAM_RA_PREAMBLE_COUNT_N28,
  RRM_OAM_RA_PREAMBLE_COUNT_N32,
  RRM_OAM_RA_PREAMBLE_COUNT_N36,
  RRM_OAM_RA_PREAMBLE_COUNT_N40,
  RRM_OAM_RA_PREAMBLE_COUNT_N44,
  RRM_OAM_RA_PREAMBLE_COUNT_N48,
  RRM_OAM_RA_PREAMBLE_COUNT_N52,
  RRM_OAM_RA_PREAMBLE_COUNT_N56,
  RRM_OAM_RA_PREAMBLE_COUNT_N60,
  RRM_OAM_RA_PREAMBLE_COUNT_N64,

  /*  coverity 86734 fix start */
  RRM_OAM_RA_PREAMBLE_COUNT_UNDEFINED
  /*  coverity 86734 fix end */

}rrm_oam_ra_preamble_count_et;

typedef enum
{
  RRM_OAM_ON_DURATION_TIMER_PSF_1,
  RRM_OAM_ON_DURATION_TIMER_PSF_2,
  RRM_OAM_ON_DURATION_TIMER_PSF_3,
  RRM_OAM_ON_DURATION_TIMER_PSF_4,
  RRM_OAM_ON_DURATION_TIMER_PSF_5,
  RRM_OAM_ON_DURATION_TIMER_PSF_6,
  RRM_OAM_ON_DURATION_TIMER_PSF_8,
  RRM_OAM_ON_DURATION_TIMER_PSF_10,
  RRM_OAM_ON_DURATION_TIMER_PSF_20,
  RRM_OAM_ON_DURATION_TIMER_PSF_30,
  RRM_OAM_ON_DURATION_TIMER_PSF_40,
  RRM_OAM_ON_DURATION_TIMER_PSF_50,
  RRM_OAM_ON_DURATION_TIMER_PSF_60,
  RRM_OAM_ON_DURATION_TIMER_PSF_80,
  RRM_OAM_ON_DURATION_TIMER_PSF_100,
  /* SPR 21411 changes start */
  RRM_OAM_ON_DURATION_TIMER_PSF_200,
  RRM_OAM_ON_DURATION_TIMER_INVALID
  /* SPR 21411 changes end */
}rrm_oam_on_duration_timer_et;

typedef enum
{
  RRM_OAM_POLL_RETRAS_MS_5,
  RRM_OAM_POLL_RETRAS_MS_10,
  RRM_OAM_POLL_RETRAS_MS_15,
  RRM_OAM_POLL_RETRAS_MS_20,
  RRM_OAM_POLL_RETRAS_MS_25,
  RRM_OAM_POLL_RETRAS_MS_30,
  RRM_OAM_POLL_RETRAS_MS_35,
  RRM_OAM_POLL_RETRAS_MS_40,
  RRM_OAM_POLL_RETRAS_MS_45,
  RRM_OAM_POLL_RETRAS_MS_50,
  RRM_OAM_POLL_RETRAS_MS_55,
  RRM_OAM_POLL_RETRAS_MS_60,
  RRM_OAM_POLL_RETRAS_MS_65,
  RRM_OAM_POLL_RETRAS_MS_70,
  RRM_OAM_POLL_RETRAS_MS_75,
  RRM_OAM_POLL_RETRAS_MS_80,
  RRM_OAM_POLL_RETRAS_MS_85,
  RRM_OAM_POLL_RETRAS_MS_90,
  RRM_OAM_POLL_RETRAS_MS_95,
  RRM_OAM_POLL_RETRAS_MS_100,
  RRM_OAM_POLL_RETRAS_MS_105,
  RRM_OAM_POLL_RETRAS_MS_110,
  RRM_OAM_POLL_RETRAS_MS_115,
  RRM_OAM_POLL_RETRAS_MS_120,
  RRM_OAM_POLL_RETRAS_MS_125,
  RRM_OAM_POLL_RETRAS_MS_130,
  RRM_OAM_POLL_RETRAS_MS_135,
  RRM_OAM_POLL_RETRAS_MS_140,
  RRM_OAM_POLL_RETRAS_MS_145,
  RRM_OAM_POLL_RETRAS_MS_150,
  RRM_OAM_POLL_RETRAS_MS_155,
  RRM_OAM_POLL_RETRAS_MS_160,
  RRM_OAM_POLL_RETRAS_MS_165,
  RRM_OAM_POLL_RETRAS_MS_170,
  RRM_OAM_POLL_RETRAS_MS_175,
  RRM_OAM_POLL_RETRAS_MS_180,
  RRM_OAM_POLL_RETRAS_MS_185,
  RRM_OAM_POLL_RETRAS_MS_190,
  RRM_OAM_POLL_RETRAS_MS_195,
  RRM_OAM_POLL_RETRAS_MS_200,
  RRM_OAM_POLL_RETRAS_MS_205,
  RRM_OAM_POLL_RETRAS_MS_210,
  RRM_OAM_POLL_RETRAS_MS_215,
  RRM_OAM_POLL_RETRAS_MS_220,
  RRM_OAM_POLL_RETRAS_MS_225,
  RRM_OAM_POLL_RETRAS_MS_230,
  RRM_OAM_POLL_RETRAS_MS_235,
  RRM_OAM_POLL_RETRAS_MS_240,
  RRM_OAM_POLL_RETRAS_MS_245,
  RRM_OAM_POLL_RETRAS_MS_250,
  RRM_OAM_POLL_RETRAS_MS_300,
  RRM_OAM_POLL_RETRAS_MS_350,
  RRM_OAM_POLL_RETRAS_MS_400,
  RRM_OAM_POLL_RETRAS_MS_450,
  RRM_OAM_POLL_RETRAS_MS_500
}rrm_oam_t_poll_retransmit_et;

typedef enum
{
  RRM_OAM_PERIODIC_PHR_SF10,
  RRM_OAM_PERIODIC_PHR_SF20,
  RRM_OAM_PERIODIC_PHR_SF50,
  RRM_OAM_PERIODIC_PHR_SF100,
  RRM_OAM_PERIODIC_PHR_SF200,
  RRM_OAM_PERIODIC_PHR_SF500,
  RRM_OAM_PERIODIC_PHR_SF1000,
  RRM_OAM_PERIODIC_INFINITY,

  RRM_OAM_PERIODIC_INFINITY_INVALID
}rrm_oam_periodic_phr_tmr_et;

typedef enum
{
  RRM_OAM_PROHIBIT_PHR_SF0,
  RRM_OAM_PROHIBIT_PHR_SF10,
  RRM_OAM_PROHIBIT_PHR_SF20,
  RRM_OAM_PROHIBIT_PHR_SF50,
  RRM_OAM_PROHIBIT_PHR_SF100,
  RRM_OAM_PROHIBIT_PHR_SF200,
  RRM_OAM_PROHIBIT_PHR_SF500,
  RRM_OAM_PROHIBIT_PHR_SF1000,

  RRM_OAM_PROHIBIT_PHR_INVALID
}rrm_oam_prohibit_phr_tmr_et;

typedef enum
{
  RRM_OAM_DL_PATHLOSS_TMR_DB1,
  RRM_OAM_DL_PATHLOSS_TMR_DB3,
  RRM_OAM_DL_PATHLOSS_TMR_DB6,
  RRM_OAM_DL_PATHLOSS_TMR_INFINITY,

  RRM_OAM_DL_PATHLOSS_TMR_INVALID
}rrm_oam_dl_pathloss_tmr_et;

typedef enum
{
  RRM_OAM_PERIODIC_TMR_BSR_SF5,
  RRM_OAM_PERIODIC_TMR_BSR_SF10,
  RRM_OAM_PERIODIC_TMR_BSR_SF16,
  RRM_OAM_PERIODIC_TMR_BSR_SF20,
  RRM_OAM_PERIODIC_TMR_BSR_SF32,
  RRM_OAM_PERIODIC_TMR_BSR_SF40,
  RRM_OAM_PERIODIC_TMR_BSR_SF64,
  RRM_OAM_PERIODIC_TMR_BSR_SF80,
  RRM_OAM_PERIODIC_TMR_BSR_SF128,
  RRM_OAM_PERIODIC_TMR_BSR_SF160,
  RRM_OAM_PERIODIC_TMR_BSR_SF320,
  RRM_OAM_PERIODIC_TMR_BSR_SF640,
  RRM_OAM_PERIODIC_TMR_BSR_SF1280,
  RRM_OAM_PERIODIC_TMR_BSR_SF2560,
  RRM_OAM_PERIODIC_TMR_BSR_INFINITY,

  RRM_OAM_PERIODIC_TMR_BSR_INVALID
}rrm_oam_periodic_tmr_bsr_et;

typedef enum
{
  RRM_OAM_RETX_TMR_BSR_SF320,
  RRM_OAM_RETX_TMR_BSR_SF640,
  RRM_OAM_RETX_TMR_BSR_SF1280,
  RRM_OAM_RETX_TMR_BSR_SF2560,
  RRM_OAM_RETX_TMR_BSR_SF5120,
  RRM_OAM_RETX_TMR_BSR_SF10240,

  RRM_OAM_RETX_TMR_BSR_INVALID
}rrm_oam_retx_tmr_bsr_et;

typedef enum
{
  RRM_OAM_CELL_BARRED,
  RRM_OAM_CELL_NOT_BARRED
}rrm_oam_cell_barred_et;

typedef enum
{
  RRM_OAM_RESERVED_FOR_OPERATOR,
  RRM_OAM_NOT_RESERVED_FOR_OPERATOR
}rrm_oam_cell_reserved_for_operatoruse_et;

typedef enum
{
  RRM_OAM_INTRA_FREQ_RESELECTION_ALLOWED,
  RRM_OAM_INTRA_FREQ_RESELECTION_NOT_ALLOWED
}rrm_oam_intra_freq_reselection_et;

typedef enum
{
  RRM_OAM_Q_HYST_NEG_SIX,
  RRM_OAM_Q_HYST_NEG_FOUR,
  RRM_OAM_Q_HYST_NEG_TWO,
  RRM_OAM_Q_HYST_ZERO
}rrm_oam_q_hyst_sf_et;

typedef enum
{
  RRM_OAM_O_DOT_25,
  RRM_OAM_O_DOT_5,
  RRM_OAM_O_DOT_75,
  RRM_OAM_l_DOT_0
}rrm_oam_speed_state_scale_factors_et;

typedef enum
{
  RRM_OAM_Q_HYST_DB0,
  RRM_OAM_Q_HYST_DB1,
  RRM_OAM_Q_HYST_DB2,
  RRM_OAM_Q_HYST_DB3,
  RRM_OAM_Q_HYST_DB4,
  RRM_OAM_Q_HYST_DB5,
  RRM_OAM_Q_HYST_DB6,
  RRM_OAM_Q_HYST_DB8,
  RRM_OAM_Q_HYST_DB10,
  RRM_OAM_Q_HYST_DB12,
  RRM_OAM_Q_HYST_DB14,
  RRM_OAM_Q_HYST_DB16,
  RRM_OAM_Q_HYST_DB18,
  RRM_OAM_Q_HYST_DB20,
  RRM_OAM_Q_HYST_DB22,
  RRM_OAM_Q_HYST_DB24
}rrm_oam_q_hyst_et;


typedef enum
{
  RRM_OAM_TIMER_300_301_MS100,
  RRM_OAM_TIMER_300_301_MS200,
  RRM_OAM_TIMER_300_301_MS300,
  RRM_OAM_TIMER_300_301_MS400,
  RRM_OAM_TIMER_300_301_MS600,
  RRM_OAM_TIMER_300_301_MS1000,
  RRM_OAM_TIMER_300_301_MS1500,
  RRM_OAM_TIMER_300_301_MS2000
}rrm_oam_timer_300_301_et;

typedef enum
{
  RRM_OAM_TIMER_N310_N1,
  RRM_OAM_TIMER_N310_N2,
  RRM_OAM_TIMER_N310_N3,
  RRM_OAM_TIMER_N310_N4,
  RRM_OAM_TIMER_N310_N6,
  RRM_OAM_TIMER_N310_N8,
  RRM_OAM_TIMER_N310_N10,
  RRM_OAM_TIMER_N310_N20
}rrm_oam_out_of_sync_n310_et;

typedef enum
{
  RRM_OAM_BW_N_6,
  RRM_OAM_BW_N_15,
  RRM_OAM_BW_N_25,
  RRM_OAM_BW_N_50,
  RRM_OAM_BW_N_75,
  RRM_OAM_BW_N_100
}rrm_oam_band_width_et;

typedef enum
{
  RRM_OAM_Q_OFFESET_RANGE_DB_24,
  RRM_OAM_Q_OFFESET_RANGE_DB_22,
  RRM_OAM_Q_OFFESET_RANGE_DB_20,
  RRM_OAM_Q_OFFESET_RANGE_DB_18,
  RRM_OAM_Q_OFFESET_RANGE_DB_16,
  RRM_OAM_Q_OFFESET_RANGE_DB_14,
  RRM_OAM_Q_OFFESET_RANGE_DB_12,
  RRM_OAM_Q_OFFESET_RANGE_DB_10,
  RRM_OAM_Q_OFFESET_RANGE_DB_8,
  RRM_OAM_Q_OFFESET_RANGE_DB_6,
  RRM_OAM_Q_OFFESET_RANGE_DB_5,
  RRM_OAM_Q_OFFESET_RANGE_DB_4,
  RRM_OAM_Q_OFFESET_RANGE_DB_3,
  RRM_OAM_Q_OFFESET_RANGE_DB_2,
  RRM_OAM_Q_OFFESET_RANGE_DB_1,
  RRM_OAM_Q_OFFESET_RANGE_DB0,
  RRM_OAM_Q_OFFESET_RANGE_DB1,
  RRM_OAM_Q_OFFESET_RANGE_DB2,
  RRM_OAM_Q_OFFESET_RANGE_DB3,
  RRM_OAM_Q_OFFESET_RANGE_DB4,
  RRM_OAM_Q_OFFESET_RANGE_DB5,
  RRM_OAM_Q_OFFESET_RANGE_DB6,
  RRM_OAM_Q_OFFESET_RANGE_DB8,
  RRM_OAM_Q_OFFESET_RANGE_DB10,
  RRM_OAM_Q_OFFESET_RANGE_DB12,
  RRM_OAM_Q_OFFESET_RANGE_DB14,
  RRM_OAM_Q_OFFESET_RANGE_DB16,
  RRM_OAM_Q_OFFESET_RANGE_DB18,
  RRM_OAM_Q_OFFESET_RANGE_DB20,
  RRM_OAM_Q_OFFESET_RANGE_DB22,
  RRM_OAM_Q_OFFESET_RANGE_DB24
}rrm_oam_q_offset_range_et;

typedef enum
{
  DCS_1800,
  PCS_1900
}rrm_oam_band_ind_et;

typedef enum
{
  RRM_OAM_GBR,
  RRM_OAM_NON_GBR
}rrm_oam_qos_type_et;

typedef enum
{
  RRM_OAM_IMS_SUPPORT_TRUE,
  RRM_OAM_IMS_SUPPORT_OTHER
}rrm_oam_ims_emergency_support_r9_et;

typedef enum 
{
  RRM_OAM_N4, 
  RRM_OAM_N8, 
  RRM_OAM_N12, 
  RRM_OAM_N16, 
  RRM_OAM_N24, 
  RRM_OAM_N32, 
  RRM_OAM_N48, 
  RRM_OAM_N64, 
  RRM_OAM_N84, 
  RRM_OAM_N96, 
  RRM_OAM_N128, 
  RRM_OAM_N168, 
  RRM_OAM_N252, 
  RRM_OAM_N504, 
  RRM_OAM_SPARE2,
  RRM_OAM_SPARE1 
}rrm_oam_cell_id_range_et;

typedef enum 
{
  RRM_OAM_ACCESS_MODE_CLOSE,
  RRM_OAM_ACCESS_MODE_HYBRID,
  RRM_OAM_ACCESS_MODE_OPEN,
  /* Fix for CSR 58972 start*/
  RRM_OAM_ACCESS_MODE_OPEN_FEMTO
  /* Fix for CSR 58972 end*/
}rrm_oam_access_mode_et;


typedef enum
{
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N4,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N8,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N12,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N16,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N20,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N24,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N28,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N32,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N36,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N40,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N44,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N48,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N52,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N56,
  RRM_OAM_RA_PREAMBLE_GROUP_A_SIZE_N60,

  /*  coverity 86733 fix start */
  RRM_OAM_RA_PREAMBLE_GROUP_A_UNDEFINED
  /*  coverity 86733 fix end */

}rrm_oam_ra_preambles_group_a_size_et;

typedef enum
{
  RRM_OAM_GROUP_A_MSG_SIZE_B56,
  RRM_OAM_GROUP_A_MSG_SIZE_B144,
  RRM_OAM_GROUP_A_MSG_SIZE_B208,
  RRM_OAM_GROUP_A_MSG_SIZE_B256
}rrm_oam_group_a_msg_size_et;

typedef enum
{
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_MINUSINFINITY,
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_DB0,
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_DB5,
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_DB8,
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_DB10,
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_DB12,
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_DB15,
  RRM_OAM_GROUP_B_MSG_POWER_OFFSET_DB18
}rrm_oam_group_b_msg_power_offset_et;

typedef enum
{
  RRM_OAM_POWER_RAMP_STEP_DB0,
  RRM_OAM_POWER_RAMP_STEP_DB2,
  RRM_OAM_POWER_RAMP_STEP_DB4,
  RRM_OAM_POWER_RAMP_STEP_DB6
}rrm_oam_power_ramping_step_et;


typedef enum
{
  RRM_OAM_PREAMBLE_POWER_DBM_120,
  RRM_OAM_PREAMBLE_POWER_DBM_118,
  RRM_OAM_PREAMBLE_POWER_DBM_116,
  RRM_OAM_PREAMBLE_POWER_DBM_114,
  RRM_OAM_PREAMBLE_POWER_DBM_112,
  RRM_OAM_PREAMBLE_POWER_DBM_110,
  RRM_OAM_PREAMBLE_POWER_DBM_108,
  RRM_OAM_PREAMBLE_POWER_DBM_106,
  RRM_OAM_PREAMBLE_POWER_DBM_104,
  RRM_OAM_PREAMBLE_POWER_DBM_102,
  RRM_OAM_PREAMBLE_POWER_DBM_100,
  RRM_OAM_PREAMBLE_POWER_DBM_98,
  RRM_OAM_PREAMBLE_POWER_DBM_96,
  RRM_OAM_PREAMBLE_POWER_DBM_94,
  RRM_OAM_PREAMBLE_POWER_DBM_92,
  RRM_OAM_PREAMBLE_POWER_DBM_90,

  /*  coverity 86727 fix start */
  RRM_OAM_PREAMBLE_POWER_UNDEFINED
  /*  coverity 86727 fix end */

}rrm_oam_preamble_init_rec_target_pow_et;

typedef enum
{
  RRM_OAM_PREAMBLE_TRANS_MAX_N3,
  RRM_OAM_PREAMBLE_TRANS_MAX_N4,
  RRM_OAM_PREAMBLE_TRANS_MAX_N5,
  RRM_OAM_PREAMBLE_TRANS_MAX_N6,
  RRM_OAM_PREAMBLE_TRANS_MAX_N7,
  RRM_OAM_PREAMBLE_TRANS_MAX_N8,
  RRM_OAM_PREAMBLE_TRANS_MAX_N10,
  RRM_OAM_PREAMBLE_TRANS_MAX_N20,
  RRM_OAM_PREAMBLE_TRANS_MAX_N50,
  RRM_OAM_PREAMBLE_TRANS_MAX_N100,
  RRM_OAM_PREAMBLE_TRANS_MAX_N200
}rrm_oam_preamble_trans_max_et;


typedef enum
{
  RRM_OAM_RA_RESP_WIN_SIZE_SF2,
  RRM_OAM_RA_RESP_WIN_SIZE_SF3,
  RRM_OAM_RA_RESP_WIN_SIZE_SF4,
  RRM_OAM_RA_RESP_WIN_SIZE_SF5,
  RRM_OAM_RA_RESP_WIN_SIZE_SF6,
  RRM_OAM_RA_RESP_WIN_SIZE_SF7,
  RRM_OAM_RA_RESP_WIN_SIZE_SF8,
  RRM_OAM_RA_RESP_WIN_SIZE_SF10
}rrm_oam_ra_resp_win_size_et;

typedef enum
{
  RRM_OAM_MAC_CONT_RES_TIMER_SF8,
  RRM_OAM_MAC_CONT_RES_TIMER_SF16,
  RRM_OAM_MAC_CONT_RES_TIMER_SF24,
  RRM_OAM_MAC_CONT_RES_TIMER_SF32,
  RRM_OAM_MAC_CONT_RES_TIMER_SF40,
  RRM_OAM_MAC_CONT_RES_TIMER_SF48,
  RRM_OAM_MAC_CONT_RES_TIMER_SF56,
  RRM_OAM_MAC_CONT_RES_TIMER_SF64
}rrm_oam_mac_cont_resol_timer_et;


typedef enum
{
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_1,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_2,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_3,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_4,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_5,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_6,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_8,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_10,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_20,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_30,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_40,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_50,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_60,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_80,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_100,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_200,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_300,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_500,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_750,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_1280,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_1920,
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_2560,
  /* SPR 21411 changes start */
  RRM_OAM_DRX_INACTIVITY_TIMER_PSF_0_V1020,
  RRM_OAM_DRX_INACTIVITY_TIMER_INVALID
  /* SPR 21411 changes end */
}rrm_oam_drx_inactivity_timer_et;

typedef enum
{
  RRM_OAM_DRX_RETRANS_TIMER_PSF_1,
  RRM_OAM_DRX_RETRANS_TIMER_PSF_2,
  RRM_OAM_DRX_RETRANS_TIMER_PSF_4,
  RRM_OAM_DRX_RETRANS_TIMER_PSF_6,
  RRM_OAM_DRX_RETRANS_TIMER_PSF_8,
  RRM_OAM_DRX_RETRANS_TIMER_PSF_16,
  RRM_OAM_DRX_RETRANS_TIMER_PSF_24,
  /* SPR 21411 changes start */
  RRM_OAM_DRX_RETRANS_TIMER_PSF_33,
  RRM_OAM_DRX_RETRANS_TIMER_INVALID
  /* SPR 21411 changes end */
}rrm_oam_drx_retransmission_timer_et;


typedef enum
{
  RRM_OAM_SHORT_DRX_CYCLE_SF_2,
  RRM_OAM_SHORT_DRX_CYCLE_SF_5,
  RRM_OAM_SHORT_DRX_CYCLE_SF_8,
  RRM_OAM_SHORT_DRX_CYCLE_SF_10,
  RRM_OAM_SHORT_DRX_CYCLE_SF_16,
  RRM_OAM_SHORT_DRX_CYCLE_SF_20,
  RRM_OAM_SHORT_DRX_CYCLE_SF_32,
  RRM_OAM_SHORT_DRX_CYCLE_SF_40,
  RRM_OAM_SHORT_DRX_CYCLE_SF_64,
  RRM_OAM_SHORT_DRX_CYCLE_SF_80,
  RRM_OAM_SHORT_DRX_CYCLE_SF_128,
  RRM_OAM_SHORT_DRX_CYCLE_SF_160,
  RRM_OAM_SHORT_DRX_CYCLE_SF_256,
  RRM_OAM_SHORT_DRX_CYCLE_SF_320,
  RRM_OAM_SHORT_DRX_CYCLE_SF_512,
  /* SPR 21411 changes start */
  RRM_OAM_SHORT_DRX_CYCLE_SF_640,
  RRM_OAM_SHORT_DRX_CYCLE_INVALID
  /* SPR 21411 changes end */
}rrm_oam_short_drx_cycle_et;


typedef enum
{
  RRM_OAM_POLL_PDU_4,
  RRM_OAM_POLL_PDU_8,
  RRM_OAM_POLL_PDU_16,
  RRM_OAM_POLL_PDU_32,
  RRM_OAM_POLL_PDU_64,
  RRM_OAM_POLL_PDU_128,
  RRM_OAM_POLL_PDU_256,
  RRM_OAM_POLL_PDU_INFINITY
}rrm_oam_poll_pdu_et;

typedef enum
{
  RRM_OAM_POLL_BYTE_KB_25,
  RRM_OAM_POLL_BYTE_KB_50,
  RRM_OAM_POLL_BYTE_KB_75,
  RRM_OAM_POLL_BYTE_KB_100,
  RRM_OAM_POLL_BYTE_KB_125,
  RRM_OAM_POLL_BYTE_KB_250,
  RRM_OAM_POLL_BYTE_KB_375,
  RRM_OAM_POLL_BYTE_KB_500,
  RRM_OAM_POLL_BYTE_KB_750,
  RRM_OAM_POLL_BYTE_KB_1000,
  RRM_OAM_POLL_BYTE_KB_1250,
  RRM_OAM_POLL_BYTE_KB_1500,
  RRM_OAM_POLL_BYTE_KB_2000,
  RRM_OAM_POLL_BYTE_KB_3000,
  RRM_OAM_POLL_BYTE_KB_INFINITY
}rrm_oam_poll_byte_et;

typedef enum
{
  RRM_OAM_MAX_RETRANS_THRESH_1,
  RRM_OAM_MAX_RETRANS_THRESH_2,
  RRM_OAM_MAX_RETRANS_THRESH_3,
  RRM_OAM_MAX_RETRANS_THRESH_4,
  RRM_OAM_MAX_RETRANS_THRESH_6,
  RRM_OAM_MAX_RETRANS_THRESH_8,
  RRM_OAM_MAX_RETRANS_THRESH_16,
  RRM_OAM_MAX_RETRANS_THRESH_32
}rrm_oam_max_retx_threshold_et;

typedef enum
{
    /* SPR 18871 Fix Start */
     RRM_OAM_SR_PERIODICITY_5_MS,
     RRM_OAM_SR_PERIODICITY_10_MS,
     RRM_OAM_SR_PERIODICITY_20_MS,
     RRM_OAM_SR_PERIODICITY_40_MS,
     RRM_OAM_SR_PERIODICITY_80_MS,
     RRM_OAM_SR_PERIODICITY_2_MS,
     RRM_OAM_SR_PERIODICITY_1_MS
    /* SPR 18871 Fix End */
}rrm_oam_sr_periodicity_et;

typedef enum
{
    RRM_OAM_SR_MAX_TRANSMISSION_N4,
    RRM_OAM_SR_MAX_TRANSMISSION_N8,
    RRM_OAM_SR_MAX_TRANSMISSION_N16,
    RRM_OAM_SR_MAX_TRANSMISSION_N32,
    RRM_OAM_SR_MAX_TRANSMISSION_N64,
    RRM_OAM_SR_MAX_TRANSMISSION_SPARE3,
    RRM_OAM_SR_MAX_TRANSMISSION_SPARE2,
    RRM_OAM_SR_MAX_TRANSMISSION_SPARE1
}rrm_oam_sr_max_transmission_et;


typedef enum
{
    RRM_OAM_RBS_PER_TBS_DCI_1A,
    RRM_OAM_RBS_PER_TBS_DCI_1C
}rrm_oam_dci_format_for_si_msgs_et;

typedef enum
{
  RRM_OAM_T_REORDER_MS_0,
  RRM_OAM_T_REORDER_MS_5,
  RRM_OAM_T_REORDER_MS_10,
  RRM_OAM_T_REORDER_MS_15,
  RRM_OAM_T_REORDER_MS_20,
  RRM_OAM_T_REORDER_MS_25,
  RRM_OAM_T_REORDER_MS_30,
  RRM_OAM_T_REORDER_MS_35,
  RRM_OAM_T_REORDER_MS_40,
  RRM_OAM_T_REORDER_MS_45,
  RRM_OAM_T_REORDER_MS_50,
  RRM_OAM_T_REORDER_MS_55,
  RRM_OAM_T_REORDER_MS_60,
  RRM_OAM_T_REORDER_MS_65,
  RRM_OAM_T_REORDER_MS_70,
  RRM_OAM_T_REORDER_MS_75,
  RRM_OAM_T_REORDER_MS_80,
  RRM_OAM_T_REORDER_MS_85,
  RRM_OAM_T_REORDER_MS_90,
  RRM_OAM_T_REORDER_MS_95,
  RRM_OAM_T_REORDER_MS_100,
  RRM_OAM_T_REORDER_MS_110,
  RRM_OAM_T_REORDER_MS_120,
  RRM_OAM_T_REORDER_MS_130,
  RRM_OAM_T_REORDER_MS_140,
  RRM_OAM_T_REORDER_MS_150,
  RRM_OAM_T_REORDER_MS_160,
  RRM_OAM_T_REORDER_MS_170,
  RRM_OAM_T_REORDER_MS_180,
  RRM_OAM_T_REORDER_MS_190,
  RRM_OAM_T_REORDER_MS_200
}rrm_oam_t_reordering_et;


typedef enum
{
  RRM_OAM_T_STATUS_PROHB_MS_0,
  RRM_OAM_T_STATUS_PROHB_MS_5,
  RRM_OAM_T_STATUS_PROHB_MS_10,
  RRM_OAM_T_STATUS_PROHB_MS_15,
  RRM_OAM_T_STATUS_PROHB_MS_20,
  RRM_OAM_T_STATUS_PROHB_MS_25,
  RRM_OAM_T_STATUS_PROHB_MS_30,
  RRM_OAM_T_STATUS_PROHB_MS_35,
  RRM_OAM_T_STATUS_PROHB_MS_40,
  RRM_OAM_T_STATUS_PROHB_MS_45,
  RRM_OAM_T_STATUS_PROHB_MS_50,
  RRM_OAM_T_STATUS_PROHB_MS_55,
  RRM_OAM_T_STATUS_PROHB_MS_60,
  RRM_OAM_T_STATUS_PROHB_MS_65,
  RRM_OAM_T_STATUS_PROHB_MS_70,
  RRM_OAM_T_STATUS_PROHB_MS_75,
  RRM_OAM_T_STATUS_PROHB_MS_80,
  RRM_OAM_T_STATUS_PROHB_MS_85,
  RRM_OAM_T_STATUS_PROHB_MS_90,
  RRM_OAM_T_STATUS_PROHB_MS_95,
  RRM_OAM_T_STATUS_PROHB_MS_100,
  RRM_OAM_T_STATUS_PROHB_MS_105,
  RRM_OAM_T_STATUS_PROHB_MS_110,
  RRM_OAM_T_STATUS_PROHB_MS_115,
  RRM_OAM_T_STATUS_PROHB_MS_120,
  RRM_OAM_T_STATUS_PROHB_MS_125,
  RRM_OAM_T_STATUS_PROHB_MS_130,
  RRM_OAM_T_STATUS_PROHB_MS_135,
  RRM_OAM_T_STATUS_PROHB_MS_140,
  RRM_OAM_T_STATUS_PROHB_MS_145,
  RRM_OAM_T_STATUS_PROHB_MS_150,
  RRM_OAM_T_STATUS_PROHB_MS_155,
  RRM_OAM_T_STATUS_PROHB_MS_160,
  RRM_OAM_T_STATUS_PROHB_MS_165,
  RRM_OAM_T_STATUS_PROHB_MS_170,
  RRM_OAM_T_STATUS_PROHB_MS_175,
  RRM_OAM_T_STATUS_PROHB_MS_180,
  RRM_OAM_T_STATUS_PROHB_MS_185,
  RRM_OAM_T_STATUS_PROHB_MS_190,
  RRM_OAM_T_STATUS_PROHB_MS_195,
  RRM_OAM_T_STATUS_PROHB_MS_200,
  RRM_OAM_T_STATUS_PROHB_MS_205,
  RRM_OAM_T_STATUS_PROHB_MS_210,
  RRM_OAM_T_STATUS_PROHB_MS_215,
  RRM_OAM_T_STATUS_PROHB_MS_220,
  RRM_OAM_T_STATUS_PROHB_MS_225,
  RRM_OAM_T_STATUS_PROHB_MS_230,
  RRM_OAM_T_STATUS_PROHB_MS_235,
  RRM_OAM_T_STATUS_PROHB_MS_240,
  RRM_OAM_T_STATUS_PROHB_MS_245,
  RRM_OAM_T_STATUS_PROHB_MS_250,
  RRM_OAM_T_STATUS_PROHB_MS_300,
  RRM_OAM_T_STATUS_PROHB_MS_350,
  RRM_OAM_T_STATUS_PROHB_MS_400,
  RRM_OAM_T_STATUS_PROHB_MS_450,
  RRM_OAM_T_STATUS_PROHB_MS_500
}rrm_oam_t_status_prohibit_et;

typedef enum
{
    RRM_OAM_PDCP_DISCARD_TIMER_MS_50,
    RRM_OAM_PDCP_DISCARD_TIMER_MS_100,
    RRM_OAM_PDCP_DISCARD_TIMER_MS_150,
    RRM_OAM_PDCP_DISCARD_TIMER_MS_300,
    RRM_OAM_PDCP_DISCARD_TIMER_MS_500,
    RRM_OAM_PDCP_DISCARD_TIMER_MS_750,
    RRM_OAM_PDCP_DISCARD_TIMER_MS_1500,
    RRM_OAM_PDCP_DISCARD_TIMER_INFINITY
}rrm_oam_pdcp_discard_timer_et;


typedef enum
{
  RRM_OAM_T_EVAL_S_30,
  RRM_OAM_T_EVAL_S_60,
  RRM_OAM_T_EVAL_S_120,
  RRM_OAM_T_EVAL_S_180,
  RRM_OAM_T_EVAL_S_240
}rrm_oam_t_evaluation_et;


typedef enum
{
  RRM_OAM_T_HYST_NORMAL_S_30,
  RRM_OAM_T_HYST_NORMAL_S_60,
  RRM_OAM_T_HYST_NORMAL_S_120,
  RRM_OAM_T_HYST_NORMAL_S_180,
  RRM_OAM_T_HYST_NORMAL_S_240
}rrm_oam_t_hyst_normal_et;


typedef enum
{
  RRM_OAM_TIMER_310_MS0,
  RRM_OAM_TIMER_310_MS50,
  RRM_OAM_TIMER_310_MS100,
  RRM_OAM_TIMER_310_MS200,
  RRM_OAM_TIMER_310_MS500,
  RRM_OAM_TIMER_310_MS1000,
  RRM_OAM_TIMER_310_MS2000
}rrm_oam_timer_310_et;

typedef enum
{
  RRM_OAM_TIMER_311_MS1000,
  RRM_OAM_TIMER_311_MS3000,
  RRM_OAM_TIMER_311_MS5000,
  RRM_OAM_TIMER_311_MS10000,
  RRM_OAM_TIMER_311_MS15000,
  RRM_OAM_TIMER_311_MS20000,
  RRM_OAM_TIMER_311_MS30000
}rrm_oam_timer_311_et;


typedef enum
{
  RRM_OAM_TIMER_N311_N1,
  RRM_OAM_TIMER_N311_N2,
  RRM_OAM_TIMER_N311_N3,
  RRM_OAM_TIMER_N311_N4,
  RRM_OAM_TIMER_N311_N5,
  RRM_OAM_TIMER_N311_N6,
  RRM_OAM_TIMER_N311_N8,
  RRM_OAM_TIMER_N311_N10
}rrm_oam_in_sync_n311_et;

typedef enum
{
  RRM_OAM_SF10,
  RRM_OAM_SF20,
  RRM_OAM_SF32,
  RRM_OAM_SF40,
  RRM_OAM_SF64,
  RRM_OAM_SF80,
  RRM_OAM_SF128,
  RRM_OAM_SF160,
  RRM_OAM_SF256,
  RRM_OAM_SF320,
  RRM_OAM_SF512,
  RRM_OAM_SF640,
  RRM_OAM_SF1024,
  RRM_OAM_SF1280,
  RRM_OAM_SF2048,
  /* SPR 21411 changes start */
  RRM_OAM_SF2560,
  RRM_OAM_INVALID
  /* SPR 21411 changes end */
}rrm_oam_long_drx_cycle_start_offset_et;


typedef enum
{
  RRM_OAM_R15_SF10,
  RRM_OAM_R15_SF20,
  RRM_OAM_R15_SF32,
  RRM_OAM_R15_SF40,
  RRM_OAM_R15_SF64,
  RRM_OAM_R15_SF80,
  RRM_OAM_R15_SF128,
  RRM_OAM_R15_SF160,
  RRM_OAM_R15_SF256,
  RRM_OAM_R15_SF320,
  RRM_OAM_R15_SF512,
  RRM_OAM_R15_SF640,
  RRM_OAM_R15_SF1024,
  RRM_OAM_R15_SF1280,
  RRM_OAM_R15_SF2048,
  RRM_OAM_R15_SF2560,
  RRM_OAM_R15_SF5120,
  RRM_OAM_R15_SF10240,
  RRM_OAM_R15_INVALID
}rrm_oam_long_drx_cycle_start_offset_r15_et;

typedef enum
{
  RRM_OAM_TIMER_T302_MS100,
  RRM_OAM_TIMER_T302_MS200,
  RRM_OAM_TIMER_T302_MS300,
  RRM_OAM_TIMER_T302_MS400,
  RRM_OAM_TIMER_T302_MS600,
  RRM_OAM_TIMER_T302_MS1000,
  RRM_OAM_TIMER_T302_MS1500,
  RRM_OAM_TIMER_T302_MS2000
}rrm_oam_timer_t302_et;

typedef enum
{
  RRM_OAM_TIMER_T304_EUTRA_MS50,
  RRM_OAM_TIMER_T304_EUTRA_MS100,
  RRM_OAM_TIMER_T304_EUTRA_MS150,
  RRM_OAM_TIMER_T304_EUTRA_MS200,
  RRM_OAM_TIMER_T304_EUTRA_MS500,
  RRM_OAM_TIMER_T304_EUTRA_MS1000,
  RRM_OAM_TIMER_T304_EUTRA_MS2000,
  RRM_OAM_TIMER_T304_EUTRA_SPARE1
}rrm_oam_timer_t304_eutra_et;


typedef enum
{
  RRM_OAM_TIMER_T304_IRAT_MS100,
  RRM_OAM_TIMER_T304_IRAT_MS200,
  RRM_OAM_TIMER_T304_IRAT_MS500,
  RRM_OAM_TIMER_T304_IRAT_MS1000,
  RRM_OAM_TIMER_T304_IRAT_MS2000,
  RRM_OAM_TIMER_T304_IRAT_MS4000,
  RRM_OAM_TIMER_T304_IRAT_MS8000,
  RRM_OAM_TIMER_T304_IRAT_SPARE1
}rrm_oam_timer_t304_irat_et;
typedef enum
{
  RRM_OAM_TIMER_T320_MIN5,
  RRM_OAM_TIMER_T320_MIN10,
  RRM_OAM_TIMER_T320_MIN20,
  RRM_OAM_TIMER_T320_MIN30,
  RRM_OAM_TIMER_T320_MIN60,
  RRM_OAM_TIMER_T320_MIN120,
  RRM_OAM_TIMER_T320_MIN180,
  RRM_OAM_TIMER_T320_SPARE1
}rrm_oam_timer_t320_et;

typedef enum
{
  RRM_OAM_TIMER_T351_SEC10,
  RRM_OAM_TIMER_T351_SEC30,
  RRM_OAM_TIMER_T351_SEC60,
  RRM_OAM_TIMER_T351_SEC120,
  RRM_OAM_TIMER_T351_SEC240,
  RRM_OAM_TIMER_T351_SPARE1
}rrm_oam_timer_t351_et;

typedef enum
{
  RRM_OAM_PACKET_DELAY_BUDGET_MS50,
  RRM_OAM_PACKET_DELAY_BUDGET_MS100,
  RRM_OAM_PACKET_DELAY_BUDGET_MS150,
  RRM_OAM_PACKET_DELAY_BUDGET_MS200,
  RRM_OAM_PACKET_DELAY_BUDGET_MS300,
  RRM_OAM_PACKET_DELAY_BUDGET_MS400,
  RRM_OAM_PACKET_DELAY_BUDGET_MS500,
  RRM_OAM_PACKET_DELAY_BUDGET_MS600,
  RRM_OAM_PACKET_DELAY_BUDGET_MS700,
  RRM_OAM_PACKET_DELAY_BUDGET_MS800,
  RRM_OAM_PACKET_DELAY_BUDGET_MS900,
  RRM_OAM_PACKET_DELAY_BUDGET_MS1000,
  RRM_OAM_PACKET_DELAY_BUDGET_MS1500,
  RRM_OAM_PACKET_DELAY_BUDGET_MS2000
}rrm_oam_packet_delay_budget_et;

typedef enum
{
    RRM_OAM_PACKET_ERR_LOSS_RATE_10_POWER_0,
    RRM_OAM_PACKET_ERR_LOSS_RATE_10_POWER_1,
    RRM_OAM_PACKET_ERR_LOSS_RATE_10_POWER_2,
    RRM_OAM_PACKET_ERR_LOSS_RATE_10_POWER_3,
    RRM_OAM_PACKET_ERR_LOSS_RATE_10_POWER_4,
    RRM_OAM_PACKET_ERR_LOSS_RATE_10_POWER_5,
    RRM_OAM_PACKET_ERR_LOSS_RATE_10_POWER_6
    
}rrm_oam_packet_error_loss_rate_et;

/* SPS related changes start */
typedef enum
{
    RRM_OAM_SEMI_PERSIST_INT_SF_10,
    RRM_OAM_SEMI_PERSIST_INT_SF_20,
    RRM_OAM_SEMI_PERSIST_INT_SF_32,
    RRM_OAM_SEMI_PERSIST_INT_SF_40,
    RRM_OAM_SEMI_PERSIST_INT_SF_64,
    RRM_OAM_SEMI_PERSIST_INT_SF_80,
    RRM_OAM_SEMI_PERSIST_INT_SF_128,
    RRM_OAM_SEMI_PERSIST_INT_SF_160,
    RRM_OAM_SEMI_PERSIST_INT_SF_320,
    RRM_OAM_SEMI_PERSIST_INT_SF_640
}rrm_oam_semi_persist_sched_interval_et;

typedef enum
{
    RRM_OAM_IMPLICIT_RELEASE_E_2,
    RRM_OAM_IMPLICIT_RELEASE_E_3,
    RRM_OAM_IMPLICIT_RELEASE_E_4,
    RRM_OAM_IMPLICIT_RELEASE_E_8
}rrm_oam_implicit_release_after_et;
/* SPS related changes end */

typedef enum
{
  RRM_OAM_RAC_ENABLE,
  RRM_OAM_RAC_DISABLE
}rrm_oam_rac_enable_disable_req_type_et;

typedef enum
{
  RRM_OAM_SRS_DISABLED,
  RRM_OAM_SRS_ENABLED
}rrm_oam_srs_enabled_et;

typedef enum
{
  RRM_OAM_SRS_BW_CONFIG_BW0,
  RRM_OAM_SRS_BW_CONFIG_BW1,
  RRM_OAM_SRS_BW_CONFIG_BW2,
  RRM_OAM_SRS_BW_CONFIG_BW3,
  RRM_OAM_SRS_BW_CONFIG_BW4,
  RRM_OAM_SRS_BW_CONFIG_BW5,
  RRM_OAM_SRS_BW_CONFIG_BW6,
  RRM_OAM_SRS_BW_CONFIG_BW7
}rrm_oam_srs_bw_config_et;

typedef enum
{
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC0,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC1,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC2,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC3,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC4,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC5,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC6,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC7,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC8,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC9,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC10,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC11,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC12,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC13,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC14,
  RRM_OAM_SRS_SUBFRAME_CONFIG_SC15
}rrm_oam_srs_subframe_config_et;

typedef enum
{
  /*BUG_931_CHANGES_START*/
  /*SPR 20969 fix start*/
  RRM_OAM_SRS_MAX_UP_PTS_FALSE = 0,
  RRM_OAM_SRS_MAX_UP_PTS_TRUE
  /*SPR 20969 fix end*/
  /*BUG_931_CHANGES_END*/
}rrm_oam_srs_max_up_pts_et;



typedef enum
{
  RRM_OAM_BW_MEAS_N_6,
  RRM_OAM_BW_MEAS_N_15,
  RRM_OAM_BW_MEAS_N_25,
  RRM_OAM_BW_MEAS_N_50,
  RRM_OAM_BW_MEAS_N_75,
  RRM_OAM_BW_MEAS_N_100
}rrm_oam_measurement_bandwidth_et;

/* CDMA2000 changes start */

typedef enum
{
    RRM_OAM_BAND_CLASS_BC_0,
    RRM_OAM_BAND_CLASS_BC_1,
    RRM_OAM_BAND_CLASS_BC_2,
    RRM_OAM_BAND_CLASS_BC_3,
    RRM_OAM_BAND_CLASS_BC_4,
    RRM_OAM_BAND_CLASS_BC_5,
    RRM_OAM_BAND_CLASS_BC_6,
    RRM_OAM_BAND_CLASS_BC_7,
    RRM_OAM_BAND_CLASS_BC_8,
    RRM_OAM_BAND_CLASS_BC_9,
    RRM_OAM_BAND_CLASS_BC_10,
    RRM_OAM_BAND_CLASS_BC_11,
    RRM_OAM_BAND_CLASS_BC_12,
    RRM_OAM_BAND_CLASS_BC_13,
    RRM_OAM_BAND_CLASS_BC_14,
    RRM_OAM_BAND_CLASS_BC_15,
    RRM_OAM_BAND_CLASS_BC_16,
    RRM_OAM_BAND_CLASS_BC_17,
    RRM_OAM_BAND_CLASS_BC18_V9A0,
    RRM_OAM_BAND_CLASS_BC19_V9A0,
    RRM_OAM_BAND_CLASS_BC20_V9A0,
    RRM_OAM_BAND_CLASS_BC21_V9A0
}rrm_oam_bandclass_cdma2000_et;

typedef enum
{
    RRM_OAM_ECSFB_1XRTT_R9_SUPPORTED
}rrm_oam_eCSFB_1xrtt_r9_et;

typedef enum
{
    RRM_OAM_ECSFB_CONC_PS_MOBILITY_1XRTT_R9_SUPPORTED
}rrm_oam_eCSFB_conc_ps_mobility_1xrtt_r9_et;

typedef enum
{
    RRM_RRC_POWER_DOWN_REG_R9_TRUE_8
}rrm_oam_csfb_registration_param_1xrtt_v920_et;

typedef enum
{
    RRM_OAM_NCL_TYPE_1XRTT,
    RRM_OAM_NCL_TYPE_HRPD
}rrm_oam_ncl_type_et;

typedef enum
{
    RRM_OAM_SYN_SYS_TIME,
    RRM_OAM_ASYN_SYS_TIME
}rrm_oam_system_time_info_et;

/* CDMA2000 changes ends */

/* MEAS_CONFIG Start */
typedef enum
{
        RRM_FILTER_COEFF_FC0,
        RRM_FILTER_COEFF_FC1,
        RRM_FILTER_COEFF_FC2,
        RRM_FILTER_COEFF_FC3,
        RRM_FILTER_COEFF_FC4,
        RRM_FILTER_COEFF_FC5,
        RRM_FILTER_COEFF_FC6,
        RRM_FILTER_COEFF_FC7,
        RRM_FILTER_COEFF_FC8,
        RRM_FILTER_COEFF_FC9,
        RRM_FILTER_COEFF_FC11,
        RRM_FILTER_COEFF_FC13,
        RRM_FILTER_COEFF_FC15,
        RRM_FILTER_COEFF_FC17,
        RRM_FILTER_COEFF_FC19
}rrm_filter_coefficient_et;

typedef enum
{
  RRM_CPICH_RSCP,
  RRM_CPICH_ECN0
}rrm_irat_measquanutrafdd_et;

typedef enum
{
  RRM_TDD_CPICH_RSCP,
  RRM_TDD_CPICH_ECN0
}rrm_irat_measquanutratdd_et;

typedef enum
{
    RRMC_TIME_TO_TRIGGER_MS_0,
    RRMC_TIME_TO_TRIGGER_MS_40,
    RRMC_TIME_TO_TRIGGER_MS_64,
    RRMC_TIME_TO_TRIGGER_MS_80,
    RRMC_TIME_TO_TRIGGER_MS_100,
    RRMC_TIME_TO_TRIGGER_MS_128,
    RRMC_TIME_TO_TRIGGER_MS_160,
    RRMC_TIME_TO_TRIGGER_MS_256,
    RRMC_TIME_TO_TRIGGER_MS_320,
    RRMC_TIME_TO_TRIGGER_MS_480,
    RRMC_TIME_TO_TRIGGER_MS_512,
    RRMC_TIME_TO_TRIGGER_MS_640,
    RRMC_TIME_TO_TRIGGER_MS_1024,
    RRMC_TIME_TO_TRIGGER_MS_1280,
    RRMC_TIME_TO_TRIGGER_MS_2560,
    RRMC_TIME_TO_TRIGGER_MS_5120
}rrmc_time_to_trigger_et;

typedef enum
{
  RRMC_RSRP,
  RRMC_RSRQ
}rrmc_trigger_quantity_et;

typedef enum
{
  RRMC_SAME_AS_TRIGGER_QUANTITY,
  RRMC_BOTH
}rrmc_report_quantity_et;

typedef enum
{
    RRMC_REPORT_INTERVAL_MS_120,
    RRMC_REPORT_INTERVAL_MS_240,
    RRMC_REPORT_INTERVAL_MS_480,
    RRMC_REPORT_INTERVAL_MS_640,
    RRMC_REPORT_INTERVAL_MS_1024,
    RRMC_REPORT_INTERVAL_MS_2048,
    RRMC_REPORT_INTERVAL_MS_5120,
    RRMC_REPORT_INTERVAL_MS_10240,
    RRMC_REPORT_INTERVAL_MIN_1,
    RRMC_REPORT_INTERVAL_MIN_6,
    RRMC_REPORT_INTERVAL_MIN_12,
    RRMC_REPORT_INTERVAL_MIN_30,
    RRMC_REPORT_INTERVAL_MIN_60
}rrmc_report_interval_et;

typedef enum
{
  RRMC_REPORT_AMOUNT_1,
  RRMC_REPORT_AMOUNT_2,
  RRMC_REPORT_AMOUNT_4,
  RRMC_REPORT_AMOUNT_8,
  RRMC_REPORT_AMOUNT_16,
  RRMC_REPORT_AMOUNT_32,
  RRMC_REPORT_AMOUNT_64,
  RRMC_REPORT_AMOUNT_INFINITY
} rrmc_report_amount_et;
                                
typedef enum
{
   MEAS_CONFIG,
   REP_CONFIG,
   MEAS_REPORT
} rrmc_meas_id_type_et;


/* SPR 15698 Start */
/* Code Removed */
/* SPR 15698 End */
/*MEAS_CONFIG End */

typedef enum
{
  RRM_OAM_NB_FOUR_T,
  RRM_OAM_NB_TWO_T,
  RRM_OAM_NB_ONE_T,
  RRM_OAM_NB_HALF_T,
  RRM_OAM_NB_QUARTER_T,
  RRM_OAM_NB_ONE_EIGHTH_T,
  RRM_OAM_NB_ONE_SIXTEENTH_T,
  RRM_OAM_NB_ONE_THIRTY_SECOND_T
}rrm_oam_nB_et;

typedef enum
{
  RRM_OAM_UL_CYC_PREFIX_LEN_1,
  RRM_OAM_UL_CYC_PREFIX_LEN_2
}rrm_oam_ul_cyclic_prefix_length_et;



typedef enum
{
  RRM_OAM_DEF_PAG_CYCLE_RF32,
  RRM_OAM_DEF_PAG_CYCLE_RF64,
  RRM_OAM_DEF_PAG_CYCLE_RF128,
  RRM_OAM_DEF_PAG_CYCLE_RF256
}rrm_oam_default_paging_cycle_et;

typedef enum
{
  RRM_OAM_MOD_PERIOD_COEFF_N2,
  RRM_OAM_MOD_PERIOD_COEFF_N4,
  RRM_OAM_MOD_PERIOD_COEFF_N8,
  RRM_OAM_MOD_PERIOD_COEFF_N16
}rrm_oam_modification_period_coeff_et;


typedef enum 
{
  RRM_OAM_FREQ_PRIORITY_HIGH,
  RRM_OAM_FREQ_PRIORITY_MEDIUM,
  RRM_OAM_FREQ_PRIORITY_LOW,
 /* SPR 13205 Fix Start */
  RRM_OAM_FREQ_PRIORITY_LOW_2
 /* SPR 13205 Fix Start */
}rrm_oam_freq_priority_info_et; 

typedef enum
{
  RRM_OVERLOAD_LVL,
  RRM_HIGH_LOAD_LVL,
  RRM_MID_LOAD_LVL,
  RRM_LOW_LOAD_LVL
}rrm_rs_load_lvl_et;

typedef enum
{
    RRM_CSFB_TGT_SELECT_DAHO,
    RRM_CSFB_TGT_SELECT_MAHO
}rrm_csfb_target_selection_et;

/*RIM changes start*/
typedef enum
{
  NC0,
  NC1,
  NC2,
  RESET
}rrm_oam_nco_ind_et;
/*RIM changes end*/

typedef enum
{
 RRM_OAM_PROTOCOL_EVENT_TYPE,
 RRM_OAM_ERROR_EVENT_TYPE
}rrm_oam_event_class_et;

typedef enum
{
 RRM_OAM_INVALID_SUBCLASS,
 RRM_OAM_PE_CELL_SPECIFIC,
 RRM_OAM_PE_UE_SPECIFIC,
 RRM_OAM_PE_ERAB_SPECIFIC,
 RRM_OAM_PE_MEAS_INFO,
 RRM_OAM_PE_HO_OUT,
 RRM_OAM_PE_HO_IN,
 RRM_OAM_PE_OTHERS,
 RRM_OAM_EE_MEMORY_SPECIFIC,
 RRM_OAM_EE_TIMER_SPECIFIC,
 RRM_OAM_EE_IPC_SEND_RECV_SPECIFIC,
 RRM_OAM_MAX_SUBCLASS
}rrm_oam_event_subclass_et;

typedef enum
{
  RRM_OAM_EVENT_LOG,
  RRM_OAM_EVENT_NOTIFY,
  RRM_OAM_EVENT_NOTIFY_LOG,
  RRM_OAM_EVENT_NONE
}rrm_oam_action_required_et;

/* UE positioning start */
typedef enum
{
    RRM_OAM_NORTH,
    RRM_OAM_SOUTH
}rrm_oam_latitude_sign_et;

typedef enum
{
    RRM_OAM_HEIGHT,
    RRM_OAM_DEPTH
}rrm_oam_altitude_dir_et;
/* UE positioning end */

/* Carrier_Aggregation_Start */
typedef enum
{
    RRM_OAM_SCELL_RF2,
    RRM_OAM_SCELL_RF4,
    RRM_OAM_SCELL_RF8,
    RRM_OAM_SCELL_RF16,
    RRM_OAM_SCELL_RF32,
    RRM_OAM_SCELL_RF64,
    RRM_OAM_SCELL_RF128,
    RRM_OAM_SCELL_RFINFINITY
}rrm_oam_scell_deactivation_timer_et;


typedef enum
{
    RRM_OAM_PERIODCITY_FACTOR_N2,
    RRM_OAM_PERIODCITY_FACTOR_N4 
}rrm_oam_subband_cqi_periodicity_factor_r10_et;
typedef enum
{
    RRM_OAM_MEAS_CYCL_SCELL_SF160,
    RRM_OAM_MEAS_CYCL_SCELL_SF256,
    RRM_OAM_MEAS_CYCL_SCELL_SF320,
    RRM_OAM_MEAS_CYCL_SCELL_SF512,
    RRM_OAM_MEAS_CYCL_SCELL_SF640,
    RRM_OAM_MEAS_CYCL_SCELL_SF1024,
    RRM_OAM_MEAS_CYCL_SCELL_SF1280
}rrm_meas_cycle_scell_et;

/** eICIC feature changes start */
typedef enum
{
    RRM_OAM_EICIC_DEACTIVATED ,
    RRM_OAM_ACT_AS_AGGRESSOR,
    RRM_OAM_ACT_AS_VICTIM,
    RRM_OAM_ACT_AS_AGGRESSOR_AND_VICTIM
}rrm_oam_eicic_node_type_et;

typedef enum
{
RRM_OAM_ACTIVATE_ICIC,
RRM_OAM_ACTIVATE_EICIC,
RRM_OAM_NO_INTF_SCHEME
}rrm_oam_intf_scheme_type_et;
/* + SPS_TDD_Changes */
typedef enum
{
    RRM_OAM_TWO_INTERVAL_NOT_PRESENT,
    RRM_OAM_TWO_INTERVAL_PRESENT
}rrm_oam_two_interval_config_et;
/* - SPS_TDD_Changes */

/** eICIC feature changes end */
/* SPR 20653 Fix Start */
typedef enum
{
    RRM_OAM_RB_SIZE_12,
    RRM_OAM_RB_SIZE_24
}rrm_oam_rb_size_et;

typedef enum
{
  RRM_OAM_BUCKET_SIZE_MS_50,
  RRM_OAM_BUCKET_SIZE_MS_100,
  RRM_OAM_BUCKET_SIZE_MS_150,
  RRM_OAM_BUCKET_SIZE_MS_300,
  RRM_OAM_BUCKET_SIZE_MS_500,
  RRM_OAM_BUCKET_SIZE_MS_1000
}rrm_oam_bucket_size_duration_et;

typedef enum
{
  RRM_OAM_BIT_RATE_KBPS_0,
  RRM_OAM_BIT_RATE_KBPS_8,
  RRM_OAM_BIT_RATE_KBPS_16,
  RRM_OAM_BIT_RATE_KBPS_32,
  RRM_OAM_BIT_RATE_KBPS_64,
  RRM_OAM_BIT_RATE_KBPS_128,
  RRM_OAM_BIT_RATE_KBPS_256,
  RRM_OAM_BIT_RATE_INFINITY
}rrm_oam_prioritized_bit_rate_et;

typedef enum
{
    RRM_IRAT_PRIORITY_EUTRAN,
    RRM_IRAT_PRIORITY_UTRAN,
    RRM_IRAT_PRIORITY_GERAN,
    RRM_IRAT_PRIORITY_CDMA2000,
    RRM_IRAT_PRIORITY_MAX
}rrm_irat_priority_et;

/* CID 112963, 112962, 112970, 112968 Start */ 
typedef enum 
{
  RRM_OAM_RAT_PRIORITY_INVALID = -1,
  RRM_OAM_RAT_PRIORITY_HIGH = 0,
  RRM_OAM_RAT_PRIORITY_MEDIUM,
  RRM_OAM_RAT_PRIORITY_LOW,
  RRM_OAM_RAT_PRIORITY_LEAST
}rrm_oam_rat_priority_info_et;
/* CID 112963, 112962, 112970, 112968 End */ 
/* SPR 20653 Fix End */
#endif /* _RRM_OAM_DEFINES_H */
